// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder::Lookups
namespace OggVorbisEncoder::Lookups {
  // Forward declaring type: Delta
  struct Delta;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder.Lookups
namespace OggVorbisEncoder::Lookups {
  // Forward declaring type: EnvelopeFilterState
  class EnvelopeFilterState;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Lookups::EnvelopeFilterState);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Lookups::EnvelopeFilterState*, "OggVorbisEncoder.Lookups", "EnvelopeFilterState");
// Type namespace: OggVorbisEncoder.Lookups
namespace OggVorbisEncoder::Lookups {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Lookups.EnvelopeFilterState
  // [TokenAttribute] Offset: FFFFFFFF
  class EnvelopeFilterState : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private readonly System.Single[] _ampBuffer
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<float> ampBuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private readonly System.Single[] _nearBuffer
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<float> nearBuffer;
    // Field size check
    static_assert(sizeof(::ArrayW<float>) == 0x8);
    // private System.Int32 _ampPointer
    // Size: 0x4
    // Offset: 0x20
    int ampPointer;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private System.Single _nearDcAcc
    // Size: 0x4
    // Offset: 0x24
    float nearDcAcc;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _nearDcPartialAcc
    // Size: 0x4
    // Offset: 0x28
    float nearDcPartialAcc;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Int32 _nearPointer
    // Size: 0x4
    // Offset: 0x2C
    int nearPointer;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // static field const value: static private System.Int32 EnvelopePre
    static constexpr const int EnvelopePre = 16;
    // Get static field: static private System.Int32 EnvelopePre
    static int _get_EnvelopePre();
    // Set static field: static private System.Int32 EnvelopePre
    static void _set_EnvelopePre(int value);
    // static field const value: static private System.Int32 EnvelopeAmp
    static constexpr const int EnvelopeAmp = 17;
    // Get static field: static private System.Int32 EnvelopeAmp
    static int _get_EnvelopeAmp();
    // Set static field: static private System.Int32 EnvelopeAmp
    static void _set_EnvelopeAmp(int value);
    // Get instance field reference: private readonly System.Single[] _ampBuffer
    ::ArrayW<float>& dyn__ampBuffer();
    // Get instance field reference: private readonly System.Single[] _nearBuffer
    ::ArrayW<float>& dyn__nearBuffer();
    // Get instance field reference: private System.Int32 _ampPointer
    int& dyn__ampPointer();
    // Get instance field reference: private System.Single _nearDcAcc
    float& dyn__nearDcAcc();
    // Get instance field reference: private System.Single _nearDcPartialAcc
    float& dyn__nearDcPartialAcc();
    // Get instance field reference: private System.Int32 _nearPointer
    int& dyn__nearPointer();
    // public System.Single SpreadNearDc(System.Single input)
    // Offset: 0x75BB48
    float SpreadNearDc(float input);
    // public OggVorbisEncoder.Lookups.Delta ConvertAmplitudeToDelta(System.Single amplitude, System.Int32 stretch)
    // Offset: 0x75BCC8
    ::OggVorbisEncoder::Lookups::Delta ConvertAmplitudeToDelta(float amplitude, int stretch);
    // public System.Void .ctor()
    // Offset: 0x75BEE0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static EnvelopeFilterState* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::Lookups::EnvelopeFilterState::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<EnvelopeFilterState*, creationType>()));
    }
  }; // OggVorbisEncoder.Lookups.EnvelopeFilterState
  #pragma pack(pop)
  static check_size<sizeof(EnvelopeFilterState), 44 + sizeof(int)> __OggVorbisEncoder_Lookups_EnvelopeFilterStateSizeCheck;
  static_assert(sizeof(EnvelopeFilterState) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Lookups::EnvelopeFilterState::SpreadNearDc
// Il2CppName: SpreadNearDc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (OggVorbisEncoder::Lookups::EnvelopeFilterState::*)(float)>(&OggVorbisEncoder::Lookups::EnvelopeFilterState::SpreadNearDc)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Lookups::EnvelopeFilterState*), "SpreadNearDc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Lookups::EnvelopeFilterState::ConvertAmplitudeToDelta
// Il2CppName: ConvertAmplitudeToDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::Lookups::Delta (OggVorbisEncoder::Lookups::EnvelopeFilterState::*)(float, int)>(&OggVorbisEncoder::Lookups::EnvelopeFilterState::ConvertAmplitudeToDelta)> {
  static const MethodInfo* get() {
    static auto* amplitude = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* stretch = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Lookups::EnvelopeFilterState*), "ConvertAmplitudeToDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{amplitude, stretch});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Lookups::EnvelopeFilterState::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
