// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: Block
  class Block;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Block);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Block*, "OggVorbisEncoder", "Block");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Block
  // [TokenAttribute] Offset: FFFFFFFF
  class Block : public ::Il2CppObject {
    public:
    // Get static field: static private readonly System.Single[] Win64
    static ::ArrayW<float> _get_Win64();
    // Set static field: static private readonly System.Single[] Win64
    static void _set_Win64(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win128
    static ::ArrayW<float> _get_Win128();
    // Set static field: static private readonly System.Single[] Win128
    static void _set_Win128(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win256
    static ::ArrayW<float> _get_Win256();
    // Set static field: static private readonly System.Single[] Win256
    static void _set_Win256(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win512
    static ::ArrayW<float> _get_Win512();
    // Set static field: static private readonly System.Single[] Win512
    static void _set_Win512(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win1024
    static ::ArrayW<float> _get_Win1024();
    // Set static field: static private readonly System.Single[] Win1024
    static void _set_Win1024(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win2038
    static ::ArrayW<float> _get_Win2038();
    // Set static field: static private readonly System.Single[] Win2038
    static void _set_Win2038(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win4096
    static ::ArrayW<float> _get_Win4096();
    // Set static field: static private readonly System.Single[] Win4096
    static void _set_Win4096(::ArrayW<float> value);
    // Get static field: static private readonly System.Single[] Win8192
    static ::ArrayW<float> _get_Win8192();
    // Set static field: static private readonly System.Single[] Win8192
    static void _set_Win8192(::ArrayW<float> value);
    // Get static field: static public readonly System.Single[][] Windows
    static ::ArrayW<::ArrayW<float>> _get_Windows();
    // Set static field: static public readonly System.Single[][] Windows
    static void _set_Windows(::ArrayW<::ArrayW<float>> value);
    // static private System.Void .cctor()
    // Offset: 0x7436B8
    static void _cctor();
  }; // OggVorbisEncoder.Block
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Block::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&OggVorbisEncoder::Block::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Block*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
