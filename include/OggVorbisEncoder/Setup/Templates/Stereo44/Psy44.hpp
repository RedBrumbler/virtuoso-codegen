// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder::Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Att3
  class Att3;
  // Forward declaring type: NoiseGuard
  class NoiseGuard;
  // Forward declaring type: CompandBlock
  class CompandBlock;
  // Forward declaring type: PsyGlobal
  class PsyGlobal;
  // Forward declaring type: AdjStereo
  class AdjStereo;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder.Setup.Templates.Stereo44
namespace OggVorbisEncoder::Setup::Templates::Stereo44 {
  // Forward declaring type: Psy44
  class Psy44;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Setup::Templates::Stereo44::Psy44);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::Templates::Stereo44::Psy44*, "OggVorbisEncoder.Setup.Templates.Stereo44", "Psy44");
// Type namespace: OggVorbisEncoder.Setup.Templates.Stereo44
namespace OggVorbisEncoder::Setup::Templates::Stereo44 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Setup.Templates.Stereo44.Psy44
  // [TokenAttribute] Offset: FFFFFFFF
  class Psy44 : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Int32[] AthAbs
    static ::ArrayW<int> _get_AthAbs();
    // Set static field: static public readonly System.Int32[] AthAbs
    static void _set_AthAbs(::ArrayW<int> value);
    // Get static field: static public readonly System.Double[] Lowpass
    static ::ArrayW<double> _get_Lowpass();
    // Set static field: static public readonly System.Double[] Lowpass
    static void _set_Lowpass(::ArrayW<double> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.Att3[] ToneMasterAtt
    static ::ArrayW<::OggVorbisEncoder::Setup::Att3*> _get_ToneMasterAtt();
    // Set static field: static public readonly OggVorbisEncoder.Setup.Att3[] ToneMasterAtt
    static void _set_ToneMasterAtt(::ArrayW<::OggVorbisEncoder::Setup::Att3*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.NoiseGuard[] NoiseGuards
    static ::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*> _get_NoiseGuards();
    // Set static field: static public readonly OggVorbisEncoder.Setup.NoiseGuard[] NoiseGuards
    static void _set_NoiseGuards(::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.CompandBlock[] Compand
    static ::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*> _get_Compand();
    // Set static field: static public readonly OggVorbisEncoder.Setup.CompandBlock[] Compand
    static void _set_Compand(::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*> value);
    // Get static field: static public readonly System.Double[] GlobalMapping
    static ::ArrayW<double> _get_GlobalMapping();
    // Set static field: static public readonly System.Double[] GlobalMapping
    static void _set_GlobalMapping(::ArrayW<double> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.PsyGlobal[] Global
    static ::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*> _get_Global();
    // Set static field: static public readonly OggVorbisEncoder.Setup.PsyGlobal[] Global
    static void _set_Global(::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.AdjStereo[] StereoModes
    static ::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*> _get_StereoModes();
    // Set static field: static public readonly OggVorbisEncoder.Setup.AdjStereo[] StereoModes
    static void _set_StereoModes(::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*> value);
    // static private System.Void .cctor()
    // Offset: 0x799830
    static void _cctor();
  }; // OggVorbisEncoder.Setup.Templates.Stereo44.Psy44
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Psy44::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Psy44::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Psy44*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
