// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OggVorbisEncoder.Setup.ISetupTemplate
#include "OggVorbisEncoder/Setup/ISetupTemplate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder::Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Att3
  class Att3;
  // Forward declaring type: AdjBlock
  class AdjBlock;
  // Forward declaring type: NoiseGuard
  class NoiseGuard;
  // Forward declaring type: Noise3
  class Noise3;
  // Forward declaring type: CompandBlock
  class CompandBlock;
  // Forward declaring type: PsyGlobal
  class PsyGlobal;
  // Forward declaring type: AdjStereo
  class AdjStereo;
  // Forward declaring type: IStaticCodeBook
  class IStaticCodeBook;
  // Forward declaring type: Floor
  class Floor;
  // Forward declaring type: IMappingTemplate
  class IMappingTemplate;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder.Setup.Templates.Stereo44
namespace OggVorbisEncoder::Setup::Templates::Stereo44 {
  // Forward declaring type: Stereo44SetupDataTemplate
  class Stereo44SetupDataTemplate;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*, "OggVorbisEncoder.Setup.Templates.Stereo44", "Stereo44SetupDataTemplate");
// Type namespace: OggVorbisEncoder.Setup.Templates.Stereo44
namespace OggVorbisEncoder::Setup::Templates::Stereo44 {
  // Size: 0x120
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Setup.Templates.Stereo44.Stereo44SetupDataTemplate
  // [TokenAttribute] Offset: FFFFFFFF
  class Stereo44SetupDataTemplate : public ::Il2CppObject/*, public ::OggVorbisEncoder::Setup::ISetupTemplate*/ {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private readonly System.Double[] <SampleRateMapping>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<double> SampleRateMapping;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Double[] <QualityMapping>k__BackingField
    // Size: 0x8
    // Offset: 0x18
    ::ArrayW<double> QualityMapping;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Int32 <CouplingRestriction>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    int CouplingRestriction;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 <SampleRateMinRestriction>k__BackingField
    // Size: 0x4
    // Offset: 0x24
    int SampleRateMinRestriction;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 <SampleRateMaxRestriction>k__BackingField
    // Size: 0x4
    // Offset: 0x28
    int SampleRateMaxRestriction;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // Padding between fields: SampleRateMaxRestriction and: BlockSizeShort
    char __padding4[0x4] = {};
    // private readonly System.Int32[] <BlockSizeShort>k__BackingField
    // Size: 0x8
    // Offset: 0x30
    ::ArrayW<int> BlockSizeShort;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <BlockSizeLong>k__BackingField
    // Size: 0x8
    // Offset: 0x38
    ::ArrayW<int> BlockSizeLong;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Att3[] <PsyToneMasterAtt>k__BackingField
    // Size: 0x8
    // Offset: 0x40
    ::ArrayW<::OggVorbisEncoder::Setup::Att3*> PsyToneMasterAtt;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Att3*>) == 0x8);
    // private readonly System.Int32[] <PsyTone0Decibel>k__BackingField
    // Size: 0x8
    // Offset: 0x48
    ::ArrayW<int> PsyTone0Decibel;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <PsyToneDecibelSuppress>k__BackingField
    // Size: 0x8
    // Offset: 0x50
    ::ArrayW<int> PsyToneDecibelSuppress;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjImpulse>k__BackingField
    // Size: 0x8
    // Offset: 0x58
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> PsyToneAdjImpulse;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjLong>k__BackingField
    // Size: 0x8
    // Offset: 0x60
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> PsyToneAdjLong;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjOther>k__BackingField
    // Size: 0x8
    // Offset: 0x68
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> PsyToneAdjOther;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.NoiseGuard[] <PsyNoiseGuards>k__BackingField
    // Size: 0x8
    // Offset: 0x70
    ::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*> PsyNoiseGuards;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasImpulse>k__BackingField
    // Size: 0x8
    // Offset: 0x78
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> PsyNoiseBiasImpulse;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Noise3*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasPadding>k__BackingField
    // Size: 0x8
    // Offset: 0x80
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> PsyNoiseBiasPadding;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Noise3*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasTrans>k__BackingField
    // Size: 0x8
    // Offset: 0x88
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> PsyNoiseBiasTrans;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Noise3*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasLong>k__BackingField
    // Size: 0x8
    // Offset: 0x90
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> PsyNoiseBiasLong;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Noise3*>) == 0x8);
    // private readonly System.Int32[] <PsyNoiseDecibelSuppress>k__BackingField
    // Size: 0x8
    // Offset: 0x98
    ::ArrayW<int> PsyNoiseDecibelSuppress;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.CompandBlock[] <PsyNoiseCompand>k__BackingField
    // Size: 0x8
    // Offset: 0xA0
    ::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*> PsyNoiseCompand;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*>) == 0x8);
    // private readonly System.Double[] <PsyNoiseCompandShortMapping>k__BackingField
    // Size: 0x8
    // Offset: 0xA8
    ::ArrayW<double> PsyNoiseCompandShortMapping;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Double[] <PsyNoiseCompandLongMapping>k__BackingField
    // Size: 0x8
    // Offset: 0xB0
    ::ArrayW<double> PsyNoiseCompandLongMapping;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Int32[][] <PsyNoiseNormalStart>k__BackingField
    // Size: 0x8
    // Offset: 0xB8
    ::ArrayW<::ArrayW<int>> PsyNoiseNormalStart;
    // Field size check
    static_assert(sizeof(::ArrayW<::ArrayW<int>>) == 0x8);
    // private readonly System.Int32[][] <PsyNoiseNormalPartition>k__BackingField
    // Size: 0x8
    // Offset: 0xC0
    ::ArrayW<::ArrayW<int>> PsyNoiseNormalPartition;
    // Field size check
    static_assert(sizeof(::ArrayW<::ArrayW<int>>) == 0x8);
    // private readonly System.Double[] <PsyNoiseNormalThreshold>k__BackingField
    // Size: 0x8
    // Offset: 0xC8
    ::ArrayW<double> PsyNoiseNormalThreshold;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly System.Int32[] <PsyAthFloat>k__BackingField
    // Size: 0x8
    // Offset: 0xD0
    ::ArrayW<int> PsyAthFloat;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Int32[] <PsyAthAbs>k__BackingField
    // Size: 0x8
    // Offset: 0xD8
    ::ArrayW<int> PsyAthAbs;
    // Field size check
    static_assert(sizeof(::ArrayW<int>) == 0x8);
    // private readonly System.Double[] <PsyLowPass>k__BackingField
    // Size: 0x8
    // Offset: 0xE0
    ::ArrayW<double> PsyLowPass;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.PsyGlobal[] <GlobalParams>k__BackingField
    // Size: 0x8
    // Offset: 0xE8
    ::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*> GlobalParams;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*>) == 0x8);
    // private readonly System.Double[] <GlobalMapping>k__BackingField
    // Size: 0x8
    // Offset: 0xF0
    ::ArrayW<double> GlobalMapping;
    // Field size check
    static_assert(sizeof(::ArrayW<double>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.AdjStereo[] <StereoModes>k__BackingField
    // Size: 0x8
    // Offset: 0xF8
    ::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*> StereoModes;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IStaticCodeBook[][] <FloorBooks>k__BackingField
    // Size: 0x8
    // Offset: 0x100
    ::ArrayW<::ArrayW<::OggVorbisEncoder::Setup::IStaticCodeBook*>> FloorBooks;
    // Field size check
    static_assert(sizeof(::ArrayW<::ArrayW<::OggVorbisEncoder::Setup::IStaticCodeBook*>>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.Floor[] <FloorParams>k__BackingField
    // Size: 0x8
    // Offset: 0x108
    ::ArrayW<::OggVorbisEncoder::Setup::Floor*> FloorParams;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::Floor*>) == 0x8);
    // private readonly System.Int32[][] <FloorMappings>k__BackingField
    // Size: 0x8
    // Offset: 0x110
    ::ArrayW<::ArrayW<int>> FloorMappings;
    // Field size check
    static_assert(sizeof(::ArrayW<::ArrayW<int>>) == 0x8);
    // private readonly OggVorbisEncoder.Setup.IMappingTemplate[] <Maps>k__BackingField
    // Size: 0x8
    // Offset: 0x118
    ::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*> Maps;
    // Field size check
    static_assert(sizeof(::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*>) == 0x8);
    public:
    // Creating interface conversion operator: operator ::OggVorbisEncoder::Setup::ISetupTemplate
    operator ::OggVorbisEncoder::Setup::ISetupTemplate() noexcept {
      return *reinterpret_cast<::OggVorbisEncoder::Setup::ISetupTemplate*>(this);
    }
    // Get static field: static private readonly System.Double[] SampleRateMapping44Stereo
    static ::ArrayW<double> _get_SampleRateMapping44Stereo();
    // Set static field: static private readonly System.Double[] SampleRateMapping44Stereo
    static void _set_SampleRateMapping44Stereo(::ArrayW<double> value);
    // Get static field: static private readonly System.Double[] QualityMapping44
    static ::ArrayW<double> _get_QualityMapping44();
    // Set static field: static private readonly System.Double[] QualityMapping44
    static void _set_QualityMapping44(::ArrayW<double> value);
    // Get static field: static private readonly System.Int32[] BlocksizeShort44
    static ::ArrayW<int> _get_BlocksizeShort44();
    // Set static field: static private readonly System.Int32[] BlocksizeShort44
    static void _set_BlocksizeShort44(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] BlocksizeLong44
    static ::ArrayW<int> _get_BlocksizeLong44();
    // Set static field: static private readonly System.Int32[] BlocksizeLong44
    static void _set_BlocksizeLong44(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] NoiseStartShort44
    static ::ArrayW<int> _get_NoiseStartShort44();
    // Set static field: static private readonly System.Int32[] NoiseStartShort44
    static void _set_NoiseStartShort44(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] NoiseStartLong44
    static ::ArrayW<int> _get_NoiseStartLong44();
    // Set static field: static private readonly System.Int32[] NoiseStartLong44
    static void _set_NoiseStartLong44(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] NoisePartShort44
    static ::ArrayW<int> _get_NoisePartShort44();
    // Set static field: static private readonly System.Int32[] NoisePartShort44
    static void _set_NoisePartShort44(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] NoisePartLong44
    static ::ArrayW<int> _get_NoisePartLong44();
    // Set static field: static private readonly System.Int32[] NoisePartLong44
    static void _set_NoisePartLong44(::ArrayW<int> value);
    // Get static field: static private readonly System.Double[] NoiseThresh44
    static ::ArrayW<double> _get_NoiseThresh44();
    // Set static field: static private readonly System.Double[] NoiseThresh44
    static void _set_NoiseThresh44(::ArrayW<double> value);
    // Get static field: static private readonly System.Int32[] FloorMapping44A
    static ::ArrayW<int> _get_FloorMapping44A();
    // Set static field: static private readonly System.Int32[] FloorMapping44A
    static void _set_FloorMapping44A(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[] FloorMapping44B
    static ::ArrayW<int> _get_FloorMapping44B();
    // Set static field: static private readonly System.Int32[] FloorMapping44B
    static void _set_FloorMapping44B(::ArrayW<int> value);
    // Get static field: static private readonly System.Int32[][] FloorMapping44
    static ::ArrayW<::ArrayW<int>> _get_FloorMapping44();
    // Set static field: static private readonly System.Int32[][] FloorMapping44
    static void _set_FloorMapping44(::ArrayW<::ArrayW<int>> value);
    // Get static field: static private readonly OggVorbisEncoder.Setup.AdjBlock[] VpToneMaskAdjLongBlock
    static ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> _get_VpToneMaskAdjLongBlock();
    // Set static field: static private readonly OggVorbisEncoder.Setup.AdjBlock[] VpToneMaskAdjLongBlock
    static void _set_VpToneMaskAdjLongBlock(::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> value);
    // Get static field: static private readonly OggVorbisEncoder.Setup.AdjBlock[] VpToneMaskAdjOtherBlock
    static ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> _get_VpToneMaskAdjOtherBlock();
    // Set static field: static private readonly OggVorbisEncoder.Setup.AdjBlock[] VpToneMaskAdjOtherBlock
    static void _set_VpToneMaskAdjOtherBlock(::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> value);
    // Get instance field reference: private readonly System.Double[] <SampleRateMapping>k__BackingField
    ::ArrayW<double>& dyn_$SampleRateMapping$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <QualityMapping>k__BackingField
    ::ArrayW<double>& dyn_$QualityMapping$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <CouplingRestriction>k__BackingField
    int& dyn_$CouplingRestriction$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <SampleRateMinRestriction>k__BackingField
    int& dyn_$SampleRateMinRestriction$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <SampleRateMaxRestriction>k__BackingField
    int& dyn_$SampleRateMaxRestriction$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <BlockSizeShort>k__BackingField
    ::ArrayW<int>& dyn_$BlockSizeShort$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <BlockSizeLong>k__BackingField
    ::ArrayW<int>& dyn_$BlockSizeLong$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Att3[] <PsyToneMasterAtt>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Att3*>& dyn_$PsyToneMasterAtt$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <PsyTone0Decibel>k__BackingField
    ::ArrayW<int>& dyn_$PsyTone0Decibel$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <PsyToneDecibelSuppress>k__BackingField
    ::ArrayW<int>& dyn_$PsyToneDecibelSuppress$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjImpulse>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>& dyn_$PsyToneAdjImpulse$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjLong>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>& dyn_$PsyToneAdjLong$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.AdjBlock[] <PsyToneAdjOther>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*>& dyn_$PsyToneAdjOther$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.NoiseGuard[] <PsyNoiseGuards>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*>& dyn_$PsyNoiseGuards$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasImpulse>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*>& dyn_$PsyNoiseBiasImpulse$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasPadding>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*>& dyn_$PsyNoiseBiasPadding$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasTrans>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*>& dyn_$PsyNoiseBiasTrans$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Noise3[] <PsyNoiseBiasLong>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*>& dyn_$PsyNoiseBiasLong$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <PsyNoiseDecibelSuppress>k__BackingField
    ::ArrayW<int>& dyn_$PsyNoiseDecibelSuppress$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.CompandBlock[] <PsyNoiseCompand>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*>& dyn_$PsyNoiseCompand$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <PsyNoiseCompandShortMapping>k__BackingField
    ::ArrayW<double>& dyn_$PsyNoiseCompandShortMapping$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <PsyNoiseCompandLongMapping>k__BackingField
    ::ArrayW<double>& dyn_$PsyNoiseCompandLongMapping$k__BackingField();
    // Get instance field reference: private readonly System.Int32[][] <PsyNoiseNormalStart>k__BackingField
    ::ArrayW<::ArrayW<int>>& dyn_$PsyNoiseNormalStart$k__BackingField();
    // Get instance field reference: private readonly System.Int32[][] <PsyNoiseNormalPartition>k__BackingField
    ::ArrayW<::ArrayW<int>>& dyn_$PsyNoiseNormalPartition$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <PsyNoiseNormalThreshold>k__BackingField
    ::ArrayW<double>& dyn_$PsyNoiseNormalThreshold$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <PsyAthFloat>k__BackingField
    ::ArrayW<int>& dyn_$PsyAthFloat$k__BackingField();
    // Get instance field reference: private readonly System.Int32[] <PsyAthAbs>k__BackingField
    ::ArrayW<int>& dyn_$PsyAthAbs$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <PsyLowPass>k__BackingField
    ::ArrayW<double>& dyn_$PsyLowPass$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.PsyGlobal[] <GlobalParams>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*>& dyn_$GlobalParams$k__BackingField();
    // Get instance field reference: private readonly System.Double[] <GlobalMapping>k__BackingField
    ::ArrayW<double>& dyn_$GlobalMapping$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.AdjStereo[] <StereoModes>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*>& dyn_$StereoModes$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IStaticCodeBook[][] <FloorBooks>k__BackingField
    ::ArrayW<::ArrayW<::OggVorbisEncoder::Setup::IStaticCodeBook*>>& dyn_$FloorBooks$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.Floor[] <FloorParams>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::Floor*>& dyn_$FloorParams$k__BackingField();
    // Get instance field reference: private readonly System.Int32[][] <FloorMappings>k__BackingField
    ::ArrayW<::ArrayW<int>>& dyn_$FloorMappings$k__BackingField();
    // Get instance field reference: private readonly OggVorbisEncoder.Setup.IMappingTemplate[] <Maps>k__BackingField
    ::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*>& dyn_$Maps$k__BackingField();
    // public System.Int32 get_Mappings()
    // Offset: 0x7AC728
    int get_Mappings();
    // public System.Double[] get_SampleRateMapping()
    // Offset: 0x7AC748
    ::ArrayW<double> get_SampleRateMapping();
    // public System.Double[] get_QualityMapping()
    // Offset: 0x7AC750
    ::ArrayW<double> get_QualityMapping();
    // public System.Int32 get_CouplingRestriction()
    // Offset: 0x7AC758
    int get_CouplingRestriction();
    // public System.Int32 get_SampleRateMinRestriction()
    // Offset: 0x7AC760
    int get_SampleRateMinRestriction();
    // public System.Int32 get_SampleRateMaxRestriction()
    // Offset: 0x7AC768
    int get_SampleRateMaxRestriction();
    // public System.Int32[] get_BlockSizeShort()
    // Offset: 0x7AC770
    ::ArrayW<int> get_BlockSizeShort();
    // public System.Int32[] get_BlockSizeLong()
    // Offset: 0x7AC778
    ::ArrayW<int> get_BlockSizeLong();
    // public OggVorbisEncoder.Setup.Att3[] get_PsyToneMasterAtt()
    // Offset: 0x7AC780
    ::ArrayW<::OggVorbisEncoder::Setup::Att3*> get_PsyToneMasterAtt();
    // public System.Int32[] get_PsyTone0Decibel()
    // Offset: 0x7AC788
    ::ArrayW<int> get_PsyTone0Decibel();
    // public System.Int32[] get_PsyToneDecibelSuppress()
    // Offset: 0x7AC790
    ::ArrayW<int> get_PsyToneDecibelSuppress();
    // public OggVorbisEncoder.Setup.AdjBlock[] get_PsyToneAdjImpulse()
    // Offset: 0x7AC798
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> get_PsyToneAdjImpulse();
    // public OggVorbisEncoder.Setup.AdjBlock[] get_PsyToneAdjLong()
    // Offset: 0x7AC7A0
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> get_PsyToneAdjLong();
    // public OggVorbisEncoder.Setup.AdjBlock[] get_PsyToneAdjOther()
    // Offset: 0x7AC7A8
    ::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> get_PsyToneAdjOther();
    // public OggVorbisEncoder.Setup.NoiseGuard[] get_PsyNoiseGuards()
    // Offset: 0x7AC7B0
    ::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*> get_PsyNoiseGuards();
    // public OggVorbisEncoder.Setup.Noise3[] get_PsyNoiseBiasImpulse()
    // Offset: 0x7AC7B8
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> get_PsyNoiseBiasImpulse();
    // public OggVorbisEncoder.Setup.Noise3[] get_PsyNoiseBiasPadding()
    // Offset: 0x7AC7C0
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> get_PsyNoiseBiasPadding();
    // public OggVorbisEncoder.Setup.Noise3[] get_PsyNoiseBiasTrans()
    // Offset: 0x7AC7C8
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> get_PsyNoiseBiasTrans();
    // public OggVorbisEncoder.Setup.Noise3[] get_PsyNoiseBiasLong()
    // Offset: 0x7AC7D0
    ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> get_PsyNoiseBiasLong();
    // public System.Int32[] get_PsyNoiseDecibelSuppress()
    // Offset: 0x7AC7D8
    ::ArrayW<int> get_PsyNoiseDecibelSuppress();
    // public OggVorbisEncoder.Setup.CompandBlock[] get_PsyNoiseCompand()
    // Offset: 0x7AC7E0
    ::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*> get_PsyNoiseCompand();
    // public System.Double[] get_PsyNoiseCompandShortMapping()
    // Offset: 0x7AC7E8
    ::ArrayW<double> get_PsyNoiseCompandShortMapping();
    // public System.Double[] get_PsyNoiseCompandLongMapping()
    // Offset: 0x7AC7F0
    ::ArrayW<double> get_PsyNoiseCompandLongMapping();
    // public System.Int32[][] get_PsyNoiseNormalStart()
    // Offset: 0x7AC7F8
    ::ArrayW<::ArrayW<int>> get_PsyNoiseNormalStart();
    // public System.Int32[][] get_PsyNoiseNormalPartition()
    // Offset: 0x7AC800
    ::ArrayW<::ArrayW<int>> get_PsyNoiseNormalPartition();
    // public System.Double[] get_PsyNoiseNormalThreshold()
    // Offset: 0x7AC808
    ::ArrayW<double> get_PsyNoiseNormalThreshold();
    // public System.Int32[] get_PsyAthFloat()
    // Offset: 0x7AC810
    ::ArrayW<int> get_PsyAthFloat();
    // public System.Int32[] get_PsyAthAbs()
    // Offset: 0x7AC818
    ::ArrayW<int> get_PsyAthAbs();
    // public System.Double[] get_PsyLowPass()
    // Offset: 0x7AC820
    ::ArrayW<double> get_PsyLowPass();
    // public OggVorbisEncoder.Setup.PsyGlobal[] get_GlobalParams()
    // Offset: 0x7AC828
    ::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*> get_GlobalParams();
    // public System.Double[] get_GlobalMapping()
    // Offset: 0x7AC830
    ::ArrayW<double> get_GlobalMapping();
    // public OggVorbisEncoder.Setup.AdjStereo[] get_StereoModes()
    // Offset: 0x7AC838
    ::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*> get_StereoModes();
    // public OggVorbisEncoder.Setup.IStaticCodeBook[][] get_FloorBooks()
    // Offset: 0x7AC840
    ::ArrayW<::ArrayW<::OggVorbisEncoder::Setup::IStaticCodeBook*>> get_FloorBooks();
    // public OggVorbisEncoder.Setup.Floor[] get_FloorParams()
    // Offset: 0x7AC848
    ::ArrayW<::OggVorbisEncoder::Setup::Floor*> get_FloorParams();
    // public System.Int32[][] get_FloorMappings()
    // Offset: 0x7AC850
    ::ArrayW<::ArrayW<int>> get_FloorMappings();
    // public OggVorbisEncoder.Setup.IMappingTemplate[] get_Maps()
    // Offset: 0x7AC858
    ::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*> get_Maps();
    // static private System.Void .cctor()
    // Offset: 0x7ACC68
    static void _cctor();
    // public System.Void .ctor()
    // Offset: 0x7AC860
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static Stereo44SetupDataTemplate* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<Stereo44SetupDataTemplate*, creationType>()));
    }
  }; // OggVorbisEncoder.Setup.Templates.Stereo44.Stereo44SetupDataTemplate
  #pragma pack(pop)
  static check_size<sizeof(Stereo44SetupDataTemplate), 280 + sizeof(::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*>)> __OggVorbisEncoder_Setup_Templates_Stereo44_Stereo44SetupDataTemplateSizeCheck;
  static_assert(sizeof(Stereo44SetupDataTemplate) == 0x120);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_Mappings
// Il2CppName: get_Mappings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_Mappings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_Mappings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMapping
// Il2CppName: get_SampleRateMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_SampleRateMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_QualityMapping
// Il2CppName: get_QualityMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_QualityMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_QualityMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_CouplingRestriction
// Il2CppName: get_CouplingRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_CouplingRestriction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_CouplingRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMinRestriction
// Il2CppName: get_SampleRateMinRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMinRestriction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_SampleRateMinRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMaxRestriction
// Il2CppName: get_SampleRateMaxRestriction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_SampleRateMaxRestriction)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_SampleRateMaxRestriction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_BlockSizeShort
// Il2CppName: get_BlockSizeShort
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_BlockSizeShort)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_BlockSizeShort", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_BlockSizeLong
// Il2CppName: get_BlockSizeLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_BlockSizeLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_BlockSizeLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneMasterAtt
// Il2CppName: get_PsyToneMasterAtt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Att3*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneMasterAtt)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyToneMasterAtt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyTone0Decibel
// Il2CppName: get_PsyTone0Decibel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyTone0Decibel)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyTone0Decibel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneDecibelSuppress
// Il2CppName: get_PsyToneDecibelSuppress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneDecibelSuppress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyToneDecibelSuppress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjImpulse
// Il2CppName: get_PsyToneAdjImpulse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjImpulse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyToneAdjImpulse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjLong
// Il2CppName: get_PsyToneAdjLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyToneAdjLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjOther
// Il2CppName: get_PsyToneAdjOther
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::AdjBlock*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyToneAdjOther)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyToneAdjOther", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseGuards
// Il2CppName: get_PsyNoiseGuards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::NoiseGuard*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseGuards)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseGuards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasImpulse
// Il2CppName: get_PsyNoiseBiasImpulse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Noise3*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasImpulse)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseBiasImpulse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasPadding
// Il2CppName: get_PsyNoiseBiasPadding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Noise3*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasPadding)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseBiasPadding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasTrans
// Il2CppName: get_PsyNoiseBiasTrans
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Noise3*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasTrans)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseBiasTrans", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasLong
// Il2CppName: get_PsyNoiseBiasLong
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Noise3*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseBiasLong)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseBiasLong", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseDecibelSuppress
// Il2CppName: get_PsyNoiseDecibelSuppress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseDecibelSuppress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseDecibelSuppress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompand
// Il2CppName: get_PsyNoiseCompand
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::CompandBlock*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompand)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseCompand", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompandShortMapping
// Il2CppName: get_PsyNoiseCompandShortMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompandShortMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseCompandShortMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompandLongMapping
// Il2CppName: get_PsyNoiseCompandLongMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseCompandLongMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseCompandLongMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalStart
// Il2CppName: get_PsyNoiseNormalStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ArrayW<int>> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalStart)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseNormalStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalPartition
// Il2CppName: get_PsyNoiseNormalPartition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ArrayW<int>> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalPartition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseNormalPartition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalThreshold
// Il2CppName: get_PsyNoiseNormalThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyNoiseNormalThreshold)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyNoiseNormalThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyAthFloat
// Il2CppName: get_PsyAthFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyAthFloat)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyAthFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyAthAbs
// Il2CppName: get_PsyAthAbs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<int> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyAthAbs)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyAthAbs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyLowPass
// Il2CppName: get_PsyLowPass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_PsyLowPass)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_PsyLowPass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_GlobalParams
// Il2CppName: get_GlobalParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::PsyGlobal*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_GlobalParams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_GlobalParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_GlobalMapping
// Il2CppName: get_GlobalMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<double> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_GlobalMapping)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_GlobalMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_StereoModes
// Il2CppName: get_StereoModes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::AdjStereo*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_StereoModes)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_StereoModes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorBooks
// Il2CppName: get_FloorBooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ArrayW<::OggVorbisEncoder::Setup::IStaticCodeBook*>> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorBooks)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_FloorBooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorParams
// Il2CppName: get_FloorParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::Floor*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorParams)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_FloorParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorMappings
// Il2CppName: get_FloorMappings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::ArrayW<int>> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_FloorMappings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_FloorMappings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_Maps
// Il2CppName: get_Maps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::OggVorbisEncoder::Setup::IMappingTemplate*> (OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::get_Maps)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), "get_Maps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Stereo44::Stereo44SetupDataTemplate::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
