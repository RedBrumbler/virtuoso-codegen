// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder::Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Noise3
  class Noise3;
  // Forward declaring type: PsyInfo
  class PsyInfo;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder.Setup.Templates
namespace OggVorbisEncoder::Setup::Templates {
  // Forward declaring type: Psy
  class Psy;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Setup::Templates::Psy);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::Templates::Psy*, "OggVorbisEncoder.Setup.Templates", "Psy");
// Type namespace: OggVorbisEncoder.Setup.Templates
namespace OggVorbisEncoder::Setup::Templates {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Setup.Templates.Psy
  // [TokenAttribute] Offset: FFFFFFFF
  class Psy : public ::Il2CppObject {
    public:
    // Get static field: static public readonly System.Int32[] AthFloater
    static ::ArrayW<int> _get_AthFloater();
    // Set static field: static public readonly System.Int32[] AthFloater
    static void _set_AthFloater(::ArrayW<int> value);
    // Get static field: static public readonly System.Double[] CompandShortMapping
    static ::ArrayW<double> _get_CompandShortMapping();
    // Set static field: static public readonly System.Double[] CompandShortMapping
    static void _set_CompandShortMapping(::ArrayW<double> value);
    // Get static field: static public readonly System.Double[] CompandLongMapping
    static ::ArrayW<double> _get_CompandLongMapping();
    // Set static field: static public readonly System.Double[] CompandLongMapping
    static void _set_CompandLongMapping(::ArrayW<double> value);
    // Get static field: static public readonly System.Int32[] ToneSuppress
    static ::ArrayW<int> _get_ToneSuppress();
    // Set static field: static public readonly System.Int32[] ToneSuppress
    static void _set_ToneSuppress(::ArrayW<int> value);
    // Get static field: static public readonly System.Int32[] ToneZeroDecibel
    static ::ArrayW<int> _get_ToneZeroDecibel();
    // Set static field: static public readonly System.Int32[] ToneZeroDecibel
    static void _set_ToneZeroDecibel(::ArrayW<int> value);
    // Get static field: static public readonly System.Int32[] NoiseSuppress
    static ::ArrayW<int> _get_NoiseSuppress();
    // Set static field: static public readonly System.Int32[] NoiseSuppress
    static void _set_NoiseSuppress(::ArrayW<int> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasImpulseValues
    static ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> _get_NoiseBiasImpulseValues();
    // Set static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasImpulseValues
    static void _set_NoiseBiasImpulseValues(::ArrayW<::OggVorbisEncoder::Setup::Noise3*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasPaddingValues
    static ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> _get_NoiseBiasPaddingValues();
    // Set static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasPaddingValues
    static void _set_NoiseBiasPaddingValues(::ArrayW<::OggVorbisEncoder::Setup::Noise3*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasTransition
    static ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> _get_NoiseBiasTransition();
    // Set static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasTransition
    static void _set_NoiseBiasTransition(::ArrayW<::OggVorbisEncoder::Setup::Noise3*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasLongBlock
    static ::ArrayW<::OggVorbisEncoder::Setup::Noise3*> _get_NoiseBiasLongBlock();
    // Set static field: static public readonly OggVorbisEncoder.Setup.Noise3[] NoiseBiasLongBlock
    static void _set_NoiseBiasLongBlock(::ArrayW<::OggVorbisEncoder::Setup::Noise3*> value);
    // Get static field: static public readonly OggVorbisEncoder.Setup.PsyInfo PsyInfoTemplate
    static ::OggVorbisEncoder::Setup::PsyInfo* _get_PsyInfoTemplate();
    // Set static field: static public readonly OggVorbisEncoder.Setup.PsyInfo PsyInfoTemplate
    static void _set_PsyInfoTemplate(::OggVorbisEncoder::Setup::PsyInfo* value);
    // static private System.Void .cctor()
    // Offset: 0x7952C0
    static void _cctor();
  }; // OggVorbisEncoder.Setup.Templates.Psy
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Templates::Psy::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&OggVorbisEncoder::Setup::Templates::Psy::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Setup::Templates::Psy*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
