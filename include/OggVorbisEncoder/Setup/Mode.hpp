// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Mode
  struct Mode;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Setup::Mode, "OggVorbisEncoder.Setup", "Mode");
// Type namespace: OggVorbisEncoder.Setup
namespace OggVorbisEncoder::Setup {
  // Size: 0x10
  #pragma pack(push, 1)
  // WARNING Layout: Sequential may not be correctly taken into account!
  // Autogenerated type: OggVorbisEncoder.Setup.Mode
  // [TokenAttribute] Offset: FFFFFFFF
  struct Mode/*, public ::System::ValueType*/ {
    public:
    public:
    // public System.Int32 BlockFlag
    // Size: 0x4
    // Offset: 0x0
    int BlockFlag;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 WindowType
    // Size: 0x4
    // Offset: 0x4
    int WindowType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 TransformType
    // Size: 0x4
    // Offset: 0x8
    int TransformType;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // public System.Int32 Mapping
    // Size: 0x4
    // Offset: 0xC
    int Mapping;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Creating value type constructor for type: Mode
    constexpr Mode(int BlockFlag_ = {}, int WindowType_ = {}, int TransformType_ = {}, int Mapping_ = {}) noexcept : BlockFlag{BlockFlag_}, WindowType{WindowType_}, TransformType{TransformType_}, Mapping{Mapping_} {}
    // Creating interface conversion operator: operator ::System::ValueType
    operator ::System::ValueType() noexcept {
      return *reinterpret_cast<::System::ValueType*>(this);
    }
    // Get instance field reference: public System.Int32 BlockFlag
    int& dyn_BlockFlag();
    // Get instance field reference: public System.Int32 WindowType
    int& dyn_WindowType();
    // Get instance field reference: public System.Int32 TransformType
    int& dyn_TransformType();
    // Get instance field reference: public System.Int32 Mapping
    int& dyn_Mapping();
    // public System.Void .ctor(System.Int32 blockFlag, System.Int32 windowType, System.Int32 transformType, System.Int32 mapping)
    // Offset: 0x774640
    // ABORTED: conflicts with another method.  Mode(int blockFlag, int windowType, int transformType, int mapping);
  }; // OggVorbisEncoder.Setup.Mode
  #pragma pack(pop)
  static check_size<sizeof(Mode), 12 + sizeof(int)> __OggVorbisEncoder_Setup_ModeSizeCheck;
  static_assert(sizeof(Mode) == 0x10);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Setup::Mode::Mode
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
