// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: OggVorbisEncoder.ArrayExtensions
#include "OggVorbisEncoder/ArrayExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE_GENERIC_CLASS(::OggVorbisEncoder::ArrayExtensions::$$c__0_1, "OggVorbisEncoder", "ArrayExtensions/<>c__0`1");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // WARNING Size may be invalid!
  // Autogenerated type: OggVorbisEncoder.ArrayExtensions/OggVorbisEncoder.<>c__0`1
  // [TokenAttribute] Offset: FFFFFFFF
  // [CompilerGeneratedAttribute] Offset: FFFFFFFF
  template<typename TElement>
  class ArrayExtensions::$$c__0_1 : public ::Il2CppObject {
    public:
    // Autogenerated static field getter
    // Get static field: static public readonly OggVorbisEncoder.ArrayExtensions/OggVorbisEncoder.<>c__0`1<TElement> <>9
    static ::OggVorbisEncoder::ArrayExtensions::$$c__0_1<TElement>* _get_$$9() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::_get_$$9");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OggVorbisEncoder::ArrayExtensions::$$c__0_1<TElement>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ArrayExtensions::$$c__0_1<TElement>*>::get(), "<>9")));
    }
    // Autogenerated static field setter
    // Set static field: static public readonly OggVorbisEncoder.ArrayExtensions/OggVorbisEncoder.<>c__0`1<TElement> <>9
    static void _set_$$9(::OggVorbisEncoder::ArrayExtensions::$$c__0_1<TElement>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::_set_$$9");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ArrayExtensions::$$c__0_1<TElement>*>::get(), "<>9", value)));
    }
    // Autogenerated static field getter
    // Get static field: static public System.Func`2<System.Int32,TElement> <>9__0_0
    static ::System::Func_2<int, TElement>* _get_$$9__0_0() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::_get_$$9__0_0");
      return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<int, TElement>*>(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ArrayExtensions::$$c__0_1<TElement>*>::get(), "<>9__0_0")));
    }
    // Autogenerated static field setter
    // Set static field: static public System.Func`2<System.Int32,TElement> <>9__0_0
    static void _set_$$9__0_0(::System::Func_2<int, TElement>* value) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::_set_$$9__0_0");
      THROW_UNLESS((il2cpp_utils::SetFieldValue(il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ArrayExtensions::$$c__0_1<TElement>*>::get(), "<>9__0_0", value)));
    }
    // static private System.Void .cctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    static void _cctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::.cctor");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<ArrayExtensions::$$c__0_1<TElement>*>::get(), ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
      ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
    }
    // TElement <ToFixedLength>b__0_0(System.Int32 s)
    // Offset: 0xFFFFFFFFFFFFFFFF
    TElement $ToFixedLength$b__0_0(int s) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::<ToFixedLength>b__0_0");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToFixedLength>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
      return ::il2cpp_utils::RunMethodRethrow<TElement, false>(this, ___internal__method, s);
    }
    // public System.Void .ctor()
    // Offset: 0xFFFFFFFFFFFFFFFF
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static ArrayExtensions::$$c__0_1<TElement>* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::$$c__0_1::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<ArrayExtensions::$$c__0_1<TElement>*, creationType>()));
    }
  }; // OggVorbisEncoder.ArrayExtensions/OggVorbisEncoder.<>c__0`1
  // Could not write size check! Type: OggVorbisEncoder.ArrayExtensions/OggVorbisEncoder.<>c__0`1 is generic, or has no fields that are valid for size checks!
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
