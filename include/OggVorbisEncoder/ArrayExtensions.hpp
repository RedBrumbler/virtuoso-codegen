// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
}
// Completed forward declares
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: ArrayExtensions
  class ArrayExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::ArrayExtensions);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::ArrayExtensions*, "OggVorbisEncoder", "ArrayExtensions");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.ArrayExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class ArrayExtensions : public ::Il2CppObject {
    public:
    // Nested type: ::OggVorbisEncoder::ArrayExtensions::$$c__0_1<TElement>
    template<typename TElement>
    class $$c__0_1;
    // static public TElement[] ToFixedLength(TElement[] input, System.Int32 fixedLength)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class TElement>
    static ::ArrayW<TElement> ToFixedLength(::ArrayW<TElement> input, int fixedLength) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::ArrayExtensions::ToFixedLength");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbisEncoder", "ArrayExtensions", "ToFixedLength", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(fixedLength)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<TElement>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<TElement>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, input, fixedLength);
    }
  }; // OggVorbisEncoder.ArrayExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::ArrayExtensions::ToFixedLength
// Il2CppName: ToFixedLength
// Cannot write MetadataGetter for generic methods!
