// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: FloatExtensions
  class FloatExtensions;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::FloatExtensions);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::FloatExtensions*, "OggVorbisEncoder", "FloatExtensions");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.FloatExtensions
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class FloatExtensions : public ::Il2CppObject {
    public:
    // static public System.Single ToDecibel(System.Single x)
    // Offset: 0x75BC28
    static float ToDecibel(float x);
  }; // OggVorbisEncoder.FloatExtensions
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::FloatExtensions::ToDecibel
// Il2CppName: ToDecibel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float)>(&OggVorbisEncoder::FloatExtensions::ToDecibel)> {
  static const MethodInfo* get() {
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::FloatExtensions*), "ToDecibel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{x});
  }
};
