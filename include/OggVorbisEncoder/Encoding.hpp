// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: Encoding
  class Encoding;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::Encoding);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::Encoding*, "OggVorbisEncoder", "Encoding");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.Encoding
  // [TokenAttribute] Offset: FFFFFFFF
  class Encoding : public ::Il2CppObject {
    public:
    // static field const value: static private System.Int32 Man
    static constexpr const int Man = 21;
    // Get static field: static private System.Int32 Man
    static int _get_Man();
    // Set static field: static private System.Int32 Man
    static void _set_Man(int value);
    // static field const value: static private System.Int32 ExpBias
    static constexpr const int ExpBias = 768;
    // Get static field: static private System.Int32 ExpBias
    static int _get_ExpBias();
    // Set static field: static private System.Int32 ExpBias
    static void _set_ExpBias(int value);
    // static public System.Int32 Log(System.Int32 value)
    // Offset: 0x75B9AC
    static int Log(int value);
    // static public System.Single UnpackFloat(System.Int32 value)
    // Offset: 0x74A778
    static float UnpackFloat(int value);
    // static public System.UInt32[] MakeWords(System.Byte[] l, System.Int32 sparsecount)
    // Offset: 0x74A470
    static ::ArrayW<uint> MakeWords(::ArrayW<uint8_t> l, int sparsecount);
  }; // OggVorbisEncoder.Encoding
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::Encoding::Log
// Il2CppName: Log
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&OggVorbisEncoder::Encoding::Log)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Encoding*), "Log", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Encoding::UnpackFloat
// Il2CppName: UnpackFloat
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(int)>(&OggVorbisEncoder::Encoding::UnpackFloat)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Encoding*), "UnpackFloat", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::Encoding::MakeWords
// Il2CppName: MakeWords
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint> (*)(::ArrayW<uint8_t>, int)>(&OggVorbisEncoder::Encoding::MakeWords)> {
  static const MethodInfo* get() {
    static auto* l = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* sparsecount = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::Encoding*), "MakeWords", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{l, sparsecount});
  }
};
