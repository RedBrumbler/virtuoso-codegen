// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: OggPacket
  class OggPacket;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::OggPacket);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::OggPacket*, "OggVorbisEncoder", "OggPacket");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x24
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.OggPacket
  // [TokenAttribute] Offset: FFFFFFFF
  class OggPacket : public ::Il2CppObject {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private readonly System.Byte[] <PacketData>k__BackingField
    // Size: 0x8
    // Offset: 0x10
    ::ArrayW<uint8_t> PacketData;
    // Field size check
    static_assert(sizeof(::ArrayW<uint8_t>) == 0x8);
    // private readonly System.Boolean <EndOfStream>k__BackingField
    // Size: 0x1
    // Offset: 0x18
    bool EndOfStream;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: EndOfStream and: GranulePosition
    char __padding1[0x3] = {};
    // private readonly System.Int32 <GranulePosition>k__BackingField
    // Size: 0x4
    // Offset: 0x1C
    int GranulePosition;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    // private readonly System.Int32 <PacketNumber>k__BackingField
    // Size: 0x4
    // Offset: 0x20
    int PacketNumber;
    // Field size check
    static_assert(sizeof(int) == 0x4);
    public:
    // Get instance field reference: private readonly System.Byte[] <PacketData>k__BackingField
    ::ArrayW<uint8_t>& dyn_$PacketData$k__BackingField();
    // Get instance field reference: private readonly System.Boolean <EndOfStream>k__BackingField
    bool& dyn_$EndOfStream$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <GranulePosition>k__BackingField
    int& dyn_$GranulePosition$k__BackingField();
    // Get instance field reference: private readonly System.Int32 <PacketNumber>k__BackingField
    int& dyn_$PacketNumber$k__BackingField();
    // public System.Byte[] get_PacketData()
    // Offset: 0x7746D8
    ::ArrayW<uint8_t> get_PacketData();
    // public System.Boolean get_EndOfStream()
    // Offset: 0x7746E0
    bool get_EndOfStream();
    // public System.Int32 get_GranulePosition()
    // Offset: 0x7746E8
    int get_GranulePosition();
    // public System.Int32 get_PacketNumber()
    // Offset: 0x7746F0
    int get_PacketNumber();
    // public System.Void .ctor(System.Byte[] packetData, System.Boolean endOfStream, System.Int32 granulePosition, System.Int32 packetNumber)
    // Offset: 0x761114
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static OggPacket* New_ctor(::ArrayW<uint8_t> packetData, bool endOfStream, int granulePosition, int packetNumber) {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::OggPacket::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<OggPacket*, creationType>(packetData, endOfStream, granulePosition, packetNumber)));
    }
  }; // OggVorbisEncoder.OggPacket
  #pragma pack(pop)
  static check_size<sizeof(OggPacket), 32 + sizeof(int)> __OggVorbisEncoder_OggPacketSizeCheck;
  static_assert(sizeof(OggPacket) == 0x24);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::OggPacket::get_PacketData
// Il2CppName: get_PacketData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (OggVorbisEncoder::OggPacket::*)()>(&OggVorbisEncoder::OggPacket::get_PacketData)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::OggPacket*), "get_PacketData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::OggPacket::get_EndOfStream
// Il2CppName: get_EndOfStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (OggVorbisEncoder::OggPacket::*)()>(&OggVorbisEncoder::OggPacket::get_EndOfStream)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::OggPacket*), "get_EndOfStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::OggPacket::get_GranulePosition
// Il2CppName: get_GranulePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::OggPacket::*)()>(&OggVorbisEncoder::OggPacket::get_GranulePosition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::OggPacket*), "get_GranulePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::OggPacket::get_PacketNumber
// Il2CppName: get_PacketNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (OggVorbisEncoder::OggPacket::*)()>(&OggVorbisEncoder::OggPacket::get_PacketNumber)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::OggPacket*), "get_PacketNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::OggPacket::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
