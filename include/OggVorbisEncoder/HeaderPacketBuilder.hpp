// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
}
// Forward declaring namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: OggPacket
  class OggPacket;
  // Forward declaring type: VorbisInfo
  class VorbisInfo;
  // Forward declaring type: Comments
  class Comments;
  // Forward declaring type: EncodeBuffer
  class EncodeBuffer;
  // Forward declaring type: CodecSetup
  class CodecSetup;
}
// Forward declaring namespace: OggVorbisEncoder::Setup
namespace OggVorbisEncoder::Setup {
  // Forward declaring type: Residue
  class Residue;
  // Forward declaring type: Floor
  class Floor;
  // Forward declaring type: Mapping
  class Mapping;
  // Forward declaring type: IStaticCodeBook
  class IStaticCodeBook;
}
// Completed forward declares
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Forward declaring type: HeaderPacketBuilder
  class HeaderPacketBuilder;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::OggVorbisEncoder::HeaderPacketBuilder);
DEFINE_IL2CPP_ARG_TYPE(::OggVorbisEncoder::HeaderPacketBuilder*, "OggVorbisEncoder", "HeaderPacketBuilder");
// Type namespace: OggVorbisEncoder
namespace OggVorbisEncoder {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: OggVorbisEncoder.HeaderPacketBuilder
  // [TokenAttribute] Offset: FFFFFFFF
  class HeaderPacketBuilder : public ::Il2CppObject {
    public:
    // static field const value: static private System.String VorbisString
    static constexpr const char* VorbisString = "vorbis";
    // Get static field: static private System.String VorbisString
    static ::StringW _get_VorbisString();
    // Set static field: static private System.String VorbisString
    static void _set_VorbisString(::StringW value);
    // static field const value: static private System.String VendorString
    static constexpr const char* VendorString = "OggVorbisEncoder";
    // Get static field: static private System.String VendorString
    static ::StringW _get_VendorString();
    // Set static field: static private System.String VendorString
    static void _set_VendorString(::StringW value);
    // public OggVorbisEncoder.OggPacket BuildInfoPacket(OggVorbisEncoder.VorbisInfo info)
    // Offset: 0x760ED4
    ::OggVorbisEncoder::OggPacket* BuildInfoPacket(::OggVorbisEncoder::VorbisInfo* info);
    // public OggVorbisEncoder.OggPacket BuildCommentsPacket(OggVorbisEncoder.Comments comments)
    // Offset: 0x761168
    ::OggVorbisEncoder::OggPacket* BuildCommentsPacket(::OggVorbisEncoder::Comments* comments);
    // public OggVorbisEncoder.OggPacket BuildBooksPacket(OggVorbisEncoder.VorbisInfo info)
    // Offset: 0x761458
    ::OggVorbisEncoder::OggPacket* BuildBooksPacket(::OggVorbisEncoder::VorbisInfo* info);
    // private System.Void PackBooks(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.VorbisInfo info)
    // Offset: 0x76152C
    void PackBooks(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::VorbisInfo* info);
    // static private System.Void PackModes(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.CodecSetup codecSetup, System.Int32 i)
    // Offset: 0x763DE8
    static void PackModes(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::CodecSetup* codecSetup, int i);
    // static private System.Void PackResidue(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.Setup.Residue residue)
    // Offset: 0x763960
    static void PackResidue(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::Setup::Residue* residue);
    // static private System.Int32 Count(System.Int32 value)
    // Offset: 0x764048
    static int Count(int value);
    // static private System.Void PackFloor(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.Setup.Floor floor)
    // Offset: 0x763638
    static void PackFloor(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::Setup::Floor* floor);
    // static private System.Void PackMapping(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.VorbisInfo info, OggVorbisEncoder.Setup.Mapping mapping)
    // Offset: 0x763B5C
    static void PackMapping(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::VorbisInfo* info, ::OggVorbisEncoder::Setup::Mapping* mapping);
    // private System.Void PackStaticBook(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.Setup.IStaticCodeBook book)
    // Offset: 0x762344
    void PackStaticBook(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::Setup::IStaticCodeBook* book);
    // static private System.Void PackComment(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.Comments vorbisComment)
    // Offset: 0x761228
    static void PackComment(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::Comments* vorbisComment);
    // static private System.Void PackInfo(OggVorbisEncoder.EncodeBuffer buffer, OggVorbisEncoder.VorbisInfo info)
    // Offset: 0x760F8C
    static void PackInfo(::OggVorbisEncoder::EncodeBuffer* buffer, ::OggVorbisEncoder::VorbisInfo* info);
    // public System.Void .ctor()
    // Offset: 0x7640A0
    // Implemented from: System.Object
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static HeaderPacketBuilder* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbisEncoder::HeaderPacketBuilder::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<HeaderPacketBuilder*, creationType>()));
    }
  }; // OggVorbisEncoder.HeaderPacketBuilder
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::BuildInfoPacket
// Il2CppName: BuildInfoPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::OggPacket* (OggVorbisEncoder::HeaderPacketBuilder::*)(::OggVorbisEncoder::VorbisInfo*)>(&OggVorbisEncoder::HeaderPacketBuilder::BuildInfoPacket)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "VorbisInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "BuildInfoPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::BuildCommentsPacket
// Il2CppName: BuildCommentsPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::OggPacket* (OggVorbisEncoder::HeaderPacketBuilder::*)(::OggVorbisEncoder::Comments*)>(&OggVorbisEncoder::HeaderPacketBuilder::BuildCommentsPacket)> {
  static const MethodInfo* get() {
    static auto* comments = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "Comments")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "BuildCommentsPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{comments});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::BuildBooksPacket
// Il2CppName: BuildBooksPacket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::OggVorbisEncoder::OggPacket* (OggVorbisEncoder::HeaderPacketBuilder::*)(::OggVorbisEncoder::VorbisInfo*)>(&OggVorbisEncoder::HeaderPacketBuilder::BuildBooksPacket)> {
  static const MethodInfo* get() {
    static auto* info = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "VorbisInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "BuildBooksPacket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{info});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackBooks
// Il2CppName: PackBooks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OggVorbisEncoder::HeaderPacketBuilder::*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::VorbisInfo*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackBooks)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "VorbisInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackBooks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, info});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackModes
// Il2CppName: PackModes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::CodecSetup*, int)>(&OggVorbisEncoder::HeaderPacketBuilder::PackModes)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* codecSetup = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "CodecSetup")->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackModes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, codecSetup, i});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackResidue
// Il2CppName: PackResidue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::Setup::Residue*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackResidue)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* residue = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder.Setup", "Residue")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackResidue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, residue});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::Count
// Il2CppName: Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&OggVorbisEncoder::HeaderPacketBuilder::Count)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackFloor
// Il2CppName: PackFloor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::Setup::Floor*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackFloor)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* floor = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder.Setup", "Floor")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackFloor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, floor});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackMapping
// Il2CppName: PackMapping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::VorbisInfo*, ::OggVorbisEncoder::Setup::Mapping*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackMapping)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "VorbisInfo")->byval_arg;
    static auto* mapping = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder.Setup", "Mapping")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackMapping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, info, mapping});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackStaticBook
// Il2CppName: PackStaticBook
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OggVorbisEncoder::HeaderPacketBuilder::*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::Setup::IStaticCodeBook*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackStaticBook)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* book = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder.Setup", "IStaticCodeBook")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackStaticBook", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, book});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackComment
// Il2CppName: PackComment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::Comments*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackComment)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* vorbisComment = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "Comments")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackComment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, vorbisComment});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::PackInfo
// Il2CppName: PackInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::OggVorbisEncoder::EncodeBuffer*, ::OggVorbisEncoder::VorbisInfo*)>(&OggVorbisEncoder::HeaderPacketBuilder::PackInfo)> {
  static const MethodInfo* get() {
    static auto* buffer = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "EncodeBuffer")->byval_arg;
    static auto* info = &::il2cpp_utils::GetClassFromName("OggVorbisEncoder", "VorbisInfo")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(OggVorbisEncoder::HeaderPacketBuilder*), "PackInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, info});
  }
};
// Writing MetadataGetter for method: OggVorbisEncoder::HeaderPacketBuilder::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
