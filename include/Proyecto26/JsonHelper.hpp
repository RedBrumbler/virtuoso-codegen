// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Proyecto26
namespace Proyecto26 {
}
// Completed forward declares
// Type namespace: Proyecto26
namespace Proyecto26 {
  // Forward declaring type: JsonHelper
  class JsonHelper;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Proyecto26::JsonHelper);
DEFINE_IL2CPP_ARG_TYPE(::Proyecto26::JsonHelper*, "Proyecto26", "JsonHelper");
// Type namespace: Proyecto26
namespace Proyecto26 {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Proyecto26.JsonHelper
  // [TokenAttribute] Offset: FFFFFFFF
  class JsonHelper : public ::Il2CppObject {
    public:
    // Nested type: ::Proyecto26::JsonHelper::Wrapper_1<T>
    template<typename T>
    class Wrapper_1;
    // static public T[] ArrayFromJson(System.String json)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<T> ArrayFromJson(::StringW json) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::JsonHelper::ArrayFromJson");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Proyecto26", "JsonHelper", "ArrayFromJson", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json);
    }
    // static public T[] FromJsonString(System.String json)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::ArrayW<T> FromJsonString(::StringW json) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::JsonHelper::FromJsonString");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Proyecto26", "JsonHelper", "FromJsonString", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::ArrayW<T>, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, json);
    }
    // static public System.String ArrayToJsonString(T[] array)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW ArrayToJsonString(::ArrayW<T> array) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::JsonHelper::ArrayToJsonString");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Proyecto26", "JsonHelper", "ArrayToJsonString", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array);
    }
    // static public System.String ArrayToJsonString(T[] array, System.Boolean prettyPrint)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T>
    static ::StringW ArrayToJsonString(::ArrayW<T> array, bool prettyPrint) {
      static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::JsonHelper::ArrayToJsonString");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Proyecto26", "JsonHelper", "ArrayToJsonString", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(prettyPrint)})));
      static auto* ___generic__method = THROW_UNLESS(::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T>::get()}));
      return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, array, prettyPrint);
    }
  }; // Proyecto26.JsonHelper
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Proyecto26::JsonHelper::ArrayFromJson
// Il2CppName: ArrayFromJson
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Proyecto26::JsonHelper::FromJsonString
// Il2CppName: FromJsonString
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Proyecto26::JsonHelper::ArrayToJsonString
// Il2CppName: ArrayToJsonString
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: Proyecto26::JsonHelper::ArrayToJsonString
// Il2CppName: ArrayToJsonString
// Cannot write MetadataGetter for generic methods!
