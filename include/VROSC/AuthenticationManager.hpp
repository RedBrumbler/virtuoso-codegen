// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: StateMachine
  class StateMachine;
  // Forward declaring type: IState
  class IState;
  // Forward declaring type: LoginWithEmailState
  class LoginWithEmailState;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action
  class Action;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Action_3;
  // Forward declaring type: Func`1<TResult>
  template<typename TResult>
  class Func_1;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: AuthenticationManager
  class AuthenticationManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::AuthenticationManager);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::AuthenticationManager*, "VROSC", "AuthenticationManager");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x41
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.AuthenticationManager
  // [TokenAttribute] Offset: FFFFFFFF
  class AuthenticationManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::AuthenticationManager::LocalUserData
    class LocalUserData;
    // Nested type: ::VROSC::AuthenticationManager::FirebaseUserData
    class FirebaseUserData;
    // Nested type: ::VROSC::AuthenticationManager::$$c__DisplayClass28_0
    class $$c__DisplayClass28_0;
    // Nested type: ::VROSC::AuthenticationManager::$$c
    class $$c;
    // Nested type: ::VROSC::AuthenticationManager::$$c__DisplayClass38_0
    class $$c__DisplayClass38_0;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public VROSC.AuthenticationManager/VROSC.LocalUserData LocalUser
    // Size: 0x8
    // Offset: 0x18
    ::VROSC::AuthenticationManager::LocalUserData* LocalUser;
    // Field size check
    static_assert(sizeof(::VROSC::AuthenticationManager::LocalUserData*) == 0x8);
    // public VROSC.AuthenticationManager/VROSC.FirebaseUserData FirebaseUser
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::AuthenticationManager::FirebaseUserData* FirebaseUser;
    // Field size check
    static_assert(sizeof(::VROSC::AuthenticationManager::FirebaseUserData*) == 0x8);
    // private VROSC.StateMachine _stateMachine
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::StateMachine* stateMachine;
    // Field size check
    static_assert(sizeof(::VROSC::StateMachine*) == 0x8);
    // private VROSC.IState _startState
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::IState* startState;
    // Field size check
    static_assert(sizeof(::VROSC::IState*) == 0x8);
    // private VROSC.LoginWithEmailState _loginWithEmailState
    // Size: 0x8
    // Offset: 0x38
    ::VROSC::LoginWithEmailState* loginWithEmailState;
    // Field size check
    static_assert(sizeof(::VROSC::LoginWithEmailState*) == 0x8);
    // private System.Boolean <IsWaitingForCredentials>k__BackingField
    // Size: 0x1
    // Offset: 0x40
    bool IsWaitingForCredentials;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // static field const value: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static constexpr const char* KEY_FIREBASE_REFRESH_TOKEN = "FirebaseRefreshToken";
    // Get static field: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static ::StringW _get_KEY_FIREBASE_REFRESH_TOKEN();
    // Set static field: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static void _set_KEY_FIREBASE_REFRESH_TOKEN(::StringW value);
    // static field const value: static public System.Int32 MAX_RETRY_ATTEMPTS
    static constexpr const int MAX_RETRY_ATTEMPTS = 5;
    // Get static field: static public System.Int32 MAX_RETRY_ATTEMPTS
    static int _get_MAX_RETRY_ATTEMPTS();
    // Set static field: static public System.Int32 MAX_RETRY_ATTEMPTS
    static void _set_MAX_RETRY_ATTEMPTS(int value);
    // static field const value: static public System.Single RETRY_ATTEMPT_TIMEOUT
    static constexpr const float RETRY_ATTEMPT_TIMEOUT = 1;
    // Get static field: static public System.Single RETRY_ATTEMPT_TIMEOUT
    static float _get_RETRY_ATTEMPT_TIMEOUT();
    // Set static field: static public System.Single RETRY_ATTEMPT_TIMEOUT
    static void _set_RETRY_ATTEMPT_TIMEOUT(float value);
    // Get static field: static public System.Action OnVerifiedUserLogin
    static ::System::Action* _get_OnVerifiedUserLogin();
    // Set static field: static public System.Action OnVerifiedUserLogin
    static void _set_OnVerifiedUserLogin(::System::Action* value);
    // Get static field: static public System.Action`2<System.String,System.Boolean> OnUserLoginSuccess
    static ::System::Action_2<::StringW, bool>* _get_OnUserLoginSuccess();
    // Set static field: static public System.Action`2<System.String,System.Boolean> OnUserLoginSuccess
    static void _set_OnUserLoginSuccess(::System::Action_2<::StringW, bool>* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnUserLoginFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnUserLoginFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnUserLoginFailure
    static void _set_OnUserLoginFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action OnUserLogout
    static ::System::Action* _get_OnUserLogout();
    // Set static field: static public System.Action OnUserLogout
    static void _set_OnUserLogout(::System::Action* value);
    // Get static field: static public System.Action`3<System.String,System.String,System.String> OnRefreshFirebaseAccessTokenSuccess
    static ::System::Action_3<::StringW, ::StringW, ::StringW>* _get_OnRefreshFirebaseAccessTokenSuccess();
    // Set static field: static public System.Action`3<System.String,System.String,System.String> OnRefreshFirebaseAccessTokenSuccess
    static void _set_OnRefreshFirebaseAccessTokenSuccess(::System::Action_3<::StringW, ::StringW, ::StringW>* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnRefreshFirebaseAccessTokenFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnRefreshFirebaseAccessTokenFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnRefreshFirebaseAccessTokenFailure
    static void _set_OnRefreshFirebaseAccessTokenFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action OnUserEmailChangeSuccess
    static ::System::Action* _get_OnUserEmailChangeSuccess();
    // Set static field: static public System.Action OnUserEmailChangeSuccess
    static void _set_OnUserEmailChangeSuccess(::System::Action* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnUserEmailChangeFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnUserEmailChangeFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnUserEmailChangeFailure
    static void _set_OnUserEmailChangeFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action OnUserPasswordChangeSuccess
    static ::System::Action* _get_OnUserPasswordChangeSuccess();
    // Set static field: static public System.Action OnUserPasswordChangeSuccess
    static void _set_OnUserPasswordChangeSuccess(::System::Action* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnUserPasswordChangeFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnUserPasswordChangeFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnUserPasswordChangeFailure
    static void _set_OnUserPasswordChangeFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action OnResetPasswordSuccess
    static ::System::Action* _get_OnResetPasswordSuccess();
    // Set static field: static public System.Action OnResetPasswordSuccess
    static void _set_OnResetPasswordSuccess(::System::Action* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnResetPasswordFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnResetPasswordFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnResetPasswordFailure
    static void _set_OnResetPasswordFailure(::System::Action_1<::VROSC::Error>* value);
    // Get static field: static public System.Action OnSendVerificationEmailSuccess
    static ::System::Action* _get_OnSendVerificationEmailSuccess();
    // Set static field: static public System.Action OnSendVerificationEmailSuccess
    static void _set_OnSendVerificationEmailSuccess(::System::Action* value);
    // Get static field: static public System.Action`1<VROSC.Error> OnSendVerificationEmailFailure
    static ::System::Action_1<::VROSC::Error>* _get_OnSendVerificationEmailFailure();
    // Set static field: static public System.Action`1<VROSC.Error> OnSendVerificationEmailFailure
    static void _set_OnSendVerificationEmailFailure(::System::Action_1<::VROSC::Error>* value);
    // Get instance field reference: public VROSC.AuthenticationManager/VROSC.LocalUserData LocalUser
    ::VROSC::AuthenticationManager::LocalUserData*& dyn_LocalUser();
    // Get instance field reference: public VROSC.AuthenticationManager/VROSC.FirebaseUserData FirebaseUser
    ::VROSC::AuthenticationManager::FirebaseUserData*& dyn_FirebaseUser();
    // Get instance field reference: private VROSC.StateMachine _stateMachine
    ::VROSC::StateMachine*& dyn__stateMachine();
    // Get instance field reference: private VROSC.IState _startState
    ::VROSC::IState*& dyn__startState();
    // Get instance field reference: private VROSC.LoginWithEmailState _loginWithEmailState
    ::VROSC::LoginWithEmailState*& dyn__loginWithEmailState();
    // Get instance field reference: private System.Boolean <IsWaitingForCredentials>k__BackingField
    bool& dyn_$IsWaitingForCredentials$k__BackingField();
    // public System.Boolean get_IsWaitingForCredentials()
    // Offset: 0x1373128
    bool get_IsWaitingForCredentials();
    // public System.Void set_IsWaitingForCredentials(System.Boolean value)
    // Offset: 0x1373130
    void set_IsWaitingForCredentials(bool value);
    // private System.Void Awake()
    // Offset: 0x137313C
    void Awake();
    // public System.Void Setup()
    // Offset: 0x137360C
    void Setup();
    // private System.Void OnDestroy()
    // Offset: 0x13736F4
    void OnDestroy();
    // private System.Void Update()
    // Offset: 0x13737CC
    void Update();
    // public System.Void AuthenticateWithEmail(System.String email, System.String password, System.Boolean rememberMe)
    // Offset: 0x13737E8
    void AuthenticateWithEmail(::StringW email, ::StringW password, bool rememberMe);
    // public System.Void CreateUserWithEmail(System.String email, System.String password, System.Boolean rememberMe)
    // Offset: 0x137396C
    void CreateUserWithEmail(::StringW email, ::StringW password, bool rememberMe);
    // public System.Void UserLoginSuccess(System.String email, System.Boolean isVerified)
    // Offset: 0x1373AF4
    void UserLoginSuccess(::StringW email, bool isVerified);
    // public System.Void UserLoginFailure(VROSC.Error error)
    // Offset: 0x1373BA0
    void UserLoginFailure(::VROSC::Error error);
    // public System.Void LogoutUser()
    // Offset: 0x1373C1C
    void LogoutUser();
    // public System.Void ChangeUserEmail(System.String email)
    // Offset: 0x1373C74
    void ChangeUserEmail(::StringW email);
    // public System.Void ChangeUserPassword(System.String currentPassword, System.String newPassword)
    // Offset: 0x1373DA4
    void ChangeUserPassword(::StringW currentPassword, ::StringW newPassword);
    // public System.Void SendVerificationEmail()
    // Offset: 0x1373F18
    void SendVerificationEmail();
    // public System.Void UserHasVerified()
    // Offset: 0x1374024
    void UserHasVerified();
    // public System.Void ResetPassword(System.String email)
    // Offset: 0x1374084
    void ResetPassword(::StringW email);
    // private System.Void UserLoggedOut()
    // Offset: 0x13741A0
    void UserLoggedOut();
    // private System.Void UserEmailChangeSuccess(System.String email)
    // Offset: 0x13742FC
    void UserEmailChangeSuccess(::StringW email);
    // private System.Void UserEmailChangeFailure(VROSC.Error error)
    // Offset: 0x1374538
    void UserEmailChangeFailure(::VROSC::Error error);
    // private System.Void UserPasswordChangeSuccess(System.String password)
    // Offset: 0x13745B4
    void UserPasswordChangeSuccess(::StringW password);
    // private System.Void UserPasswordChangeFailure(VROSC.Error error)
    // Offset: 0x137466C
    void UserPasswordChangeFailure(::VROSC::Error error);
    // private System.Void ResetPasswordSuccess()
    // Offset: 0x13746E8
    void ResetPasswordSuccess();
    // private System.Void ResetPasswordFailure(VROSC.Error error)
    // Offset: 0x1374748
    void ResetPasswordFailure(::VROSC::Error error);
    // private System.Void SendVerificationEmailSuccess()
    // Offset: 0x13747C4
    void SendVerificationEmailSuccess();
    // private System.Void SendVerificationEmailFailure(VROSC.Error error)
    // Offset: 0x1374824
    void SendVerificationEmailFailure(::VROSC::Error error);
    // static System.Func`1<System.Boolean> <Awake>g__Continue|28_1()
    // Offset: 0x1373514
    static ::System::Func_1<bool>* $Awake$g__Continue_28_1();
    // public System.Void .ctor()
    // Offset: 0x13748A0
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static AuthenticationManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<AuthenticationManager*, creationType>()));
    }
  }; // VROSC.AuthenticationManager
  #pragma pack(pop)
  static check_size<sizeof(AuthenticationManager), 64 + sizeof(bool)> __VROSC_AuthenticationManagerSizeCheck;
  static_assert(sizeof(AuthenticationManager) == 0x41);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::AuthenticationManager::get_IsWaitingForCredentials
// Il2CppName: get_IsWaitingForCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::get_IsWaitingForCredentials)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "get_IsWaitingForCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::set_IsWaitingForCredentials
// Il2CppName: set_IsWaitingForCredentials
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(bool)>(&VROSC::AuthenticationManager::set_IsWaitingForCredentials)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "set_IsWaitingForCredentials", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::Setup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::Update)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::AuthenticateWithEmail
// Il2CppName: AuthenticateWithEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW, ::StringW, bool)>(&VROSC::AuthenticationManager::AuthenticateWithEmail)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* password = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* rememberMe = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "AuthenticateWithEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email, password, rememberMe});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::CreateUserWithEmail
// Il2CppName: CreateUserWithEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW, ::StringW, bool)>(&VROSC::AuthenticationManager::CreateUserWithEmail)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* password = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* rememberMe = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "CreateUserWithEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email, password, rememberMe});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserLoginSuccess
// Il2CppName: UserLoginSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW, bool)>(&VROSC::AuthenticationManager::UserLoginSuccess)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isVerified = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserLoginSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email, isVerified});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserLoginFailure
// Il2CppName: UserLoginFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::VROSC::Error)>(&VROSC::AuthenticationManager::UserLoginFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserLoginFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::LogoutUser
// Il2CppName: LogoutUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::LogoutUser)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "LogoutUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::ChangeUserEmail
// Il2CppName: ChangeUserEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW)>(&VROSC::AuthenticationManager::ChangeUserEmail)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "ChangeUserEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::ChangeUserPassword
// Il2CppName: ChangeUserPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW, ::StringW)>(&VROSC::AuthenticationManager::ChangeUserPassword)> {
  static const MethodInfo* get() {
    static auto* currentPassword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* newPassword = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "ChangeUserPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{currentPassword, newPassword});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::SendVerificationEmail
// Il2CppName: SendVerificationEmail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::SendVerificationEmail)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "SendVerificationEmail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserHasVerified
// Il2CppName: UserHasVerified
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::UserHasVerified)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserHasVerified", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::ResetPassword
// Il2CppName: ResetPassword
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW)>(&VROSC::AuthenticationManager::ResetPassword)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "ResetPassword", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserLoggedOut
// Il2CppName: UserLoggedOut
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::UserLoggedOut)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserLoggedOut", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserEmailChangeSuccess
// Il2CppName: UserEmailChangeSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW)>(&VROSC::AuthenticationManager::UserEmailChangeSuccess)> {
  static const MethodInfo* get() {
    static auto* email = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserEmailChangeSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{email});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserEmailChangeFailure
// Il2CppName: UserEmailChangeFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::VROSC::Error)>(&VROSC::AuthenticationManager::UserEmailChangeFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserEmailChangeFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserPasswordChangeSuccess
// Il2CppName: UserPasswordChangeSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::StringW)>(&VROSC::AuthenticationManager::UserPasswordChangeSuccess)> {
  static const MethodInfo* get() {
    static auto* password = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserPasswordChangeSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{password});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::UserPasswordChangeFailure
// Il2CppName: UserPasswordChangeFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::VROSC::Error)>(&VROSC::AuthenticationManager::UserPasswordChangeFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "UserPasswordChangeFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::ResetPasswordSuccess
// Il2CppName: ResetPasswordSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::ResetPasswordSuccess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "ResetPasswordSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::ResetPasswordFailure
// Il2CppName: ResetPasswordFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::VROSC::Error)>(&VROSC::AuthenticationManager::ResetPasswordFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "ResetPasswordFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::SendVerificationEmailSuccess
// Il2CppName: SendVerificationEmailSuccess
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)()>(&VROSC::AuthenticationManager::SendVerificationEmailSuccess)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "SendVerificationEmailSuccess", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::SendVerificationEmailFailure
// Il2CppName: SendVerificationEmailFailure
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::AuthenticationManager::*)(::VROSC::Error)>(&VROSC::AuthenticationManager::SendVerificationEmailFailure)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "SendVerificationEmailFailure", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::$Awake$g__Continue_28_1
// Il2CppName: <Awake>g__Continue|28_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Func_1<bool>* (*)()>(&VROSC::AuthenticationManager::$Awake$g__Continue_28_1)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::AuthenticationManager*), "<Awake>g__Continue|28_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::AuthenticationManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
