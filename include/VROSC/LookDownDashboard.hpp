// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.Dashboard
#include "VROSC/Dashboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: LookDownDashboard
  class LookDownDashboard;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::LookDownDashboard);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::LookDownDashboard*, "VROSC", "LookDownDashboard");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x30
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.LookDownDashboard
  // [TokenAttribute] Offset: FFFFFFFF
  class LookDownDashboard : public ::VROSC::Dashboard {
    public:
    // Writing base type padding for base size: 0x26 to desired offset: 0x28
    char ___base_padding[0x2] = {};
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Single _lookDownAngleThreshhold
    // Size: 0x4
    // Offset: 0x28
    float lookDownAngleThreshhold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // private System.Single _lookUpAngleThreshhold
    // Size: 0x4
    // Offset: 0x2C
    float lookUpAngleThreshhold;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    public:
    // Get instance field reference: private System.Single _lookDownAngleThreshhold
    float& dyn__lookDownAngleThreshhold();
    // Get instance field reference: private System.Single _lookUpAngleThreshhold
    float& dyn__lookUpAngleThreshhold();
    // public System.Void .ctor()
    // Offset: 0x1394734
    // Implemented from: VROSC.Dashboard
    // Base method: System.Void Dashboard::.ctor()
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static LookDownDashboard* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LookDownDashboard::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<LookDownDashboard*, creationType>()));
    }
    // protected override System.Boolean EvaluateActivationCondition()
    // Offset: 0x13945D8
    // Implemented from: VROSC.Dashboard
    // Base method: System.Boolean Dashboard::EvaluateActivationCondition()
    bool EvaluateActivationCondition();
    // protected override System.Boolean EvaluateDeactivationCondition()
    // Offset: 0x1394638
    // Implemented from: VROSC.Dashboard
    // Base method: System.Boolean Dashboard::EvaluateDeactivationCondition()
    bool EvaluateDeactivationCondition();
    // protected override System.Void PlaceDashboard()
    // Offset: 0x13946A4
    // Implemented from: VROSC.Dashboard
    // Base method: System.Void Dashboard::PlaceDashboard()
    void PlaceDashboard();
  }; // VROSC.LookDownDashboard
  #pragma pack(pop)
  static check_size<sizeof(LookDownDashboard), 44 + sizeof(float)> __VROSC_LookDownDashboardSizeCheck;
  static_assert(sizeof(LookDownDashboard) == 0x30);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::LookDownDashboard::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
// Writing MetadataGetter for method: VROSC::LookDownDashboard::EvaluateActivationCondition
// Il2CppName: EvaluateActivationCondition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LookDownDashboard::*)()>(&VROSC::LookDownDashboard::EvaluateActivationCondition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LookDownDashboard*), "EvaluateActivationCondition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LookDownDashboard::EvaluateDeactivationCondition
// Il2CppName: EvaluateDeactivationCondition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::LookDownDashboard::*)()>(&VROSC::LookDownDashboard::EvaluateDeactivationCondition)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LookDownDashboard*), "EvaluateDeactivationCondition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::LookDownDashboard::PlaceDashboard
// Il2CppName: PlaceDashboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::LookDownDashboard::*)()>(&VROSC::LookDownDashboard::PlaceDashboard)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::LookDownDashboard*), "PlaceDashboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
