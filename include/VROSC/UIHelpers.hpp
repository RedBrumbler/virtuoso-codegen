// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: UISliderHelper
  class UISliderHelper;
  // Forward declaring type: UISpinnerHelper
  class UISpinnerHelper;
  // Forward declaring type: UIColorPickerHelper
  class UIColorPickerHelper;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: UIHelpers
  class UIHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::UIHelpers);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::UIHelpers*, "VROSC", "UIHelpers");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x38
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.UIHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  class UIHelpers : public ::UnityEngine::MonoBehaviour {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Boolean _useHelpers
    // Size: 0x1
    // Offset: 0x18
    bool useHelpers;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    // Padding between fields: useHelpers and: sliderHelper
    char __padding0[0x7] = {};
    // private VROSC.UISliderHelper _sliderHelper
    // Size: 0x8
    // Offset: 0x20
    ::VROSC::UISliderHelper* sliderHelper;
    // Field size check
    static_assert(sizeof(::VROSC::UISliderHelper*) == 0x8);
    // private VROSC.UISpinnerHelper _spinnerHelper
    // Size: 0x8
    // Offset: 0x28
    ::VROSC::UISpinnerHelper* spinnerHelper;
    // Field size check
    static_assert(sizeof(::VROSC::UISpinnerHelper*) == 0x8);
    // private VROSC.UIColorPickerHelper _colorPickerHelper
    // Size: 0x8
    // Offset: 0x30
    ::VROSC::UIColorPickerHelper* colorPickerHelper;
    // Field size check
    static_assert(sizeof(::VROSC::UIColorPickerHelper*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean _useHelpers
    bool& dyn__useHelpers();
    // Get instance field reference: private VROSC.UISliderHelper _sliderHelper
    ::VROSC::UISliderHelper*& dyn__sliderHelper();
    // Get instance field reference: private VROSC.UISpinnerHelper _spinnerHelper
    ::VROSC::UISpinnerHelper*& dyn__spinnerHelper();
    // Get instance field reference: private VROSC.UIColorPickerHelper _colorPickerHelper
    ::VROSC::UIColorPickerHelper*& dyn__colorPickerHelper();
    // public System.Boolean get_UseHelpers()
    // Offset: 0x139C2DC
    bool get_UseHelpers();
    // public VROSC.UISliderHelper get_UISliderHelper()
    // Offset: 0x139C2E4
    ::VROSC::UISliderHelper* get_UISliderHelper();
    // public VROSC.UISpinnerHelper get_SpinnerHelper()
    // Offset: 0x139C2EC
    ::VROSC::UISpinnerHelper* get_SpinnerHelper();
    // public VROSC.UIColorPickerHelper get_ColorPickerHelper()
    // Offset: 0x139C2F4
    ::VROSC::UIColorPickerHelper* get_ColorPickerHelper();
    // public System.Void .ctor()
    // Offset: 0x139C2FC
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static UIHelpers* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::UIHelpers::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<UIHelpers*, creationType>()));
    }
  }; // VROSC.UIHelpers
  #pragma pack(pop)
  static check_size<sizeof(UIHelpers), 48 + sizeof(::VROSC::UIColorPickerHelper*)> __VROSC_UIHelpersSizeCheck;
  static_assert(sizeof(UIHelpers) == 0x38);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::UIHelpers::get_UseHelpers
// Il2CppName: get_UseHelpers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (VROSC::UIHelpers::*)()>(&VROSC::UIHelpers::get_UseHelpers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIHelpers*), "get_UseHelpers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIHelpers::get_UISliderHelper
// Il2CppName: get_UISliderHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UISliderHelper* (VROSC::UIHelpers::*)()>(&VROSC::UIHelpers::get_UISliderHelper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIHelpers*), "get_UISliderHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIHelpers::get_SpinnerHelper
// Il2CppName: get_SpinnerHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UISpinnerHelper* (VROSC::UIHelpers::*)()>(&VROSC::UIHelpers::get_SpinnerHelper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIHelpers*), "get_SpinnerHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIHelpers::get_ColorPickerHelper
// Il2CppName: get_ColorPickerHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::VROSC::UIColorPickerHelper* (VROSC::UIHelpers::*)()>(&VROSC::UIHelpers::get_ColorPickerHelper)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::UIHelpers*), "get_ColorPickerHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::UIHelpers::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
