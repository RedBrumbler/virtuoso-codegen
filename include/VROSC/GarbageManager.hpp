// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
  // Forward declaring type: Error
  struct Error;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: GarbageManager
  class GarbageManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::GarbageManager);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::GarbageManager*, "VROSC", "GarbageManager");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x19
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.GarbageManager
  // [TokenAttribute] Offset: FFFFFFFF
  class GarbageManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::GarbageManager::$DisableCollectionForSessionHandling$d__7
    struct $DisableCollectionForSessionHandling$d__7;
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private System.Boolean _automaticCollectionEnabled
    // Size: 0x1
    // Offset: 0x18
    bool automaticCollectionEnabled;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private System.Boolean _automaticCollectionEnabled
    bool& dyn__automaticCollectionEnabled();
    // protected System.Void Awake()
    // Offset: 0x88FABC
    void Awake();
    // protected System.Void OnDestroy()
    // Offset: 0x890008
    void OnDestroy();
    // protected System.Void Start()
    // Offset: 0x890554
    void Start();
    // private System.Void EnableAutomaticCollection(System.Boolean enable)
    // Offset: 0x890620
    void EnableAutomaticCollection(bool enable);
    // public System.Void Collect()
    // Offset: 0x890584
    void Collect();
    // private System.Void EnableCollectionForSessionHandling()
    // Offset: 0x890668
    void EnableCollectionForSessionHandling();
    // private System.Void DisableCollectionForSessionHandling()
    // Offset: 0x89069C
    void DisableCollectionForSessionHandling();
    // private System.Void RecorderSaveSucceeded()
    // Offset: 0x890760
    void RecorderSaveSucceeded();
    // private System.Void RecorderSaveFailed(VROSC.Error error)
    // Offset: 0x890764
    void RecorderSaveFailed(::VROSC::Error error);
    // private System.Void SaveSucceeded(System.String sessionId)
    // Offset: 0x890768
    void SaveSucceeded(::StringW sessionId);
    // private System.Void SaveFailed(System.String sessionId, VROSC.Error error)
    // Offset: 0x89076C
    void SaveFailed(::StringW sessionId, ::VROSC::Error error);
    // private System.Void LoadSucceeded(System.String sessionId, System.Boolean isDefaultSession)
    // Offset: 0x890770
    void LoadSucceeded(::StringW sessionId, bool isDefaultSession);
    // private System.Void LoadFailed(System.String sessionId, System.Boolean isDefaultSession, VROSC.Error error)
    // Offset: 0x890774
    void LoadFailed(::StringW sessionId, bool isDefaultSession, ::VROSC::Error error);
    // public System.Void .ctor()
    // Offset: 0x890778
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static GarbageManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::GarbageManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<GarbageManager*, creationType>()));
    }
  }; // VROSC.GarbageManager
  #pragma pack(pop)
  static check_size<sizeof(GarbageManager), 24 + sizeof(bool)> __VROSC_GarbageManagerSizeCheck;
  static_assert(sizeof(GarbageManager) == 0x19);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::GarbageManager::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::OnDestroy)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::Start)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::EnableAutomaticCollection
// Il2CppName: EnableAutomaticCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(bool)>(&VROSC::GarbageManager::EnableAutomaticCollection)> {
  static const MethodInfo* get() {
    static auto* enable = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "EnableAutomaticCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{enable});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::Collect
// Il2CppName: Collect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::Collect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "Collect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::EnableCollectionForSessionHandling
// Il2CppName: EnableCollectionForSessionHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::EnableCollectionForSessionHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "EnableCollectionForSessionHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::DisableCollectionForSessionHandling
// Il2CppName: DisableCollectionForSessionHandling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::DisableCollectionForSessionHandling)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "DisableCollectionForSessionHandling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::RecorderSaveSucceeded
// Il2CppName: RecorderSaveSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)()>(&VROSC::GarbageManager::RecorderSaveSucceeded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "RecorderSaveSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::RecorderSaveFailed
// Il2CppName: RecorderSaveFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(::VROSC::Error)>(&VROSC::GarbageManager::RecorderSaveFailed)> {
  static const MethodInfo* get() {
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "RecorderSaveFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{error});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::SaveSucceeded
// Il2CppName: SaveSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(::StringW)>(&VROSC::GarbageManager::SaveSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "SaveSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::SaveFailed
// Il2CppName: SaveFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(::StringW, ::VROSC::Error)>(&VROSC::GarbageManager::SaveFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "SaveFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, error});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::LoadSucceeded
// Il2CppName: LoadSucceeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(::StringW, bool)>(&VROSC::GarbageManager::LoadSucceeded)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "LoadSucceeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::LoadFailed
// Il2CppName: LoadFailed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::GarbageManager::*)(::StringW, bool, ::VROSC::Error)>(&VROSC::GarbageManager::LoadFailed)> {
  static const MethodInfo* get() {
    static auto* sessionId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isDefaultSession = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* error = &::il2cpp_utils::GetClassFromName("VROSC", "Error")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::GarbageManager*), "LoadFailed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionId, isDefaultSession, error});
  }
};
// Writing MetadataGetter for method: VROSC::GarbageManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
