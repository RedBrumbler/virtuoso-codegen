// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Int64
#include "System/Int64.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: VROSC
namespace VROSC {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`1<T>
  template<typename T>
  class Action_1;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
}
// Completed forward declares
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: CloudDataManager
  class CloudDataManager;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::CloudDataManager);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::CloudDataManager*, "VROSC", "CloudDataManager");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x18
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.CloudDataManager
  // [TokenAttribute] Offset: FFFFFFFF
  class CloudDataManager : public ::UnityEngine::MonoBehaviour {
    public:
    // Nested type: ::VROSC::CloudDataManager::$$c__DisplayClass2_0
    class $$c__DisplayClass2_0;
    // Nested type: ::VROSC::CloudDataManager::$$c__DisplayClass3_0
    class $$c__DisplayClass3_0;
    // Nested type: ::VROSC::CloudDataManager::$$c__DisplayClass4_0
    class $$c__DisplayClass4_0;
    // Nested type: ::VROSC::CloudDataManager::$$c__DisplayClass5_0
    class $$c__DisplayClass5_0;
    // Nested type: ::VROSC::CloudDataManager::$$c__DisplayClass6_0
    class $$c__DisplayClass6_0;
    // static field const value: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static constexpr const char* KEY_FIREBASE_REFRESH_TOKEN = "FirebaseRefreshToken";
    // Get static field: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static ::StringW _get_KEY_FIREBASE_REFRESH_TOKEN();
    // Set static field: static public System.String KEY_FIREBASE_REFRESH_TOKEN
    static void _set_KEY_FIREBASE_REFRESH_TOKEN(::StringW value);
    // static field const value: static public System.Int64 FIREBASE_ACCESS_TOKEN_TIMEOUT
    static constexpr const int64_t FIREBASE_ACCESS_TOKEN_TIMEOUT = 3600;
    // Get static field: static public System.Int64 FIREBASE_ACCESS_TOKEN_TIMEOUT
    static int64_t _get_FIREBASE_ACCESS_TOKEN_TIMEOUT();
    // Set static field: static public System.Int64 FIREBASE_ACCESS_TOKEN_TIMEOUT
    static void _set_FIREBASE_ACCESS_TOKEN_TIMEOUT(int64_t value);
    // public System.Void SaveSession(System.String sessionName, System.Boolean isCommunity, System.Action`1<System.String> onSuccess, System.Action`2<System.String,VROSC.Error> onFailure, System.Action`2<System.String,System.Single> onProgress)
    // Offset: 0x1331400
    void SaveSession(::StringW sessionName, bool isCommunity, ::System::Action_1<::StringW>* onSuccess, ::System::Action_2<::StringW, ::VROSC::Error>* onFailure, ::System::Action_2<::StringW, float>* onProgress);
    // public System.Void LoadSession(System.String sessionName, System.String userId, System.Boolean isCommunity, System.Action`1<System.String> onSuccess, System.Action`2<System.String,VROSC.Error> onFailure, System.Action`2<System.String,System.Single> onProgress)
    // Offset: 0x13316B8
    void LoadSession(::StringW sessionName, ::StringW userId, bool isCommunity, ::System::Action_1<::StringW>* onSuccess, ::System::Action_2<::StringW, ::VROSC::Error>* onFailure, ::System::Action_2<::StringW, float>* onProgress);
    // public System.Void DeleteSession(System.String sessionName, System.Boolean isCommunity, System.Boolean isOgg, System.Action`1<System.String> onSuccess, System.Action`2<System.String,VROSC.Error> onFailure)
    // Offset: 0x13318F0
    void DeleteSession(::StringW sessionName, bool isCommunity, bool isOgg, ::System::Action_1<::StringW>* onSuccess, ::System::Action_2<::StringW, ::VROSC::Error>* onFailure);
    // public System.Void SaveSessionPreview(System.String sessionName, System.Boolean isCommunity, System.Action`1<System.String> onSuccess, System.Action`2<System.String,VROSC.Error> onFailure, System.Action`2<System.String,System.Single> onProgress)
    // Offset: 0x1331AA0
    void SaveSessionPreview(::StringW sessionName, bool isCommunity, ::System::Action_1<::StringW>* onSuccess, ::System::Action_2<::StringW, ::VROSC::Error>* onFailure, ::System::Action_2<::StringW, float>* onProgress);
    // public System.Void LoadSessionPreview(System.String sessionName, System.String userId, System.Boolean isCommunity, System.Boolean isOgg, System.Action`1<System.String> onSuccess, System.Action`2<System.String,VROSC.Error> onFailure, System.Action`2<System.String,System.Single> onProgress)
    // Offset: 0x1331DE8
    void LoadSessionPreview(::StringW sessionName, ::StringW userId, bool isCommunity, bool isOgg, ::System::Action_1<::StringW>* onSuccess, ::System::Action_2<::StringW, ::VROSC::Error>* onFailure, ::System::Action_2<::StringW, float>* onProgress);
    // private System.String GetZipFilePath(System.String sessionName)
    // Offset: 0x1331620
    ::StringW GetZipFilePath(::StringW sessionName);
    // private System.String GetPreviewFilePath(System.String sessionName, System.Boolean useOgg)
    // Offset: 0x1331CC4
    ::StringW GetPreviewFilePath(::StringW sessionName, bool useOgg);
    // public System.Void .ctor()
    // Offset: 0x1332030
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static CloudDataManager* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudDataManager::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<CloudDataManager*, creationType>()));
    }
  }; // VROSC.CloudDataManager
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::CloudDataManager::SaveSession
// Il2CppName: SaveSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudDataManager::*)(::StringW, bool, ::System::Action_1<::StringW>*, ::System::Action_2<::StringW, ::VROSC::Error>*, ::System::Action_2<::StringW, float>*)>(&VROSC::CloudDataManager::SaveSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    static auto* onProgress = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "SaveSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, onSuccess, onFailure, onProgress});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::LoadSession
// Il2CppName: LoadSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudDataManager::*)(::StringW, ::StringW, bool, ::System::Action_1<::StringW>*, ::System::Action_2<::StringW, ::VROSC::Error>*, ::System::Action_2<::StringW, float>*)>(&VROSC::CloudDataManager::LoadSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    static auto* onProgress = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "LoadSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, userId, isCommunity, onSuccess, onFailure, onProgress});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::DeleteSession
// Il2CppName: DeleteSession
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudDataManager::*)(::StringW, bool, bool, ::System::Action_1<::StringW>*, ::System::Action_2<::StringW, ::VROSC::Error>*)>(&VROSC::CloudDataManager::DeleteSession)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "DeleteSession", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, isOgg, onSuccess, onFailure});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::SaveSessionPreview
// Il2CppName: SaveSessionPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudDataManager::*)(::StringW, bool, ::System::Action_1<::StringW>*, ::System::Action_2<::StringW, ::VROSC::Error>*, ::System::Action_2<::StringW, float>*)>(&VROSC::CloudDataManager::SaveSessionPreview)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    static auto* onProgress = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "SaveSessionPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, isCommunity, onSuccess, onFailure, onProgress});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::LoadSessionPreview
// Il2CppName: LoadSessionPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VROSC::CloudDataManager::*)(::StringW, ::StringW, bool, bool, ::System::Action_1<::StringW>*, ::System::Action_2<::StringW, ::VROSC::Error>*, ::System::Action_2<::StringW, float>*)>(&VROSC::CloudDataManager::LoadSessionPreview)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* userId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* isCommunity = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* isOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* onSuccess = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String")})->byval_arg;
    static auto* onFailure = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("VROSC", "Error")})->byval_arg;
    static auto* onProgress = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "String"), ::il2cpp_utils::GetClassFromName("System", "Single")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "LoadSessionPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, userId, isCommunity, isOgg, onSuccess, onFailure, onProgress});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::GetZipFilePath
// Il2CppName: GetZipFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::CloudDataManager::*)(::StringW)>(&VROSC::CloudDataManager::GetZipFilePath)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "GetZipFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::GetPreviewFilePath
// Il2CppName: GetPreviewFilePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::CloudDataManager::*)(::StringW, bool)>(&VROSC::CloudDataManager::GetPreviewFilePath)> {
  static const MethodInfo* get() {
    static auto* sessionName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* useOgg = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(VROSC::CloudDataManager*), "GetPreviewFilePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{sessionName, useOgg});
  }
};
// Writing MetadataGetter for method: VROSC::CloudDataManager::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
