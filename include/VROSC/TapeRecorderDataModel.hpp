// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: VROSC.ToolDataModel
#include "VROSC/ToolDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: VROSC
namespace VROSC {
  // Forward declaring type: TapeRecorderDataModel
  class TapeRecorderDataModel;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::VROSC::TapeRecorderDataModel);
DEFINE_IL2CPP_ARG_TYPE(::VROSC::TapeRecorderDataModel*, "VROSC", "TapeRecorderDataModel");
// Type namespace: VROSC
namespace VROSC {
  // Size: 0x25
  #pragma pack(push, 1)
  // Autogenerated type: VROSC.TapeRecorderDataModel
  // [TokenAttribute] Offset: FFFFFFFF
  class TapeRecorderDataModel : public ::VROSC::ToolDataModel {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // public System.Single NormalizeMultiplier
    // Size: 0x4
    // Offset: 0x20
    float NormalizeMultiplier;
    // Field size check
    static_assert(sizeof(float) == 0x4);
    // public System.Boolean UseAsPreview
    // Size: 0x1
    // Offset: 0x24
    bool UseAsPreview;
    // Field size check
    static_assert(sizeof(bool) == 0x1);
    public:
    // Deleting conversion operator: operator ::VROSC::TransformData*
    constexpr operator ::VROSC::TransformData*() const noexcept = delete;
    // Get instance field reference: public System.Single NormalizeMultiplier
    float& dyn_NormalizeMultiplier();
    // Get instance field reference: public System.Boolean UseAsPreview
    bool& dyn_UseAsPreview();
    // public override System.String get_Key()
    // Offset: 0x13FB998
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.String BaseDataModel::get_Key()
    ::StringW get_Key();
    // public override System.Int32 get_Version()
    // Offset: 0x13FB9DC
    // Implemented from: VROSC.BaseDataModel
    // Base method: System.Int32 BaseDataModel::get_Version()
    int get_Version();
    // public System.Void .ctor()
    // Offset: 0x13FADD0
    // Implemented from: VROSC.ToolDataModel
    // Base method: System.Void ToolDataModel::.ctor()
    // Base method: System.Void BaseDataModel::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static TapeRecorderDataModel* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::TapeRecorderDataModel::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<TapeRecorderDataModel*, creationType>()));
    }
  }; // VROSC.TapeRecorderDataModel
  #pragma pack(pop)
  static check_size<sizeof(TapeRecorderDataModel), 36 + sizeof(bool)> __VROSC_TapeRecorderDataModelSizeCheck;
  static_assert(sizeof(TapeRecorderDataModel) == 0x25);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: VROSC::TapeRecorderDataModel::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (VROSC::TapeRecorderDataModel::*)()>(&VROSC::TapeRecorderDataModel::get_Key)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TapeRecorderDataModel*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TapeRecorderDataModel::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VROSC::TapeRecorderDataModel::*)()>(&VROSC::TapeRecorderDataModel::get_Version)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VROSC::TapeRecorderDataModel*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VROSC::TapeRecorderDataModel::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
