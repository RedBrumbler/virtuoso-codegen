// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Completed includes
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Forward declaring type: IDOTweenInit
  class IDOTweenInit;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::DG::Tweening::IDOTweenInit);
DEFINE_IL2CPP_ARG_TYPE(::DG::Tweening::IDOTweenInit*, "DG.Tweening", "IDOTweenInit");
// Type namespace: DG.Tweening
namespace DG::Tweening {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: DG.Tweening.IDOTweenInit
  // [TokenAttribute] Offset: FFFFFFFF
  class IDOTweenInit {
    public:
    // public DG.Tweening.IDOTweenInit SetCapacity(System.Int32 tweenersCapacity, System.Int32 sequencesCapacity)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::DG::Tweening::IDOTweenInit* SetCapacity(int tweenersCapacity, int sequencesCapacity);
  }; // DG.Tweening.IDOTweenInit
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: DG::Tweening::IDOTweenInit::SetCapacity
// Il2CppName: SetCapacity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::DG::Tweening::IDOTweenInit* (DG::Tweening::IDOTweenInit::*)(int, int)>(&DG::Tweening::IDOTweenInit::SetCapacity)> {
  static const MethodInfo* get() {
    static auto* tweenersCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* sequencesCapacity = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(DG::Tweening::IDOTweenInit*), "SetCapacity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{tweenersCapacity, sequencesCapacity});
  }
};
