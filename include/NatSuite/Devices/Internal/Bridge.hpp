// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: NatSuite::Devices::Internal
namespace NatSuite::Devices::Internal {
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: IntPtr
  struct IntPtr;
}
// Forward declaring namespace: System::Text
namespace System::Text {
  // Forward declaring type: StringBuilder
  class StringBuilder;
}
// Forward declaring namespace: NatSuite::Devices
namespace NatSuite::Devices {
  // Forward declaring type: FlashMode
  struct FlashMode;
  // Forward declaring type: FrameOrientation
  struct FrameOrientation;
}
// Completed forward declares
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Forward declaring type: Bridge
  class Bridge;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::Internal::Bridge);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::Internal::Bridge*, "NatSuite.Devices.Internal", "Bridge");
// Type namespace: NatSuite.Devices.Internal
namespace NatSuite::Devices::Internal {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.Internal.Bridge
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class Bridge : public ::Il2CppObject {
    public:
    // Nested type: ::NatSuite::Devices::Internal::Bridge::FrameDelegate
    class FrameDelegate;
    // Nested type: ::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate
    class SampleBufferDelegate;
    // static field const value: static private System.String Assembly
    static constexpr const char* Assembly = "NatDevice";
    // Get static field: static private System.String Assembly
    static ::StringW _get_Assembly();
    // Set static field: static private System.String Assembly
    static void _set_Assembly(::StringW value);
    // static public System.Void Dispose(System.IntPtr device)
    // Offset: 0x13251A4
    static void Dispose(::System::IntPtr device);
    // static public System.Void UniqueID(System.IntPtr device, System.Text.StringBuilder dest)
    // Offset: 0x1325220
    static void UniqueID(::System::IntPtr device, ::System::Text::StringBuilder* dest);
    // static public System.Boolean Running(System.IntPtr camera)
    // Offset: 0x13252D0
    static bool Running(::System::IntPtr camera);
    // static public System.Boolean StartRunning(System.IntPtr device, NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate callback, System.IntPtr context)
    // Offset: 0x1325354
    static bool StartRunning(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate* callback, ::System::IntPtr context);
    // static public System.Void StopRunning(System.IntPtr device)
    // Offset: 0x13253FC
    static void StopRunning(::System::IntPtr device);
    // static public System.Void AudioDevices(out System.IntPtr outDevicesArray, out System.Int32 outDevicesArrayCount)
    // Offset: 0x132547C
    static void AudioDevices(ByRef<::System::IntPtr> outDevicesArray, ByRef<int> outDevicesArrayCount);
    // static public System.Void Name(System.IntPtr device, System.Text.StringBuilder dest)
    // Offset: 0x132550C
    static void Name(::System::IntPtr device, ::System::Text::StringBuilder* dest);
    // static public System.Boolean EchoCancellation(System.IntPtr device)
    // Offset: 0x13255BC
    static bool EchoCancellation(::System::IntPtr device);
    // static public System.Int32 SampleRate(System.IntPtr device)
    // Offset: 0x1325644
    static int SampleRate(::System::IntPtr device);
    // static public System.Void SampleRate(System.IntPtr device, System.Int32 sampleRate)
    // Offset: 0x13256C4
    static void SampleRate(::System::IntPtr device, int sampleRate);
    // static public System.Int32 ChannelCount(System.IntPtr device)
    // Offset: 0x1325754
    static int ChannelCount(::System::IntPtr device);
    // static public System.Void ChannelCount(System.IntPtr device, System.Int32 sampleRate)
    // Offset: 0x13257D4
    static void ChannelCount(::System::IntPtr device, int sampleRate);
    // static public System.Void CameraDevices(out System.IntPtr outDevicesArray, out System.Int32 outDevicesArrayCount)
    // Offset: 0x1325864
    static void CameraDevices(ByRef<::System::IntPtr> outDevicesArray, ByRef<int> outDevicesArrayCount);
    // static public System.Boolean FrontFacing(System.IntPtr device)
    // Offset: 0x13258F4
    static bool FrontFacing(::System::IntPtr device);
    // static public System.Boolean FlashSupported(System.IntPtr device)
    // Offset: 0x132597C
    static bool FlashSupported(::System::IntPtr device);
    // static public System.Boolean TorchSupported(System.IntPtr device)
    // Offset: 0x1325A04
    static bool TorchSupported(::System::IntPtr device);
    // static public System.Boolean ExposureLockSupported(System.IntPtr device)
    // Offset: 0x1325A8C
    static bool ExposureLockSupported(::System::IntPtr device);
    // static public System.Boolean FocusLockSupported(System.IntPtr device)
    // Offset: 0x1325B14
    static bool FocusLockSupported(::System::IntPtr device);
    // static public System.Boolean WhiteBalanceLockSupported(System.IntPtr device)
    // Offset: 0x1325B9C
    static bool WhiteBalanceLockSupported(::System::IntPtr device);
    // static public System.Void FieldOfView(System.IntPtr device, out System.Single x, out System.Single y)
    // Offset: 0x1325C24
    static void FieldOfView(::System::IntPtr device, ByRef<float> x, ByRef<float> y);
    // static public System.Void ExposureRange(System.IntPtr device, out System.Single min, out System.Single max)
    // Offset: 0x1325CBC
    static void ExposureRange(::System::IntPtr device, ByRef<float> min, ByRef<float> max);
    // static public System.Void ZoomRange(System.IntPtr device, out System.Single min, out System.Single max)
    // Offset: 0x1325D54
    static void ZoomRange(::System::IntPtr device, ByRef<float> min, ByRef<float> max);
    // static public System.Void PreviewResolution(System.IntPtr device, out System.Int32 width, out System.Int32 height)
    // Offset: 0x1325DEC
    static void PreviewResolution(::System::IntPtr device, ByRef<int> width, ByRef<int> height);
    // static public System.Void PreviewResolution(System.IntPtr device, System.Int32 width, System.Int32 height)
    // Offset: 0x1325E84
    static void PreviewResolution_(::System::IntPtr device, int width, int height);
    // static public System.Void PhotoResolution(System.IntPtr device, out System.Int32 width, out System.Int32 height)
    // Offset: 0x1325F1C
    static void PhotoResolution(::System::IntPtr device, ByRef<int> width, ByRef<int> height);
    // static public System.Void PhotoResolution(System.IntPtr device, System.Int32 width, System.Int32 height)
    // Offset: 0x1325FB4
    static void PhotoResolution_(::System::IntPtr device, int width, int height);
    // static public System.Int32 Framerate(System.IntPtr device)
    // Offset: 0x132604C
    static int Framerate(::System::IntPtr device);
    // static public System.Void Framerate(System.IntPtr device, System.Int32 framerate)
    // Offset: 0x13260CC
    static void Framerate(::System::IntPtr device, int framerate);
    // static public System.Single ExposureBias(System.IntPtr device)
    // Offset: 0x132615C
    static float ExposureBias(::System::IntPtr device);
    // static public System.Void ExposureBias(System.IntPtr device, System.Single bias)
    // Offset: 0x13261DC
    static void ExposureBias(::System::IntPtr device, float bias);
    // static public System.Void ExposurePoint(System.IntPtr device, System.Single x, System.Single y)
    // Offset: 0x132626C
    static void ExposurePoint(::System::IntPtr device, float x, float y);
    // static public System.Boolean ExposureLock(System.IntPtr device)
    // Offset: 0x1326304
    static bool ExposureLock(::System::IntPtr device);
    // static public System.Void ExposureLock(System.IntPtr device, System.Boolean locked)
    // Offset: 0x132638C
    static void ExposureLock(::System::IntPtr device, bool locked);
    // static public NatSuite.Devices.FlashMode FlashMode(System.IntPtr device)
    // Offset: 0x132641C
    static ::NatSuite::Devices::FlashMode FlashMode(::System::IntPtr device);
    // static public System.Void FlashMode(System.IntPtr device, NatSuite.Devices.FlashMode state)
    // Offset: 0x132649C
    static void FlashMode(::System::IntPtr device, ::NatSuite::Devices::FlashMode state);
    // static public System.Boolean FocusLock(System.IntPtr device)
    // Offset: 0x132652C
    static bool FocusLock(::System::IntPtr device);
    // static public System.Void FocusLock(System.IntPtr device, System.Boolean locked)
    // Offset: 0x13265B4
    static void FocusLock(::System::IntPtr device, bool locked);
    // static public System.Void FocusPoint(System.IntPtr device, System.Single x, System.Single y)
    // Offset: 0x1326644
    static void FocusPoint(::System::IntPtr device, float x, float y);
    // static public System.Boolean TorchEnabled(System.IntPtr device)
    // Offset: 0x13266DC
    static bool TorchEnabled(::System::IntPtr device);
    // static public System.Void TorchEnabled(System.IntPtr device, System.Boolean enabled)
    // Offset: 0x1326764
    static void TorchEnabled(::System::IntPtr device, bool enabled);
    // static public System.Boolean WhiteBalanceLock(System.IntPtr device)
    // Offset: 0x13267F4
    static bool WhiteBalanceLock(::System::IntPtr device);
    // static public System.Void WhiteBalanceLock(System.IntPtr device, System.Boolean locked)
    // Offset: 0x132687C
    static void WhiteBalanceLock(::System::IntPtr device, bool locked);
    // static public System.Single ZoomRatio(System.IntPtr device)
    // Offset: 0x132690C
    static float ZoomRatio(::System::IntPtr device);
    // static public System.Void ZoomRatio(System.IntPtr device, System.Single ratio)
    // Offset: 0x132698C
    static void ZoomRatio(::System::IntPtr device, float ratio);
    // static public System.Void Orientation(System.IntPtr device, NatSuite.Devices.FrameOrientation orentation)
    // Offset: 0x1326A1C
    static void Orientation(::System::IntPtr device, ::NatSuite::Devices::FrameOrientation orentation);
    // static public System.Void StartRunning(System.IntPtr device, NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate handler, System.IntPtr context)
    // Offset: 0x1326AAC
    static void StartRunning(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::FrameDelegate* handler, ::System::IntPtr context);
    // static public System.Void CapturePhoto(System.IntPtr device, NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate handler, System.IntPtr context)
    // Offset: 0x1326B4C
    static void CapturePhoto(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::FrameDelegate* handler, ::System::IntPtr context);
  }; // NatSuite.Devices.Internal.Bridge
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::Dispose)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::UniqueID
// Il2CppName: UniqueID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::Text::StringBuilder*)>(&NatSuite::Devices::Internal::Bridge::UniqueID)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "UniqueID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, dest});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Running
// Il2CppName: Running
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::Running)> {
  static const MethodInfo* get() {
    static auto* camera = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Running", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{camera});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::StartRunning
// Il2CppName: StartRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr, ::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate*, ::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::StartRunning)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* callback = &::il2cpp_utils::GetClassFromName("NatSuite.Devices.Internal", "Bridge/SampleBufferDelegate")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "StartRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, callback, context});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::StopRunning
// Il2CppName: StopRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::StopRunning)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "StopRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::AudioDevices
// Il2CppName: AudioDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::IntPtr>, ByRef<int>)>(&NatSuite::Devices::Internal::Bridge::AudioDevices)> {
  static const MethodInfo* get() {
    static auto* outDevicesArray = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* outDevicesArrayCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "AudioDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outDevicesArray, outDevicesArrayCount});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Name
// Il2CppName: Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::System::Text::StringBuilder*)>(&NatSuite::Devices::Internal::Bridge::Name)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* dest = &::il2cpp_utils::GetClassFromName("System.Text", "StringBuilder")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, dest});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::EchoCancellation
// Il2CppName: EchoCancellation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::EchoCancellation)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "EchoCancellation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::SampleRate
// Il2CppName: SampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::SampleRate)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "SampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::SampleRate
// Il2CppName: SampleRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int)>(&NatSuite::Devices::Internal::Bridge::SampleRate)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* sampleRate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "SampleRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, sampleRate});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ChannelCount
// Il2CppName: ChannelCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::ChannelCount)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ChannelCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ChannelCount
// Il2CppName: ChannelCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int)>(&NatSuite::Devices::Internal::Bridge::ChannelCount)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* sampleRate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ChannelCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, sampleRate});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::CameraDevices
// Il2CppName: CameraDevices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(ByRef<::System::IntPtr>, ByRef<int>)>(&NatSuite::Devices::Internal::Bridge::CameraDevices)> {
  static const MethodInfo* get() {
    static auto* outDevicesArray = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->this_arg;
    static auto* outDevicesArrayCount = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "CameraDevices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{outDevicesArray, outDevicesArrayCount});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FrontFacing
// Il2CppName: FrontFacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::FrontFacing)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FrontFacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FlashSupported
// Il2CppName: FlashSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::FlashSupported)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FlashSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::TorchSupported
// Il2CppName: TorchSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::TorchSupported)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "TorchSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureLockSupported
// Il2CppName: ExposureLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::ExposureLockSupported)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FocusLockSupported
// Il2CppName: FocusLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::FocusLockSupported)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FocusLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::WhiteBalanceLockSupported
// Il2CppName: WhiteBalanceLockSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::WhiteBalanceLockSupported)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "WhiteBalanceLockSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FieldOfView
// Il2CppName: FieldOfView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<float>, ByRef<float>)>(&NatSuite::Devices::Internal::Bridge::FieldOfView)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FieldOfView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, x, y});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureRange
// Il2CppName: ExposureRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<float>, ByRef<float>)>(&NatSuite::Devices::Internal::Bridge::ExposureRange)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* min = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, min, max});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ZoomRange
// Il2CppName: ZoomRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<float>, ByRef<float>)>(&NatSuite::Devices::Internal::Bridge::ZoomRange)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* min = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    static auto* max = &::il2cpp_utils::GetClassFromName("System", "Single")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ZoomRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, min, max});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::PreviewResolution
// Il2CppName: PreviewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<int>, ByRef<int>)>(&NatSuite::Devices::Internal::Bridge::PreviewResolution)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "PreviewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, width, height});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::PreviewResolution_
// Il2CppName: PreviewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int, int)>(&NatSuite::Devices::Internal::Bridge::PreviewResolution_)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "PreviewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, width, height});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::PhotoResolution
// Il2CppName: PhotoResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ByRef<int>, ByRef<int>)>(&NatSuite::Devices::Internal::Bridge::PhotoResolution)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "PhotoResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, width, height});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::PhotoResolution_
// Il2CppName: PhotoResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int, int)>(&NatSuite::Devices::Internal::Bridge::PhotoResolution_)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* width = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* height = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "PhotoResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, width, height});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Framerate
// Il2CppName: Framerate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::Framerate)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Framerate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Framerate
// Il2CppName: Framerate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, int)>(&NatSuite::Devices::Internal::Bridge::Framerate)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* framerate = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Framerate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, framerate});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureBias
// Il2CppName: ExposureBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::ExposureBias)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureBias
// Il2CppName: ExposureBias
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&NatSuite::Devices::Internal::Bridge::ExposureBias)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* bias = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureBias", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, bias});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposurePoint
// Il2CppName: ExposurePoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float, float)>(&NatSuite::Devices::Internal::Bridge::ExposurePoint)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposurePoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, x, y});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureLock
// Il2CppName: ExposureLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::ExposureLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ExposureLock
// Il2CppName: ExposureLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&NatSuite::Devices::Internal::Bridge::ExposureLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* locked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ExposureLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, locked});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FlashMode
// Il2CppName: FlashMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::NatSuite::Devices::FlashMode (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::FlashMode)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FlashMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FlashMode
// Il2CppName: FlashMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::NatSuite::Devices::FlashMode)>(&NatSuite::Devices::Internal::Bridge::FlashMode)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "FlashMode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FlashMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, state});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FocusLock
// Il2CppName: FocusLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::FocusLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FocusLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FocusLock
// Il2CppName: FocusLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&NatSuite::Devices::Internal::Bridge::FocusLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* locked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FocusLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, locked});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::FocusPoint
// Il2CppName: FocusPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float, float)>(&NatSuite::Devices::Internal::Bridge::FocusPoint)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* x = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    static auto* y = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "FocusPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, x, y});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::TorchEnabled
// Il2CppName: TorchEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::TorchEnabled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "TorchEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::TorchEnabled
// Il2CppName: TorchEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&NatSuite::Devices::Internal::Bridge::TorchEnabled)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "TorchEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, enabled});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::WhiteBalanceLock
// Il2CppName: WhiteBalanceLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::WhiteBalanceLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "WhiteBalanceLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::WhiteBalanceLock
// Il2CppName: WhiteBalanceLock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, bool)>(&NatSuite::Devices::Internal::Bridge::WhiteBalanceLock)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* locked = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "WhiteBalanceLock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, locked});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ZoomRatio
// Il2CppName: ZoomRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::ZoomRatio)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ZoomRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::ZoomRatio
// Il2CppName: ZoomRatio
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, float)>(&NatSuite::Devices::Internal::Bridge::ZoomRatio)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* ratio = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "ZoomRatio", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, ratio});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::Orientation
// Il2CppName: Orientation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::NatSuite::Devices::FrameOrientation)>(&NatSuite::Devices::Internal::Bridge::Orientation)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* orentation = &::il2cpp_utils::GetClassFromName("NatSuite.Devices", "FrameOrientation")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "Orientation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, orentation});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::StartRunning
// Il2CppName: StartRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::NatSuite::Devices::Internal::Bridge::FrameDelegate*, ::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::StartRunning)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* handler = &::il2cpp_utils::GetClassFromName("NatSuite.Devices.Internal", "Bridge/FrameDelegate")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "StartRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, handler, context});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::Internal::Bridge::CapturePhoto
// Il2CppName: CapturePhoto
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::IntPtr, ::NatSuite::Devices::Internal::Bridge::FrameDelegate*, ::System::IntPtr)>(&NatSuite::Devices::Internal::Bridge::CapturePhoto)> {
  static const MethodInfo* get() {
    static auto* device = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    static auto* handler = &::il2cpp_utils::GetClassFromName("NatSuite.Devices.Internal", "Bridge/FrameDelegate")->byval_arg;
    static auto* context = &::il2cpp_utils::GetClassFromName("System", "IntPtr")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::Internal::Bridge*), "CapturePhoto", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{device, handler, context});
  }
};
