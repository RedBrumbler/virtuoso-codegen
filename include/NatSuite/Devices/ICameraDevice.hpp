// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: ValueTuple`2<T1, T2>
  template<typename T1, typename T2>
  struct ValueTuple_2;
}
// Forward declaring namespace: System::Threading::Tasks
namespace System::Threading::Tasks {
  // Forward declaring type: Task`1<TResult>
  template<typename TResult>
  class Task_1;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: Texture2D
  class Texture2D;
}
// Completed forward declares
// Type namespace: NatSuite.Devices
namespace NatSuite::Devices {
  // Forward declaring type: ICameraDevice
  class ICameraDevice;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::NatSuite::Devices::ICameraDevice);
DEFINE_IL2CPP_ARG_TYPE(::NatSuite::Devices::ICameraDevice*, "NatSuite.Devices", "ICameraDevice");
// Type namespace: NatSuite.Devices
namespace NatSuite::Devices {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: NatSuite.Devices.ICameraDevice
  // [TokenAttribute] Offset: FFFFFFFF
  class ICameraDevice/*, public ::NatSuite::Devices::IMediaDevice*/ {
    public:
    // Creating interface conversion operator: operator ::NatSuite::Devices::IMediaDevice
    operator ::NatSuite::Devices::IMediaDevice() noexcept {
      return *reinterpret_cast<::NatSuite::Devices::IMediaDevice*>(this);
    }
    // public System.Boolean get_frontFacing()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_frontFacing();
    // public System.ValueTuple`2<System.Int32,System.Int32> get_previewResolution()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::ValueTuple_2<int, int> get_previewResolution();
    // public System.Void set_previewResolution(System.ValueTuple`2<System.Int32,System.Int32> value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_previewResolution(::System::ValueTuple_2<int, int> value);
    // public System.Int32 get_frameRate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_frameRate();
    // public System.Void set_frameRate(System.Int32 value)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void set_frameRate(int value);
    // public System.Threading.Tasks.Task`1<UnityEngine.Texture2D> StartRunning()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* StartRunning();
  }; // NatSuite.Devices.ICameraDevice
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::get_frontFacing
// Il2CppName: get_frontFacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NatSuite::Devices::ICameraDevice::*)()>(&NatSuite::Devices::ICameraDevice::get_frontFacing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "get_frontFacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::get_previewResolution
// Il2CppName: get_previewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::ValueTuple_2<int, int> (NatSuite::Devices::ICameraDevice::*)()>(&NatSuite::Devices::ICameraDevice::get_previewResolution)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "get_previewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::set_previewResolution
// Il2CppName: set_previewResolution
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::ICameraDevice::*)(::System::ValueTuple_2<int, int>)>(&NatSuite::Devices::ICameraDevice::set_previewResolution)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "ValueTuple`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Int32"), ::il2cpp_utils::GetClassFromName("System", "Int32")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "set_previewResolution", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::get_frameRate
// Il2CppName: get_frameRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NatSuite::Devices::ICameraDevice::*)()>(&NatSuite::Devices::ICameraDevice::get_frameRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "get_frameRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::set_frameRate
// Il2CppName: set_frameRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NatSuite::Devices::ICameraDevice::*)(int)>(&NatSuite::Devices::ICameraDevice::set_frameRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "set_frameRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: NatSuite::Devices::ICameraDevice::StartRunning
// Il2CppName: StartRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* (NatSuite::Devices::ICameraDevice::*)()>(&NatSuite::Devices::ICameraDevice::StartRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NatSuite::Devices::ICameraDevice*), "StartRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
