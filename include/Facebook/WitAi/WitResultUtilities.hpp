// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Lib
namespace Facebook::WitAi::Lib {
  // Forward declaring type: WitResponseNode
  class WitResponseNode;
}
// Forward declaring namespace: Facebook::WitAi
namespace Facebook::WitAi {
  // Forward declaring type: WitResponseReference
  class WitResponseReference;
}
// Completed forward declares
// Type namespace: Facebook.WitAi
namespace Facebook::WitAi {
  // Forward declaring type: WitResultUtilities
  class WitResultUtilities;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::WitResultUtilities);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::WitResultUtilities*, "Facebook.WitAi", "WitResultUtilities");
// Type namespace: Facebook.WitAi
namespace Facebook::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.WitResultUtilities
  // [TokenAttribute] Offset: FFFFFFFF
  // [ExtensionAttribute] Offset: FFFFFFFF
  class WitResultUtilities : public ::Il2CppObject {
    public:
    // static public System.String GetFirstEntityValue(Facebook.WitAi.Lib.WitResponseNode witResponse, System.String name)
    // Offset: 0x10F99E4
    static ::StringW GetFirstEntityValue(::Facebook::WitAi::Lib::WitResponseNode* witResponse, ::StringW name);
    // static public Facebook.WitAi.Lib.WitResponseNode GetFirstEntity(Facebook.WitAi.Lib.WitResponseNode witResponse, System.String name)
    // Offset: 0x1106384
    static ::Facebook::WitAi::Lib::WitResponseNode* GetFirstEntity(::Facebook::WitAi::Lib::WitResponseNode* witResponse, ::StringW name);
    // static public System.String GetIntentName(Facebook.WitAi.Lib.WitResponseNode witResponse)
    // Offset: 0x1106428
    static ::StringW GetIntentName(::Facebook::WitAi::Lib::WitResponseNode* witResponse);
    // static public Facebook.WitAi.Lib.WitResponseNode GetFirstIntent(Facebook.WitAi.Lib.WitResponseNode witResponse)
    // Offset: 0x10F9764
    static ::Facebook::WitAi::Lib::WitResponseNode* GetFirstIntent(::Facebook::WitAi::Lib::WitResponseNode* witResponse);
    // static public System.String GetPathValue(Facebook.WitAi.Lib.WitResponseNode response, System.String path)
    // Offset: 0x11064DC
    static ::StringW GetPathValue(::Facebook::WitAi::Lib::WitResponseNode* response, ::StringW path);
    // static public Facebook.WitAi.WitResponseReference GetWitResponseReference(System.String path)
    // Offset: 0x10F9C68
    static ::Facebook::WitAi::WitResponseReference* GetWitResponseReference(::StringW path);
    // static public System.String GetCodeFromPath(System.String path)
    // Offset: 0x11067CC
    static ::StringW GetCodeFromPath(::StringW path);
    // static private System.String[] SplitArrays(System.String nodeName)
    // Offset: 0x110668C
    static ::ArrayW<::StringW> SplitArrays(::StringW nodeName);
  }; // Facebook.WitAi.WitResultUtilities
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetFirstEntityValue
// Il2CppName: GetFirstEntityValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Facebook::WitAi::Lib::WitResponseNode*, ::StringW)>(&Facebook::WitAi::WitResultUtilities::GetFirstEntityValue)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetFirstEntityValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetFirstEntity
// Il2CppName: GetFirstEntity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::Facebook::WitAi::Lib::WitResponseNode*, ::StringW)>(&Facebook::WitAi::WitResultUtilities::GetFirstEntity)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetFirstEntity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse, name});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetIntentName
// Il2CppName: GetIntentName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::WitResultUtilities::GetIntentName)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetIntentName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetFirstIntent
// Il2CppName: GetFirstIntent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::Lib::WitResponseNode* (*)(::Facebook::WitAi::Lib::WitResponseNode*)>(&Facebook::WitAi::WitResultUtilities::GetFirstIntent)> {
  static const MethodInfo* get() {
    static auto* witResponse = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetFirstIntent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{witResponse});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetPathValue
// Il2CppName: GetPathValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::Facebook::WitAi::Lib::WitResponseNode*, ::StringW)>(&Facebook::WitAi::WitResultUtilities::GetPathValue)> {
  static const MethodInfo* get() {
    static auto* response = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Lib", "WitResponseNode")->byval_arg;
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetPathValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{response, path});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetWitResponseReference
// Il2CppName: GetWitResponseReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Facebook::WitAi::WitResponseReference* (*)(::StringW)>(&Facebook::WitAi::WitResultUtilities::GetWitResponseReference)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetWitResponseReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::GetCodeFromPath
// Il2CppName: GetCodeFromPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::StringW)>(&Facebook::WitAi::WitResultUtilities::GetCodeFromPath)> {
  static const MethodInfo* get() {
    static auto* path = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "GetCodeFromPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{path});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitResultUtilities::SplitArrays
// Il2CppName: SplitArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::StringW> (*)(::StringW)>(&Facebook::WitAi::WitResultUtilities::SplitArrays)> {
  static const MethodInfo* get() {
    static auto* nodeName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitResultUtilities*), "SplitArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{nodeName});
  }
};
