// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facebook.WitAi.WitAuthUtility
#include "Facebook/WitAi/WitAuthUtility.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Facebook::WitAi::WitAuthUtility::ITokenValidationProvider);
DEFINE_IL2CPP_ARG_TYPE(::Facebook::WitAi::WitAuthUtility::ITokenValidationProvider*, "Facebook.WitAi", "WitAuthUtility/ITokenValidationProvider");
// Type namespace: Facebook.WitAi
namespace Facebook::WitAi {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Facebook.WitAi.WitAuthUtility/Facebook.WitAi.ITokenValidationProvider
  // [TokenAttribute] Offset: FFFFFFFF
  class WitAuthUtility::ITokenValidationProvider {
    public:
    // public System.Boolean IsTokenValid(System.String appId, System.String token)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsTokenValid(::StringW appId, ::StringW token);
    // public System.Boolean IsServerTokenValid(System.String serverToken)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool IsServerTokenValid(::StringW serverToken);
  }; // Facebook.WitAi.WitAuthUtility/Facebook.WitAi.ITokenValidationProvider
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::IsTokenValid
// Il2CppName: IsTokenValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::*)(::StringW, ::StringW)>(&Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::IsTokenValid)> {
  static const MethodInfo* get() {
    static auto* appId = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* token = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitAuthUtility::ITokenValidationProvider*), "IsTokenValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appId, token});
  }
};
// Writing MetadataGetter for method: Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::IsServerTokenValid
// Il2CppName: IsServerTokenValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::*)(::StringW)>(&Facebook::WitAi::WitAuthUtility::ITokenValidationProvider::IsServerTokenValid)> {
  static const MethodInfo* get() {
    static auto* serverToken = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Facebook::WitAi::WitAuthUtility::ITokenValidationProvider*), "IsServerTokenValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{serverToken});
  }
};
