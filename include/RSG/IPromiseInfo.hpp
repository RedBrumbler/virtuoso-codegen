// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: IPromiseInfo
  class IPromiseInfo;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RSG::IPromiseInfo);
DEFINE_IL2CPP_ARG_TYPE(::RSG::IPromiseInfo*, "RSG", "IPromiseInfo");
// Type namespace: RSG
namespace RSG {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RSG.IPromiseInfo
  // [TokenAttribute] Offset: FFFFFFFF
  class IPromiseInfo {
    public:
    // public System.Int32 get_Id()
    // Offset: 0xFFFFFFFFFFFFFFFF
    int get_Id();
    // public System.String get_Name()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::StringW get_Name();
  }; // RSG.IPromiseInfo
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RSG::IPromiseInfo::get_Id
// Il2CppName: get_Id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RSG::IPromiseInfo::*)()>(&RSG::IPromiseInfo::get_Id)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseInfo*), "get_Id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RSG::IPromiseInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (RSG::IPromiseInfo::*)()>(&RSG::IPromiseInfo::get_Name)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
