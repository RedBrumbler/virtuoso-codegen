// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: RSG.TimeData
#include "RSG/TimeData.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RSG
namespace RSG {
  // Forward declaring type: IPromise
  class IPromise;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: Func`2<T, TResult>
  template<typename T, typename TResult>
  class Func_2;
}
// Completed forward declares
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: IPromiseTimer
  class IPromiseTimer;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RSG::IPromiseTimer);
DEFINE_IL2CPP_ARG_TYPE(::RSG::IPromiseTimer*, "RSG", "IPromiseTimer");
// Type namespace: RSG
namespace RSG {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RSG.IPromiseTimer
  // [TokenAttribute] Offset: FFFFFFFF
  class IPromiseTimer {
    public:
    // public RSG.IPromise WaitFor(System.Single seconds)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* WaitFor(float seconds);
    // public RSG.IPromise WaitUntil(System.Func`2<RSG.TimeData,System.Boolean> predicate)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* WaitUntil(::System::Func_2<::RSG::TimeData, bool>* predicate);
    // public RSG.IPromise WaitWhile(System.Func`2<RSG.TimeData,System.Boolean> predicate)
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::RSG::IPromise* WaitWhile(::System::Func_2<::RSG::TimeData, bool>* predicate);
    // public System.Void Update(System.Single deltaTime)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Update(float deltaTime);
    // public System.Boolean Cancel(RSG.IPromise promise)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool Cancel(::RSG::IPromise* promise);
  }; // RSG.IPromiseTimer
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RSG::IPromiseTimer::WaitFor
// Il2CppName: WaitFor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RSG::IPromise* (RSG::IPromiseTimer::*)(float)>(&RSG::IPromiseTimer::WaitFor)> {
  static const MethodInfo* get() {
    static auto* seconds = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseTimer*), "WaitFor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{seconds});
  }
};
// Writing MetadataGetter for method: RSG::IPromiseTimer::WaitUntil
// Il2CppName: WaitUntil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RSG::IPromise* (RSG::IPromiseTimer::*)(::System::Func_2<::RSG::TimeData, bool>*)>(&RSG::IPromiseTimer::WaitUntil)> {
  static const MethodInfo* get() {
    static auto* predicate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("RSG", "TimeData"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseTimer*), "WaitUntil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{predicate});
  }
};
// Writing MetadataGetter for method: RSG::IPromiseTimer::WaitWhile
// Il2CppName: WaitWhile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::RSG::IPromise* (RSG::IPromiseTimer::*)(::System::Func_2<::RSG::TimeData, bool>*)>(&RSG::IPromiseTimer::WaitWhile)> {
  static const MethodInfo* get() {
    static auto* predicate = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Func`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("RSG", "TimeData"), ::il2cpp_utils::GetClassFromName("System", "Boolean")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseTimer*), "WaitWhile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{predicate});
  }
};
// Writing MetadataGetter for method: RSG::IPromiseTimer::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSG::IPromiseTimer::*)(float)>(&RSG::IPromiseTimer::Update)> {
  static const MethodInfo* get() {
    static auto* deltaTime = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseTimer*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{deltaTime});
  }
};
// Writing MetadataGetter for method: RSG::IPromiseTimer::Cancel
// Il2CppName: Cancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RSG::IPromiseTimer::*)(::RSG::IPromise*)>(&RSG::IPromiseTimer::Cancel)> {
  static const MethodInfo* get() {
    static auto* promise = &::il2cpp_utils::GetClassFromName("RSG", "IPromise")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(RSG::IPromiseTimer*), "Cancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{promise});
  }
};
