// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: RSG
namespace RSG {
  // Forward declaring type: IPromise`1<PromisedT>
  template<typename PromisedT>
  class IPromise_1;
  // Forward declaring type: Tuple`2<T1, T2>
  template<typename T1, typename T2>
  class Tuple_2;
  // Forward declaring type: Tuple`3<T1, T2, T3>
  template<typename T1, typename T2, typename T3>
  class Tuple_3;
  // Forward declaring type: Tuple`4<T1, T2, T3, T4>
  template<typename T1, typename T2, typename T3, typename T4>
  class Tuple_4;
}
// Completed forward declares
// Type namespace: RSG
namespace RSG {
  // Forward declaring type: PromiseHelpers
  class PromiseHelpers;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::RSG::PromiseHelpers);
DEFINE_IL2CPP_ARG_TYPE(::RSG::PromiseHelpers*, "RSG", "PromiseHelpers");
// Type namespace: RSG
namespace RSG {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: RSG.PromiseHelpers
  // [TokenAttribute] Offset: FFFFFFFF
  class PromiseHelpers : public ::Il2CppObject {
    public:
    // Nested type: ::RSG::PromiseHelpers::$$c__DisplayClass0_0_2<T1, T2>
    template<typename T1, typename T2>
    class $$c__DisplayClass0_0_2;
    // Nested type: ::RSG::PromiseHelpers::$$c__1_3<T1, T2, T3>
    template<typename T1, typename T2, typename T3>
    class $$c__1_3;
    // Nested type: ::RSG::PromiseHelpers::$$c__2_4<T1, T2, T3, T4>
    template<typename T1, typename T2, typename T3, typename T4>
    class $$c__2_4;
    // static public RSG.IPromise`1<RSG.Tuple`2<T1,T2>> All(RSG.IPromise`1<T1> p1, RSG.IPromise`1<T2> p2)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2>
    static ::RSG::IPromise_1<::RSG::Tuple_2<T1, T2>*>* All(::RSG::IPromise_1<T1>* p1, ::RSG::IPromise_1<T2>* p2) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RSG", "PromiseHelpers", "All", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::RSG::Tuple_2<T1, T2>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, p1, p2);
    }
    // static public RSG.IPromise`1<RSG.Tuple`3<T1,T2,T3>> All(RSG.IPromise`1<T1> p1, RSG.IPromise`1<T2> p2, RSG.IPromise`1<T3> p3)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3>
    static ::RSG::IPromise_1<::RSG::Tuple_3<T1, T2, T3>*>* All(::RSG::IPromise_1<T1>* p1, ::RSG::IPromise_1<T2>* p2, ::RSG::IPromise_1<T3>* p3) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RSG", "PromiseHelpers", "All", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::RSG::Tuple_3<T1, T2, T3>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, p1, p2, p3);
    }
    // static public RSG.IPromise`1<RSG.Tuple`4<T1,T2,T3,T4>> All(RSG.IPromise`1<T1> p1, RSG.IPromise`1<T2> p2, RSG.IPromise`1<T3> p3, RSG.IPromise`1<T4> p4)
    // Offset: 0xFFFFFFFFFFFFFFFF
    template<class T1, class T2, class T3, class T4>
    static ::RSG::IPromise_1<::RSG::Tuple_4<T1, T2, T3, T4>*>* All(::RSG::IPromise_1<T1>* p1, ::RSG::IPromise_1<T2>* p2, ::RSG::IPromise_1<T3>* p3, ::RSG::IPromise_1<T4>* p4) {
      static auto ___internal__logger = ::Logger::get().WithContext("::RSG::PromiseHelpers::All");
      static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("RSG", "PromiseHelpers", "All", std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get()}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3), ::il2cpp_utils::ExtractType(p4)})));
      static auto* ___generic__method = THROW_UNLESS((::il2cpp_utils::MakeGenericMethod(___internal__method, std::vector<Il2CppClass*>{::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T1>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T2>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T3>::get(), ::il2cpp_utils::il2cpp_type_check::il2cpp_no_arg_class<T4>::get()})));
      return ::il2cpp_utils::RunMethodRethrow<::RSG::IPromise_1<::RSG::Tuple_4<T1, T2, T3, T4>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___generic__method, p1, p2, p3, p4);
    }
  }; // RSG.PromiseHelpers
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: RSG::PromiseHelpers::All
// Il2CppName: All
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: RSG::PromiseHelpers::All
// Il2CppName: All
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: RSG::PromiseHelpers::All
// Il2CppName: All
// Cannot write MetadataGetter for generic methods!
