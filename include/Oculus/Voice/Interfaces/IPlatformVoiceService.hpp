// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Facebook.WitAi.IVoiceService
#include "Facebook/WitAi/IVoiceService.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Facebook::WitAi::Configuration
namespace Facebook::WitAi::Configuration {
  // Forward declaring type: WitRuntimeConfiguration
  class WitRuntimeConfiguration;
}
// Completed forward declares
// Type namespace: Oculus.Voice.Interfaces
namespace Oculus::Voice::Interfaces {
  // Forward declaring type: IPlatformVoiceService
  class IPlatformVoiceService;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Oculus::Voice::Interfaces::IPlatformVoiceService);
DEFINE_IL2CPP_ARG_TYPE(::Oculus::Voice::Interfaces::IPlatformVoiceService*, "Oculus.Voice.Interfaces", "IPlatformVoiceService");
// Type namespace: Oculus.Voice.Interfaces
namespace Oculus::Voice::Interfaces {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Oculus.Voice.Interfaces.IPlatformVoiceService
  // [TokenAttribute] Offset: FFFFFFFF
  class IPlatformVoiceService/*, public ::Facebook::WitAi::IVoiceService*/ {
    public:
    // Creating interface conversion operator: operator ::Facebook::WitAi::IVoiceService
    operator ::Facebook::WitAi::IVoiceService() noexcept {
      return *reinterpret_cast<::Facebook::WitAi::IVoiceService*>(this);
    }
    // public System.Boolean get_PlatformSupportsWit()
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool get_PlatformSupportsWit();
    // public System.Void SetRuntimeConfiguration(Facebook.WitAi.Configuration.WitRuntimeConfiguration configuration)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration);
  }; // Oculus.Voice.Interfaces.IPlatformVoiceService
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit
// Il2CppName: get_PlatformSupportsWit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Oculus::Voice::Interfaces::IPlatformVoiceService::*)()>(&Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Interfaces::IPlatformVoiceService*), "get_PlatformSupportsWit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration
// Il2CppName: SetRuntimeConfiguration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Oculus::Voice::Interfaces::IPlatformVoiceService::*)(::Facebook::WitAi::Configuration::WitRuntimeConfiguration*)>(&Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration)> {
  static const MethodInfo* get() {
    static auto* configuration = &::il2cpp_utils::GetClassFromName("Facebook.WitAi.Configuration", "WitRuntimeConfiguration")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Oculus::Voice::Interfaces::IPlatformVoiceService*), "SetRuntimeConfiguration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{configuration});
  }
};
