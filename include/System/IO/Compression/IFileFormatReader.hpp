// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO::Compression
namespace System::IO::Compression {
  // Forward declaring type: InputBuffer
  class InputBuffer;
}
// Completed forward declares
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: IFileFormatReader
  class IFileFormatReader;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Compression::IFileFormatReader);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::IFileFormatReader*, "System.IO.Compression", "IFileFormatReader");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.IFileFormatReader
  // [TokenAttribute] Offset: FFFFFFFF
  class IFileFormatReader {
    public:
    // public System.Boolean ReadHeader(System.IO.Compression.InputBuffer input)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ReadHeader(::System::IO::Compression::InputBuffer* input);
    // public System.Boolean ReadFooter(System.IO.Compression.InputBuffer input)
    // Offset: 0xFFFFFFFFFFFFFFFF
    bool ReadFooter(::System::IO::Compression::InputBuffer* input);
    // public System.Void UpdateWithBytesRead(System.Byte[] buffer, System.Int32 offset, System.Int32 bytesToCopy)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy);
    // public System.Void Validate()
    // Offset: 0xFFFFFFFFFFFFFFFF
    void Validate();
  }; // System.IO.Compression.IFileFormatReader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatReader::ReadHeader
// Il2CppName: ReadHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::IO::Compression::IFileFormatReader::*)(::System::IO::Compression::InputBuffer*)>(&System::IO::Compression::IFileFormatReader::ReadHeader)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "InputBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatReader*), "ReadHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatReader::ReadFooter
// Il2CppName: ReadFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (System::IO::Compression::IFileFormatReader::*)(::System::IO::Compression::InputBuffer*)>(&System::IO::Compression::IFileFormatReader::ReadFooter)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System.IO.Compression", "InputBuffer")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatReader*), "ReadFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatReader::UpdateWithBytesRead
// Il2CppName: UpdateWithBytesRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::IFileFormatReader::*)(::ArrayW<uint8_t>, int, int)>(&System::IO::Compression::IFileFormatReader::UpdateWithBytesRead)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytesToCopy = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatReader*), "UpdateWithBytesRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset, bytesToCopy});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatReader::Validate
// Il2CppName: Validate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::IFileFormatReader::*)()>(&System::IO::Compression::IFileFormatReader::Validate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatReader*), "Validate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
