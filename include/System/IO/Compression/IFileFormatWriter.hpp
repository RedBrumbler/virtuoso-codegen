// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include <stdint.h>
#include "beatsaber-hook/shared/utils/byref.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
// Completed includes
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Forward declaring type: IFileFormatWriter
  class IFileFormatWriter;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::System::IO::Compression::IFileFormatWriter);
DEFINE_IL2CPP_ARG_TYPE(::System::IO::Compression::IFileFormatWriter*, "System.IO.Compression", "IFileFormatWriter");
// Type namespace: System.IO.Compression
namespace System::IO::Compression {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: System.IO.Compression.IFileFormatWriter
  // [TokenAttribute] Offset: FFFFFFFF
  class IFileFormatWriter {
    public:
    // public System.Byte[] GetHeader()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<uint8_t> GetHeader();
    // public System.Void UpdateWithBytesRead(System.Byte[] buffer, System.Int32 offset, System.Int32 bytesToCopy)
    // Offset: 0xFFFFFFFFFFFFFFFF
    void UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy);
    // public System.Byte[] GetFooter()
    // Offset: 0xFFFFFFFFFFFFFFFF
    ::ArrayW<uint8_t> GetFooter();
  }; // System.IO.Compression.IFileFormatWriter
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatWriter::GetHeader
// Il2CppName: GetHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::IO::Compression::IFileFormatWriter::*)()>(&System::IO::Compression::IFileFormatWriter::GetHeader)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatWriter*), "GetHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead
// Il2CppName: UpdateWithBytesRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (System::IO::Compression::IFileFormatWriter::*)(::ArrayW<uint8_t>, int, int)>(&System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead)> {
  static const MethodInfo* get() {
    static auto* buffer = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* offset = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* bytesToCopy = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatWriter*), "UpdateWithBytesRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{buffer, offset, bytesToCopy});
  }
};
// Writing MetadataGetter for method: System::IO::Compression::IFileFormatWriter::GetFooter
// Il2CppName: GetFooter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (System::IO::Compression::IFileFormatWriter::*)()>(&System::IO::Compression::IFileFormatWriter::GetFooter)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(System::IO::Compression::IFileFormatWriter*), "GetFooter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
