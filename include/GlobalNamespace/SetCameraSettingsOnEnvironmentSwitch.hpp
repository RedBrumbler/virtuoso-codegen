// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Begin forward declares
// Forward declaring namespace: BeautifyEffect
namespace BeautifyEffect {
  // Forward declaring type: Beautify
  class Beautify;
}
// Forward declaring namespace: GlobalNamespace
namespace GlobalNamespace {
  // Forward declaring type: Environment
  class Environment;
}
// Completed forward declares
// Type namespace: 
namespace GlobalNamespace {
  // Forward declaring type: SetCameraSettingsOnEnvironmentSwitch
  class SetCameraSettingsOnEnvironmentSwitch;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch);
DEFINE_IL2CPP_ARG_TYPE(::GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch*, "", "SetCameraSettingsOnEnvironmentSwitch");
// Type namespace: 
namespace GlobalNamespace {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: SetCameraSettingsOnEnvironmentSwitch
  // [TokenAttribute] Offset: FFFFFFFF
  class SetCameraSettingsOnEnvironmentSwitch : public ::UnityEngine::MonoBehaviour {
    public:
    #ifdef USE_CODEGEN_FIELDS
    public:
    #else
    #ifdef CODEGEN_FIELD_ACCESSIBILITY
    CODEGEN_FIELD_ACCESSIBILITY:
    #else
    protected:
    #endif
    #endif
    // private BeautifyEffect.Beautify _beautify
    // Size: 0x8
    // Offset: 0x18
    ::BeautifyEffect::Beautify* beautify;
    // Field size check
    static_assert(sizeof(::BeautifyEffect::Beautify*) == 0x8);
    public:
    // Deleting conversion operator: operator ::System::IntPtr
    constexpr operator ::System::IntPtr() const noexcept = delete;
    // Get instance field reference: private BeautifyEffect.Beautify _beautify
    ::BeautifyEffect::Beautify*& dyn__beautify();
    // private System.Void Awake()
    // Offset: 0x13B1934
    void Awake();
    // private System.Void NewEnvironmentSet(Environment settings)
    // Offset: 0x13B1A20
    void NewEnvironmentSet(::GlobalNamespace::Environment* settings);
    // public System.Void .ctor()
    // Offset: 0x13B1A24
    // Implemented from: UnityEngine.MonoBehaviour
    // Base method: System.Void MonoBehaviour::.ctor()
    // Base method: System.Void Behaviour::.ctor()
    // Base method: System.Void Component::.ctor()
    // Base method: System.Void Object::.ctor()
    // Base method: System.Void Object::.ctor()
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static SetCameraSettingsOnEnvironmentSwitch* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<SetCameraSettingsOnEnvironmentSwitch*, creationType>()));
    }
  }; // SetCameraSettingsOnEnvironmentSwitch
  #pragma pack(pop)
  static check_size<sizeof(SetCameraSettingsOnEnvironmentSwitch), 24 + sizeof(::BeautifyEffect::Beautify*)> __GlobalNamespace_SetCameraSettingsOnEnvironmentSwitchSizeCheck;
  static_assert(sizeof(SetCameraSettingsOnEnvironmentSwitch) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::*)()>(&GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::Awake)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::NewEnvironmentSet
// Il2CppName: NewEnvironmentSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::*)(::GlobalNamespace::Environment*)>(&GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::NewEnvironmentSet)> {
  static const MethodInfo* get() {
    static auto* settings = &::il2cpp_utils::GetClassFromName("", "Environment")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch*), "NewEnvironmentSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{settings});
  }
};
// Writing MetadataGetter for method: GlobalNamespace::SetCameraSettingsOnEnvironmentSwitch::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
