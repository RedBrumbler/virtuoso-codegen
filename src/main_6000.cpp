// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
bool System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
void System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform"));
}
// Autogenerated static field setter
// Set static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
void System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchive _archive
::System::IO::Compression::ZipArchive*& System::IO::Compression::ZipArchiveEntry::dyn__archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__archive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archive"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _originallyInArchive
bool& System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originallyInArchive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _diskNumberStart
int& System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_diskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipVersionMadeByPlatform _versionMadeByPlatform
::System::IO::Compression::ZipVersionMadeByPlatform& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeByPlatform"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionMadeByPlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionMadeBySpecification
::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeBySpecification"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionToExtract
::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionToExtract"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues _generalPurposeBitFlag
::System::IO::Compression::ZipArchiveEntry::BitFlagValues& System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generalPurposeBitFlag"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::BitFlagValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues _storedCompressionMethod
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues& System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedCompressionMethod"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeOffset _lastModified
::System::DateTimeOffset& System::IO::Compression::ZipArchiveEntry::dyn__lastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastModified"))->offset;
  return *reinterpret_cast<::System::DateTimeOffset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _compressedSize
int64_t& System::IO::Compression::ZipArchiveEntry::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _uncompressedSize
int64_t& System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offsetOfLocalHeader
int64_t& System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _storedOffsetOfCompressedData
::System::Nullable_1<int64_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedOffsetOfCompressedData"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _crc32
uint& System::IO::Compression::ZipArchiveEntry::dyn__crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[][] _compressedBytes
::ArrayW<::ArrayW<uint8_t>>& System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedBytes"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream _storedUncompressedData
::System::IO::MemoryStream*& System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedUncompressedData"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentlyOpenForWrite
bool& System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyOpenForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everOpenedForWrite
bool& System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everOpenedForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _outstandingWriteStream
::System::IO::Stream*& System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outstandingWriteStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _externalFileAttr
uint& System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalFileAttr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _storedEntryName
::StringW& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _storedEntryNameBytes
::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryNameBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _cdUnknownExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cdUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _lhUnknownExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lhUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _fileComment
::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__fileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__fileComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.IO.Compression.CompressionLevel> _compressionLevel
::System::Nullable_1<::System::IO::Compression::CompressionLevel>& System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionLevel"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::IO::Compression::CompressionLevel>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_FullName
::StringW System::IO::Compression::ZipArchiveEntry::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_FullName
void System::IO::Compression::ZipArchiveEntry::set_FullName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_LastWriteTime
::System::DateTimeOffset System::IO::Compression::ZipArchiveEntry::get_LastWriteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_LastWriteTime
void System::IO::Compression::ZipArchiveEntry::set_LastWriteTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Name
::StringW System::IO::Compression::ZipArchiveEntry::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_EverOpenedForWrite
bool System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EverOpenedForWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_OffsetOfCompressedData
int64_t System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetOfCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_UncompressedData
::System::IO::MemoryStream* System::IO::Compression::ZipArchiveEntry::get_UncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_UncompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UncompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MemoryStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_CompressionMethod
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::get_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_CompressionMethod
void System::IO::Compression::ZipArchiveEntry::set_CompressionMethod(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry..cctor
void System::IO::Compression::ZipArchiveEntry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Delete
void System::IO::Compression::ZipArchiveEntry::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Open
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.DecodeEntryName
::StringW System::IO::Compression::ZipArchiveEntry::DecodeEntryName(::ArrayW<uint8_t> entryNameBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DecodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryNameBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, entryNameBytes);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.EncodeEntryName
::ArrayW<uint8_t> System::IO::Compression::ZipArchiveEntry::EncodeEntryName(::StringW entryName, ByRef<bool> isUTF8) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::EncodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, entryName, byref(isUTF8));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteAndFinishLocalEntry
void System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAndFinishLocalEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCentralDirectoryFileHeader
void System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCentralDirectoryFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded
bool System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable
void System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable(bool needToUncompress, bool needToLoadIntoMemory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfNotOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataCompressor
::System::IO::Compression::CheckSumAndSizeWriteStream* System::IO::Compression::ZipArchiveEntry::GetDataCompressor(::System::IO::Stream* backingStream, bool leaveBackingStreamOpen, ::System::EventHandler* onClose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataCompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataCompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backingStream), ::il2cpp_utils::ExtractType(leaveBackingStreamOpen), ::il2cpp_utils::ExtractType(onClose)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::CheckSumAndSizeWriteStream*, false>(this, ___internal__method, backingStream, leaveBackingStreamOpen, onClose);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataDecompressor
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::GetDataDecompressor(::System::IO::Stream* compressedStreamToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataDecompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataDecompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressedStreamToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, compressedStreamToRead);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInReadMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInReadMode(bool checkOpenable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInReadMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInReadMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkOpenable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, checkOpenable);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInWriteMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInWriteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInWriteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInWriteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.IsOpenable
bool System::IO::Compression::ZipArchiveEntry::IsOpenable(bool needToUncompress, bool needToLoadIntoMemory, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::IsOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory, byref(message));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.SizesTooLarge
bool System::IO::Compression::ZipArchiveEntry::SizesTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::SizesTooLarge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SizesTooLarge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeader
bool System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader(bool isEmptyFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEmptyFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isEmptyFile);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeaderAndDataIfNeeded
void System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeaderAndDataIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCrcAndSizesInLocalHeader
void System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader(bool zip64HeaderUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCrcAndSizesInLocalHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zip64HeaderUsed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, zip64HeaderUsed);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteDataDescriptor
void System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDataDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.UnloadStreams
void System::IO::Compression::ZipArchiveEntry::UnloadStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::UnloadStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.CloseStreams
void System::IO::Compression::ZipArchiveEntry::CloseStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CloseStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.VersionToExtractAtLeast
void System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VersionToExtractAtLeast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfInvalidArchive
void System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfInvalidArchive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Windows
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Windows(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Windows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Windows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Unix
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Unix(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Unix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Unix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ParseFileName
::StringW System::IO::Compression::ZipArchiveEntry::ParseFileName(::StringW path, ::System::IO::Compression::ZipVersionMadeByPlatform madeByPlatform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ParseFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "ParseFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(madeByPlatform)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, madeByPlatform);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ToString
::StringW System::IO::Compression::ZipArchiveEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
int64_t& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CheckSumAndSizeWriteStream _crcSizeStream
::System::IO::Compression::CheckSumAndSizeWriteStream*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crcSizeStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CheckSumAndSizeWriteStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry _entry
::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usedZip64inLH
bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usedZip64inLH"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.ThrowIfDisposed
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Position
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.set_Position
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanRead
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanSeek
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanWrite
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Read
int System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Seek
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.SetLength
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Write
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Flush
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Dispose
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
uint16_t& System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
uint16_t& System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
::System::IO::Compression::ZipArchiveEntry::$$c* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::$$c*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9(::System::IO::Compression::ZipArchiveEntry::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0(::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.EventHandler <>9__70_0
::System::EventHandler* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::EventHandler*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0")));
}
// Autogenerated static field setter
// Set static field: static public System.EventHandler <>9__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0(::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c..cctor
void System::IO::Compression::ZipArchiveEntry::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<GetDataCompressor>b__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::$GetDataCompressor$b__67_0(int64_t initialPosition, int64_t currentPosition, uint checkSum, ::System::IO::Stream* backing, ::System::IO::Compression::ZipArchiveEntry* thisRef, ::System::EventHandler* closeHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<GetDataCompressor>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDataCompressor>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(checkSum), ::il2cpp_utils::ExtractType(backing), ::il2cpp_utils::ExtractType(thisRef), ::il2cpp_utils::ExtractType(closeHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialPosition, currentPosition, checkSum, backing, thisRef, closeHandler);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInWriteMode>b__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInWriteMode$b__70_0(::Il2CppObject* o, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInWriteMode>b__70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInWriteMode>b__70_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, e);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInUpdateMode>b__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInUpdateMode$b__71_0(::System::IO::Compression::ZipArchiveEntry* thisRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInUpdateMode>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInUpdateMode>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisRef);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Read
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Read
void System::IO::Compression::ZipArchiveMode::_set_Read(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Create
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Create
void System::IO::Compression::ZipArchiveMode::_set_Create(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Update
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Update
void System::IO::Compression::ZipArchiveMode::_set_Update(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Update", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::Compression::ZipArchiveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipGenericExtraField
#include "System/IO/Compression/ZipGenericExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _tag
uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__tag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
::ArrayW<uint8_t>& System::IO::Compression::ZipGenericExtraField::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Tag
uint16_t System::IO::Compression::ZipGenericExtraField::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Size
uint16_t System::IO::Compression::ZipGenericExtraField::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Data
::ArrayW<uint8_t> System::IO::Compression::ZipGenericExtraField::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteBlock
void System::IO::Compression::ZipGenericExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TryReadBlock
bool System::IO::Compression::ZipGenericExtraField::TryReadBlock(::System::IO::BinaryReader* reader, int64_t endExtraField, ByRef<::System::IO::Compression::ZipGenericExtraField> field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(endExtraField), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipGenericExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, endExtraField, byref(field));
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.ParseExtraField
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipGenericExtraField::ParseExtraField(::System::IO::Stream* extraFieldData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::ParseExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "ParseExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldData);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TotalSize
int System::IO::Compression::ZipGenericExtraField::TotalSize(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteAllBlocks
void System::IO::Compression::ZipGenericExtraField::WriteAllBlocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteAllBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "WriteAllBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64ExtraField
#include "System/IO/Compression/Zip64ExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
uint16_t& System::IO::Compression::Zip64ExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _uncompressedSize
::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _compressedSize
::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__compressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _localHeaderOffset
::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localHeaderOffset"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> _startDiskNumber
::System::Nullable_1<int>& System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDiskNumber"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_TotalSize
uint16_t System::IO::Compression::Zip64ExtraField::get_TotalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_UncompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_UncompressedSize
void System::IO::Compression::Zip64ExtraField::set_UncompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_CompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_CompressedSize
void System::IO::Compression::Zip64ExtraField::set_CompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_LocalHeaderOffset
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_LocalHeaderOffset
void System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_StartDiskNumber
::System::Nullable_1<int> System::IO::Compression::Zip64ExtraField::get_StartDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_StartDiskNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartDiskNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.UpdateSize
void System::IO::Compression::Zip64ExtraField::UpdateSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::UpdateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetJustZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetJustZip64Block(::System::IO::Stream* extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetJustZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetJustZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldStream), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldStream, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.TryGetZip64BlockFromGenericExtraField
bool System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField(::System::IO::Compression::ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, ByRef<::System::IO::Compression::Zip64ExtraField> zip64Block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "TryGetZip64BlockFromGenericExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraField), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64ExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraField, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber, byref(zip64Block));
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetAndRemoveZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetAndRemoveZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.RemoveZip64Blocks
void System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "RemoveZip64Blocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.WriteBlock
void System::IO::Compression::Zip64ExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryLocator
#include "System/IO/Compression/Zip64EndOfCentralDirectoryLocator.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithZip64EOCD
uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithZip64EOCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfZip64EOCD
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfZip64EOCD"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TotalNumberOfDisks
uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalNumberOfDisks"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator> zip64EOCDLocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDLocator));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock(::System::IO::Stream* stream, int64_t zip64EOCDRecordStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(zip64EOCDRecordStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, zip64EOCDRecordStart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryRecord
#include "System/IO/Compression/Zip64EndOfCentralDirectoryRecord.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfThisRecord
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfThisRecord"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionMadeBy
uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBy"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfThisDisk
uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithStartOfCD
uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithStartOfCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesOnThisDisk
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesOnThisDisk"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesTotal
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesTotal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfCentralDirectory
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfCentralDirectory
uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord> zip64EOCDRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDRecord));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipLocalFileHeader
#include "System/IO/Compression/ZipLocalFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.GetExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipLocalFileHeader::GetExtraFields(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::GetExtraFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "GetExtraFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.TrySkipBlock
bool System::IO::Compression::ZipLocalFileHeader::TrySkipBlock(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::TrySkipBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "TrySkipBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipCentralDirectoryFileHeader
#include "System/IO/Compression/ZipCentralDirectoryFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeByCompatibility
uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeByCompatibility"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeBySpecification
uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBySpecification"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 GeneralPurposeBitFlag
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GeneralPurposeBitFlag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 CompressionMethod
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressionMethod"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 LastModified
uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Crc32
uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 CompressedSize
int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 UncompressedSize
int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FilenameLength
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FilenameLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 ExtraFieldLength
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFieldLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FileCommentLength
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileCommentLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DiskNumberStart
int& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DiskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 InternalFileAttributes
uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalFileAttributes"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ExternalFileAttributes
uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExternalFileAttributes"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 RelativeOffsetOfLocalHeader
int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativeOffsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Filename
::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filename"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] FileComment
::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> ExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipCentralDirectoryFileHeader.TryReadBlock
bool System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock(::System::IO::BinaryReader* reader, bool saveExtraFieldsAndComments, ByRef<::System::IO::Compression::ZipCentralDirectoryFileHeader> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipCentralDirectoryFileHeader", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(saveExtraFieldsAndComments), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipCentralDirectoryFileHeader&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, saveExtraFieldsAndComments, byref(header));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipEndOfCentralDirectoryBlock
#include "System/IO/Compression/ZipEndOfCentralDirectoryBlock.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Signature
uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Signature"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfThisDisk
uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfTheDiskWithTheStartOfTheCentralDirectory
uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfTheDiskWithTheStartOfTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectoryOnThisDisk
uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectoryOnThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectory
uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SizeOfCentralDirectory
uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber
uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] ArchiveComment
::ArrayW<uint8_t>& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ArchiveComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.WriteBlock
void System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory, ::ArrayW<uint8_t> archiveComment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory), ::il2cpp_utils::ExtractType(archiveComment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory, archiveComment);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.TryReadBlock
bool System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::ZipEndOfCentralDirectoryBlock> eocdBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipEndOfCentralDirectoryBlock&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(eocdBlock));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.WrappedStream
#include "System/IO/Compression/WrappedStream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
::System::IO::Stream*& System::IO::Compression::WrappedStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _closeBaseStream
bool& System::IO::Compression::WrappedStream::dyn__closeBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__closeBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeBaseStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<System.IO.Compression.ZipArchiveEntry> _onClosed
::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::WrappedStream::dyn__onClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__onClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClosed"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::WrappedStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool& System::IO::Compression::WrappedStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfDisposed
void System::IO::Compression::WrappedStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantRead
void System::IO::Compression::WrappedStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantWrite
void System::IO::Compression::WrappedStream::ThrowIfCantWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantSeek
void System::IO::Compression::WrappedStream::ThrowIfCantSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Length
int64_t System::IO::Compression::WrappedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Position
int64_t System::IO::Compression::WrappedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.set_Position
void System::IO::Compression::WrappedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanRead
bool System::IO::Compression::WrappedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanSeek
bool System::IO::Compression::WrappedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanWrite
bool System::IO::Compression::WrappedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Read
int System::IO::Compression::WrappedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Seek
int64_t System::IO::Compression::WrappedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.WrappedStream.SetLength
void System::IO::Compression::WrappedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Write
void System::IO::Compression::WrappedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Flush
void System::IO::Compression::WrappedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Dispose
void System::IO::Compression::WrappedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.SubReadStream
#include "System/IO/Compression/SubReadStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _startInSuperStream
int64_t& System::IO::Compression::SubReadStream::dyn__startInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__startInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _positionInSuperStream
int64_t& System::IO::Compression::SubReadStream::dyn__positionInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__positionInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _endInSuperStream
int64_t& System::IO::Compression::SubReadStream::dyn__endInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__endInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _superStream
::System::IO::Stream*& System::IO::Compression::SubReadStream::dyn__superStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__superStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_superStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canRead
bool& System::IO::Compression::SubReadStream::dyn__canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool& System::IO::Compression::SubReadStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfDisposed
void System::IO::Compression::SubReadStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfCantRead
void System::IO::Compression::SubReadStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Length
int64_t System::IO::Compression::SubReadStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Position
int64_t System::IO::Compression::SubReadStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.set_Position
void System::IO::Compression::SubReadStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanRead
bool System::IO::Compression::SubReadStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanSeek
bool System::IO::Compression::SubReadStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanWrite
bool System::IO::Compression::SubReadStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Read
int System::IO::Compression::SubReadStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Seek
int64_t System::IO::Compression::SubReadStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.SubReadStream.SetLength
void System::IO::Compression::SubReadStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Write
void System::IO::Compression::SubReadStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Flush
void System::IO::Compression::SubReadStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Dispose
void System::IO::Compression::SubReadStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseBaseStream
::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseBaseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _checksum
uint& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checksum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _leaveOpenOnClose
bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpenOnClose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _initialPosition
int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.EventHandler _onClose
::System::EventHandler*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClose"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> _saveCrcAndSizes
::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveCrcAndSizes"))->offset;
  return *reinterpret_cast<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.ThrowIfDisposed
void System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Length
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Position
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.set_Position
void System::IO::Compression::CheckSumAndSizeWriteStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanRead
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanSeek
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanWrite
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Read
int System::IO::Compression::CheckSumAndSizeWriteStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Seek
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.SetLength
void System::IO::Compression::CheckSumAndSizeWriteStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Write
void System::IO::Compression::CheckSumAndSizeWriteStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Flush
void System::IO::Compression::CheckSumAndSizeWriteStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Dispose
void System::IO::Compression::CheckSumAndSizeWriteStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipHelper
#include "System/IO/Compression/ZipHelper.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_invalidDateIndicator
::System::DateTime System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_invalidDateIndicator
void System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator", value));
}
// Autogenerated method: System.IO.Compression.ZipHelper..cctor
void System::IO::Compression::ZipHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipHelper.RequiresUnicode
bool System::IO::Compression::ZipHelper::RequiresUnicode(::StringW test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::RequiresUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "RequiresUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test);
}
// Autogenerated method: System.IO.Compression.ZipHelper.ReadBytes
void System::IO::Compression::ZipHelper::ReadBytes(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, int bytesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bytesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, bytesToRead);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DosTimeToDateTime
::System::DateTime System::IO::Compression::ZipHelper::DosTimeToDateTime(uint dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DosTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DosTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DateTimeToDosTime
uint System::IO::Compression::ZipHelper::DateTimeToDosTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DateTimeToDosTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DateTimeToDosTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsToSignature
bool System::IO::Compression::ZipHelper::SeekBackwardsToSignature(::System::IO::Stream* stream, uint signatureToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsToSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsToSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(signatureToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, signatureToFind);
}
// Autogenerated method: System.IO.Compression.ZipHelper.AdvanceToPosition
void System::IO::Compression::ZipHelper::AdvanceToPosition(::System::IO::Stream* stream, int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::AdvanceToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "AdvanceToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, position);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsAndRead
bool System::IO::Compression::ZipHelper::SeekBackwardsAndRead(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, ByRef<int> bufferPointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsAndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsAndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, byref(bufferPointer));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionNeededValues
#include "System/IO/Compression/ZipVersionNeededValues.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Default
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Default
void System::IO::Compression::ZipVersionNeededValues::_set_Default(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
void System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Zip64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Zip64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Zip64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
void System::IO::Compression::ZipVersionNeededValues::_set_Zip64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Zip64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Zip64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
uint16_t& System::IO::Compression::ZipVersionNeededValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionMadeByPlatform
#include "System/IO/Compression/ZipVersionMadeByPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Crc32Helper
#include "System/IO/Compression/Crc32Helper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_0
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_0
void System::IO::Compression::Crc32Helper::_set_s_crcTable_0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_1
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_1
void System::IO::Compression::Crc32Helper::_set_s_crcTable_1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_2
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_2
void System::IO::Compression::Crc32Helper::_set_s_crcTable_2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_3
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_3
void System::IO::Compression::Crc32Helper::_set_s_crcTable_3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_4
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_4
void System::IO::Compression::Crc32Helper::_set_s_crcTable_4(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_5
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_5
void System::IO::Compression::Crc32Helper::_set_s_crcTable_5(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_6
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_6
void System::IO::Compression::Crc32Helper::_set_s_crcTable_6(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_7
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_7
void System::IO::Compression::Crc32Helper::_set_s_crcTable_7(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_7", value));
}
// Autogenerated method: System.IO.Compression.Crc32Helper..cctor
void System::IO::Compression::Crc32Helper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.UpdateCrc32
uint System::IO::Compression::Crc32Helper::UpdateCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::UpdateCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "UpdateCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.ManagedCrc32
uint System::IO::Compression::Crc32Helper::ManagedCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::ManagedCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "ManagedCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource
#include "System/Buffers/ArrayPoolEventSource.hpp"
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Buffers.ArrayPoolEventSource Log
::System::Buffers::ArrayPoolEventSource* System::Buffers::ArrayPoolEventSource::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource*>("System.Buffers", "ArrayPoolEventSource", "Log"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Buffers.ArrayPoolEventSource Log
void System::Buffers::ArrayPoolEventSource::_set_Log(::System::Buffers::ArrayPoolEventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource", "Log", value));
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferRented
void System::Buffers::ArrayPoolEventSource::BufferRented(int bufferId, int bufferSize, int poolId, int bucketId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferRented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferRented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferAllocated
void System::Buffers::ArrayPoolEventSource::BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId, reason);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferReturned
void System::Buffers::ArrayPoolEventSource::BufferReturned(int bufferId, int bufferSize, int poolId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource..cctor
void System::Buffers::ArrayPoolEventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ArrayPoolEventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.Utilities
#include "System/Buffers/Utilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Utilities.SelectBucketIndex
int System::Buffers::Utilities::SelectBucketIndex(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::SelectBucketIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "SelectBucketIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Buffers.Utilities.GetMaxSizeForBucket
int System::Buffers::Utilities::GetMaxSizeForBucket(int binIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::GetMaxSizeForBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "GetMaxSizeForBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFile
#include "System/IO/Compression/ZipFile.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode);
}
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.CreateFromDirectory
void System::IO::Compression::ZipFile::CreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::CreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "CreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFile.DoCreateFromDirectory
void System::IO::Compression::ZipFile::DoCreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel, bool includeBaseDirectory, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::DoCreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "DoCreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName), ::il2cpp_utils::ExtractType(compressionLevel), ::il2cpp_utils::ExtractType(includeBaseDirectory), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.EntryFromPath
::StringW System::IO::Compression::ZipFile::EntryFromPath(::StringW entry, int offset, int length, ByRef<::ArrayW<::Il2CppChar>> buffer, bool appendPathSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EntryFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EntryFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(appendPathSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry, offset, length, byref(buffer), appendPathSeparator);
}
// Autogenerated method: System.IO.Compression.ZipFile.EnsureCapacity
void System::IO::Compression::ZipFile::EnsureCapacity(ByRef<::ArrayW<::Il2CppChar>> buffer, int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(buffer), min);
}
// Autogenerated method: System.IO.Compression.ZipFile.IsDirEmpty
bool System::IO::Compression::ZipFile::IsDirEmpty(::System::IO::DirectoryInfo* possiblyEmptyDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::IsDirEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "IsDirEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(possiblyEmptyDir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, possiblyEmptyDir);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFileExtensions
#include "System/IO/Compression/ZipFileExtensions.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToDirectory
void System::IO::Compression::ZipFileExtensions::ExtractToDirectory(::System::IO::Compression::ZipArchive* source, ::StringW destinationDirectoryName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationDirectoryName, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.DoCreateEntryFromFile
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile(::System::IO::Compression::ZipArchive* destination, ::StringW sourceFileName, ::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "DoCreateEntryFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, sourceFileName, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToFile
void System::IO::Compression::ZipFileExtensions::ExtractToFile(::System::IO::Compression::ZipArchiveEntry* source, ::StringW destinationFileName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationFileName, overwrite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 IsTextualNodeBitmap
uint System::Xml::XmlReader::_get_IsTextualNodeBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_IsTextualNodeBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "IsTextualNodeBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 IsTextualNodeBitmap
void System::Xml::XmlReader::_set_IsTextualNodeBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_IsTextualNodeBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "IsTextualNodeBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 CanReadContentAsBitmap
uint System::Xml::XmlReader::_get_CanReadContentAsBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_CanReadContentAsBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "CanReadContentAsBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 CanReadContentAsBitmap
void System::Xml::XmlReader::_set_CanReadContentAsBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_CanReadContentAsBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "CanReadContentAsBitmap", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 HasValueBitmap
uint System::Xml::XmlReader::_get_HasValueBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_get_HasValueBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "XmlReader", "HasValueBitmap"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HasValueBitmap
void System::Xml::XmlReader::_set_HasValueBitmap(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::_set_HasValueBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlReader", "HasValueBitmap", value));
}
// Autogenerated method: System.Xml.XmlReader..cctor
void System::Xml::XmlReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Analytics.AnalyticsEvent
#include "UnityEngine/Analytics/AnalyticsEvent.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Analytics.AnalyticsResult
#include "UnityEngine/Analytics/AnalyticsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String k_SdkVersion
::StringW UnityEngine::Analytics::AnalyticsEvent::_get_k_SdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get_k_SdkVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Analytics", "AnalyticsEvent", "k_SdkVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String k_SdkVersion
void UnityEngine::Analytics::AnalyticsEvent::_set_k_SdkVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set_k_SdkVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "k_SdkVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Collections.Generic.IDictionary`2<System.String,System.Object>> s_StandardEventCallback
::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>* UnityEngine::Analytics::AnalyticsEvent::_get_s_StandardEventCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get_s_StandardEventCallback");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>*>("UnityEngine.Analytics", "AnalyticsEvent", "s_StandardEventCallback")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Collections.Generic.IDictionary`2<System.String,System.Object>> s_StandardEventCallback
void UnityEngine::Analytics::AnalyticsEvent::_set_s_StandardEventCallback(::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set_s_StandardEventCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "s_StandardEventCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> m_EventData
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* UnityEngine::Analytics::AnalyticsEvent::_get_m_EventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get_m_EventData");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>("UnityEngine.Analytics", "AnalyticsEvent", "m_EventData")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Object> m_EventData
void UnityEngine::Analytics::AnalyticsEvent::_set_m_EventData(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set_m_EventData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "m_EventData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _debugMode
bool UnityEngine::Analytics::AnalyticsEvent::_get__debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get__debugMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Analytics", "AnalyticsEvent", "_debugMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _debugMode
void UnityEngine::Analytics::AnalyticsEvent::_set__debugMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set__debugMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "_debugMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> enumRenameTable
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* UnityEngine::Analytics::AnalyticsEvent::_get_enumRenameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get_enumRenameTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("UnityEngine.Analytics", "AnalyticsEvent", "enumRenameTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> enumRenameTable
void UnityEngine::Analytics::AnalyticsEvent::_set_enumRenameTable(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set_enumRenameTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "enumRenameTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Collections.Generic.IDictionary`2<System.String,System.Object>> CS$<>9__CachedAnonymousMethodDelegate2
::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>* UnityEngine::Analytics::AnalyticsEvent::_get_CS$$$9__CachedAnonymousMethodDelegate2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_get_CS$$$9__CachedAnonymousMethodDelegate2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>*>("UnityEngine.Analytics", "AnalyticsEvent", "CS$<>9__CachedAnonymousMethodDelegate2")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Collections.Generic.IDictionary`2<System.String,System.Object>> CS$<>9__CachedAnonymousMethodDelegate2
void UnityEngine::Analytics::AnalyticsEvent::_set_CS$$$9__CachedAnonymousMethodDelegate2(::System::Action_1<::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::_set_CS$$$9__CachedAnonymousMethodDelegate2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Analytics", "AnalyticsEvent", "CS$<>9__CachedAnonymousMethodDelegate2", value));
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.get_debugMode
bool UnityEngine::Analytics::AnalyticsEvent::get_debugMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::get_debugMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "get_debugMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent..cctor
void UnityEngine::Analytics::AnalyticsEvent::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.OnValidationFailed
void UnityEngine::Analytics::AnalyticsEvent::OnValidationFailed(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::OnValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "OnValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.AddCustomEventData
void UnityEngine::Analytics::AnalyticsEvent::AddCustomEventData(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::AddCustomEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "AddCustomEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.Custom
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::Custom(::StringW eventName, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::Custom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "Custom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.ScreenVisit
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::ScreenVisit(::StringW screenName, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::ScreenVisit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "ScreenVisit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenName), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, screenName, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.TutorialComplete
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::TutorialComplete(::StringW tutorialId, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::TutorialComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "TutorialComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tutorialId), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tutorialId, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.TutorialSkip
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::TutorialSkip(::StringW tutorialId, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::TutorialSkip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "TutorialSkip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tutorialId), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tutorialId, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.TutorialStart
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::TutorialStart(::StringW tutorialId, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::TutorialStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "TutorialStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tutorialId), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tutorialId, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.TutorialStep
::UnityEngine::Analytics::AnalyticsResult UnityEngine::Analytics::AnalyticsEvent::TutorialStep(int stepIndex, ::StringW tutorialId, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::TutorialStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "TutorialStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stepIndex), ::il2cpp_utils::ExtractType(tutorialId), ::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Analytics::AnalyticsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stepIndex, tutorialId, eventData);
}
// Autogenerated method: UnityEngine.Analytics.AnalyticsEvent.<.cctor>b__1
void UnityEngine::Analytics::AnalyticsEvent::$_cctor$b__1(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* param0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Analytics::AnalyticsEvent::<.cctor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Analytics", "AnalyticsEvent", "<.cctor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(param0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, param0);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.LinkedList`1<System.Action> delegates
::System::Collections::Generic::LinkedList_1<::System::Action*>*& TMPro::FastAction::dyn_delegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FastAction::dyn_delegates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegates"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedList_1<::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Action,System.Collections.Generic.LinkedListNode`1<System.Action>> lookup
::System::Collections::Generic::Dictionary_2<::System::Action*, ::System::Collections::Generic::LinkedListNode_1<::System::Action*>*>*& TMPro::FastAction::dyn_lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FastAction::dyn_lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Action*, ::System::Collections::Generic::LinkedListNode_1<::System::Action*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FastAction.Add
void TMPro::FastAction::Add(::System::Action* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FastAction::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rhs);
}
// Autogenerated method: TMPro.FastAction.Remove
void TMPro::FastAction::Remove(::System::Action* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FastAction::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rhs);
}
// Autogenerated method: TMPro.FastAction.Call
void TMPro::FastAction::Call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FastAction::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITextPreprocessor
#include "TMPro/ITextPreprocessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITextPreprocessor.PreprocessText
::StringW TMPro::ITextPreprocessor::PreprocessText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITextPreprocessor::PreprocessText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaterialReferenceManager
#include "TMPro/MaterialReferenceManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.MaterialReferenceManager s_Instance
::TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::MaterialReferenceManager*>("TMPro", "MaterialReferenceManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.MaterialReferenceManager s_Instance
void TMPro::MaterialReferenceManager::_set_s_Instance(::TMPro::MaterialReferenceManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaterialReferenceManager", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.Material> m_FontMaterialReferenceLookup
::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Material*>*& TMPro::MaterialReferenceManager::dyn_m_FontMaterialReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::dyn_m_FontMaterialReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontMaterialReferenceLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_FontAsset> m_FontAssetReferenceLookup
::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_FontAsset*>*& TMPro::MaterialReferenceManager::dyn_m_FontAssetReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::dyn_m_FontAssetReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontAssetReferenceLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_SpriteAsset> m_SpriteAssetReferenceLookup
::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_SpriteAsset*>*& TMPro::MaterialReferenceManager::dyn_m_SpriteAssetReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::dyn_m_SpriteAssetReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteAssetReferenceLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_SpriteAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_ColorGradient> m_ColorGradientReferenceLookup
::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_ColorGradient*>*& TMPro::MaterialReferenceManager::dyn_m_ColorGradientReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::dyn_m_ColorGradientReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorGradientReferenceLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::TMPro::TMP_ColorGradient*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.get_instance
::TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::MaterialReferenceManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAsset
void TMPro::MaterialReferenceManager::AddFontAsset(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAssetInternal
void TMPro::MaterialReferenceManager::AddFontAssetInternal(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFontAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(::TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(::TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(int hashCode, ::TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(int hashCode, ::TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterial
void TMPro::MaterialReferenceManager::AddFontMaterial(int hashCode, ::UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddFontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterialInternal
void TMPro::MaterialReferenceManager::AddFontMaterialInternal(int hashCode, ::UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddFontMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFontMaterialInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset
void TMPro::MaterialReferenceManager::AddColorGradientPreset(int hashCode, ::TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddColorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset_Internal
void TMPro::MaterialReferenceManager::AddColorGradientPreset_Internal(int hashCode, ::TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::AddColorGradientPreset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColorGradientPreset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(::TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, font);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(::TMPro::TMP_SpriteAsset* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sprite);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAsset
bool TMPro::MaterialReferenceManager::TryGetFontAsset(int hashCode, ByRef<::TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, byref(fontAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAssetInternal
bool TMPro::MaterialReferenceManager::TryGetFontAssetInternal(int hashCode, ByRef<::TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFontAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hashCode, byref(fontAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAsset
bool TMPro::MaterialReferenceManager::TryGetSpriteAsset(int hashCode, ByRef<::TMPro::TMP_SpriteAsset*> spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_SpriteAsset*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, byref(spriteAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAssetInternal
bool TMPro::MaterialReferenceManager::TryGetSpriteAssetInternal(int hashCode, ByRef<::TMPro::TMP_SpriteAsset*> spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_SpriteAsset*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hashCode, byref(spriteAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPreset
bool TMPro::MaterialReferenceManager::TryGetColorGradientPreset(int hashCode, ByRef<::TMPro::TMP_ColorGradient*> gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetColorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_ColorGradient*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, byref(gradientPreset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPresetInternal
bool TMPro::MaterialReferenceManager::TryGetColorGradientPresetInternal(int hashCode, ByRef<::TMPro::TMP_ColorGradient*> gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetColorGradientPresetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetColorGradientPresetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_ColorGradient*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hashCode, byref(gradientPreset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterial
bool TMPro::MaterialReferenceManager::TryGetMaterial(int hashCode, ByRef<::UnityEngine::Material*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Material*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashCode, byref(material));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterialInternal
bool TMPro::MaterialReferenceManager::TryGetMaterialInternal(int hashCode, ByRef<::UnityEngine::Material*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReferenceManager::TryGetMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMaterialInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Material*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hashCode, byref(material));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
int& TMPro::MaterialReference::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_FontAsset fontAsset
::TMPro::TMP_FontAsset*& TMPro::MaterialReference::dyn_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_fontAsset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_SpriteAsset spriteAsset
::TMPro::TMP_SpriteAsset*& TMPro::MaterialReference::dyn_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_spriteAsset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
::UnityEngine::Material*& TMPro::MaterialReference::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_material");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDefaultMaterial
bool& TMPro::MaterialReference::dyn_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_isDefaultMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFallbackMaterial
bool& TMPro::MaterialReference::dyn_isFallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_isFallbackMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFallbackMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material fallbackMaterial
::UnityEngine::Material*& TMPro::MaterialReference::dyn_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_fallbackMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single padding
float& TMPro::MaterialReference::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_padding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 referenceCount
int& TMPro::MaterialReference::dyn_referenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::dyn_referenceCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.MaterialReference..ctor
TMPro::MaterialReference::MaterialReference(int index, ::TMPro::TMP_FontAsset* fontAsset, ::TMPro::TMP_SpriteAsset* spriteAsset, ::UnityEngine::Material* material, float padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(padding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, fontAsset, spriteAsset, material, padding);
}
// Autogenerated method: TMPro.MaterialReference.Contains
bool TMPro::MaterialReference::Contains(::ArrayW<::TMPro::MaterialReference> materialReferences, ::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, materialReferences, fontAsset);
}
// Autogenerated method: TMPro.MaterialReference.AddMaterialReference
int TMPro::MaterialReference::AddMaterialReference(::UnityEngine::Material* material, ::TMPro::TMP_FontAsset* fontAsset, ByRef<::ArrayW<::TMPro::MaterialReference>> materialReferences, ::System::Collections::Generic::Dictionary_2<int, int>* materialReferenceIndexLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::AddMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "AddMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(materialReferenceIndexLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, fontAsset, byref(materialReferences), materialReferenceIndexLookup);
}
// Autogenerated method: TMPro.MaterialReference.AddMaterialReference
int TMPro::MaterialReference::AddMaterialReference(::UnityEngine::Material* material, ::TMPro::TMP_SpriteAsset* spriteAsset, ByRef<::ArrayW<::TMPro::MaterialReference>> materialReferences, ::System::Collections::Generic::Dictionary_2<int, int>* materialReferenceIndexLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::MaterialReference::AddMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "AddMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(materialReferenceIndexLookup)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, material, spriteAsset, byref(materialReferences), materialReferenceIndexLookup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Asset
#include "TMPro/TMP_Asset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_InstanceID
int& TMPro::TMP_Asset::dyn_m_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Asset::dyn_m_InstanceID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
int& TMPro::TMP_Asset::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Asset::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
::UnityEngine::Material*& TMPro::TMP_Asset::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Asset::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialHashCode
int& TMPro::TMP_Asset::dyn_materialHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Asset::dyn_materialHashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Asset.get_instanceID
int TMPro::TMP_Asset::get_instanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Asset::get_instanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Vertex
#include "TMPro/TMP_Vertex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_Vertex k_Zero
::TMPro::TMP_Vertex TMPro::TMP_Vertex::_get_k_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::_get_k_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Vertex>("TMPro", "TMP_Vertex", "k_Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_Vertex k_Zero
void TMPro::TMP_Vertex::_set_k_Zero(::TMPro::TMP_Vertex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::_set_k_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Vertex", "k_Zero", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
::UnityEngine::Vector3& TMPro::TMP_Vertex::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 uv
::UnityEngine::Vector2& TMPro::TMP_Vertex::dyn_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::dyn_uv");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uv"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 uv2
::UnityEngine::Vector2& TMPro::TMP_Vertex::dyn_uv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::dyn_uv2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uv2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 uv4
::UnityEngine::Vector2& TMPro::TMP_Vertex::dyn_uv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::dyn_uv4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uv4"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 color
::UnityEngine::Color32& TMPro::TMP_Vertex::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::dyn_color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Vertex.get_zero
::TMPro::TMP_Vertex TMPro::TMP_Vertex::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Vertex", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Vertex, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Vertex..cctor
void TMPro::TMP_Vertex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Vertex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Vertex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Offset
#include "TMPro/TMP_Offset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_Offset k_ZeroOffset
::TMPro::TMP_Offset TMPro::TMP_Offset::_get_k_ZeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::_get_k_ZeroOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Offset>("TMPro", "TMP_Offset", "k_ZeroOffset"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_Offset k_ZeroOffset
void TMPro::TMP_Offset::_set_k_ZeroOffset(::TMPro::TMP_Offset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::_set_k_ZeroOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Offset", "k_ZeroOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Left
float& TMPro::TMP_Offset::dyn_m_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::dyn_m_Left");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Left"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Right
float& TMPro::TMP_Offset::dyn_m_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::dyn_m_Right");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Right"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Top
float& TMPro::TMP_Offset::dyn_m_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::dyn_m_Top");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Top"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Bottom
float& TMPro::TMP_Offset::dyn_m_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::dyn_m_Bottom");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Bottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Offset.get_left
float TMPro::TMP_Offset::get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_left
void TMPro::TMP_Offset::set_left(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_right
float TMPro::TMP_Offset::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_right
void TMPro::TMP_Offset::set_right(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_top
float TMPro::TMP_Offset::get_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_top
void TMPro::TMP_Offset::set_top(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_top");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_top", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_bottom
float TMPro::TMP_Offset::get_bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_bottom
void TMPro::TMP_Offset::set_bottom(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_bottom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_bottom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_horizontal
float TMPro::TMP_Offset::get_horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_horizontal
void TMPro::TMP_Offset::set_horizontal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_horizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_horizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_vertical
float TMPro::TMP_Offset::get_vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.set_vertical
void TMPro::TMP_Offset::set_vertical(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::set_vertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_vertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Offset.get_zero
::TMPro::TMP_Offset TMPro::TMP_Offset::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Offset", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Offset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset..ctor
// ABORTED elsewhere.  TMPro::TMP_Offset::TMP_Offset(float left, float right, float top, float bottom)
// Autogenerated method: TMPro.TMP_Offset..ctor
TMPro::TMP_Offset::TMP_Offset(float horizontal, float vertical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(horizontal), ::il2cpp_utils::ExtractType(vertical)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, horizontal, vertical);
}
// Autogenerated method: TMPro.TMP_Offset..cctor
void TMPro::TMP_Offset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Offset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.Equals
bool TMPro::TMP_Offset::Equals(::TMPro::TMP_Offset other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: TMPro.TMP_Offset.GetHashCode
int TMPro::TMP_Offset::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Offset.Equals
bool TMPro::TMP_Offset::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: TMPro.TMP_Offset.op_Equality
bool TMPro::operator ==(const ::TMPro::TMP_Offset& lhs, const ::TMPro::TMP_Offset& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Offset", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: TMPro.TMP_Offset.op_Inequality
bool TMPro::operator !=(const ::TMPro::TMP_Offset& lhs, const ::TMPro::TMP_Offset& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Offset", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: TMPro.TMP_Offset.op_Multiply
::TMPro::TMP_Offset TMPro::operator*(const ::TMPro::TMP_Offset& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Offset::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Offset", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Offset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.HighlightState
#include "TMPro/HighlightState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32 color
::UnityEngine::Color32& TMPro::HighlightState::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::dyn_color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Offset padding
::TMPro::TMP_Offset& TMPro::HighlightState::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::dyn_padding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Offset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.HighlightState..ctor
// ABORTED elsewhere.  TMPro::HighlightState::HighlightState(::UnityEngine::Color32 color, ::TMPro::TMP_Offset padding)
// Autogenerated method: TMPro.HighlightState.Equals
bool TMPro::HighlightState::Equals(::TMPro::HighlightState other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: TMPro.HighlightState.GetHashCode
int TMPro::HighlightState::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.HighlightState.Equals
bool TMPro::HighlightState::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: TMPro.HighlightState.op_Equality
bool TMPro::operator ==(const ::TMPro::HighlightState& lhs, const ::TMPro::HighlightState& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "HighlightState", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: TMPro.HighlightState.op_Inequality
bool TMPro::operator !=(const ::TMPro::HighlightState& lhs, const ::TMPro::HighlightState& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::HighlightState::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "HighlightState", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorMode
#include "TMPro/ColorMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode Single
::TMPro::ColorMode TMPro::ColorMode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorMode>("TMPro", "ColorMode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode Single
void TMPro::ColorMode::_set_Single(::TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode HorizontalGradient
::TMPro::ColorMode TMPro::ColorMode::_get_HorizontalGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_get_HorizontalGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorMode>("TMPro", "ColorMode", "HorizontalGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode HorizontalGradient
void TMPro::ColorMode::_set_HorizontalGradient(::TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_set_HorizontalGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "HorizontalGradient", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode VerticalGradient
::TMPro::ColorMode TMPro::ColorMode::_get_VerticalGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_get_VerticalGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorMode>("TMPro", "ColorMode", "VerticalGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode VerticalGradient
void TMPro::ColorMode::_set_VerticalGradient(::TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_set_VerticalGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "VerticalGradient", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode FourCornersGradient
::TMPro::ColorMode TMPro::ColorMode::_get_FourCornersGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_get_FourCornersGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorMode>("TMPro", "ColorMode", "FourCornersGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode FourCornersGradient
void TMPro::ColorMode::_set_FourCornersGradient(::TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::_set_FourCornersGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "FourCornersGradient", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::ColorMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.ColorMode k_DefaultColorMode
::TMPro::ColorMode TMPro::TMP_ColorGradient::_get_k_DefaultColorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::_get_k_DefaultColorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorMode>("TMPro", "TMP_ColorGradient", "k_DefaultColorMode"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.ColorMode k_DefaultColorMode
void TMPro::TMP_ColorGradient::_set_k_DefaultColorMode(::TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::_set_k_DefaultColorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_ColorGradient", "k_DefaultColorMode", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color k_DefaultColor
::UnityEngine::Color TMPro::TMP_ColorGradient::_get_k_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::_get_k_DefaultColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("TMPro", "TMP_ColorGradient", "k_DefaultColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color k_DefaultColor
void TMPro::TMP_ColorGradient::_set_k_DefaultColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::_set_k_DefaultColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_ColorGradient", "k_DefaultColor", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.ColorMode colorMode
::TMPro::ColorMode& TMPro::TMP_ColorGradient::dyn_colorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::dyn_colorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMode"))->offset;
  return *reinterpret_cast<::TMPro::ColorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topLeft
::UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_topLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::dyn_topLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topRight
::UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_topRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::dyn_topRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomLeft
::UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_bottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::dyn_bottomLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomLeft"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomRight
::UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_bottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::dyn_bottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomRight"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_ColorGradient..cctor
void TMPro::TMP_ColorGradient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_ColorGradient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_ColorGradient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Compatibility
#include "TMPro/TMP_Compatibility.hpp"
// Including type: TMPro.TMP_Compatibility/TMPro.AnchorPositions
#include "TMPro/TMP_Compatibility_AnchorPositions.hpp"
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_Compatibility.ConvertTextAlignmentEnumValues
::TMPro::TextAlignmentOptions TMPro::TMP_Compatibility::ConvertTextAlignmentEnumValues(::TMPro::TextAlignmentOptions oldValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::ConvertTextAlignmentEnumValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Compatibility", "ConvertTextAlignmentEnumValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TextAlignmentOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Compatibility/TMPro.AnchorPositions
#include "TMPro/TMP_Compatibility_AnchorPositions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions TopLeft
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions TopLeft
void TMPro::TMP_Compatibility::AnchorPositions::_set_TopLeft(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Top
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Top
void TMPro::TMP_Compatibility::AnchorPositions::_set_Top(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions TopRight
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions TopRight
void TMPro::TMP_Compatibility::AnchorPositions::_set_TopRight(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Left
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Left
void TMPro::TMP_Compatibility::AnchorPositions::_set_Left(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Center
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Center
void TMPro::TMP_Compatibility::AnchorPositions::_set_Center(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Right
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Right
void TMPro::TMP_Compatibility::AnchorPositions::_set_Right(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BottomLeft
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BottomLeft
void TMPro::TMP_Compatibility::AnchorPositions::_set_BottomLeft(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Bottom
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions Bottom
void TMPro::TMP_Compatibility::AnchorPositions::_set_Bottom(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BottomRight
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BottomRight
void TMPro::TMP_Compatibility::AnchorPositions::_set_BottomRight(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BaseLine
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_BaseLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_BaseLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "BaseLine"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions BaseLine
void TMPro::TMP_Compatibility::AnchorPositions::_set_BaseLine(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_BaseLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "BaseLine", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions None
::TMPro::TMP_Compatibility::AnchorPositions TMPro::TMP_Compatibility::AnchorPositions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Compatibility::AnchorPositions>("TMPro", "TMP_Compatibility/AnchorPositions", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Compatibility/TMPro.AnchorPositions None
void TMPro::TMP_Compatibility::AnchorPositions::_set_None(::TMPro::TMP_Compatibility::AnchorPositions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Compatibility/AnchorPositions", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_Compatibility::AnchorPositions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Compatibility::AnchorPositions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITweenValue
#include "TMPro/ITweenValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITweenValue.get_ignoreTimeScale
bool TMPro::ITweenValue::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITweenValue::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ITweenValue.get_duration
float TMPro::ITweenValue::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITweenValue::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ITweenValue.TweenValue
void TMPro::ITweenValue::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITweenValue::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.ITweenValue.ValidTarget
bool TMPro::ITweenValue::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ITweenValue::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween
#include "TMPro/ColorTween.hpp"
// Including type: TMPro.ColorTween/TMPro.ColorTweenCallback
#include "TMPro/ColorTween_ColorTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.ColorTween/TMPro.ColorTweenCallback m_Target
::TMPro::ColorTween::ColorTweenCallback*& TMPro::ColorTween::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::TMPro::ColorTween::ColorTweenCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_StartColor
::UnityEngine::Color& TMPro::ColorTween::dyn_m_StartColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_StartColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TargetColor
::UnityEngine::Color& TMPro::ColorTween::dyn_m_TargetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_TargetColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.ColorTween/TMPro.ColorTweenMode m_TweenMode
::TMPro::ColorTween::ColorTweenMode& TMPro::ColorTween::dyn_m_TweenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_TweenMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TweenMode"))->offset;
  return *reinterpret_cast<::TMPro::ColorTween::ColorTweenMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Duration
float& TMPro::ColorTween::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_Duration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreTimeScale
bool& TMPro::ColorTween::dyn_m_IgnoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::dyn_m_IgnoreTimeScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreTimeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.ColorTween.get_startColor
::UnityEngine::Color TMPro::ColorTween::get_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::get_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_startColor
void TMPro::ColorTween::set_startColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_targetColor
::UnityEngine::Color TMPro::ColorTween::get_targetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::get_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_targetColor
void TMPro::ColorTween::set_targetColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::set_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_tweenMode
::TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::get_tweenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::get_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::ColorTween::ColorTweenMode, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_tweenMode
void TMPro::ColorTween::set_tweenMode(::TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::set_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_duration
float TMPro::ColorTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_duration
void TMPro::ColorTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_ignoreTimeScale
bool TMPro::ColorTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_ignoreTimeScale
void TMPro::ColorTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.TweenValue
void TMPro::ColorTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.ColorTween.AddOnChangedCallback
void TMPro::ColorTween::AddOnChangedCallback(::UnityEngine::Events::UnityAction_1<::UnityEngine::Color>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: TMPro.ColorTween.GetIgnoreTimescale
bool TMPro::ColorTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.GetDuration
float TMPro::ColorTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.ValidTarget
bool TMPro::ColorTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween/TMPro.ColorTweenMode
#include "TMPro/ColorTween.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode All
::TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "All"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode All
void TMPro::ColorTween::ColorTweenMode::_set_All(::TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "All", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode RGB
::TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_get_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "RGB"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode RGB
void TMPro::ColorTween::ColorTweenMode::_set_RGB(::TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_set_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "RGB", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode Alpha
::TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_get_Alpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "Alpha"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode Alpha
void TMPro::ColorTween::ColorTweenMode::_set_Alpha(::TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::_set_Alpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "Alpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::ColorTween::ColorTweenMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::ColorTween::ColorTweenMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween/TMPro.ColorTweenCallback
#include "TMPro/ColorTween_ColorTweenCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FloatTween
#include "TMPro/FloatTween.hpp"
// Including type: TMPro.FloatTween/TMPro.FloatTweenCallback
#include "TMPro/FloatTween_FloatTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.FloatTween/TMPro.FloatTweenCallback m_Target
::TMPro::FloatTween::FloatTweenCallback*& TMPro::FloatTween::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::TMPro::FloatTween::FloatTweenCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_StartValue
float& TMPro::FloatTween::dyn_m_StartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::dyn_m_StartValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetValue
float& TMPro::FloatTween::dyn_m_TargetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::dyn_m_TargetValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Duration
float& TMPro::FloatTween::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::dyn_m_Duration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreTimeScale
bool& TMPro::FloatTween::dyn_m_IgnoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::dyn_m_IgnoreTimeScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreTimeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FloatTween.get_startValue
float TMPro::FloatTween::get_startValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::get_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_startValue
void TMPro::FloatTween::set_startValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::set_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_targetValue
float TMPro::FloatTween::get_targetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::get_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_targetValue
void TMPro::FloatTween::set_targetValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::set_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_duration
float TMPro::FloatTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_duration
void TMPro::FloatTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_ignoreTimeScale
bool TMPro::FloatTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_ignoreTimeScale
void TMPro::FloatTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.TweenValue
void TMPro::FloatTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.FloatTween.AddOnChangedCallback
void TMPro::FloatTween::AddOnChangedCallback(::UnityEngine::Events::UnityAction_1<float>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: TMPro.FloatTween.GetIgnoreTimescale
bool TMPro::FloatTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.GetDuration
float TMPro::FloatTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.ValidTarget
bool TMPro::FloatTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FloatTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FloatTween/TMPro.FloatTweenCallback
#include "TMPro/FloatTween_FloatTweenCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_DefaultControls
#include "TMPro/TMP_DefaultControls.hpp"
// Including type: TMPro.TMP_DefaultControls/TMPro.Resources
#include "TMPro/TMP_DefaultControls_Resources.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kWidth
float TMPro::TMP_DefaultControls::_get_kWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_kWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWidth
void TMPro::TMP_DefaultControls::_set_kWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_kWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThickHeight
float TMPro::TMP_DefaultControls::_get_kThickHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_kThickHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kThickHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThickHeight
void TMPro::TMP_DefaultControls::_set_kThickHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_kThickHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kThickHeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThinHeight
float TMPro::TMP_DefaultControls::_get_kThinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_kThinHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kThinHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThinHeight
void TMPro::TMP_DefaultControls::_set_kThinHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_kThinHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kThinHeight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_TextElementSize
::UnityEngine::Vector2 TMPro::TMP_DefaultControls::_get_s_TextElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_s_TextElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_DefaultControls", "s_TextElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_TextElementSize
void TMPro::TMP_DefaultControls::_set_s_TextElementSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_s_TextElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_TextElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThickElementSize
::UnityEngine::Vector2 TMPro::TMP_DefaultControls::_get_s_ThickElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_s_ThickElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_DefaultControls", "s_ThickElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThickElementSize
void TMPro::TMP_DefaultControls::_set_s_ThickElementSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_s_ThickElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_ThickElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThinElementSize
::UnityEngine::Vector2 TMPro::TMP_DefaultControls::_get_s_ThinElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_s_ThinElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("TMPro", "TMP_DefaultControls", "s_ThinElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThinElementSize
void TMPro::TMP_DefaultControls::_set_s_ThinElementSize(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_s_ThinElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_ThinElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_DefaultSelectableColor
::UnityEngine::Color TMPro::TMP_DefaultControls::_get_s_DefaultSelectableColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_s_DefaultSelectableColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("TMPro", "TMP_DefaultControls", "s_DefaultSelectableColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_DefaultSelectableColor
void TMPro::TMP_DefaultControls::_set_s_DefaultSelectableColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_s_DefaultSelectableColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_DefaultSelectableColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_TextColor
::UnityEngine::Color TMPro::TMP_DefaultControls::_get_s_TextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_get_s_TextColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("TMPro", "TMP_DefaultControls", "s_TextColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_TextColor
void TMPro::TMP_DefaultControls::_set_s_TextColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::_set_s_TextColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_TextColor", value));
}
// Autogenerated method: TMPro.TMP_DefaultControls..cctor
void TMPro::TMP_DefaultControls::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateUIElementRoot
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateUIElementRoot(::StringW name, ::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateUIElementRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateUIElementRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, size);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateUIObject
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateUIObject(::StringW name, ::UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateUIObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateUIObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, parent);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetDefaultTextValues
void TMPro::TMP_DefaultControls::SetDefaultTextValues(::TMPro::TMP_Text* lbl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::SetDefaultTextValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetDefaultTextValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lbl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lbl);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetDefaultColorTransitionValues
void TMPro::TMP_DefaultControls::SetDefaultColorTransitionValues(::UnityEngine::UI::Selectable* slider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::SetDefaultColorTransitionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetDefaultColorTransitionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slider);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetParentAndAlign
void TMPro::TMP_DefaultControls::SetParentAndAlign(::UnityEngine::GameObject* child, ::UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::SetParentAndAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetParentAndAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, child, parent);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetLayerRecursively
void TMPro::TMP_DefaultControls::SetLayerRecursively(::UnityEngine::GameObject* go, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::SetLayerRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetLayerRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go, layer);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateScrollbar
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateScrollbar(::TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateButton
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateButton(::TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateText
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateText(::TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateInputField
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateInputField(::TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateDropdown
::UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateDropdown(::TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_DefaultControls::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resources);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown
#include "TMPro/TMP_Dropdown.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionDataList
#include "TMPro/TMP_Dropdown_OptionDataList.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownEvent
#include "TMPro/TMP_Dropdown_DropdownEvent.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass69_0
#include "TMPro/TMP_Dropdown_--c__DisplayClass69_0.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81
#include "TMPro/TMP_Dropdown_-DelayedDestroyDropdownList-d__81.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TweenRunner`1
#include "TMPro/TweenRunner_1.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_Dropdown/TMPro.OptionData s_NoOptionData
::TMPro::TMP_Dropdown::OptionData* TMPro::TMP_Dropdown::_get_s_NoOptionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::_get_s_NoOptionData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_Dropdown::OptionData*>("TMPro", "TMP_Dropdown", "s_NoOptionData"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_Dropdown/TMPro.OptionData s_NoOptionData
void TMPro::TMP_Dropdown::_set_s_NoOptionData(::TMPro::TMP_Dropdown::OptionData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::_set_s_NoOptionData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Dropdown", "s_NoOptionData", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Template
::UnityEngine::RectTransform*& TMPro::TMP_Dropdown::dyn_m_Template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Template"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_CaptionText
::TMPro::TMP_Text*& TMPro::TMP_Dropdown::dyn_m_CaptionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_CaptionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaptionText"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_CaptionImage
::UnityEngine::UI::Image*& TMPro::TMP_Dropdown::dyn_m_CaptionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_CaptionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaptionImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic m_Placeholder
::UnityEngine::UI::Graphic*& TMPro::TMP_Dropdown::dyn_m_Placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Placeholder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Placeholder"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_ItemText
::TMPro::TMP_Text*& TMPro::TMP_Dropdown::dyn_m_ItemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_ItemText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemText"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_ItemImage
::UnityEngine::UI::Image*& TMPro::TMP_Dropdown::dyn_m_ItemImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_ItemImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Value
int& TMPro::TMP_Dropdown::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Dropdown/TMPro.OptionDataList m_Options
::TMPro::TMP_Dropdown::OptionDataList*& TMPro::TMP_Dropdown::dyn_m_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Options"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Dropdown::OptionDataList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Dropdown/TMPro.DropdownEvent m_OnValueChanged
::TMPro::TMP_Dropdown::DropdownEvent*& TMPro::TMP_Dropdown::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Dropdown::DropdownEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_AlphaFadeSpeed
float& TMPro::TMP_Dropdown::dyn_m_AlphaFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_AlphaFadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlphaFadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Dropdown
::UnityEngine::GameObject*& TMPro::TMP_Dropdown::dyn_m_Dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dropdown"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Blocker
::UnityEngine::GameObject*& TMPro::TMP_Dropdown::dyn_m_Blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Blocker"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Dropdown/TMPro.DropdownItem> m_Items
::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::DropdownItem*>*& TMPro::TMP_Dropdown::dyn_m_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Items"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::DropdownItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TweenRunner`1<TMPro.FloatTween> m_AlphaTweenRunner
::TMPro::TweenRunner_1<::TMPro::FloatTween>*& TMPro::TMP_Dropdown::dyn_m_AlphaTweenRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_AlphaTweenRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlphaTweenRunner"))->offset;
  return *reinterpret_cast<::TMPro::TweenRunner_1<::TMPro::FloatTween>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validTemplate
bool& TMPro::TMP_Dropdown::dyn_validTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_validTemplate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validTemplate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_Coroutine
::UnityEngine::Coroutine*& TMPro::TMP_Dropdown::dyn_m_Coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::dyn_m_Coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Coroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_template
::UnityEngine::RectTransform* TMPro::TMP_Dropdown::get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_template
void TMPro::TMP_Dropdown::set_template(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_captionText
::TMPro::TMP_Text* TMPro::TMP_Dropdown::get_captionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_captionText
void TMPro::TMP_Dropdown::set_captionText(::TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_captionImage
::UnityEngine::UI::Image* TMPro::TMP_Dropdown::get_captionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_captionImage
void TMPro::TMP_Dropdown::set_captionImage(::UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_placeholder
::UnityEngine::UI::Graphic* TMPro::TMP_Dropdown::get_placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_placeholder
void TMPro::TMP_Dropdown::set_placeholder(::UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_itemText
::TMPro::TMP_Text* TMPro::TMP_Dropdown::get_itemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_itemText
void TMPro::TMP_Dropdown::set_itemText(::TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_itemImage
::UnityEngine::UI::Image* TMPro::TMP_Dropdown::get_itemImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_itemImage
void TMPro::TMP_Dropdown::set_itemImage(::UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_options
::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>* TMPro::TMP_Dropdown::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_options
void TMPro::TMP_Dropdown::set_options(::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_onValueChanged
::TMPro::TMP_Dropdown::DropdownEvent* TMPro::TMP_Dropdown::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Dropdown::DropdownEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_onValueChanged
void TMPro::TMP_Dropdown::set_onValueChanged(::TMPro::TMP_Dropdown::DropdownEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_alphaFadeSpeed
float TMPro::TMP_Dropdown::get_alphaFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_alphaFadeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphaFadeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_alphaFadeSpeed
void TMPro::TMP_Dropdown::set_alphaFadeSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_alphaFadeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alphaFadeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_value
int TMPro::TMP_Dropdown::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_value
void TMPro::TMP_Dropdown::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_IsExpanded
bool TMPro::TMP_Dropdown::get_IsExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::get_IsExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetValueWithoutNotify
void TMPro::TMP_Dropdown::SetValueWithoutNotify(int input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::SetValueWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetValue
void TMPro::TMP_Dropdown::SetValue(int value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: TMPro.TMP_Dropdown.RefreshShownValue
void TMPro::TMP_Dropdown::RefreshShownValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::RefreshShownValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshShownValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(::System::Collections::Generic::List_1<::StringW>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(::System::Collections::Generic::List_1<::UnityEngine::Sprite*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.ClearOptions
void TMPro::TMP_Dropdown::ClearOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::ClearOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetupTemplate
void TMPro::TMP_Dropdown::SetupTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::SetupTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnPointerClick
void TMPro::TMP_Dropdown::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnSubmit
void TMPro::TMP_Dropdown::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnCancel
void TMPro::TMP_Dropdown::OnCancel(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.Show
void TMPro::TMP_Dropdown::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateBlocker
::UnityEngine::GameObject* TMPro::TMP_Dropdown::CreateBlocker(::UnityEngine::Canvas* rootCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::CreateBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootCanvas)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, rootCanvas);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyBlocker
void TMPro::TMP_Dropdown::DestroyBlocker(::UnityEngine::GameObject* blocker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DestroyBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, blocker);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateDropdownList
::UnityEngine::GameObject* TMPro::TMP_Dropdown::CreateDropdownList(::UnityEngine::GameObject* _template) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::CreateDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_template)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, _template);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyDropdownList
void TMPro::TMP_Dropdown::DestroyDropdownList(::UnityEngine::GameObject* dropdownList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DestroyDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownList);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateItem
::TMPro::TMP_Dropdown::DropdownItem* TMPro::TMP_Dropdown::CreateItem(::TMPro::TMP_Dropdown::DropdownItem* itemTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::CreateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemTemplate)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Dropdown::DropdownItem*, false>(this, ___internal__method, itemTemplate);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyItem
void TMPro::TMP_Dropdown::DestroyItem(::TMPro::TMP_Dropdown::DropdownItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DestroyItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddItem
::TMPro::TMP_Dropdown::DropdownItem* TMPro::TMP_Dropdown::AddItem(::TMPro::TMP_Dropdown::OptionData* data, bool selected, ::TMPro::TMP_Dropdown::DropdownItem* itemTemplate, ::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::DropdownItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(selected), ::il2cpp_utils::ExtractType(itemTemplate), ::il2cpp_utils::ExtractType(items)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Dropdown::DropdownItem*, false>(this, ___internal__method, data, selected, itemTemplate, items);
}
// Autogenerated method: TMPro.TMP_Dropdown.AlphaFadeList
void TMPro::TMP_Dropdown::AlphaFadeList(float duration, float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration, alpha);
}
// Autogenerated method: TMPro.TMP_Dropdown.AlphaFadeList
void TMPro::TMP_Dropdown::AlphaFadeList(float duration, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration, start, end);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetAlpha
void TMPro::TMP_Dropdown::SetAlpha(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::SetAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, alpha);
}
// Autogenerated method: TMPro.TMP_Dropdown.Hide
void TMPro::TMP_Dropdown::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.DelayedDestroyDropdownList
::System::Collections::IEnumerator* TMPro::TMP_Dropdown::DelayedDestroyDropdownList(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DelayedDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: TMPro.TMP_Dropdown.ImmediateDestroyDropdownList
void TMPro::TMP_Dropdown::ImmediateDestroyDropdownList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::ImmediateDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImmediateDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnSelectItem
void TMPro::TMP_Dropdown::OnSelectItem(::UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OnSelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: TMPro.TMP_Dropdown..cctor
void TMPro::TMP_Dropdown::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Dropdown", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.Awake
void TMPro::TMP_Dropdown::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.Start
void TMPro::TMP_Dropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnDisable
void TMPro::TMP_Dropdown::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_Text
::TMPro::TMP_Text*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_Image
::UnityEngine::UI::Image*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::dyn_m_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_RectTransform
::UnityEngine::RectTransform*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_RectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::dyn_m_RectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle m_Toggle
::UnityEngine::UI::Toggle*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::dyn_m_Toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_text
::TMPro::TMP_Text* TMPro::TMP_Dropdown::DropdownItem::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_text
void TMPro::TMP_Dropdown::DropdownItem::set_text(::TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_image
::UnityEngine::UI::Image* TMPro::TMP_Dropdown::DropdownItem::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_image
void TMPro::TMP_Dropdown::DropdownItem::set_image(::UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_rectTransform
::UnityEngine::RectTransform* TMPro::TMP_Dropdown::DropdownItem::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_rectTransform
void TMPro::TMP_Dropdown::DropdownItem::set_rectTransform(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::set_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_toggle
::UnityEngine::UI::Toggle* TMPro::TMP_Dropdown::DropdownItem::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_toggle
void TMPro::TMP_Dropdown::DropdownItem::set_toggle(::UnityEngine::UI::Toggle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::set_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.OnPointerEnter
void TMPro::TMP_Dropdown::DropdownItem::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.OnCancel
void TMPro::TMP_Dropdown::DropdownItem::OnCancel(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::DropdownItem::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Text
::StringW& TMPro::TMP_Dropdown::OptionData::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite m_Image
::UnityEngine::Sprite*& TMPro::TMP_Dropdown::OptionData::dyn_m_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::dyn_m_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Image"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.get_text
::StringW TMPro::TMP_Dropdown::OptionData::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.set_text
void TMPro::TMP_Dropdown::OptionData::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.get_image
::UnityEngine::Sprite* TMPro::TMP_Dropdown::OptionData::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.set_image
void TMPro::TMP_Dropdown::OptionData::set_image(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionData::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.OptionDataList
#include "TMPro/TMP_Dropdown_OptionDataList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Dropdown/TMPro.OptionData> m_Options
::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>*& TMPro::TMP_Dropdown::OptionDataList::dyn_m_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionDataList::dyn_m_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Options"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionDataList.get_options
::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>* TMPro::TMP_Dropdown::OptionDataList::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionDataList::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionDataList.set_options
void TMPro::TMP_Dropdown::OptionDataList::set_options(::System::Collections::Generic::List_1<::TMPro::TMP_Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::OptionDataList::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownEvent
#include "TMPro/TMP_Dropdown_DropdownEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass69_0
#include "TMPro/TMP_Dropdown_--c__DisplayClass69_0.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown/TMPro.DropdownItem item
::TMPro::TMP_Dropdown::DropdownItem*& TMPro::TMP_Dropdown::$$c__DisplayClass69_0::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$$c__DisplayClass69_0::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Dropdown::DropdownItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown <>4__this
::TMPro::TMP_Dropdown*& TMPro::TMP_Dropdown::$$c__DisplayClass69_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$$c__DisplayClass69_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass69_0.<Show>b__0
void TMPro::TMP_Dropdown::$$c__DisplayClass69_0::$Show$b__0(bool x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$$c__DisplayClass69_0::<Show>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Show>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81
#include "TMPro/TMP_Dropdown_-DelayedDestroyDropdownList-d__81.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
float& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown <>4__this
::TMPro::TMP_Dropdown*& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81.System.IDisposable.Dispose
void TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81.MoveNext
bool TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__81.System.Collections.IEnumerator.Reset
void TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__81::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.AtlasPopulationMode
#include "TMPro/AtlasPopulationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.AtlasPopulationMode Static
::TMPro::AtlasPopulationMode TMPro::AtlasPopulationMode::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::AtlasPopulationMode::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::AtlasPopulationMode>("TMPro", "AtlasPopulationMode", "Static"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.AtlasPopulationMode Static
void TMPro::AtlasPopulationMode::_set_Static(::TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::AtlasPopulationMode::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "AtlasPopulationMode", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.AtlasPopulationMode Dynamic
::TMPro::AtlasPopulationMode TMPro::AtlasPopulationMode::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::AtlasPopulationMode::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::AtlasPopulationMode>("TMPro", "AtlasPopulationMode", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.AtlasPopulationMode Dynamic
void TMPro::AtlasPopulationMode::_set_Dynamic(::TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::AtlasPopulationMode::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "AtlasPopulationMode", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::AtlasPopulationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::AtlasPopulationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_FontAsset/TMPro.<>c
#include "TMPro/TMP_FontAsset_--c.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: TMPro.FaceInfo_Legacy
#include "TMPro/FaceInfo_Legacy.hpp"
// Including type: TMPro.TMP_Glyph
#include "TMPro/TMP_Glyph.hpp"
// Including type: TMPro.KerningTable
#include "TMPro/KerningTable.hpp"
// Including type: TMPro.TMP_FontFeatureTable
#include "TMPro/TMP_FontFeatureTable.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ReadFontAssetDefinitionMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_ReadFontAssetDefinitionMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_ReadFontAssetDefinitionMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_ReadFontAssetDefinitionMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ReadFontAssetDefinitionMarker
void TMPro::TMP_FontAsset::_set_k_ReadFontAssetDefinitionMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_ReadFontAssetDefinitionMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_ReadFontAssetDefinitionMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_AddSynthesizedCharactersMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_AddSynthesizedCharactersMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_AddSynthesizedCharactersMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_AddSynthesizedCharactersMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_AddSynthesizedCharactersMarker
void TMPro::TMP_FontAsset::_set_k_AddSynthesizedCharactersMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_AddSynthesizedCharactersMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_AddSynthesizedCharactersMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharacterMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_TryAddCharacterMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_TryAddCharacterMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_TryAddCharacterMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharacterMarker
void TMPro::TMP_FontAsset::_set_k_TryAddCharacterMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_TryAddCharacterMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_TryAddCharacterMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharactersMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_TryAddCharactersMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_TryAddCharactersMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_TryAddCharactersMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_TryAddCharactersMarker
void TMPro::TMP_FontAsset::_set_k_TryAddCharactersMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_TryAddCharactersMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_TryAddCharactersMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_UpdateGlyphAdjustmentRecordsMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_UpdateGlyphAdjustmentRecordsMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_UpdateGlyphAdjustmentRecordsMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_UpdateGlyphAdjustmentRecordsMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_UpdateGlyphAdjustmentRecordsMarker
void TMPro::TMP_FontAsset::_set_k_UpdateGlyphAdjustmentRecordsMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_UpdateGlyphAdjustmentRecordsMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_UpdateGlyphAdjustmentRecordsMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_ClearFontAssetDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_ClearFontAssetDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_ClearFontAssetDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_ClearFontAssetDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_ClearFontAssetDataMarker
void TMPro::TMP_FontAsset::_set_k_ClearFontAssetDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_ClearFontAssetDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_ClearFontAssetDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private Unity.Profiling.ProfilerMarker k_UpdateFontAssetDataMarker
::Unity::Profiling::ProfilerMarker TMPro::TMP_FontAsset::_get_k_UpdateFontAssetDataMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_UpdateFontAssetDataMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("TMPro", "TMP_FontAsset", "k_UpdateFontAssetDataMarker"));
}
// Autogenerated static field setter
// Set static field: static private Unity.Profiling.ProfilerMarker k_UpdateFontAssetDataMarker
void TMPro::TMP_FontAsset::_set_k_UpdateFontAssetDataMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_UpdateFontAssetDataMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_UpdateFontAssetDataMarker", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_DefaultMaterialSuffix
::StringW TMPro::TMP_FontAsset::_get_s_DefaultMaterialSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_s_DefaultMaterialSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_FontAsset", "s_DefaultMaterialSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_DefaultMaterialSuffix
void TMPro::TMP_FontAsset::_set_s_DefaultMaterialSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_s_DefaultMaterialSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "s_DefaultMaterialSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedFontAssetLookup
::System::Collections::Generic::HashSet_1<int>* TMPro::TMP_FontAsset::_get_k_SearchedFontAssetLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_SearchedFontAssetLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("TMPro", "TMP_FontAsset", "k_SearchedFontAssetLookup"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedFontAssetLookup
void TMPro::TMP_FontAsset::_set_k_SearchedFontAssetLookup(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_SearchedFontAssetLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_SearchedFontAssetLookup", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> k_FontAssets_FontFeaturesUpdateQueue
::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* TMPro::TMP_FontAsset::_get_k_FontAssets_FontFeaturesUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_FontAssets_FontFeaturesUpdateQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>*>("TMPro", "TMP_FontAsset", "k_FontAssets_FontFeaturesUpdateQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> k_FontAssets_FontFeaturesUpdateQueue
void TMPro::TMP_FontAsset::_set_k_FontAssets_FontFeaturesUpdateQueue(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_FontAssets_FontFeaturesUpdateQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_FontAssets_FontFeaturesUpdateQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_FontFeaturesUpdateQueueLookup
::System::Collections::Generic::HashSet_1<int>* TMPro::TMP_FontAsset::_get_k_FontAssets_FontFeaturesUpdateQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_FontAssets_FontFeaturesUpdateQueueLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("TMPro", "TMP_FontAsset", "k_FontAssets_FontFeaturesUpdateQueueLookup"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_FontFeaturesUpdateQueueLookup
void TMPro::TMP_FontAsset::_set_k_FontAssets_FontFeaturesUpdateQueueLookup(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_FontAssets_FontFeaturesUpdateQueueLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_FontAssets_FontFeaturesUpdateQueueLookup", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> k_FontAssets_AtlasTexturesUpdateQueue
::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* TMPro::TMP_FontAsset::_get_k_FontAssets_AtlasTexturesUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_FontAssets_AtlasTexturesUpdateQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>*>("TMPro", "TMP_FontAsset", "k_FontAssets_AtlasTexturesUpdateQueue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> k_FontAssets_AtlasTexturesUpdateQueue
void TMPro::TMP_FontAsset::_set_k_FontAssets_AtlasTexturesUpdateQueue(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_FontAssets_AtlasTexturesUpdateQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_FontAssets_AtlasTexturesUpdateQueue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_AtlasTexturesUpdateQueueLookup
::System::Collections::Generic::HashSet_1<int>* TMPro::TMP_FontAsset::_get_k_FontAssets_AtlasTexturesUpdateQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_FontAssets_AtlasTexturesUpdateQueueLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("TMPro", "TMP_FontAsset", "k_FontAssets_AtlasTexturesUpdateQueueLookup"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_FontAssets_AtlasTexturesUpdateQueueLookup
void TMPro::TMP_FontAsset::_set_k_FontAssets_AtlasTexturesUpdateQueueLookup(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_FontAssets_AtlasTexturesUpdateQueueLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_FontAssets_AtlasTexturesUpdateQueueLookup", value));
}
// Autogenerated static field getter
// Get static field: static System.UInt32[] k_GlyphIndexArray
::ArrayW<uint> TMPro::TMP_FontAsset::_get_k_GlyphIndexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_get_k_GlyphIndexArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("TMPro", "TMP_FontAsset", "k_GlyphIndexArray"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32[] k_GlyphIndexArray
void TMPro::TMP_FontAsset::_set_k_GlyphIndexArray(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::_set_k_GlyphIndexArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "k_GlyphIndexArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Version
::StringW& TMPro::TMP_FontAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_SourceFontFileGUID
::StringW& TMPro::TMP_FontAsset::dyn_m_SourceFontFileGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_SourceFontFileGUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceFontFileGUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Font m_SourceFontFile
::UnityEngine::Font*& TMPro::TMP_FontAsset::dyn_m_SourceFontFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_SourceFontFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceFontFile"))->offset;
  return *reinterpret_cast<::UnityEngine::Font**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.AtlasPopulationMode m_AtlasPopulationMode
::TMPro::AtlasPopulationMode& TMPro::TMP_FontAsset::dyn_m_AtlasPopulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasPopulationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasPopulationMode"))->offset;
  return *reinterpret_cast<::TMPro::AtlasPopulationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.TextCore.FaceInfo m_FaceInfo
::UnityEngine::TextCore::FaceInfo& TMPro::TMP_FontAsset::dyn_m_FaceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_FaceInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::FaceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphTable
::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> m_GlyphLookupDictionary
::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphLookupDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_Character> m_CharacterTable
::System::Collections::Generic::List_1<::TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_CharacterTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.UInt32,TMPro.TMP_Character> m_CharacterLookupDictionary
::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharacterLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_CharacterLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterLookupDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Texture2D m_AtlasTexture
::UnityEngine::Texture2D*& TMPro::TMP_FontAsset::dyn_m_AtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Texture2D[] m_AtlasTextures
::ArrayW<::UnityEngine::Texture2D*>& TMPro::TMP_FontAsset::dyn_m_AtlasTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_AtlasTextureIndex
int& TMPro::TMP_FontAsset::dyn_m_AtlasTextureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasTextureIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTextureIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsMultiAtlasTexturesEnabled
bool& TMPro::TMP_FontAsset::dyn_m_IsMultiAtlasTexturesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_IsMultiAtlasTexturesEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsMultiAtlasTexturesEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ClearDynamicDataOnBuild
bool& TMPro::TMP_FontAsset::dyn_m_ClearDynamicDataOnBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_ClearDynamicDataOnBuild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearDynamicDataOnBuild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_UsedGlyphRects
::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*& TMPro::TMP_FontAsset::dyn_m_UsedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_UsedGlyphRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGlyphRects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_FreeGlyphRects
::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*& TMPro::TMP_FontAsset::dyn_m_FreeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_FreeGlyphRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FreeGlyphRects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.FaceInfo_Legacy m_fontInfo
::TMPro::FaceInfo_Legacy*& TMPro::TMP_FontAsset::dyn_m_fontInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_fontInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontInfo"))->offset;
  return *reinterpret_cast<::TMPro::FaceInfo_Legacy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D atlas
::UnityEngine::Texture2D*& TMPro::TMP_FontAsset::dyn_atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_atlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlas"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_AtlasWidth
int& TMPro::TMP_FontAsset::dyn_m_AtlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_AtlasHeight
int& TMPro::TMP_FontAsset::dyn_m_AtlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_AtlasPadding
int& TMPro::TMP_FontAsset::dyn_m_AtlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasPadding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.TextCore.LowLevel.GlyphRenderMode m_AtlasRenderMode
::UnityEngine::TextCore::LowLevel::GlyphRenderMode& TMPro::TMP_FontAsset::dyn_m_AtlasRenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_AtlasRenderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasRenderMode"))->offset;
  return *reinterpret_cast<::UnityEngine::TextCore::LowLevel::GlyphRenderMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_Glyph> m_glyphInfoList
::System::Collections::Generic::List_1<::TMPro::TMP_Glyph*>*& TMPro::TMP_FontAsset::dyn_m_glyphInfoList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_glyphInfoList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glyphInfoList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.KerningTable m_KerningTable
::TMPro::KerningTable*& TMPro::TMP_FontAsset::dyn_m_KerningTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_KerningTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KerningTable"))->offset;
  return *reinterpret_cast<::TMPro::KerningTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_FontFeatureTable m_FontFeatureTable
::TMPro::TMP_FontFeatureTable*& TMPro::TMP_FontAsset::dyn_m_FontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_FontFeatureTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontFeatureTable"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontFeatureTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> fallbackFontAssets
::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>*& TMPro::TMP_FontAsset::dyn_fallbackFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_fallbackFontAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackFontAssets"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_FontAsset> m_FallbackFontAssetTable
::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>*& TMPro::TMP_FontAsset::dyn_m_FallbackFontAssetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_FallbackFontAssetTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FallbackFontAssetTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.FontAssetCreationSettings m_CreationSettings
::TMPro::FontAssetCreationSettings& TMPro::TMP_FontAsset::dyn_m_CreationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_CreationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CreationSettings"))->offset;
  return *reinterpret_cast<::TMPro::FontAssetCreationSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontWeightPair[] m_FontWeightTable
::ArrayW<::TMPro::TMP_FontWeightPair>& TMPro::TMP_FontAsset::dyn_m_FontWeightTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_FontWeightTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightTable"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_FontWeightPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontWeightPair[] fontWeights
::ArrayW<::TMPro::TMP_FontWeightPair>& TMPro::TMP_FontAsset::dyn_fontWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_fontWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontWeights"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TMP_FontWeightPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalStyle
float& TMPro::TMP_FontAsset::dyn_normalStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_normalStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalStyle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalSpacingOffset
float& TMPro::TMP_FontAsset::dyn_normalSpacingOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_normalSpacingOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSpacingOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boldStyle
float& TMPro::TMP_FontAsset::dyn_boldStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_boldStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boldStyle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boldSpacing
float& TMPro::TMP_FontAsset::dyn_boldSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_boldSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boldSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte italicStyle
uint8_t& TMPro::TMP_FontAsset::dyn_italicStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_italicStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "italicStyle"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte tabSize
uint8_t& TMPro::TMP_FontAsset::dyn_tabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_tabSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean IsFontAssetLookupTablesDirty
bool& TMPro::TMP_FontAsset::dyn_IsFontAssetLookupTablesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_IsFontAssetLookupTablesDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsFontAssetLookupTablesDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<System.Int32> FallbackSearchQueryLookup
::System::Collections::Generic::HashSet_1<int>*& TMPro::TMP_FontAsset::dyn_FallbackSearchQueryLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_FallbackSearchQueryLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FallbackSearchQueryLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsToRender
::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphsToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphsToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsToRender"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsRendered
::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphsRendered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphsRendered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsRendered"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexList
::System::Collections::Generic::List_1<uint>*& TMPro::TMP_FontAsset::dyn_m_GlyphIndexList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphIndexList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndexList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexListNewlyAdded
::System::Collections::Generic::List_1<uint>*& TMPro::TMP_FontAsset::dyn_m_GlyphIndexListNewlyAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphIndexListNewlyAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndexListNewlyAdded"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.UInt32> m_GlyphsToAdd
::System::Collections::Generic::List_1<uint>*& TMPro::TMP_FontAsset::dyn_m_GlyphsToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphsToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsToAdd"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<System.UInt32> m_GlyphsToAddLookup
::System::Collections::Generic::HashSet_1<uint>*& TMPro::TMP_FontAsset::dyn_m_GlyphsToAddLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_GlyphsToAddLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsToAddLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_Character> m_CharactersToAdd
::System::Collections::Generic::List_1<::TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharactersToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_CharactersToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharactersToAdd"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<System.UInt32> m_CharactersToAddLookup
::System::Collections::Generic::HashSet_1<uint>*& TMPro::TMP_FontAsset::dyn_m_CharactersToAddLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_CharactersToAddLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharactersToAddLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
::System::Collections::Generic::List_1<uint>*& TMPro::TMP_FontAsset::dyn_s_MissingCharacterList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_s_MissingCharacterList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s_MissingCharacterList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.HashSet`1<System.UInt32> m_MissingUnicodesFromFontFile
::System::Collections::Generic::HashSet_1<uint>*& TMPro::TMP_FontAsset::dyn_m_MissingUnicodesFromFontFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::dyn_m_MissingUnicodesFromFontFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MissingUnicodesFromFontFile"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_version
::StringW TMPro::TMP_FontAsset::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_version
void TMPro::TMP_FontAsset::set_version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_sourceFontFile
::UnityEngine::Font* TMPro::TMP_FontAsset::get_sourceFontFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_sourceFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Font*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_sourceFontFile
void TMPro::TMP_FontAsset::set_sourceFontFile(::UnityEngine::Font* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_sourceFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPopulationMode
::TMPro::AtlasPopulationMode TMPro::TMP_FontAsset::get_atlasPopulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasPopulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasPopulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::AtlasPopulationMode, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPopulationMode
void TMPro::TMP_FontAsset::set_atlasPopulationMode(::TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasPopulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasPopulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_faceInfo
::UnityEngine::TextCore::FaceInfo TMPro::TMP_FontAsset::get_faceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_faceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_faceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::FaceInfo, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_faceInfo
void TMPro::TMP_FontAsset::set_faceInfo(::UnityEngine::TextCore::FaceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_faceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_faceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphTable
::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_glyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_glyphTable
void TMPro::TMP_FontAsset::set_glyphTable(::System::Collections::Generic::List_1<::UnityEngine::TextCore::Glyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_glyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphLookupTable
::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_glyphLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<uint, ::UnityEngine::TextCore::Glyph*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterTable
::System::Collections::Generic::List_1<::TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_characterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_Character*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_characterTable
void TMPro::TMP_FontAsset::set_characterTable(::System::Collections::Generic::List_1<::TMPro::TMP_Character*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_characterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterLookupTable
::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_characterLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_Character*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTexture
::UnityEngine::Texture2D* TMPro::TMP_FontAsset::get_atlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTextures
::ArrayW<::UnityEngine::Texture2D*> TMPro::TMP_FontAsset::get_atlasTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Texture2D*>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasTextures
void TMPro::TMP_FontAsset::set_atlasTextures(::ArrayW<::UnityEngine::Texture2D*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTextureCount
int TMPro::TMP_FontAsset::get_atlasTextureCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasTextureCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasTextureCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_isMultiAtlasTexturesEnabled
bool TMPro::TMP_FontAsset::get_isMultiAtlasTexturesEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_isMultiAtlasTexturesEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMultiAtlasTexturesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_isMultiAtlasTexturesEnabled
void TMPro::TMP_FontAsset::set_isMultiAtlasTexturesEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_isMultiAtlasTexturesEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isMultiAtlasTexturesEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_clearDynamicDataOnBuild
bool TMPro::TMP_FontAsset::get_clearDynamicDataOnBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_clearDynamicDataOnBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearDynamicDataOnBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_clearDynamicDataOnBuild
void TMPro::TMP_FontAsset::set_clearDynamicDataOnBuild(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_clearDynamicDataOnBuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearDynamicDataOnBuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_usedGlyphRects
::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_usedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_usedGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usedGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_usedGlyphRects
void TMPro::TMP_FontAsset::set_usedGlyphRects(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_usedGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_usedGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_freeGlyphRects
::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_freeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_freeGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_freeGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_freeGlyphRects
void TMPro::TMP_FontAsset::set_freeGlyphRects(::System::Collections::Generic::List_1<::UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_freeGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_freeGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontInfo
::TMPro::FaceInfo_Legacy* TMPro::TMP_FontAsset::get_fontInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_fontInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::FaceInfo_Legacy*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasWidth
int TMPro::TMP_FontAsset::get_atlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasWidth
void TMPro::TMP_FontAsset::set_atlasWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasHeight
int TMPro::TMP_FontAsset::get_atlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasHeight
void TMPro::TMP_FontAsset::set_atlasHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPadding
int TMPro::TMP_FontAsset::get_atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPadding
void TMPro::TMP_FontAsset::set_atlasPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasRenderMode
::UnityEngine::TextCore::LowLevel::GlyphRenderMode TMPro::TMP_FontAsset::get_atlasRenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_atlasRenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasRenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextCore::LowLevel::GlyphRenderMode, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasRenderMode
void TMPro::TMP_FontAsset::set_atlasRenderMode(::UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_atlasRenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasRenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontFeatureTable
::TMPro::TMP_FontFeatureTable* TMPro::TMP_FontAsset::get_fontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_fontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontFeatureTable*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontFeatureTable
void TMPro::TMP_FontAsset::set_fontFeatureTable(::TMPro::TMP_FontFeatureTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_fontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fallbackFontAssetTable
::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* TMPro::TMP_FontAsset::get_fallbackFontAssetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_fallbackFontAssetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackFontAssetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fallbackFontAssetTable
void TMPro::TMP_FontAsset::set_fallbackFontAssetTable(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_fallbackFontAssetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackFontAssetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_creationSettings
::TMPro::FontAssetCreationSettings TMPro::TMP_FontAsset::get_creationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_creationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_creationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::FontAssetCreationSettings, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_creationSettings
void TMPro::TMP_FontAsset::set_creationSettings(::TMPro::FontAssetCreationSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_creationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_creationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontWeightTable
::ArrayW<::TMPro::TMP_FontWeightPair> TMPro::TMP_FontAsset::get_fontWeightTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::get_fontWeightTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeightTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::TMPro::TMP_FontWeightPair>, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontWeightTable
void TMPro::TMP_FontAsset::set_fontWeightTable(::ArrayW<::TMPro::TMP_FontWeightPair> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::set_fontWeightTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeightTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
::TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(::UnityEngine::Font* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::CreateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "CreateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font);
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
::TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(::UnityEngine::Font* font, int samplingPointSize, int atlasPadding, ::UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, ::TMPro::AtlasPopulationMode atlasPopulationMode, bool enableMultiAtlasSupport) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::CreateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "CreateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(samplingPointSize), ::il2cpp_utils::ExtractType(atlasPadding), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(atlasWidth), ::il2cpp_utils::ExtractType(atlasHeight), ::il2cpp_utils::ExtractType(atlasPopulationMode), ::il2cpp_utils::ExtractType(enableMultiAtlasSupport)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode, enableMultiAtlasSupport);
}
// Autogenerated method: TMPro.TMP_FontAsset.Awake
void TMPro::TMP_FontAsset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.ReadFontAssetDefinition
void TMPro::TMP_FontAsset::ReadFontAssetDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::ReadFontAssetDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFontAssetDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeDictionaryLookupTables
void TMPro::TMP_FontAsset::InitializeDictionaryLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::InitializeDictionaryLookupTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDictionaryLookupTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeGlyphLookupDictionary
void TMPro::TMP_FontAsset::InitializeGlyphLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::InitializeGlyphLookupDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeGlyphLookupDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeCharacterLookupDictionary
void TMPro::TMP_FontAsset::InitializeCharacterLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::InitializeCharacterLookupDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeCharacterLookupDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeGlyphPaidAdjustmentRecordsLookupDictionary
void TMPro::TMP_FontAsset::InitializeGlyphPaidAdjustmentRecordsLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::InitializeGlyphPaidAdjustmentRecordsLookupDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeGlyphPaidAdjustmentRecordsLookupDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.AddSynthesizedCharactersAndFaceMetrics
void TMPro::TMP_FontAsset::AddSynthesizedCharactersAndFaceMetrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::AddSynthesizedCharactersAndFaceMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSynthesizedCharactersAndFaceMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.AddSynthesizedCharacter
void TMPro::TMP_FontAsset::AddSynthesizedCharacter(uint unicode, bool isFontFaceLoaded, bool addImmediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::AddSynthesizedCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSynthesizedCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(isFontFaceLoaded), ::il2cpp_utils::ExtractType(addImmediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unicode, isFontFaceLoaded, addImmediately);
}
// Autogenerated method: TMPro.TMP_FontAsset.AddCharacterToLookupCache
void TMPro::TMP_FontAsset::AddCharacterToLookupCache(uint unicode, ::TMPro::TMP_Character* character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::AddCharacterToLookupCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharacterToLookupCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(character)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unicode, character);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortCharacterTable
void TMPro::TMP_FontAsset::SortCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::SortCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortGlyphTable
void TMPro::TMP_FontAsset::SortGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::SortGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortFontFeatureTable
void TMPro::TMP_FontAsset::SortFontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::SortFontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortFontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortAllTables
void TMPro::TMP_FontAsset::SortAllTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::SortAllTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortAllTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(int character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, character);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(::Il2CppChar character, bool searchFallbacks, bool tryAddCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractType(tryAddCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, character, searchFallbacks, tryAddCharacter);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter_Internal
bool TMPro::TMP_FontAsset::HasCharacter_Internal(uint character, bool searchFallbacks, bool tryAddCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacter_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractType(tryAddCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, character, searchFallbacks, tryAddCharacter);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::StringW text, ByRef<::System::Collections::Generic::List_1<::Il2CppChar>*> missingCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::Il2CppChar>*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, byref(missingCharacters));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::StringW text, ByRef<::ArrayW<uint>> missingCharacters, bool searchFallbacks, bool tryAddCharacter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint>&>(), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractType(tryAddCharacter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, byref(missingCharacters), searchFallbacks, tryAddCharacter);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::HasCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharacters
::StringW TMPro::TMP_FontAsset::GetCharacters(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::GetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "GetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharactersArray
::ArrayW<int> TMPro::TMP_FontAsset::GetCharactersArray(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::GetCharactersArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "GetCharactersArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.GetGlyphIndex
uint TMPro::TMP_FontAsset::GetGlyphIndex(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::GetGlyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGlyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_FontAsset.RegisterFontAssetForFontFeatureUpdate
void TMPro::TMP_FontAsset::RegisterFontAssetForFontFeatureUpdate(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::RegisterFontAssetForFontFeatureUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "RegisterFontAssetForFontFeatureUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateFontFeaturesForFontAssetsInQueue
void TMPro::TMP_FontAsset::UpdateFontFeaturesForFontAssetsInQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateFontFeaturesForFontAssetsInQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "UpdateFontFeaturesForFontAssetsInQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.RegisterFontAssetForAtlasTextureUpdate
void TMPro::TMP_FontAsset::RegisterFontAssetForAtlasTextureUpdate(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::RegisterFontAssetForAtlasTextureUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "RegisterFontAssetForAtlasTextureUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateAtlasTexturesForFontAssetsInQueue
void TMPro::TMP_FontAsset::UpdateAtlasTexturesForFontAssetsInQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateAtlasTexturesForFontAssetsInQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "UpdateAtlasTexturesForFontAssetsInQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::ArrayW<uint> unicodes, bool includeFontFeatures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractType(includeFontFeatures)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unicodes, includeFontFeatures);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::ArrayW<uint> unicodes, ByRef<::ArrayW<uint>> missingUnicodes, bool includeFontFeatures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint>&>(), ::il2cpp_utils::ExtractType(includeFontFeatures)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unicodes, byref(missingUnicodes), includeFontFeatures);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::StringW characters, bool includeFontFeatures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters), ::il2cpp_utils::ExtractType(includeFontFeatures)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, characters, includeFontFeatures);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::StringW characters, ByRef<::StringW> missingCharacters, bool includeFontFeatures) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractType(includeFontFeatures)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, characters, byref(missingCharacters), includeFontFeatures);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacterInternal
bool TMPro::TMP_FontAsset::TryAddCharacterInternal(uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryGetCharacter_and_QueueRenderToTexture
bool TMPro::TMP_FontAsset::TryGetCharacter_and_QueueRenderToTexture(uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryGetCharacter_and_QueueRenderToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetCharacter_and_QueueRenderToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddGlyphsToAtlasTextures
void TMPro::TMP_FontAsset::TryAddGlyphsToAtlasTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddGlyphsToAtlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddGlyphsToAtlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddGlyphsToNewAtlasTexture
bool TMPro::TMP_FontAsset::TryAddGlyphsToNewAtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::TryAddGlyphsToNewAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddGlyphsToNewAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SetupNewAtlasTexture
void TMPro::TMP_FontAsset::SetupNewAtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::SetupNewAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNewAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateAtlasTexture
void TMPro::TMP_FontAsset::UpdateAtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords(::ArrayW<uint> glyphIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glyphIndexes);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords(::System::Collections::Generic::List_1<uint>* glyphIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glyphIndexes);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords(::System::Collections::Generic::List_1<uint>* newGlyphIndexes, ::System::Collections::Generic::List_1<uint>* allGlyphIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGlyphIndexes), ::il2cpp_utils::ExtractType(allGlyphIndexes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGlyphIndexes, allGlyphIndexes);
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearFontAssetData
void TMPro::TMP_FontAsset::ClearFontAssetData(bool setAtlasSizeToZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::ClearFontAssetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFontAssetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setAtlasSizeToZero)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, setAtlasSizeToZero);
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearFontAssetDataInternal
void TMPro::TMP_FontAsset::ClearFontAssetDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::ClearFontAssetDataInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFontAssetDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateFontAssetData
void TMPro::TMP_FontAsset::UpdateFontAssetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpdateFontAssetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAssetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearFontAssetTables
void TMPro::TMP_FontAsset::ClearFontAssetTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::ClearFontAssetTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFontAssetTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearAtlasTextures
void TMPro::TMP_FontAsset::ClearAtlasTextures(bool setAtlasSizeToZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::ClearAtlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAtlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setAtlasSizeToZero)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, setAtlasSizeToZero);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeFontAsset
void TMPro::TMP_FontAsset::UpgradeFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpgradeFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeGlyphAdjustmentTableToFontFeatureTable
void TMPro::TMP_FontAsset::UpgradeGlyphAdjustmentTableToFontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::UpgradeGlyphAdjustmentTableToFontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeGlyphAdjustmentTableToFontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset..cctor
void TMPro::TMP_FontAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontAsset/TMPro.<>c
#include "TMPro/TMP_FontAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_FontAsset/TMPro.<>c <>9
::TMPro::TMP_FontAsset::$$c* TMPro::TMP_FontAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::TMP_FontAsset::$$c*>("TMPro", "TMP_FontAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_FontAsset/TMPro.<>c <>9
void TMPro::TMP_FontAsset::$$c::_set_$$9(::TMPro::TMP_FontAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_Character,System.UInt32> <>9__124_0
::System::Func_2<::TMPro::TMP_Character*, uint>* TMPro::TMP_FontAsset::$$c::_get_$$9__124_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_get_$$9__124_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::TMPro::TMP_Character*, uint>*>("TMPro", "TMP_FontAsset/<>c", "<>9__124_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_Character,System.UInt32> <>9__124_0
void TMPro::TMP_FontAsset::$$c::_set_$$9__124_0(::System::Func_2<::TMPro::TMP_Character*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_set_$$9__124_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9__124_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TextCore.Glyph,System.UInt32> <>9__125_0
::System::Func_2<::UnityEngine::TextCore::Glyph*, uint>* TMPro::TMP_FontAsset::$$c::_get_$$9__125_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_get_$$9__125_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::TextCore::Glyph*, uint>*>("TMPro", "TMP_FontAsset/<>c", "<>9__125_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TextCore.Glyph,System.UInt32> <>9__125_0
void TMPro::TMP_FontAsset::$$c::_set_$$9__125_0(::System::Func_2<::UnityEngine::TextCore::Glyph*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::_set_$$9__125_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9__125_0", value)));
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c..cctor
void TMPro::TMP_FontAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c.<SortCharacterTable>b__124_0
uint TMPro::TMP_FontAsset::$$c::$SortCharacterTable$b__124_0(::TMPro::TMP_Character* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::<SortCharacterTable>b__124_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortCharacterTable>b__124_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c.<SortGlyphTable>b__125_0
uint TMPro::TMP_FontAsset::$$c::$SortGlyphTable$b__125_0(::UnityEngine::TextCore::Glyph* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAsset::$$c::<SortGlyphTable>b__125_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphTable>b__125_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FaceInfo_Legacy
#include "TMPro/FaceInfo_Legacy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
::StringW& TMPro::FaceInfo_Legacy::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PointSize
float& TMPro::FaceInfo_Legacy::dyn_PointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_PointSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale
float& TMPro::FaceInfo_Legacy::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CharacterCount
int& TMPro::FaceInfo_Legacy::dyn_CharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_CharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LineHeight
float& TMPro::FaceInfo_Legacy::dyn_LineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_LineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Baseline
float& TMPro::FaceInfo_Legacy::dyn_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Baseline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Baseline"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Ascender
float& TMPro::FaceInfo_Legacy::dyn_Ascender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Ascender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ascender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CapHeight
float& TMPro::FaceInfo_Legacy::dyn_CapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_CapHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Descender
float& TMPro::FaceInfo_Legacy::dyn_Descender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Descender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Descender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CenterLine
float& TMPro::FaceInfo_Legacy::dyn_CenterLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_CenterLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CenterLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SuperscriptOffset
float& TMPro::FaceInfo_Legacy::dyn_SuperscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_SuperscriptOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuperscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SubscriptOffset
float& TMPro::FaceInfo_Legacy::dyn_SubscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_SubscriptOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SubSize
float& TMPro::FaceInfo_Legacy::dyn_SubSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_SubSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Underline
float& TMPro::FaceInfo_Legacy::dyn_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Underline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Underline"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single UnderlineThickness
float& TMPro::FaceInfo_Legacy::dyn_UnderlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_UnderlineThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnderlineThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethrough
float& TMPro::FaceInfo_Legacy::dyn_strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_strikethrough");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethrough"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethroughThickness
float& TMPro::FaceInfo_Legacy::dyn_strikethroughThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_strikethroughThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethroughThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TabWidth
float& TMPro::FaceInfo_Legacy::dyn_TabWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_TabWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TabWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Padding
float& TMPro::FaceInfo_Legacy::dyn_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_Padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AtlasWidth
float& TMPro::FaceInfo_Legacy::dyn_AtlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_AtlasWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtlasWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AtlasHeight
float& TMPro::FaceInfo_Legacy::dyn_AtlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FaceInfo_Legacy::dyn_AtlasHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtlasHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Glyph
#include "TMPro/TMP_Glyph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_Glyph.Clone
::TMPro::TMP_Glyph* TMPro::TMP_Glyph::Clone(::TMPro::TMP_Glyph* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_Glyph::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Glyph", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Glyph*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontAssetCreationSettings
#include "TMPro/FontAssetCreationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sourceFontFileName
::StringW& TMPro::FontAssetCreationSettings::dyn_sourceFontFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_sourceFontFileName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceFontFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sourceFontFileGUID
::StringW& TMPro::FontAssetCreationSettings::dyn_sourceFontFileGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_sourceFontFileGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceFontFileGUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pointSizeSamplingMode
int& TMPro::FontAssetCreationSettings::dyn_pointSizeSamplingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_pointSizeSamplingMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointSizeSamplingMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pointSize
int& TMPro::FontAssetCreationSettings::dyn_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_pointSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 padding
int& TMPro::FontAssetCreationSettings::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_padding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 packingMode
int& TMPro::FontAssetCreationSettings::dyn_packingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_packingMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packingMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 atlasWidth
int& TMPro::FontAssetCreationSettings::dyn_atlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_atlasWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 atlasHeight
int& TMPro::FontAssetCreationSettings::dyn_atlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_atlasHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 characterSetSelectionMode
int& TMPro::FontAssetCreationSettings::dyn_characterSetSelectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_characterSetSelectionMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSetSelectionMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterSequence
::StringW& TMPro::FontAssetCreationSettings::dyn_characterSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_characterSequence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSequence"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencedFontAssetGUID
::StringW& TMPro::FontAssetCreationSettings::dyn_referencedFontAssetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_referencedFontAssetGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedFontAssetGUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencedTextAssetGUID
::StringW& TMPro::FontAssetCreationSettings::dyn_referencedTextAssetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_referencedTextAssetGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedTextAssetGUID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fontStyle
int& TMPro::FontAssetCreationSettings::dyn_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_fontStyle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontStyle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fontStyleModifier
float& TMPro::FontAssetCreationSettings::dyn_fontStyleModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_fontStyleModifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontStyleModifier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 renderMode
int& TMPro::FontAssetCreationSettings::dyn_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_renderMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeFontFeatures
bool& TMPro::FontAssetCreationSettings::dyn_includeFontFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::dyn_includeFontFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeFontFeatures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FontAssetCreationSettings..ctor
TMPro::FontAssetCreationSettings::FontAssetCreationSettings(::StringW sourceFontFileGUID, int pointSize, int pointSizeSamplingMode, int padding, int packingMode, int atlasWidth, int atlasHeight, int characterSelectionMode, ::StringW characterSet, int renderMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontAssetCreationSettings::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFontFileGUID), ::il2cpp_utils::ExtractType(pointSize), ::il2cpp_utils::ExtractType(pointSizeSamplingMode), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(atlasWidth), ::il2cpp_utils::ExtractType(atlasHeight), ::il2cpp_utils::ExtractType(characterSelectionMode), ::il2cpp_utils::ExtractType(characterSet), ::il2cpp_utils::ExtractType(renderMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceFontFileGUID, pointSize, pointSizeSamplingMode, padding, packingMode, atlasWidth, atlasHeight, characterSelectionMode, characterSet, renderMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningPairKey
#include "TMPro/KerningPairKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ascii_Left
uint& TMPro::KerningPairKey::dyn_ascii_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPairKey::dyn_ascii_Left");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ascii_Left"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ascii_Right
uint& TMPro::KerningPairKey::dyn_ascii_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPairKey::dyn_ascii_Right");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ascii_Right"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 key
uint& TMPro::KerningPairKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPairKey::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningPairKey..ctor
TMPro::KerningPairKey::KerningPairKey(uint ascii_left, uint ascii_right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii_left), ::il2cpp_utils::ExtractType(ascii_right)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ascii_left, ascii_right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single xPlacement
float& TMPro::GlyphValueRecord_Legacy::dyn_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::dyn_xPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yPlacement
float& TMPro::GlyphValueRecord_Legacy::dyn_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::dyn_yPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xAdvance
float& TMPro::GlyphValueRecord_Legacy::dyn_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::dyn_xAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yAdvance
float& TMPro::GlyphValueRecord_Legacy::dyn_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::dyn_yAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.GlyphValueRecord_Legacy..ctor
TMPro::GlyphValueRecord_Legacy::GlyphValueRecord_Legacy(::UnityEngine::TextCore::LowLevel::GlyphValueRecord valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.GlyphValueRecord_Legacy.op_Addition
::TMPro::GlyphValueRecord_Legacy TMPro::operator+(const ::TMPro::GlyphValueRecord_Legacy& a, const ::TMPro::GlyphValueRecord_Legacy& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphValueRecord_Legacy::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "GlyphValueRecord_Legacy", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::GlyphValueRecord_Legacy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static TMPro.KerningPair empty
::TMPro::KerningPair* TMPro::KerningPair::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::KerningPair*>("TMPro", "KerningPair", "empty"));
}
// Autogenerated static field setter
// Set static field: static TMPro.KerningPair empty
void TMPro::KerningPair::_set_empty(::TMPro::KerningPair* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "KerningPair", "empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FirstGlyph
uint& TMPro::KerningPair::dyn_m_FirstGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_m_FirstGlyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstGlyph"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.GlyphValueRecord_Legacy m_FirstGlyphAdjustments
::TMPro::GlyphValueRecord_Legacy& TMPro::KerningPair::dyn_m_FirstGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_m_FirstGlyphAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstGlyphAdjustments"))->offset;
  return *reinterpret_cast<::TMPro::GlyphValueRecord_Legacy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_SecondGlyph
uint& TMPro::KerningPair::dyn_m_SecondGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_m_SecondGlyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondGlyph"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.GlyphValueRecord_Legacy m_SecondGlyphAdjustments
::TMPro::GlyphValueRecord_Legacy& TMPro::KerningPair::dyn_m_SecondGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_m_SecondGlyphAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondGlyphAdjustments"))->offset;
  return *reinterpret_cast<::TMPro::GlyphValueRecord_Legacy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xOffset
float& TMPro::KerningPair::dyn_xOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_xOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreSpacingAdjustments
bool& TMPro::KerningPair::dyn_m_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::dyn_m_IgnoreSpacingAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreSpacingAdjustments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningPair.get_firstGlyph
uint TMPro::KerningPair::get_firstGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::get_firstGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.set_firstGlyph
void TMPro::KerningPair::set_firstGlyph(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::set_firstGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.KerningPair.get_firstGlyphAdjustments
::TMPro::GlyphValueRecord_Legacy TMPro::KerningPair::get_firstGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::get_firstGlyphAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstGlyphAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::GlyphValueRecord_Legacy, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.get_secondGlyph
uint TMPro::KerningPair::get_secondGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::get_secondGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.set_secondGlyph
void TMPro::KerningPair::set_secondGlyph(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::set_secondGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.KerningPair.get_secondGlyphAdjustments
::TMPro::GlyphValueRecord_Legacy TMPro::KerningPair::get_secondGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::get_secondGlyphAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondGlyphAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::GlyphValueRecord_Legacy, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.get_ignoreSpacingAdjustments
bool TMPro::KerningPair::get_ignoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::get_ignoreSpacingAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreSpacingAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair..cctor
void TMPro::KerningPair::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "KerningPair", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.ConvertLegacyKerningData
void TMPro::KerningPair::ConvertLegacyKerningData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningPair::ConvertLegacyKerningData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertLegacyKerningData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable
#include "TMPro/KerningTable.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0
#include "TMPro/KerningTable_--c__DisplayClass3_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0
#include "TMPro/KerningTable_--c__DisplayClass4_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0
#include "TMPro/KerningTable_--c__DisplayClass5_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c
#include "TMPro/KerningTable_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.KerningPair> kerningPairs
::System::Collections::Generic::List_1<::TMPro::KerningPair*>*& TMPro::KerningTable::dyn_kerningPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::dyn_kerningPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kerningPairs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::KerningPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable.AddKerningPair
void TMPro::KerningTable::AddKerningPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::AddKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.KerningTable.AddKerningPair
int TMPro::KerningTable::AddKerningPair(uint first, uint second, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::AddKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, first, second, offset);
}
// Autogenerated method: TMPro.KerningTable.AddGlyphPairAdjustmentRecord
int TMPro::KerningTable::AddGlyphPairAdjustmentRecord(uint first, ::TMPro::GlyphValueRecord_Legacy firstAdjustments, uint second, ::TMPro::GlyphValueRecord_Legacy secondAdjustments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::AddGlyphPairAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGlyphPairAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(firstAdjustments), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(secondAdjustments)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, first, firstAdjustments, second, secondAdjustments);
}
// Autogenerated method: TMPro.KerningTable.RemoveKerningPair
void TMPro::KerningTable::RemoveKerningPair(int left, int right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::RemoveKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, right);
}
// Autogenerated method: TMPro.KerningTable.RemoveKerningPair
void TMPro::KerningTable::RemoveKerningPair(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::RemoveKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: TMPro.KerningTable.SortKerningPairs
void TMPro::KerningTable::SortKerningPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::SortKerningPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortKerningPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0
#include "TMPro/KerningTable_--c__DisplayClass3_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 first
uint& TMPro::KerningTable::$$c__DisplayClass3_0::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass3_0::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 second
uint& TMPro::KerningTable::$$c__DisplayClass3_0::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass3_0::dyn_second");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0.<AddKerningPair>b__0
bool TMPro::KerningTable::$$c__DisplayClass3_0::$AddKerningPair$b__0(::TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass3_0::<AddKerningPair>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddKerningPair>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0
#include "TMPro/KerningTable_--c__DisplayClass4_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 first
uint& TMPro::KerningTable::$$c__DisplayClass4_0::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass4_0::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 second
uint& TMPro::KerningTable::$$c__DisplayClass4_0::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass4_0::dyn_second");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0.<AddGlyphPairAdjustmentRecord>b__0
bool TMPro::KerningTable::$$c__DisplayClass4_0::$AddGlyphPairAdjustmentRecord$b__0(::TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass4_0::<AddGlyphPairAdjustmentRecord>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddGlyphPairAdjustmentRecord>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0
#include "TMPro/KerningTable_--c__DisplayClass5_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 left
int& TMPro::KerningTable::$$c__DisplayClass5_0::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass5_0::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 right
int& TMPro::KerningTable::$$c__DisplayClass5_0::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass5_0::dyn_right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0.<RemoveKerningPair>b__0
bool TMPro::KerningTable::$$c__DisplayClass5_0::$RemoveKerningPair$b__0(::TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c__DisplayClass5_0::<RemoveKerningPair>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveKerningPair>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c
#include "TMPro/KerningTable_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.KerningTable/TMPro.<>c <>9
::TMPro::KerningTable::$$c* TMPro::KerningTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::KerningTable::$$c*>("TMPro", "KerningTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.KerningTable/TMPro.<>c <>9
void TMPro::KerningTable::$$c::_set_$$9(::TMPro::KerningTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_0
::System::Func_2<::TMPro::KerningPair*, uint>* TMPro::KerningTable::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::TMPro::KerningPair*, uint>*>("TMPro", "KerningTable/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_0
void TMPro::KerningTable::$$c::_set_$$9__7_0(::System::Func_2<::TMPro::KerningPair*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_1
::System::Func_2<::TMPro::KerningPair*, uint>* TMPro::KerningTable::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::TMPro::KerningPair*, uint>*>("TMPro", "KerningTable/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_1
void TMPro::KerningTable::$$c::_set_$$9__7_1(::System::Func_2<::TMPro::KerningPair*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9__7_1", value)));
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c..cctor
void TMPro::KerningTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "KerningTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c.<SortKerningPairs>b__7_0
uint TMPro::KerningTable::$$c::$SortKerningPairs$b__7_0(::TMPro::KerningPair* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::<SortKerningPairs>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortKerningPairs>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, s);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c.<SortKerningPairs>b__7_1
uint TMPro::KerningTable::$$c::$SortKerningPairs$b__7_1(::TMPro::KerningPair* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::KerningTable::$$c::<SortKerningPairs>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortKerningPairs>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontUtilities
#include "TMPro/TMP_FontUtilities.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedFontAssets
::System::Collections::Generic::List_1<int>* TMPro::TMP_FontUtilities::_get_k_searchedFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::_get_k_searchedFontAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<int>*>("TMPro", "TMP_FontUtilities", "k_searchedFontAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedFontAssets
void TMPro::TMP_FontUtilities::_set_k_searchedFontAssets(::System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::_set_k_searchedFontAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontUtilities", "k_searchedFontAssets", value));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacter
::TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacter(::TMPro::TMP_FontAsset* font, uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::SearchForCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacter
::TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacter(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* fonts, uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::SearchForCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fonts), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fonts, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacterInternal
::TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacterInternal(::TMPro::TMP_FontAsset* font, uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::SearchForCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, font, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacterInternal
::TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacterInternal(::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* fonts, uint unicode, ByRef<::TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontUtilities::SearchForCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fonts), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<::TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fonts, unicode, byref(character));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontAssetUtilities
#include "TMPro/TMP_FontAssetUtilities.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_FontAssetUtilities s_Instance
::TMPro::TMP_FontAssetUtilities* TMPro::TMP_FontAssetUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_FontAssetUtilities*>("TMPro", "TMP_FontAssetUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_FontAssetUtilities s_Instance
void TMPro::TMP_FontAssetUtilities::_set_s_Instance(::TMPro::TMP_FontAssetUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedAssets
::System::Collections::Generic::HashSet_1<int>* TMPro::TMP_FontAssetUtilities::_get_k_SearchedAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_get_k_SearchedAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<int>*>("TMPro", "TMP_FontAssetUtilities", "k_SearchedAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<System.Int32> k_SearchedAssets
void TMPro::TMP_FontAssetUtilities::_set_k_SearchedAssets(::System::Collections::Generic::HashSet_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_set_k_SearchedAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "k_SearchedAssets", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean k_IsFontEngineInitialized
bool TMPro::TMP_FontAssetUtilities::_get_k_IsFontEngineInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_get_k_IsFontEngineInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("TMPro", "TMP_FontAssetUtilities", "k_IsFontEngineInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean k_IsFontEngineInitialized
void TMPro::TMP_FontAssetUtilities::_set_k_IsFontEngineInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::_set_k_IsFontEngineInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "k_IsFontEngineInitialized", value));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.get_instance
::TMPro::TMP_FontAssetUtilities* TMPro::TMP_FontAssetUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAssetUtilities*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities..cctor
void TMPro::TMP_FontAssetUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset
::TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset(uint unicode, ::TMPro::TMP_FontAsset* sourceFontAsset, bool includeFallbacks, ::TMPro::FontStyles fontStyle, ::TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(sourceFontAsset), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Character*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, sourceFontAsset, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset_Internal
::TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset_Internal(uint unicode, ::TMPro::TMP_FontAsset* sourceFontAsset, bool includeFallbacks, ::TMPro::FontStyles fontStyle, ::TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(sourceFontAsset), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Character*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, sourceFontAsset, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAssets
::TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAssets(uint unicode, ::TMPro::TMP_FontAsset* sourceFontAsset, ::System::Collections::Generic::List_1<::TMPro::TMP_FontAsset*>* fontAssets, bool includeFallbacks, ::TMPro::FontStyles fontStyle, ::TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(sourceFontAsset), ::il2cpp_utils::ExtractType(fontAssets), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Character*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, sourceFontAsset, fontAssets, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetSpriteCharacterFromSpriteAsset
::TMPro::TMP_SpriteCharacter* TMPro::TMP_FontAssetUtilities::GetSpriteCharacterFromSpriteAsset(uint unicode, ::TMPro::TMP_SpriteAsset* spriteAsset, bool includeFallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::GetSpriteCharacterFromSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetSpriteCharacterFromSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(includeFallbacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteCharacter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, spriteAsset, includeFallbacks);
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetSpriteCharacterFromSpriteAsset_Internal
::TMPro::TMP_SpriteCharacter* TMPro::TMP_FontAssetUtilities::GetSpriteCharacterFromSpriteAsset_Internal(uint unicode, ::TMPro::TMP_SpriteAsset* spriteAsset, bool includeFallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontAssetUtilities::GetSpriteCharacterFromSpriteAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetSpriteCharacterFromSpriteAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(includeFallbacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_SpriteCharacter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, spriteAsset, includeFallbacks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontFeatureTable
#include "TMPro/TMP_FontFeatureTable.hpp"
// Including type: TMPro.TMP_FontFeatureTable/TMPro.<>c
#include "TMPro/TMP_FontFeatureTable_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecords
::System::Collections::Generic::List_1<::TMPro::TMP_GlyphPairAdjustmentRecord*>*& TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphPairAdjustmentRecords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::TMPro::TMP_GlyphPairAdjustmentRecord*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.UInt32,TMPro.TMP_GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecordLookupDictionary
::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_GlyphPairAdjustmentRecord*>*& TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecordLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecordLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphPairAdjustmentRecordLookupDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<uint, ::TMPro::TMP_GlyphPairAdjustmentRecord*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.get_glyphPairAdjustmentRecords
::System::Collections::Generic::List_1<::TMPro::TMP_GlyphPairAdjustmentRecord*>* TMPro::TMP_FontFeatureTable::get_glyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::get_glyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::TMPro::TMP_GlyphPairAdjustmentRecord*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.set_glyphPairAdjustmentRecords
void TMPro::TMP_FontFeatureTable::set_glyphPairAdjustmentRecords(::System::Collections::Generic::List_1<::TMPro::TMP_GlyphPairAdjustmentRecord*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::set_glyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.SortGlyphPairAdjustmentRecords
void TMPro::TMP_FontFeatureTable::SortGlyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::SortGlyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontFeatureTable/TMPro.<>c
#include "TMPro/TMP_FontFeatureTable_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_FontFeatureTable/TMPro.<>c <>9
::TMPro::TMP_FontFeatureTable::$$c* TMPro::TMP_FontFeatureTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::TMPro::TMP_FontFeatureTable::$$c*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_FontFeatureTable/TMPro.<>c <>9
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9(::TMPro::TMP_FontFeatureTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_0
::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_0
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_0(::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_1
::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_1
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_1(::System::Func_2<::TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_1", value)));
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c..cctor
void TMPro::TMP_FontFeatureTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontFeatureTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c.<SortGlyphPairAdjustmentRecords>b__6_0
uint TMPro::TMP_FontFeatureTable::$$c::$SortGlyphPairAdjustmentRecords$b__6_0(::TMPro::TMP_GlyphPairAdjustmentRecord* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::<SortGlyphPairAdjustmentRecords>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphPairAdjustmentRecords>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c.<SortGlyphPairAdjustmentRecords>b__6_1
uint TMPro::TMP_FontFeatureTable::$$c::$SortGlyphPairAdjustmentRecords$b__6_1(::TMPro::TMP_GlyphPairAdjustmentRecord* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_FontFeatureTable::$$c::<SortGlyphPairAdjustmentRecords>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphPairAdjustmentRecords>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontFeatureLookupFlags
#include "TMPro/FontFeatureLookupFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontFeatureLookupFlags None
::TMPro::FontFeatureLookupFlags TMPro::FontFeatureLookupFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontFeatureLookupFlags>("TMPro", "FontFeatureLookupFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontFeatureLookupFlags None
void TMPro::FontFeatureLookupFlags::_set_None(::TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontFeatureLookupFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontFeatureLookupFlags IgnoreLigatures
::TMPro::FontFeatureLookupFlags TMPro::FontFeatureLookupFlags::_get_IgnoreLigatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_get_IgnoreLigatures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontFeatureLookupFlags>("TMPro", "FontFeatureLookupFlags", "IgnoreLigatures"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontFeatureLookupFlags IgnoreLigatures
void TMPro::FontFeatureLookupFlags::_set_IgnoreLigatures(::TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_set_IgnoreLigatures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontFeatureLookupFlags", "IgnoreLigatures", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontFeatureLookupFlags IgnoreSpacingAdjustments
::TMPro::FontFeatureLookupFlags TMPro::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::FontFeatureLookupFlags>("TMPro", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontFeatureLookupFlags IgnoreSpacingAdjustments
void TMPro::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments(::TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontFeatureLookupFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::FontFeatureLookupFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphValueRecord
#include "TMPro/TMP_GlyphValueRecord.hpp"
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_XPlacement
float& TMPro::TMP_GlyphValueRecord::dyn_m_XPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::dyn_m_XPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_YPlacement
float& TMPro::TMP_GlyphValueRecord::dyn_m_YPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::dyn_m_YPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_XAdvance
float& TMPro::TMP_GlyphValueRecord::dyn_m_XAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::dyn_m_XAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_YAdvance
float& TMPro::TMP_GlyphValueRecord::dyn_m_YAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::dyn_m_YAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_xPlacement
float TMPro::TMP_GlyphValueRecord::get_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::get_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_xPlacement
void TMPro::TMP_GlyphValueRecord::set_xPlacement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::set_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_yPlacement
float TMPro::TMP_GlyphValueRecord::get_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::get_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_yPlacement
void TMPro::TMP_GlyphValueRecord::set_yPlacement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::set_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_xAdvance
float TMPro::TMP_GlyphValueRecord::get_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::get_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_xAdvance
void TMPro::TMP_GlyphValueRecord::set_xAdvance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::set_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_yAdvance
float TMPro::TMP_GlyphValueRecord::get_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::get_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_yAdvance
void TMPro::TMP_GlyphValueRecord::set_yAdvance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::set_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
// ABORTED elsewhere.  TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(float xPlacement, float yPlacement, float xAdvance, float yAdvance)
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(::TMPro::GlyphValueRecord_Legacy valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(::UnityEngine::TextCore::LowLevel::GlyphValueRecord valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.op_Addition
::TMPro::TMP_GlyphValueRecord TMPro::operator+(const ::TMPro::TMP_GlyphValueRecord& a, const ::TMPro::TMP_GlyphValueRecord& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphValueRecord::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_GlyphValueRecord", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_GlyphValueRecord, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphAdjustmentRecord
#include "TMPro/TMP_GlyphAdjustmentRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_GlyphIndex
uint& TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_GlyphValueRecord m_GlyphValueRecord
::TMPro::TMP_GlyphValueRecord& TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphValueRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphValueRecord"))->offset;
  return *reinterpret_cast<::TMPro::TMP_GlyphValueRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.get_glyphIndex
uint TMPro::TMP_GlyphAdjustmentRecord::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.set_glyphIndex
void TMPro::TMP_GlyphAdjustmentRecord::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.get_glyphValueRecord
::TMPro::TMP_GlyphValueRecord TMPro::TMP_GlyphAdjustmentRecord::get_glyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::get_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_GlyphValueRecord, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.set_glyphValueRecord
void TMPro::TMP_GlyphAdjustmentRecord::set_glyphValueRecord(::TMPro::TMP_GlyphValueRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::set_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord..ctor
// ABORTED elsewhere.  TMPro::TMP_GlyphAdjustmentRecord::TMP_GlyphAdjustmentRecord(uint glyphIndex, ::TMPro::TMP_GlyphValueRecord glyphValueRecord)
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord..ctor
TMPro::TMP_GlyphAdjustmentRecord::TMP_GlyphAdjustmentRecord(::UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord adjustmentRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphAdjustmentRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adjustmentRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, adjustmentRecord);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_GlyphAdjustmentRecord m_FirstAdjustmentRecord
::TMPro::TMP_GlyphAdjustmentRecord& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstAdjustmentRecord"))->offset;
  return *reinterpret_cast<::TMPro::TMP_GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_GlyphAdjustmentRecord m_SecondAdjustmentRecord
::TMPro::TMP_GlyphAdjustmentRecord& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondAdjustmentRecord"))->offset;
  return *reinterpret_cast<::TMPro::TMP_GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.FontFeatureLookupFlags m_FeatureLookupFlags
::TMPro::FontFeatureLookupFlags& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureLookupFlags"))->offset;
  return *reinterpret_cast<::TMPro::FontFeatureLookupFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_firstAdjustmentRecord
::TMPro::TMP_GlyphAdjustmentRecord TMPro::TMP_GlyphPairAdjustmentRecord::get_firstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::get_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_GlyphAdjustmentRecord, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_firstAdjustmentRecord
void TMPro::TMP_GlyphPairAdjustmentRecord::set_firstAdjustmentRecord(::TMPro::TMP_GlyphAdjustmentRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::set_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_secondAdjustmentRecord
::TMPro::TMP_GlyphAdjustmentRecord TMPro::TMP_GlyphPairAdjustmentRecord::get_secondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::get_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_GlyphAdjustmentRecord, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_secondAdjustmentRecord
void TMPro::TMP_GlyphPairAdjustmentRecord::set_secondAdjustmentRecord(::TMPro::TMP_GlyphAdjustmentRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::set_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_featureLookupFlags
::TMPro::FontFeatureLookupFlags TMPro::TMP_GlyphPairAdjustmentRecord::get_featureLookupFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::get_featureLookupFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_featureLookupFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::FontFeatureLookupFlags, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_featureLookupFlags
void TMPro::TMP_GlyphPairAdjustmentRecord::set_featureLookupFlags(::TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_GlyphPairAdjustmentRecord::set_featureLookupFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_featureLookupFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.GlyphPairKey
#include "TMPro/GlyphPairKey.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 firstGlyphIndex
uint& TMPro::GlyphPairKey::dyn_firstGlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphPairKey::dyn_firstGlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstGlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 secondGlyphIndex
uint& TMPro::GlyphPairKey::dyn_secondGlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphPairKey::dyn_secondGlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondGlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 key
uint& TMPro::GlyphPairKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphPairKey::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.GlyphPairKey..ctor
TMPro::GlyphPairKey::GlyphPairKey(uint firstGlyphIndex, uint secondGlyphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstGlyphIndex), ::il2cpp_utils::ExtractType(secondGlyphIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstGlyphIndex, secondGlyphIndex);
}
// Autogenerated method: TMPro.GlyphPairKey..ctor
TMPro::GlyphPairKey::GlyphPairKey(::TMPro::TMP_GlyphPairAdjustmentRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::GlyphPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField
#include "TMPro/TMP_InputField.hpp"
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TMP_InputField/TMPro.OnValidateInput
#include "TMPro/TMP_InputField_OnValidateInput.hpp"
// Including type: TMPro.TMP_InputField/TMPro.SubmitEvent
#include "TMPro/TMP_InputField_SubmitEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.OnChangeEvent
#include "TMPro/TMP_InputField_OnChangeEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.SelectionEvent
#include "TMPro/TMP_InputField_SelectionEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.TextSelectionEvent
#include "TMPro/TMP_InputField_TextSelectionEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.TouchScreenKeyboardEvent
#include "TMPro/TMP_InputField_TouchScreenKeyboardEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.EditState
#include "TMPro/TMP_InputField_EditState.hpp"
// Including type: TMPro.TMP_InputField/TMPro.<CaretBlink>d__276
#include "TMPro/TMP_InputField_-CaretBlink-d__276.hpp"
// Including type: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__294
#include "TMPro/TMP_InputField_-MouseDragOutsideRect-d__294.hpp"
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.RectMask2D
#include "UnityEngine/UI/RectMask2D.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: TMPro.TMP_ScrollbarEventHandler
#include "TMPro/TMP_ScrollbarEventHandler.hpp"
// Including type: UnityEngine.UI.LayoutGroup
#include "UnityEngine/UI/LayoutGroup.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TMP_InputValidator
#include "TMPro/TMP_InputValidator.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] kSeparators
::ArrayW<::Il2CppChar> TMPro::TMP_InputField::_get_kSeparators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_get_kSeparators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("TMPro", "TMP_InputField", "kSeparators"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] kSeparators
void TMPro::TMP_InputField::_set_kSeparators(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_set_kSeparators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kSeparators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHScrollSpeed
float TMPro::TMP_InputField::_get_kHScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_get_kHScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_InputField", "kHScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHScrollSpeed
void TMPro::TMP_InputField::_set_kHScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_set_kHScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kHScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVScrollSpeed
float TMPro::TMP_InputField::_get_kVScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_get_kVScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_InputField", "kVScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVScrollSpeed
void TMPro::TMP_InputField::_set_kVScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_set_kVScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kVScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEmailSpecialCharacters
::StringW TMPro::TMP_InputField::_get_kEmailSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_get_kEmailSpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("TMPro", "TMP_InputField", "kEmailSpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEmailSpecialCharacters
void TMPro::TMP_InputField::_set_kEmailSpecialCharacters(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::_set_kEmailSpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kEmailSpecialCharacters", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.TouchScreenKeyboard m_SoftKeyboard
::UnityEngine::TouchScreenKeyboard*& TMPro::TMP_InputField::dyn_m_SoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_SoftKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SoftKeyboard"))->offset;
  return *reinterpret_cast<::UnityEngine::TouchScreenKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_RectTransform
::UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_m_RectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_RectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_TextViewport
::UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_m_TextViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TextViewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextViewport"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.RectMask2D m_TextComponentRectMask
::UnityEngine::UI::RectMask2D*& TMPro::TMP_InputField::dyn_m_TextComponentRectMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TextComponentRectMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponentRectMask"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RectMask2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.RectMask2D m_TextViewportRectMask
::UnityEngine::UI::RectMask2D*& TMPro::TMP_InputField::dyn_m_TextViewportRectMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TextViewportRectMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextViewportRectMask"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RectMask2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rect m_CachedViewportRect
::UnityEngine::Rect& TMPro::TMP_InputField::dyn_m_CachedViewportRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CachedViewportRect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedViewportRect"))->offset;
  return *reinterpret_cast<::UnityEngine::Rect*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text m_TextComponent
::TMPro::TMP_Text*& TMPro::TMP_InputField::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_TextComponentRectTransform
::UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_m_TextComponentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TextComponentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponentRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Graphic m_Placeholder
::UnityEngine::UI::Graphic*& TMPro::TMP_InputField::dyn_m_Placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_Placeholder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Placeholder"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Scrollbar m_VerticalScrollbar
::UnityEngine::UI::Scrollbar*& TMPro::TMP_InputField::dyn_m_VerticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_VerticalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbar"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Scrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ScrollbarEventHandler m_VerticalScrollbarEventHandler
::TMPro::TMP_ScrollbarEventHandler*& TMPro::TMP_InputField::dyn_m_VerticalScrollbarEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_VerticalScrollbarEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbarEventHandler"))->offset;
  return *reinterpret_cast<::TMPro::TMP_ScrollbarEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsDrivenByLayoutComponents
bool& TMPro::TMP_InputField::dyn_m_IsDrivenByLayoutComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IsDrivenByLayoutComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsDrivenByLayoutComponents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.LayoutGroup m_LayoutGroup
::UnityEngine::UI::LayoutGroup*& TMPro::TMP_InputField::dyn_m_LayoutGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_LayoutGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::LayoutGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.IScrollHandler m_IScrollHandlerParent
::UnityEngine::EventSystems::IScrollHandler*& TMPro::TMP_InputField::dyn_m_IScrollHandlerParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IScrollHandlerParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IScrollHandlerParent"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::IScrollHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ScrollPosition
float& TMPro::TMP_InputField::dyn_m_ScrollPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ScrollPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ScrollSensitivity
float& TMPro::TMP_InputField::dyn_m_ScrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ScrollSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.ContentType m_ContentType
::TMPro::TMP_InputField::ContentType& TMPro::TMP_InputField::dyn_m_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ContentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContentType"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::ContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.InputType m_InputType
::TMPro::TMP_InputField::InputType& TMPro::TMP_InputField::dyn_m_InputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_InputType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputType"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::InputType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char m_AsteriskChar
::Il2CppChar& TMPro::TMP_InputField::dyn_m_AsteriskChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_AsteriskChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsteriskChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TouchScreenKeyboardType m_KeyboardType
::UnityEngine::TouchScreenKeyboardType& TMPro::TMP_InputField::dyn_m_KeyboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_KeyboardType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyboardType"))->offset;
  return *reinterpret_cast<::UnityEngine::TouchScreenKeyboardType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.LineType m_LineType
::TMPro::TMP_InputField::LineType& TMPro::TMP_InputField::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideMobileInput
bool& TMPro::TMP_InputField::dyn_m_HideMobileInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_HideMobileInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideMobileInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideSoftKeyboard
bool& TMPro::TMP_InputField::dyn_m_HideSoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_HideSoftKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideSoftKeyboard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.CharacterValidation m_CharacterValidation
::TMPro::TMP_InputField::CharacterValidation& TMPro::TMP_InputField::dyn_m_CharacterValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CharacterValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterValidation"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::CharacterValidation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_RegexValue
::StringW& TMPro::TMP_InputField::dyn_m_RegexValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_RegexValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegexValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GlobalPointSize
float& TMPro::TMP_InputField::dyn_m_GlobalPointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_GlobalPointSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlobalPointSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CharacterLimit
int& TMPro::TMP_InputField::dyn_m_CharacterLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CharacterLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SubmitEvent m_OnEndEdit
::TMPro::TMP_InputField::SubmitEvent*& TMPro::TMP_InputField::dyn_m_OnEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnEndEdit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnEndEdit"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::SubmitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SubmitEvent m_OnSubmit
::TMPro::TMP_InputField::SubmitEvent*& TMPro::TMP_InputField::dyn_m_OnSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnSubmit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSubmit"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::SubmitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SelectionEvent m_OnSelect
::TMPro::TMP_InputField::SelectionEvent*& TMPro::TMP_InputField::dyn_m_OnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelect"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::SelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SelectionEvent m_OnDeselect
::TMPro::TMP_InputField::SelectionEvent*& TMPro::TMP_InputField::dyn_m_OnDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnDeselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeselect"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::SelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TextSelectionEvent m_OnTextSelection
::TMPro::TMP_InputField::TextSelectionEvent*& TMPro::TMP_InputField::dyn_m_OnTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnTextSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnTextSelection"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::TextSelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TextSelectionEvent m_OnEndTextSelection
::TMPro::TMP_InputField::TextSelectionEvent*& TMPro::TMP_InputField::dyn_m_OnEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnEndTextSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnEndTextSelection"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::TextSelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.OnChangeEvent m_OnValueChanged
::TMPro::TMP_InputField::OnChangeEvent*& TMPro::TMP_InputField::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::OnChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TouchScreenKeyboardEvent m_OnTouchScreenKeyboardStatusChanged
::TMPro::TMP_InputField::TouchScreenKeyboardEvent*& TMPro::TMP_InputField::dyn_m_OnTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnTouchScreenKeyboardStatusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnTouchScreenKeyboardStatusChanged"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::TouchScreenKeyboardEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.OnValidateInput m_OnValidateInput
::TMPro::TMP_InputField::OnValidateInput*& TMPro::TMP_InputField::dyn_m_OnValidateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnValidateInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValidateInput"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputField::OnValidateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_CaretColor
::UnityEngine::Color& TMPro::TMP_InputField::dyn_m_CaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomCaretColor
bool& TMPro::TMP_InputField::dyn_m_CustomCaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CustomCaretColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomCaretColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_SelectionColor
::UnityEngine::Color& TMPro::TMP_InputField::dyn_m_SelectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_SelectionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectionColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String m_Text
::StringW& TMPro::TMP_InputField::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CaretBlinkRate
float& TMPro::TMP_InputField::dyn_m_CaretBlinkRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretBlinkRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretBlinkRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CaretWidth
int& TMPro::TMP_InputField::dyn_m_CaretWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReadOnly
bool& TMPro::TMP_InputField::dyn_m_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RichText
bool& TMPro::TMP_InputField::dyn_m_RichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_RichText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RichText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_StringPosition
int& TMPro::TMP_InputField::dyn_m_StringPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_StringPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_StringSelectPosition
int& TMPro::TMP_InputField::dyn_m_StringSelectPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_StringSelectPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringSelectPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_CaretPosition
int& TMPro::TMP_InputField::dyn_m_CaretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_CaretSelectPosition
int& TMPro::TMP_InputField::dyn_m_CaretSelectPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretSelectPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretSelectPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform caretRectTrans
::UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_caretRectTrans() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_caretRectTrans");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caretRectTrans"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UIVertex[] m_CursorVerts
::ArrayW<::UnityEngine::UIVertex>& TMPro::TMP_InputField::dyn_m_CursorVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CursorVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CursorVerts"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UIVertex>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_CachedInputRenderer
::UnityEngine::CanvasRenderer*& TMPro::TMP_InputField::dyn_m_CachedInputRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CachedInputRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedInputRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastPosition
::UnityEngine::Vector2& TMPro::TMP_InputField::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Mesh m_Mesh
::UnityEngine::Mesh*& TMPro::TMP_InputField::dyn_m_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowInput
bool& TMPro::TMP_InputField::dyn_m_AllowInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_AllowInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShouldActivateNextUpdate
bool& TMPro::TMP_InputField::dyn_m_ShouldActivateNextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ShouldActivateNextUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldActivateNextUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdateDrag
bool& TMPro::TMP_InputField::dyn_m_UpdateDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_UpdateDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateDrag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DragPositionOutOfBounds
bool& TMPro::TMP_InputField::dyn_m_DragPositionOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_DragPositionOutOfBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DragPositionOutOfBounds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_CaretVisible
bool& TMPro::TMP_InputField::dyn_m_CaretVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_CaretVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_BlinkCoroutine
::UnityEngine::Coroutine*& TMPro::TMP_InputField::dyn_m_BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_BlinkCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlinkCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_BlinkStartTime
float& TMPro::TMP_InputField::dyn_m_BlinkStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_BlinkStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlinkStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DragCoroutine
::UnityEngine::Coroutine*& TMPro::TMP_InputField::dyn_m_DragCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_DragCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DragCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_OriginalText
::StringW& TMPro::TMP_InputField::dyn_m_OriginalText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OriginalText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginalText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasCanceled
bool& TMPro::TMP_InputField::dyn_m_WasCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_WasCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasDoneFocusTransition
bool& TMPro::TMP_InputField::dyn_m_HasDoneFocusTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_HasDoneFocusTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasDoneFocusTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSecondsRealtime m_WaitForSecondsRealtime
::UnityEngine::WaitForSecondsRealtime*& TMPro::TMP_InputField::dyn_m_WaitForSecondsRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_WaitForSecondsRealtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitForSecondsRealtime"))->offset;
  return *reinterpret_cast<::UnityEngine::WaitForSecondsRealtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PreventCallback
bool& TMPro::TMP_InputField::dyn_m_PreventCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_PreventCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreventCallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
bool& TMPro::TMP_InputField::dyn_m_TouchKeyboardAllowsInPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_TouchKeyboardAllowsInPlaceEditing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TouchKeyboardAllowsInPlaceEditing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsTextComponentUpdateRequired
bool& TMPro::TMP_InputField::dyn_m_IsTextComponentUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IsTextComponentUpdateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsTextComponentUpdateRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isLastKeyBackspace
bool& TMPro::TMP_InputField::dyn_m_isLastKeyBackspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_isLastKeyBackspace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLastKeyBackspace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PointerDownClickStartTime
float& TMPro::TMP_InputField::dyn_m_PointerDownClickStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_PointerDownClickStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PointerDownClickStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_KeyDownStartTime
float& TMPro::TMP_InputField::dyn_m_KeyDownStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_KeyDownStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyDownStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DoubleClickDelay
float& TMPro::TMP_InputField::dyn_m_DoubleClickDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_DoubleClickDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DoubleClickDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsCompositionActive
bool& TMPro::TMP_InputField::dyn_m_IsCompositionActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IsCompositionActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsCompositionActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShouldUpdateIMEWindowPosition
bool& TMPro::TMP_InputField::dyn_m_ShouldUpdateIMEWindowPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ShouldUpdateIMEWindowPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldUpdateIMEWindowPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_PreviousIMEInsertionLine
int& TMPro::TMP_InputField::dyn_m_PreviousIMEInsertionLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_PreviousIMEInsertionLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousIMEInsertionLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_GlobalFontAsset
::TMPro::TMP_FontAsset*& TMPro::TMP_InputField::dyn_m_GlobalFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_GlobalFontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlobalFontAsset"))->offset;
  return *reinterpret_cast<::TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_OnFocusSelectAll
bool& TMPro::TMP_InputField::dyn_m_OnFocusSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_OnFocusSelectAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFocusSelectAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isSelectAll
bool& TMPro::TMP_InputField::dyn_m_isSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_isSelectAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSelectAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ResetOnDeActivation
bool& TMPro::TMP_InputField::dyn_m_ResetOnDeActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ResetOnDeActivation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResetOnDeActivation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SelectionStillActive
bool& TMPro::TMP_InputField::dyn_m_SelectionStillActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_SelectionStillActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectionStillActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReleaseSelection
bool& TMPro::TMP_InputField::dyn_m_ReleaseSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ReleaseSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReleaseSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_PreviouslySelectedObject
::UnityEngine::GameObject*& TMPro::TMP_InputField::dyn_m_PreviouslySelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_PreviouslySelectedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviouslySelectedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RestoreOriginalTextOnEscape
bool& TMPro::TMP_InputField::dyn_m_RestoreOriginalTextOnEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_RestoreOriginalTextOnEscape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RestoreOriginalTextOnEscape"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRichTextEditingAllowed
bool& TMPro::TMP_InputField::dyn_m_isRichTextEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_isRichTextEditingAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRichTextEditingAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_LineLimit
int& TMPro::TMP_InputField::dyn_m_LineLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_LineLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_InputValidator m_InputValidator
::TMPro::TMP_InputValidator*& TMPro::TMP_InputField::dyn_m_InputValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_InputValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputValidator"))->offset;
  return *reinterpret_cast<::TMPro::TMP_InputValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isSelected
bool& TMPro::TMP_InputField::dyn_m_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_isSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsStringPositionDirty
bool& TMPro::TMP_InputField::dyn_m_IsStringPositionDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IsStringPositionDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsStringPositionDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsCaretPositionDirty
bool& TMPro::TMP_InputField::dyn_m_IsCaretPositionDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_IsCaretPositionDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsCaretPositionDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_forceRectTransformAdjustment
bool& TMPro::TMP_InputField::dyn_m_forceRectTransformAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_forceRectTransformAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_forceRectTransformAdjustment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Event m_ProcessingEvent
::UnityEngine::Event*& TMPro::TMP_InputField::dyn_m_ProcessingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::dyn_m_ProcessingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProcessingEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Event**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputSystem
::UnityEngine::EventSystems::BaseInput* TMPro::TMP_InputField::get_inputSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_inputSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::EventSystems::BaseInput*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_compositionString
::StringW TMPro::TMP_InputField::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_compositionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_compositionLength
int TMPro::TMP_InputField::get_compositionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_compositionLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_mesh
::UnityEngine::Mesh* TMPro::TMP_InputField::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_shouldHideMobileInput
bool TMPro::TMP_InputField::get_shouldHideMobileInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_shouldHideMobileInput
void TMPro::TMP_InputField::set_shouldHideMobileInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_shouldHideSoftKeyboard
bool TMPro::TMP_InputField::get_shouldHideSoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_shouldHideSoftKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldHideSoftKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_shouldHideSoftKeyboard
void TMPro::TMP_InputField::set_shouldHideSoftKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_shouldHideSoftKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldHideSoftKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_text
::StringW TMPro::TMP_InputField::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_text
void TMPro::TMP_InputField::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_isFocused
bool TMPro::TMP_InputField::get_isFocused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_isFocused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFocused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretBlinkRate
float TMPro::TMP_InputField::get_caretBlinkRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretBlinkRate
void TMPro::TMP_InputField::set_caretBlinkRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretWidth
int TMPro::TMP_InputField::get_caretWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretWidth
void TMPro::TMP_InputField::set_caretWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_textViewport
::UnityEngine::RectTransform* TMPro::TMP_InputField::get_textViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_textViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_textViewport
void TMPro::TMP_InputField::set_textViewport(::UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_textViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_textComponent
::TMPro::TMP_Text* TMPro::TMP_InputField::get_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_textComponent
void TMPro::TMP_InputField::set_textComponent(::TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_placeholder
::UnityEngine::UI::Graphic* TMPro::TMP_InputField::get_placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_placeholder
void TMPro::TMP_InputField::set_placeholder(::UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_verticalScrollbar
::UnityEngine::UI::Scrollbar* TMPro::TMP_InputField::get_verticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Scrollbar*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_verticalScrollbar
void TMPro::TMP_InputField::set_verticalScrollbar(::UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_scrollSensitivity
float TMPro::TMP_InputField::get_scrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_scrollSensitivity
void TMPro::TMP_InputField::set_scrollSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretColor
::UnityEngine::Color TMPro::TMP_InputField::get_caretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretColor
void TMPro::TMP_InputField::set_caretColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_customCaretColor
bool TMPro::TMP_InputField::get_customCaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_customCaretColor
void TMPro::TMP_InputField::set_customCaretColor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionColor
::UnityEngine::Color TMPro::TMP_InputField::get_selectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionColor
void TMPro::TMP_InputField::set_selectionColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onEndEdit
::TMPro::TMP_InputField::SubmitEvent* TMPro::TMP_InputField::get_onEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::SubmitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onEndEdit
void TMPro::TMP_InputField::set_onEndEdit(::TMPro::TMP_InputField::SubmitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onSubmit
::TMPro::TMP_InputField::SubmitEvent* TMPro::TMP_InputField::get_onSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::SubmitEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onSubmit
void TMPro::TMP_InputField::set_onSubmit(::TMPro::TMP_InputField::SubmitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onSelect
::TMPro::TMP_InputField::SelectionEvent* TMPro::TMP_InputField::get_onSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::SelectionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onSelect
void TMPro::TMP_InputField::set_onSelect(::TMPro::TMP_InputField::SelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onDeselect
::TMPro::TMP_InputField::SelectionEvent* TMPro::TMP_InputField::get_onDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::SelectionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onDeselect
void TMPro::TMP_InputField::set_onDeselect(::TMPro::TMP_InputField::SelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onTextSelection
::TMPro::TMP_InputField::TextSelectionEvent* TMPro::TMP_InputField::get_onTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::TextSelectionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onTextSelection
void TMPro::TMP_InputField::set_onTextSelection(::TMPro::TMP_InputField::TextSelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onEndTextSelection
::TMPro::TMP_InputField::TextSelectionEvent* TMPro::TMP_InputField::get_onEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::TextSelectionEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onEndTextSelection
void TMPro::TMP_InputField::set_onEndTextSelection(::TMPro::TMP_InputField::TextSelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onValueChanged
::TMPro::TMP_InputField::OnChangeEvent* TMPro::TMP_InputField::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::OnChangeEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onValueChanged
void TMPro::TMP_InputField::set_onValueChanged(::TMPro::TMP_InputField::OnChangeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onTouchScreenKeyboardStatusChanged
::TMPro::TMP_InputField::TouchScreenKeyboardEvent* TMPro::TMP_InputField::get_onTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::TouchScreenKeyboardEvent*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onTouchScreenKeyboardStatusChanged
void TMPro::TMP_InputField::set_onTouchScreenKeyboardStatusChanged(::TMPro::TMP_InputField::TouchScreenKeyboardEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onValidateInput
::TMPro::TMP_InputField::OnValidateInput* TMPro::TMP_InputField::get_onValidateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::OnValidateInput*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onValidateInput
void TMPro::TMP_InputField::set_onValidateInput(::TMPro::TMP_InputField::OnValidateInput* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_characterLimit
int TMPro::TMP_InputField::get_characterLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_characterLimit
void TMPro::TMP_InputField::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_pointSize
float TMPro::TMP_InputField::get_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_pointSize
void TMPro::TMP_InputField::set_pointSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_fontAsset
::TMPro::TMP_FontAsset* TMPro::TMP_InputField::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_fontAsset
void TMPro::TMP_InputField::set_fontAsset(::TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onFocusSelectAll
bool TMPro::TMP_InputField::get_onFocusSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_onFocusSelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFocusSelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onFocusSelectAll
void TMPro::TMP_InputField::set_onFocusSelectAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_onFocusSelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFocusSelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_resetOnDeActivation
bool TMPro::TMP_InputField::get_resetOnDeActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_resetOnDeActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resetOnDeActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_resetOnDeActivation
void TMPro::TMP_InputField::set_resetOnDeActivation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_resetOnDeActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resetOnDeActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_restoreOriginalTextOnEscape
bool TMPro::TMP_InputField::get_restoreOriginalTextOnEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_restoreOriginalTextOnEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_restoreOriginalTextOnEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_restoreOriginalTextOnEscape
void TMPro::TMP_InputField::set_restoreOriginalTextOnEscape(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_restoreOriginalTextOnEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_restoreOriginalTextOnEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_isRichTextEditingAllowed
bool TMPro::TMP_InputField::get_isRichTextEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_isRichTextEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRichTextEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_isRichTextEditingAllowed
void TMPro::TMP_InputField::set_isRichTextEditingAllowed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_isRichTextEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRichTextEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_contentType
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::get_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::ContentType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_contentType
void TMPro::TMP_InputField::set_contentType(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_lineType
::TMPro::TMP_InputField::LineType TMPro::TMP_InputField::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::LineType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_lineType
void TMPro::TMP_InputField::set_lineType(::TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_lineLimit
int TMPro::TMP_InputField::get_lineLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_lineLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_lineLimit
void TMPro::TMP_InputField::set_lineLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_lineLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputType
::TMPro::TMP_InputField::InputType TMPro::TMP_InputField::get_inputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::InputType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_inputType
void TMPro::TMP_InputField::set_inputType(::TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_keyboardType
::UnityEngine::TouchScreenKeyboardType TMPro::TMP_InputField::get_keyboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboardType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_keyboardType
void TMPro::TMP_InputField::set_keyboardType(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_characterValidation
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::get_characterValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::CharacterValidation, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_characterValidation
void TMPro::TMP_InputField::set_characterValidation(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputValidator
::TMPro::TMP_InputValidator* TMPro::TMP_InputField::get_inputValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_inputValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputValidator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_inputValidator
void TMPro::TMP_InputField::set_inputValidator(::TMPro::TMP_InputValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_inputValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_readOnly
bool TMPro::TMP_InputField::get_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_readOnly
void TMPro::TMP_InputField::set_readOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_richText
bool TMPro::TMP_InputField::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_richText
void TMPro::TMP_InputField::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_multiLine
bool TMPro::TMP_InputField::get_multiLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_multiLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_asteriskChar
::Il2CppChar TMPro::TMP_InputField::get_asteriskChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_asteriskChar
void TMPro::TMP_InputField::set_asteriskChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_wasCanceled
bool TMPro::TMP_InputField::get_wasCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_wasCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretPositionInternal
int TMPro::TMP_InputField::get_caretPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretPositionInternal
void TMPro::TMP_InputField::set_caretPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringPositionInternal
int TMPro::TMP_InputField::get_stringPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_stringPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringPositionInternal
void TMPro::TMP_InputField::set_stringPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_stringPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretSelectPositionInternal
int TMPro::TMP_InputField::get_caretSelectPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretSelectPositionInternal
void TMPro::TMP_InputField::set_caretSelectPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringSelectPositionInternal
int TMPro::TMP_InputField::get_stringSelectPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_stringSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringSelectPositionInternal
void TMPro::TMP_InputField::set_stringSelectPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_stringSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretPosition
int TMPro::TMP_InputField::get_caretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretPosition
void TMPro::TMP_InputField::set_caretPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionAnchorPosition
int TMPro::TMP_InputField::get_selectionAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionAnchorPosition
void TMPro::TMP_InputField::set_selectionAnchorPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionFocusPosition
int TMPro::TMP_InputField::get_selectionFocusPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionFocusPosition
void TMPro::TMP_InputField::set_selectionFocusPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringPosition
int TMPro::TMP_InputField::get_stringPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_stringPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringPosition
void TMPro::TMP_InputField::set_stringPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_stringPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionStringAnchorPosition
int TMPro::TMP_InputField::get_selectionStringAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_selectionStringAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionStringAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionStringAnchorPosition
void TMPro::TMP_InputField::set_selectionStringAnchorPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_selectionStringAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionStringAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionStringFocusPosition
int TMPro::TMP_InputField::get_selectionStringFocusPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_selectionStringFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionStringFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionStringFocusPosition
void TMPro::TMP_InputField::set_selectionStringFocusPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_selectionStringFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionStringFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_clipboard
::StringW TMPro::TMP_InputField::get_clipboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", "get_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_clipboard
void TMPro::TMP_InputField::set_clipboard(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::set_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", "set_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_minWidth
float TMPro::TMP_InputField::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_preferredWidth
float TMPro::TMP_InputField::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_flexibleWidth
float TMPro::TMP_InputField::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_minHeight
float TMPro::TMP_InputField::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_preferredHeight
float TMPro::TMP_InputField::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_flexibleHeight
float TMPro::TMP_InputField::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_layoutPriority
int TMPro::TMP_InputField::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UnityEngine.UI.ICanvasElement.get_transform
::UnityEngine::Transform* TMPro::TMP_InputField::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.isKeyboardUsingEvents
bool TMPro::TMP_InputField::isKeyboardUsingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::isKeyboardUsingEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "isKeyboardUsingEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextWithoutNotify
void TMPro::TMP_InputField::SetTextWithoutNotify(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetTextWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.SetText
void TMPro::TMP_InputField::SetText(::StringW value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: TMPro.TMP_InputField.ClampStringPos
void TMPro::TMP_InputField::ClampStringPos(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ClampStringPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampStringPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pos));
}
// Autogenerated method: TMPro.TMP_InputField.ClampCaretPos
void TMPro::TMP_InputField::ClampCaretPos(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ClampCaretPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampCaretPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pos));
}
// Autogenerated method: TMPro.TMP_InputField.ON_TEXT_CHANGED
void TMPro::TMP_InputField::ON_TEXT_CHANGED(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: TMPro.TMP_InputField.CaretBlink
::System::Collections::IEnumerator* TMPro::TMP_InputField::CaretBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CaretBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaretBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetCaretVisible
void TMPro::TMP_InputField::SetCaretVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetCaretVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetCaretActive
void TMPro::TMP_InputField::SetCaretActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetCaretActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnFocus
void TMPro::TMP_InputField::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SelectAll
void TMPro::TMP_InputField::SelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveTextEnd
void TMPro::TMP_InputField::MoveTextEnd(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveTextEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveTextStart
void TMPro::TMP_InputField::MoveTextStart(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveTextStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveToEndOfLine
void TMPro::TMP_InputField::MoveToEndOfLine(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveToEndOfLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToEndOfLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.MoveToStartOfLine
void TMPro::TMP_InputField::MoveToStartOfLine(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveToStartOfLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToStartOfLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.InPlaceEditing
bool TMPro::TMP_InputField::InPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InPlaceEditing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InPlaceEditing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateStringPositionFromKeyboard
void TMPro::TMP_InputField::UpdateStringPositionFromKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateStringPositionFromKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStringPositionFromKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.LateUpdate
void TMPro::TMP_InputField::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MayDrag
bool TMPro::TMP_InputField::MayDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnBeginDrag
void TMPro::TMP_InputField::OnBeginDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnDrag
void TMPro::TMP_InputField::OnDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.MouseDragOutsideRect
::System::Collections::IEnumerator* TMPro::TMP_InputField::MouseDragOutsideRect(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MouseDragOutsideRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseDragOutsideRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnEndDrag
void TMPro::TMP_InputField::OnEndDrag(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.KeyPressed
::TMPro::TMP_InputField::EditState TMPro::TMP_InputField::KeyPressed(::UnityEngine::Event* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::KeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  return ::il2cpp_utils::RunMethodRethrow<::TMPro::TMP_InputField::EditState, false>(this, ___internal__method, evt);
}
// Autogenerated method: TMPro.TMP_InputField.IsValidChar
bool TMPro::TMP_InputField::IsValidChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::IsValidChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_InputField.ProcessEvent
void TMPro::TMP_InputField::ProcessEvent(::UnityEngine::Event* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ProcessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: TMPro.TMP_InputField.OnUpdateSelected
void TMPro::TMP_InputField::OnUpdateSelected(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnUpdateSelected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnScroll
void TMPro::TMP_InputField::OnScroll(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnScroll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.GetScrollPositionRelativeToViewport
float TMPro::TMP_InputField::GetScrollPositionRelativeToViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetScrollPositionRelativeToViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScrollPositionRelativeToViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.GetSelectedString
::StringW TMPro::TMP_InputField::GetSelectedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetSelectedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.FindNextWordBegin
int TMPro::TMP_InputField::FindNextWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::FindNextWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNextWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveRight
void TMPro::TMP_InputField::MoveRight(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.FindPrevWordBegin
int TMPro::TMP_InputField::FindPrevWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::FindPrevWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrevWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveLeft
void TMPro::TMP_InputField::MoveLeft(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.LineUpCharacterPosition
int TMPro::TMP_InputField::LineUpCharacterPosition(int originalPos, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineUpCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineUpCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalPos, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.LineDownCharacterPosition
int TMPro::TMP_InputField::LineDownCharacterPosition(int originalPos, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineDownCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineDownCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToLastChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalPos, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.PageUpCharacterPosition
int TMPro::TMP_InputField::PageUpCharacterPosition(int originalPos, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::PageUpCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageUpCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalPos, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.PageDownCharacterPosition
int TMPro::TMP_InputField::PageDownCharacterPosition(int originalPos, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::PageDownCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageDownCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToLastChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalPos, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.MoveDown
void TMPro::TMP_InputField::MoveDown(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveDown
void TMPro::TMP_InputField::MoveDown(bool shift, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToLastChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.MoveUp
void TMPro::TMP_InputField::MoveUp(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveUp
void TMPro::TMP_InputField::MoveUp(bool shift, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageUp
void TMPro::TMP_InputField::MovePageUp(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MovePageUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageUp
void TMPro::TMP_InputField::MovePageUp(bool shift, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MovePageUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageDown
void TMPro::TMP_InputField::MovePageDown(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MovePageDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageDown
void TMPro::TMP_InputField::MovePageDown(bool shift, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MovePageDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToLastChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shift, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.Delete
void TMPro::TMP_InputField::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.DeleteKey
void TMPro::TMP_InputField::DeleteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::DeleteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Backspace
void TMPro::TMP_InputField::Backspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Backspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Append
void TMPro::TMP_InputField::Append(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.Append
void TMPro::TMP_InputField::Append(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.Insert
void TMPro::TMP_InputField::Insert(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateTouchKeyboardFromEditChanges
void TMPro::TMP_InputField::UpdateTouchKeyboardFromEditChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateTouchKeyboardFromEditChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnValueChangedAndUpdateLabel
void TMPro::TMP_InputField::SendOnValueChangedAndUpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnValueChangedAndUpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnValueChanged
void TMPro::TMP_InputField::SendOnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnEndEdit
void TMPro::TMP_InputField::SendOnEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnSubmit
void TMPro::TMP_InputField::SendOnSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnFocus
void TMPro::TMP_InputField::SendOnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnFocusLost
void TMPro::TMP_InputField::SendOnFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnTextSelection
void TMPro::TMP_InputField::SendOnTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnEndTextSelection
void TMPro::TMP_InputField::SendOnEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendOnEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendTouchScreenKeyboardStatusChanged
void TMPro::TMP_InputField::SendTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SendTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateLabel
void TMPro::TMP_InputField::UpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateScrollbar
void TMPro::TMP_InputField::UpdateScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnScrollbarValueChange
void TMPro::TMP_InputField::OnScrollbarValueChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnScrollbarValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScrollbarValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateMaskRegions
void TMPro::TMP_InputField::UpdateMaskRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateMaskRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaskRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.AdjustTextPositionRelativeToViewport
void TMPro::TMP_InputField::AdjustTextPositionRelativeToViewport(float relativePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::AdjustTextPositionRelativeToViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustTextPositionRelativeToViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relativePosition);
}
// Autogenerated method: TMPro.TMP_InputField.GetCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetMinCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetMinCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetMinCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetMaxCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetMaxCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetMaxCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetStringIndexFromCaretPosition
int TMPro::TMP_InputField::GetStringIndexFromCaretPosition(int caretPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GetStringIndexFromCaretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringIndexFromCaretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caretPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, caretPosition);
}
// Autogenerated method: TMPro.TMP_InputField.ForceLabelUpdate
void TMPro::TMP_InputField::ForceLabelUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ForceLabelUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceLabelUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MarkGeometryAsDirty
void TMPro::TMP_InputField::MarkGeometryAsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::MarkGeometryAsDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkGeometryAsDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Rebuild
void TMPro::TMP_InputField::Rebuild(::UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TMP_InputField.LayoutComplete
void TMPro::TMP_InputField::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.GraphicUpdateComplete
void TMPro::TMP_InputField::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateGeometry
void TMPro::TMP_InputField::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::UpdateGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.AssignPositioningIfNeeded
void TMPro::TMP_InputField::AssignPositioningIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::AssignPositioningIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignPositioningIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnFillVBO
void TMPro::TMP_InputField::OnFillVBO(::UnityEngine::Mesh* vbo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnFillVBO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFillVBO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vbo);
}
// Autogenerated method: TMPro.TMP_InputField.GenerateCaret
void TMPro::TMP_InputField::GenerateCaret(::UnityEngine::UI::VertexHelper* vbo, ::UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GenerateCaret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateCaret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: TMPro.TMP_InputField.CreateCursorVerts
void TMPro::TMP_InputField::CreateCursorVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CreateCursorVerts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCursorVerts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.GenerateHightlight
void TMPro::TMP_InputField::GenerateHightlight(::UnityEngine::UI::VertexHelper* vbo, ::UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::GenerateHightlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateHightlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: TMPro.TMP_InputField.AdjustRectTransformRelativeToViewport
void TMPro::TMP_InputField::AdjustRectTransformRelativeToViewport(::UnityEngine::Vector2 startPosition, float height, bool isCharVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::AdjustRectTransformRelativeToViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustRectTransformRelativeToViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(isCharVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPosition, height, isCharVisible);
}
// Autogenerated method: TMPro.TMP_InputField.Validate
::Il2CppChar TMPro::TMP_InputField::Validate(::StringW text, int pos, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, text, pos, ch);
}
// Autogenerated method: TMPro.TMP_InputField.ActivateInputField
void TMPro::TMP_InputField::ActivateInputField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ActivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.ActivateInputFieldInternal
void TMPro::TMP_InputField::ActivateInputFieldInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ActivateInputFieldInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputFieldInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnPointerClick
void TMPro::TMP_InputField::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnControlClick
void TMPro::TMP_InputField::OnControlClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnControlClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.ReleaseSelection
void TMPro::TMP_InputField::ReleaseSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ReleaseSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.DeactivateInputField
void TMPro::TMP_InputField::DeactivateInputField(bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::DeactivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearSelection);
}
// Autogenerated method: TMPro.TMP_InputField.OnSubmit
void TMPro::TMP_InputField::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.EnforceContentType
void TMPro::TMP_InputField::EnforceContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::EnforceContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnforceContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextComponentWrapMode
void TMPro::TMP_InputField::SetTextComponentWrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetTextComponentWrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextComponentWrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextComponentRichTextMode
void TMPro::TMP_InputField::SetTextComponentRichTextMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetTextComponentRichTextMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextComponentRichTextMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustomIfContentTypeIsNot
void TMPro::TMP_InputField::SetToCustomIfContentTypeIsNot(::ArrayW<::TMPro::TMP_InputField::ContentType> allowedContentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetToCustomIfContentTypeIsNot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowedContentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowedContentTypes);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustom
void TMPro::TMP_InputField::SetToCustom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetToCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustom
void TMPro::TMP_InputField::SetToCustom(::TMPro::TMP_InputField::CharacterValidation characterValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetToCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characterValidation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, characterValidation);
}
// Autogenerated method: TMPro.TMP_InputField.CalculateLayoutInputHorizontal
void TMPro::TMP_InputField::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.CalculateLayoutInputVertical
void TMPro::TMP_InputField::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetGlobalPointSize
void TMPro::TMP_InputField::SetGlobalPointSize(float pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetGlobalPointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalPointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pointSize);
}
// Autogenerated method: TMPro.TMP_InputField.SetGlobalFontAsset
void TMPro::TMP_InputField::SetGlobalFontAsset(::TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::SetGlobalFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_InputField.get_hasSelection
bool TMPro::TMP_InputField::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::get_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField..cctor
void TMPro::TMP_InputField::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnEnable
void TMPro::TMP_InputField::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnDisable
void TMPro::TMP_InputField::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnPointerDown
void TMPro::TMP_InputField::OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnSelect
void TMPro::TMP_InputField::OnSelect(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnDeselect
void TMPro::TMP_InputField::OnDeselect(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.DoStateTransition
void TMPro::TMP_InputField::DoStateTransition(::UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.ContentType
#include "TMPro/TMP_InputField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Standard
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Standard
void TMPro::TMP_InputField::ContentType::_set_Standard(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Autocorrected
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Autocorrected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Autocorrected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Autocorrected"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Autocorrected
void TMPro::TMP_InputField::ContentType::_set_Autocorrected(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Autocorrected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Autocorrected", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType IntegerNumber
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_IntegerNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_IntegerNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "IntegerNumber"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType IntegerNumber
void TMPro::TMP_InputField::ContentType::_set_IntegerNumber(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_IntegerNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "IntegerNumber", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType DecimalNumber
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_DecimalNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_DecimalNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "DecimalNumber"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType DecimalNumber
void TMPro::TMP_InputField::ContentType::_set_DecimalNumber(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_DecimalNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "DecimalNumber", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Alphanumeric
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Alphanumeric
void TMPro::TMP_InputField::ContentType::_set_Alphanumeric(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Name
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Name"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Name
void TMPro::TMP_InputField::ContentType::_set_Name(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType EmailAddress
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType EmailAddress
void TMPro::TMP_InputField::ContentType::_set_EmailAddress(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Password
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Password
void TMPro::TMP_InputField::ContentType::_set_Password(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Password", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Pin
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Pin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Pin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Pin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Pin
void TMPro::TMP_InputField::ContentType::_set_Pin(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Pin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Pin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Custom
::TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Custom
void TMPro::TMP_InputField::ContentType::_set_Custom(::TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::ContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::ContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.InputType
#include "TMPro/TMP_InputField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType Standard
::TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType Standard
void TMPro::TMP_InputField::InputType::_set_Standard(::TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType AutoCorrect
::TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_AutoCorrect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_get_AutoCorrect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "AutoCorrect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType AutoCorrect
void TMPro::TMP_InputField::InputType::_set_AutoCorrect(::TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_set_AutoCorrect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "AutoCorrect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType Password
::TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType Password
void TMPro::TMP_InputField::InputType::_set_Password(::TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "Password", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::InputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::InputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.CharacterValidation
#include "TMPro/TMP_InputField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation None
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation None
void TMPro::TMP_InputField::CharacterValidation::_set_None(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Digit
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Digit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Digit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Digit"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Digit
void TMPro::TMP_InputField::CharacterValidation::_set_Digit(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Digit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Digit", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Integer
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Integer
void TMPro::TMP_InputField::CharacterValidation::_set_Integer(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Decimal
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Decimal
void TMPro::TMP_InputField::CharacterValidation::_set_Decimal(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Alphanumeric
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Alphanumeric
void TMPro::TMP_InputField::CharacterValidation::_set_Alphanumeric(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Name
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Name"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Name
void TMPro::TMP_InputField::CharacterValidation::_set_Name(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Regex
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Regex
void TMPro::TMP_InputField::CharacterValidation::_set_Regex(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation EmailAddress
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation EmailAddress
void TMPro::TMP_InputField::CharacterValidation::_set_EmailAddress(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation CustomValidator
::TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_CustomValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_get_CustomValidator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "CustomValidator"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation CustomValidator
void TMPro::TMP_InputField::CharacterValidation::_set_CustomValidator(::TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::_set_CustomValidator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "CustomValidator", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::CharacterValidation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::CharacterValidation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.LineType
#include "TMPro/TMP_InputField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType SingleLine
::TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_SingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_get_SingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "SingleLine"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType SingleLine
void TMPro::TMP_InputField::LineType::_set_SingleLine(::TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_set_SingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "SingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineSubmit
::TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_MultiLineSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_get_MultiLineSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "MultiLineSubmit"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineSubmit
void TMPro::TMP_InputField::LineType::_set_MultiLineSubmit(::TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_set_MultiLineSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "MultiLineSubmit", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineNewline
::TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_MultiLineNewline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_get_MultiLineNewline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "MultiLineNewline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineNewline
void TMPro::TMP_InputField::LineType::_set_MultiLineNewline(::TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::_set_MultiLineNewline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "MultiLineNewline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.OnValidateInput
#include "TMPro/TMP_InputField_OnValidateInput.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.Invoke
::Il2CppChar TMPro::TMP_InputField::OnValidateInput::Invoke(::StringW text, int charIndex, ::Il2CppChar addedChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnValidateInput::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, text, charIndex, addedChar);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.BeginInvoke
::System::IAsyncResult* TMPro::TMP_InputField::OnValidateInput::BeginInvoke(::StringW text, int charIndex, ::Il2CppChar addedChar, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnValidateInput::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, text, charIndex, addedChar, callback, object);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.EndInvoke
::Il2CppChar TMPro::TMP_InputField::OnValidateInput::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::TMPro::TMP_InputField::OnValidateInput::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.SubmitEvent
#include "TMPro/TMP_InputField_SubmitEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.OnChangeEvent
#include "TMPro/TMP_InputField_OnChangeEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.SelectionEvent
#include "TMPro/TMP_InputField_SelectionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.TextSelectionEvent
#include "TMPro/TMP_InputField_TextSelectionEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
