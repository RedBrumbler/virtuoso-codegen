// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute
#include "System/Runtime/ExceptionServices/HandleProcessCorruptedStateExceptionsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Exception m_Exception
::System::Exception*& System::Runtime::ExceptionServices::ExceptionDispatchInfo::dyn_m_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::dyn_m_Exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Exception"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_stackTrace
::Il2CppObject*& System::Runtime::ExceptionServices::ExceptionDispatchInfo::dyn_m_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::dyn_m_stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stackTrace"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.ExceptionServices.ExceptionDispatchInfo.get_BinaryStackTraceArray
::Il2CppObject* System::Runtime::ExceptionServices::ExceptionDispatchInfo::get_BinaryStackTraceArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::get_BinaryStackTraceArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BinaryStackTraceArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.ExceptionServices.ExceptionDispatchInfo.get_SourceException
::System::Exception* System::Runtime::ExceptionServices::ExceptionDispatchInfo::get_SourceException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::get_SourceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* System::Runtime::ExceptionServices::ExceptionDispatchInfo::Capture(::System::Exception* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.ExceptionServices", "ExceptionDispatchInfo", "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw
void System::Runtime::ExceptionServices::ExceptionDispatchInfo::Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ExceptionServices::ExceptionDispatchInfo::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.ConstrainedExecution.CriticalFinalizerObject
#include "System/Runtime/ConstrainedExecution/CriticalFinalizerObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.ConstrainedExecution.CriticalFinalizerObject.Finalize
void System::Runtime::ConstrainedExecution::CriticalFinalizerObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::CriticalFinalizerObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.ConstrainedExecution.Consistency
#include "System/Runtime/ConstrainedExecution/Consistency.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptProcess
::System::Runtime::ConstrainedExecution::Consistency System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Consistency>("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptProcess"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptProcess
void System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptProcess(::System::Runtime::ConstrainedExecution::Consistency value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptProcess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptAppDomain
::System::Runtime::ConstrainedExecution::Consistency System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptAppDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptAppDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Consistency>("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptAppDomain"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptAppDomain
void System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptAppDomain(::System::Runtime::ConstrainedExecution::Consistency value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptAppDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptAppDomain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptInstance
::System::Runtime::ConstrainedExecution::Consistency System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_get_MayCorruptInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Consistency>("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptInstance"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Consistency MayCorruptInstance
void System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptInstance(::System::Runtime::ConstrainedExecution::Consistency value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_set_MayCorruptInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Consistency", "MayCorruptInstance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Consistency WillNotCorruptState
::System::Runtime::ConstrainedExecution::Consistency System::Runtime::ConstrainedExecution::Consistency::_get_WillNotCorruptState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_get_WillNotCorruptState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Consistency>("System.Runtime.ConstrainedExecution", "Consistency", "WillNotCorruptState"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Consistency WillNotCorruptState
void System::Runtime::ConstrainedExecution::Consistency::_set_WillNotCorruptState(::System::Runtime::ConstrainedExecution::Consistency value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::_set_WillNotCorruptState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Consistency", "WillNotCorruptState", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::ConstrainedExecution::Consistency::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Consistency::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.ConstrainedExecution.Cer
#include "System/Runtime/ConstrainedExecution/Cer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Cer None
::System::Runtime::ConstrainedExecution::Cer System::Runtime::ConstrainedExecution::Cer::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Cer>("System.Runtime.ConstrainedExecution", "Cer", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Cer None
void System::Runtime::ConstrainedExecution::Cer::_set_None(::System::Runtime::ConstrainedExecution::Cer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Cer", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Cer MayFail
::System::Runtime::ConstrainedExecution::Cer System::Runtime::ConstrainedExecution::Cer::_get_MayFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_get_MayFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Cer>("System.Runtime.ConstrainedExecution", "Cer", "MayFail"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Cer MayFail
void System::Runtime::ConstrainedExecution::Cer::_set_MayFail(::System::Runtime::ConstrainedExecution::Cer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_set_MayFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Cer", "MayFail", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.ConstrainedExecution.Cer Success
::System::Runtime::ConstrainedExecution::Cer System::Runtime::ConstrainedExecution::Cer::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::ConstrainedExecution::Cer>("System.Runtime.ConstrainedExecution", "Cer", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.ConstrainedExecution.Cer Success
void System::Runtime::ConstrainedExecution::Cer::_set_Success(::System::Runtime::ConstrainedExecution::Cer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.ConstrainedExecution", "Cer", "Success", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::ConstrainedExecution::Cer::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::Cer::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.ConstrainedExecution.ReliabilityContractAttribute
#include "System/Runtime/ConstrainedExecution/ReliabilityContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ConstrainedExecution.Consistency _consistency
::System::Runtime::ConstrainedExecution::Consistency& System::Runtime::ConstrainedExecution::ReliabilityContractAttribute::dyn__consistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::ReliabilityContractAttribute::dyn__consistency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_consistency"))->offset;
  return *reinterpret_cast<::System::Runtime::ConstrainedExecution::Consistency*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ConstrainedExecution.Cer _cer
::System::Runtime::ConstrainedExecution::Cer& System::Runtime::ConstrainedExecution::ReliabilityContractAttribute::dyn__cer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::ConstrainedExecution::ReliabilityContractAttribute::dyn__cer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cer"))->offset;
  return *reinterpret_cast<::System::Runtime::ConstrainedExecution::Cer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.TupleElementNamesAttribute
#include "System/Runtime/CompilerServices/TupleElementNamesAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _transformNames
::ArrayW<::StringW>& System::Runtime::CompilerServices::TupleElementNamesAttribute::dyn__transformNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TupleElementNamesAttribute::dyn__transformNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncVoidMethodBuilder
#include "System/Runtime/CompilerServices/AsyncVoidMethodBuilder.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.SynchronizationContext m_synchronizationContext
::System::Threading::SynchronizationContext*& System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_synchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_synchronizationContext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_synchronizationContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.AsyncMethodBuilderCore m_coreState
::System::Runtime::CompilerServices::AsyncMethodBuilderCore& System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_coreState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_coreState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_coreState"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncMethodBuilderCore*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task m_task
::System::Threading::Tasks::Task*& System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::dyn_m_task");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.get_Task
::System::Threading::Tasks::Task* System::Runtime::CompilerServices::AsyncVoidMethodBuilder::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder System::Runtime::CompilerServices::AsyncVoidMethodBuilder::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncVoidMethodBuilder", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine
void System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult
void System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException
void System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncVoidMethodBuilder.NotifySynchronizationContextOfCompletion
void System::Runtime::CompilerServices::AsyncVoidMethodBuilder::NotifySynchronizationContextOfCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncVoidMethodBuilder::NotifySynchronizationContextOfCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "NotifySynchronizationContextOfCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncTaskMethodBuilder
#include "System/Runtime/CompilerServices/AsyncTaskMethodBuilder.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Runtime.CompilerServices.INotifyCompletion
#include "System/Runtime/CompilerServices/INotifyCompletion.hpp"
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.Task`1<System.Threading.Tasks.VoidTaskResult> s_cachedCompleted
::System::Threading::Tasks::Task_1<::System::Threading::Tasks::VoidTaskResult>* System::Runtime::CompilerServices::AsyncTaskMethodBuilder::_get_s_cachedCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::_get_s_cachedCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<::System::Threading::Tasks::VoidTaskResult>*>("System.Runtime.CompilerServices", "AsyncTaskMethodBuilder", "s_cachedCompleted"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.Task`1<System.Threading.Tasks.VoidTaskResult> s_cachedCompleted
void System::Runtime::CompilerServices::AsyncTaskMethodBuilder::_set_s_cachedCompleted(::System::Threading::Tasks::Task_1<::System::Threading::Tasks::VoidTaskResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::_set_s_cachedCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncTaskMethodBuilder", "s_cachedCompleted", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Threading.Tasks.VoidTaskResult> m_builder
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Threading::Tasks::VoidTaskResult>& System::Runtime::CompilerServices::AsyncTaskMethodBuilder::dyn_m_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::dyn_m_builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Threading::Tasks::VoidTaskResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.get_Task
::System::Threading::Tasks::Task* System::Runtime::CompilerServices::AsyncTaskMethodBuilder::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder..cctor
void System::Runtime::CompilerServices::AsyncTaskMethodBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncTaskMethodBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Create
::System::Runtime::CompilerServices::AsyncTaskMethodBuilder System::Runtime::CompilerServices::AsyncTaskMethodBuilder::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncTaskMethodBuilder", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetStateMachine
void System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult
void System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException
void System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskMethodBuilder::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncTaskCache
#include "System/Runtime/CompilerServices/AsyncTaskCache.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Threading.Tasks.Task`1<System.Boolean> TrueTask
::System::Threading::Tasks::Task_1<bool>* System::Runtime::CompilerServices::AsyncTaskCache::_get_TrueTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_get_TrueTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Runtime.CompilerServices", "AsyncTaskCache", "TrueTask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Threading.Tasks.Task`1<System.Boolean> TrueTask
void System::Runtime::CompilerServices::AsyncTaskCache::_set_TrueTask(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_set_TrueTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncTaskCache", "TrueTask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Threading.Tasks.Task`1<System.Boolean> FalseTask
::System::Threading::Tasks::Task_1<bool>* System::Runtime::CompilerServices::AsyncTaskCache::_get_FalseTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_get_FalseTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Runtime.CompilerServices", "AsyncTaskCache", "FalseTask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Threading.Tasks.Task`1<System.Boolean> FalseTask
void System::Runtime::CompilerServices::AsyncTaskCache::_set_FalseTask(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_set_FalseTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncTaskCache", "FalseTask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Threading.Tasks.Task`1<System.Int32>[] Int32Tasks
::ArrayW<::System::Threading::Tasks::Task_1<int>*> System::Runtime::CompilerServices::AsyncTaskCache::_get_Int32Tasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_get_Int32Tasks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Threading::Tasks::Task_1<int>*>>("System.Runtime.CompilerServices", "AsyncTaskCache", "Int32Tasks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Threading.Tasks.Task`1<System.Int32>[] Int32Tasks
void System::Runtime::CompilerServices::AsyncTaskCache::_set_Int32Tasks(::ArrayW<::System::Threading::Tasks::Task_1<int>*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::_set_Int32Tasks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncTaskCache", "Int32Tasks", value));
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskCache..cctor
void System::Runtime::CompilerServices::AsyncTaskCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncTaskCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncTaskCache.CreateInt32Tasks
::ArrayW<::System::Threading::Tasks::Task_1<int>*> System::Runtime::CompilerServices::AsyncTaskCache::CreateInt32Tasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncTaskCache::CreateInt32Tasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncTaskCache", "CreateInt32Tasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Threading::Tasks::Task_1<int>*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore.hpp"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.MoveNextRunner
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_MoveNextRunner.hpp"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.ContinuationWrapper
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_ContinuationWrapper.hpp"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c__DisplayClass4_0
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_--c__DisplayClass4_0.hpp"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_--c.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Runtime.CompilerServices.IAsyncStateMachine m_stateMachine
::System::Runtime::CompilerServices::IAsyncStateMachine*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::dyn_m_stateMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::dyn_m_stateMachine");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stateMachine"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action m_defaultContextAction
::System::Action*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::dyn_m_defaultContextAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::dyn_m_defaultContextAction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultContextAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.SetStateMachine
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.GetCompletionAction
::System::Action* System::Runtime::CompilerServices::AsyncMethodBuilderCore::GetCompletionAction(::System::Threading::Tasks::Task* taskForTracing, ByRef<::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner*> runnerToInitialize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::GetCompletionAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetCompletionAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskForTracing), ::il2cpp_utils::ExtractType(runnerToInitialize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method, taskForTracing, byref(runnerToInitialize));
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.OutputAsyncCausalityEvents
::System::Action* System::Runtime::CompilerServices::AsyncMethodBuilderCore::OutputAsyncCausalityEvents(::System::Threading::Tasks::Task* innerTask, ::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::OutputAsyncCausalityEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OutputAsyncCausalityEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerTask), ::il2cpp_utils::ExtractType(continuation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(this, ___internal__method, innerTask, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.PostBoxInitialization
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::PostBoxInitialization(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine, ::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner* runner, ::System::Threading::Tasks::Task* builtTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::PostBoxInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PostBoxInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine), ::il2cpp_utils::ExtractType(runner), ::il2cpp_utils::ExtractType(builtTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine, runner, builtTask);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.ThrowAsync
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::ThrowAsync(::System::Exception* exception, ::System::Threading::SynchronizationContext* targetContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::ThrowAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncMethodBuilderCore", "ThrowAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(targetContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception, targetContext);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.CreateContinuationWrapper
::System::Action* System::Runtime::CompilerServices::AsyncMethodBuilderCore::CreateContinuationWrapper(::System::Action* continuation, ::System::Action* invokeAction, ::System::Threading::Tasks::Task* innerTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::CreateContinuationWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncMethodBuilderCore", "CreateContinuationWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation), ::il2cpp_utils::ExtractType(invokeAction), ::il2cpp_utils::ExtractType(innerTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, continuation, invokeAction, innerTask);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore.TryGetContinuationTask
::System::Threading::Tasks::Task* System::Runtime::CompilerServices::AsyncMethodBuilderCore::TryGetContinuationTask(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::TryGetContinuationTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncMethodBuilderCore", "TryGetContinuationTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.MoveNextRunner
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_MoveNextRunner.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeMoveNext
::System::Threading::ContextCallback* System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::_get_s_invokeMoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::_get_s_invokeMoveNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/MoveNextRunner", "s_invokeMoveNext"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeMoveNext
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::_set_s_invokeMoveNext(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::_set_s_invokeMoveNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/MoveNextRunner", "s_invokeMoveNext", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ExecutionContext m_context
::System::Threading::ExecutionContext*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::dyn_m_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::dyn_m_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_context"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Runtime.CompilerServices.IAsyncStateMachine m_stateMachine
::System::Runtime::CompilerServices::IAsyncStateMachine*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::dyn_m_stateMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::dyn_m_stateMachine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stateMachine"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::IAsyncStateMachine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.MoveNextRunner.Run
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.MoveNextRunner.InvokeMoveNext
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::InvokeMoveNext(::Il2CppObject* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::MoveNextRunner::InvokeMoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/MoveNextRunner", "InvokeMoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.ContinuationWrapper
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_ContinuationWrapper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Action m_continuation
::System::Action*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_continuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_continuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_continuation"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action m_invokeAction
::System::Action*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_invokeAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_invokeAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invokeAction"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task m_innerTask
::System::Threading::Tasks::Task*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_innerTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::dyn_m_innerTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_innerTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.ContinuationWrapper.Invoke
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::ContinuationWrapper::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c__DisplayClass4_0
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_--c__DisplayClass4_0.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task innerTask
::System::Threading::Tasks::Task*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::dyn_innerTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::dyn_innerTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action continuation
::System::Action*& System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::dyn_continuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::dyn_continuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "continuation"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c__DisplayClass4_0.<OutputAsyncCausalityEvents>b__0
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::$OutputAsyncCausalityEvents$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c__DisplayClass4_0::<OutputAsyncCausalityEvents>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OutputAsyncCausalityEvents>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c
#include "System/Runtime/CompilerServices/AsyncMethodBuilderCore_--c.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c <>9
::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c* System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c*>("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c <>9
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9(::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.SendOrPostCallback <>9__6_0
::System::Threading::SendOrPostCallback* System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::SendOrPostCallback*>("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.SendOrPostCallback <>9__6_0
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9__6_0(::System::Threading::SendOrPostCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.WaitCallback <>9__6_1
::System::Threading::WaitCallback* System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.WaitCallback <>9__6_1
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9__6_1(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", "<>9__6_1", value)));
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c..cctor
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "AsyncMethodBuilderCore/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c.<ThrowAsync>b__6_0
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::$ThrowAsync$b__6_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::<ThrowAsync>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThrowAsync>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Runtime.CompilerServices.AsyncMethodBuilderCore/System.Runtime.CompilerServices.<>c.<ThrowAsync>b__6_1
void System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::$ThrowAsync$b__6_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::AsyncMethodBuilderCore::$$c::<ThrowAsync>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThrowAsync>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.AsyncStateMachineAttribute
#include "System/Runtime/CompilerServices/AsyncStateMachineAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IAsyncStateMachine
#include "System/Runtime/CompilerServices/IAsyncStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.IAsyncStateMachine.MoveNext
void System::Runtime::CompilerServices::IAsyncStateMachine::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::IAsyncStateMachine::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.IAsyncStateMachine.SetStateMachine
void System::Runtime::CompilerServices::IAsyncStateMachine::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::IAsyncStateMachine::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.INotifyCompletion
#include "System/Runtime/CompilerServices/INotifyCompletion.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.INotifyCompletion.OnCompleted
void System::Runtime::CompilerServices::INotifyCompletion::OnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::INotifyCompletion::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.ICriticalNotifyCompletion
#include "System/Runtime/CompilerServices/ICriticalNotifyCompletion.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.ICriticalNotifyCompletion.UnsafeOnCompleted
void System::Runtime::CompilerServices::ICriticalNotifyCompletion::UnsafeOnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ICriticalNotifyCompletion::UnsafeOnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeOnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.IteratorStateMachineAttribute
#include "System/Runtime/CompilerServices/IteratorStateMachineAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.RuntimeCompatibilityAttribute
#include "System/Runtime/CompilerServices/RuntimeCompatibilityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_wrapNonExceptionThrows
bool& System::Runtime::CompilerServices::RuntimeCompatibilityAttribute::dyn_m_wrapNonExceptionThrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeCompatibilityAttribute::dyn_m_wrapNonExceptionThrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wrapNonExceptionThrows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.set_WrapNonExceptionThrows
void System::Runtime::CompilerServices::RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeCompatibilityAttribute::set_WrapNonExceptionThrows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WrapNonExceptionThrows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.RuntimeWrappedException
#include "System/Runtime/CompilerServices/RuntimeWrappedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object m_wrappedException
::Il2CppObject*& System::Runtime::CompilerServices::RuntimeWrappedException::dyn_m_wrappedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeWrappedException::dyn_m_wrappedException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wrappedException"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData
void System::Runtime::CompilerServices::RuntimeWrappedException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeWrappedException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.StateMachineAttribute
#include "System/Runtime/CompilerServices/StateMachineAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <StateMachineType>k__BackingField
::System::Type*& System::Runtime::CompilerServices::StateMachineAttribute::dyn_$StateMachineType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::StateMachineAttribute::dyn_$StateMachineType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StateMachineType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.StateMachineAttribute.set_StateMachineType
void System::Runtime::CompilerServices::StateMachineAttribute::set_StateMachineType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::StateMachineAttribute::set_StateMachineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StateMachineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.TaskAwaiter
#include "System/Runtime/CompilerServices/TaskAwaiter.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task m_task
::System::Threading::Tasks::Task*& System::Runtime::CompilerServices::TaskAwaiter::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::dyn_m_task");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.get_IsCompleted
bool System::Runtime::CompilerServices::TaskAwaiter::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter..ctor
// ABORTED elsewhere.  System::Runtime::CompilerServices::TaskAwaiter::TaskAwaiter(::System::Threading::Tasks::Task* task)
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.OnCompleted
void System::Runtime::CompilerServices::TaskAwaiter::OnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.UnsafeOnCompleted
void System::Runtime::CompilerServices::TaskAwaiter::UnsafeOnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::UnsafeOnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnsafeOnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.GetResult
void System::Runtime::CompilerServices::TaskAwaiter::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd
void System::Runtime::CompilerServices::TaskAwaiter::ValidateEnd(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::ValidateEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "TaskAwaiter", "ValidateEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification
void System::Runtime::CompilerServices::TaskAwaiter::HandleNonSuccessAndDebuggerNotification(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::HandleNonSuccessAndDebuggerNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "TaskAwaiter", "HandleNonSuccessAndDebuggerNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess
void System::Runtime::CompilerServices::TaskAwaiter::ThrowForNonSuccess(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::ThrowForNonSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "TaskAwaiter", "ThrowForNonSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task);
}
// Autogenerated method: System.Runtime.CompilerServices.TaskAwaiter.OnCompletedInternal
void System::Runtime::CompilerServices::TaskAwaiter::OnCompletedInternal(::System::Threading::Tasks::Task* task, ::System::Action* continuation, bool continueOnCapturedContext, bool flowExecutionContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TaskAwaiter::OnCompletedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "TaskAwaiter", "OnCompletedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(continuation), ::il2cpp_utils::ExtractType(continueOnCapturedContext), ::il2cpp_utils::ExtractType(flowExecutionContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, continuation, continueOnCapturedContext, flowExecutionContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter m_configuredTaskAwaiter
::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::Runtime::CompilerServices::ConfiguredTaskAwaitable::dyn_m_configuredTaskAwaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::dyn_m_configuredTaskAwaiter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_configuredTaskAwaiter"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable..ctor
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaitable(::System::Threading::Tasks::Task* task, bool continueOnCapturedContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(continueOnCapturedContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task, continueOnCapturedContext);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable.GetAwaiter
::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter System::Runtime::CompilerServices::ConfiguredTaskAwaitable::GetAwaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::GetAwaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter
#include "System/Runtime/CompilerServices/ConfiguredTaskAwaitable.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task m_task
::System::Threading::Tasks::Task*& System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::dyn_m_task");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean m_continueOnCapturedContext
bool& System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::dyn_m_continueOnCapturedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::dyn_m_continueOnCapturedContext");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_continueOnCapturedContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter.get_IsCompleted
bool System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter..ctor
// ABORTED elsewhere.  System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::ConfiguredTaskAwaiter(::System::Threading::Tasks::Task* task, bool continueOnCapturedContext)
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter.OnCompleted
void System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::OnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter.UnsafeOnCompleted
void System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::UnsafeOnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::UnsafeOnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnsafeOnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter.GetResult
void System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.TypeForwardedFromAttribute
#include "System/Runtime/CompilerServices/TypeForwardedFromAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String assemblyFullName
::StringW& System::Runtime::CompilerServices::TypeForwardedFromAttribute::dyn_assemblyFullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TypeForwardedFromAttribute::dyn_assemblyFullName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyFullName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.TypeForwardedFromAttribute.get_AssemblyFullName
::StringW System::Runtime::CompilerServices::TypeForwardedFromAttribute::get_AssemblyFullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TypeForwardedFromAttribute::get_AssemblyFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.YieldAwaitable
#include "System/Runtime/CompilerServices/YieldAwaitable.hpp"
// Including type: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter
#include "System/Runtime/CompilerServices/YieldAwaitable_YieldAwaiter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable.GetAwaiter
::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter System::Runtime::CompilerServices::YieldAwaitable::GetAwaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::GetAwaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter
#include "System/Runtime/CompilerServices/YieldAwaitable_YieldAwaiter.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.WaitCallback s_waitCallbackRunAction
::System::Threading::WaitCallback* System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_get_s_waitCallbackRunAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_get_s_waitCallbackRunAction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "s_waitCallbackRunAction"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.WaitCallback s_waitCallbackRunAction
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_set_s_waitCallbackRunAction(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_set_s_waitCallbackRunAction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "s_waitCallbackRunAction", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.SendOrPostCallback s_sendOrPostCallbackRunAction
::System::Threading::SendOrPostCallback* System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_get_s_sendOrPostCallbackRunAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_get_s_sendOrPostCallbackRunAction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SendOrPostCallback*>("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "s_sendOrPostCallbackRunAction"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.SendOrPostCallback s_sendOrPostCallbackRunAction
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_set_s_sendOrPostCallbackRunAction(::System::Threading::SendOrPostCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_set_s_sendOrPostCallbackRunAction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "s_sendOrPostCallbackRunAction", value));
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.get_IsCompleted
bool System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter..cctor
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.OnCompleted
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::OnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.UnsafeOnCompleted
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::UnsafeOnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::UnsafeOnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UnsafeOnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.QueueContinuation
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::QueueContinuation(::System::Action* continuation, bool flowContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::QueueContinuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "QueueContinuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation), ::il2cpp_utils::ExtractType(flowContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, continuation, flowContext);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.RunAction
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::RunAction(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::RunAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "YieldAwaitable/YieldAwaiter", "RunAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter.GetResult
void System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.LoadHint
#include "System/Runtime/CompilerServices/LoadHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.LoadHint Default
::System::Runtime::CompilerServices::LoadHint System::Runtime::CompilerServices::LoadHint::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::LoadHint>("System.Runtime.CompilerServices", "LoadHint", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.LoadHint Default
void System::Runtime::CompilerServices::LoadHint::_set_Default(::System::Runtime::CompilerServices::LoadHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "LoadHint", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.LoadHint Always
::System::Runtime::CompilerServices::LoadHint System::Runtime::CompilerServices::LoadHint::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::LoadHint>("System.Runtime.CompilerServices", "LoadHint", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.LoadHint Always
void System::Runtime::CompilerServices::LoadHint::_set_Always(::System::Runtime::CompilerServices::LoadHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "LoadHint", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.LoadHint Sometimes
::System::Runtime::CompilerServices::LoadHint System::Runtime::CompilerServices::LoadHint::_get_Sometimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_get_Sometimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::LoadHint>("System.Runtime.CompilerServices", "LoadHint", "Sometimes"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.LoadHint Sometimes
void System::Runtime::CompilerServices::LoadHint::_set_Sometimes(::System::Runtime::CompilerServices::LoadHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::_set_Sometimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "LoadHint", "Sometimes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::CompilerServices::LoadHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::LoadHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.DefaultDependencyAttribute
#include "System/Runtime/CompilerServices/DefaultDependencyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.LoadHint loadHint
::System::Runtime::CompilerServices::LoadHint& System::Runtime::CompilerServices::DefaultDependencyAttribute::dyn_loadHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DefaultDependencyAttribute::dyn_loadHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadHint"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::LoadHint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.CompilationRelaxations
#include "System/Runtime/CompilerServices/CompilationRelaxations.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.CompilationRelaxations NoStringInterning
::System::Runtime::CompilerServices::CompilationRelaxations System::Runtime::CompilerServices::CompilationRelaxations::_get_NoStringInterning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CompilationRelaxations::_get_NoStringInterning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::CompilationRelaxations>("System.Runtime.CompilerServices", "CompilationRelaxations", "NoStringInterning"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.CompilationRelaxations NoStringInterning
void System::Runtime::CompilerServices::CompilationRelaxations::_set_NoStringInterning(::System::Runtime::CompilerServices::CompilationRelaxations value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CompilationRelaxations::_set_NoStringInterning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.CompilerServices", "CompilationRelaxations", "NoStringInterning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::CompilerServices::CompilationRelaxations::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CompilationRelaxations::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.CompilationRelaxationsAttribute
#include "System/Runtime/CompilerServices/CompilationRelaxationsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_relaxations
int& System::Runtime::CompilerServices::CompilationRelaxationsAttribute::dyn_m_relaxations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CompilationRelaxationsAttribute::dyn_m_relaxations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_relaxations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.CompilationRelaxationsAttribute.get_CompilationRelaxations
int System::Runtime::CompilerServices::CompilationRelaxationsAttribute::get_CompilationRelaxations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CompilationRelaxationsAttribute::get_CompilationRelaxations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompilationRelaxations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.CompilerGeneratedAttribute
#include "System/Runtime/CompilerServices/CompilerGeneratedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.CustomConstantAttribute
#include "System/Runtime/CompilerServices/CustomConstantAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.CustomConstantAttribute.get_Value
::Il2CppObject* System::Runtime::CompilerServices::CustomConstantAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::CustomConstantAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.DateTimeConstantAttribute
#include "System/Runtime/CompilerServices/DateTimeConstantAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.DateTime date
::System::DateTime& System::Runtime::CompilerServices::DateTimeConstantAttribute::dyn_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DateTimeConstantAttribute::dyn_date");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "date"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.DateTimeConstantAttribute.get_Value
::Il2CppObject* System::Runtime::CompilerServices::DateTimeConstantAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DateTimeConstantAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.DecimalConstantAttribute
#include "System/Runtime/CompilerServices/DecimalConstantAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Decimal dec
::System::Decimal& System::Runtime::CompilerServices::DecimalConstantAttribute::dyn_dec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DecimalConstantAttribute::dyn_dec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dec"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.DecimalConstantAttribute.get_Value
::System::Decimal System::Runtime::CompilerServices::DecimalConstantAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::DecimalConstantAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.ExtensionAttribute
#include "System/Runtime/CompilerServices/ExtensionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.FixedBufferAttribute
#include "System/Runtime/CompilerServices/FixedBufferAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type elementType
::System::Type*& System::Runtime::CompilerServices::FixedBufferAttribute::dyn_elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::FixedBufferAttribute::dyn_elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
int& System::Runtime::CompilerServices::FixedBufferAttribute::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::FixedBufferAttribute::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.FixedBufferAttribute.get_ElementType
::System::Type* System::Runtime::CompilerServices::FixedBufferAttribute::get_ElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::FixedBufferAttribute::get_ElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.FixedBufferAttribute.get_Length
int System::Runtime::CompilerServices::FixedBufferAttribute::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::FixedBufferAttribute::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.InternalsVisibleToAttribute
#include "System/Runtime/CompilerServices/InternalsVisibleToAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _assemblyName
::StringW& System::Runtime::CompilerServices::InternalsVisibleToAttribute::dyn__assemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::InternalsVisibleToAttribute::dyn__assemblyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_assemblyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allInternalsVisible
bool& System::Runtime::CompilerServices::InternalsVisibleToAttribute::dyn__allInternalsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::InternalsVisibleToAttribute::dyn__allInternalsVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allInternalsVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.CompilerServices.InternalsVisibleToAttribute.get_AssemblyName
::StringW System::Runtime::CompilerServices::InternalsVisibleToAttribute::get_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::InternalsVisibleToAttribute::get_AssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.InternalsVisibleToAttribute.get_AllInternalsVisible
bool System::Runtime::CompilerServices::InternalsVisibleToAttribute::get_AllInternalsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::InternalsVisibleToAttribute::get_AllInternalsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllInternalsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.InternalsVisibleToAttribute.set_AllInternalsVisible
void System::Runtime::CompilerServices::InternalsVisibleToAttribute::set_AllInternalsVisible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::InternalsVisibleToAttribute::set_AllInternalsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllInternalsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.FriendAccessAllowedAttribute
#include "System/Runtime/CompilerServices/FriendAccessAllowedAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.TypeDependencyAttribute
#include "System/Runtime/CompilerServices/TypeDependencyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String typeName
::StringW& System::Runtime::CompilerServices::TypeDependencyAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::TypeDependencyAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.UnsafeValueTypeAttribute
#include "System/Runtime/CompilerServices/UnsafeValueTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.CompilerServices.StringFreezingAttribute
#include "System/Runtime/CompilerServices/StringFreezingAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.JitHelpers
#include "System/Runtime/CompilerServices/JitHelpers.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.CompilerServices.RuntimeHelpers
#include "System/Runtime/CompilerServices/RuntimeHelpers.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.RuntimeFieldHandle
#include "System/RuntimeFieldHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.CompilerServices.RuntimeHelpers.get_OffsetToStringData
int System::Runtime::CompilerServices::RuntimeHelpers::get_OffsetToStringData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeHelpers::get_OffsetToStringData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "RuntimeHelpers", "get_OffsetToStringData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray
void System::Runtime::CompilerServices::RuntimeHelpers::InitializeArray(::System::Array* array, ::System::IntPtr fldHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeHelpers::InitializeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "RuntimeHelpers", "InitializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(fldHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, fldHandle);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray
void System::Runtime::CompilerServices::RuntimeHelpers::InitializeArray(::System::Array* array, ::System::RuntimeFieldHandle fldHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeHelpers::InitializeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "RuntimeHelpers", "InitializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(fldHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, fldHandle);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode
int System::Runtime::CompilerServices::RuntimeHelpers::GetHashCode(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeHelpers::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "RuntimeHelpers", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions
void System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.CompilerServices", "RuntimeHelpers", "PrepareConstrainedRegions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
#include "System/Runtime/InteropServices/UnmanagedFunctionPointerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.CallingConvention m_callingConvention
::System::Runtime::InteropServices::CallingConvention& System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_m_callingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_m_callingConvention");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_callingConvention"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::CallingConvention*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.CharSet CharSet
::System::Runtime::InteropServices::CharSet& System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_CharSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharSet"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::CharSet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean BestFitMapping
bool& System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_BestFitMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_BestFitMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BestFitMapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ThrowOnUnmappableChar
bool& System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_ThrowOnUnmappableChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_ThrowOnUnmappableChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThrowOnUnmappableChar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SetLastError
bool& System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_SetLastError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedFunctionPointerAttribute::dyn_SetLastError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetLastError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.DispIdAttribute
#include "System/Runtime/InteropServices/DispIdAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _val
int& System::Runtime::InteropServices::DispIdAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DispIdAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ComInterfaceType
#include "System/Runtime/InteropServices/ComInterfaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsDual
::System::Runtime::InteropServices::ComInterfaceType System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsDual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsDual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ComInterfaceType>("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsDual"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsDual
void System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsDual(::System::Runtime::InteropServices::ComInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsDual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsDual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIUnknown
::System::Runtime::InteropServices::ComInterfaceType System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ComInterfaceType>("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIUnknown
void System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIUnknown(::System::Runtime::InteropServices::ComInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIDispatch
::System::Runtime::InteropServices::ComInterfaceType System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIDispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIDispatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ComInterfaceType>("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIDispatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIDispatch
void System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIDispatch(::System::Runtime::InteropServices::ComInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIDispatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIDispatch", value));
}
// [ComVisibleAttribute] Offset: 0x57FEAC
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIInspectable
::System::Runtime::InteropServices::ComInterfaceType System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIInspectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_get_InterfaceIsIInspectable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ComInterfaceType>("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIInspectable"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ComInterfaceType InterfaceIsIInspectable
void System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIInspectable(::System::Runtime::InteropServices::ComInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::_set_InterfaceIsIInspectable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ComInterfaceType", "InterfaceIsIInspectable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::ComInterfaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComInterfaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.InterfaceTypeAttribute
#include "System/Runtime/InteropServices/InterfaceTypeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.ComInterfaceType _val
::System::Runtime::InteropServices::ComInterfaceType& System::Runtime::InteropServices::InterfaceTypeAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::InterfaceTypeAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::ComInterfaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ComDefaultInterfaceAttribute
#include "System/Runtime/InteropServices/ComDefaultInterfaceAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Type _val
::System::Type*& System::Runtime::InteropServices::ComDefaultInterfaceAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComDefaultInterfaceAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ClassInterfaceType
#include "System/Runtime/InteropServices/ClassInterfaceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ClassInterfaceType None
::System::Runtime::InteropServices::ClassInterfaceType System::Runtime::InteropServices::ClassInterfaceType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ClassInterfaceType>("System.Runtime.InteropServices", "ClassInterfaceType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ClassInterfaceType None
void System::Runtime::InteropServices::ClassInterfaceType::_set_None(::System::Runtime::InteropServices::ClassInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ClassInterfaceType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ClassInterfaceType AutoDispatch
::System::Runtime::InteropServices::ClassInterfaceType System::Runtime::InteropServices::ClassInterfaceType::_get_AutoDispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_get_AutoDispatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ClassInterfaceType>("System.Runtime.InteropServices", "ClassInterfaceType", "AutoDispatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ClassInterfaceType AutoDispatch
void System::Runtime::InteropServices::ClassInterfaceType::_set_AutoDispatch(::System::Runtime::InteropServices::ClassInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_set_AutoDispatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ClassInterfaceType", "AutoDispatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.ClassInterfaceType AutoDual
::System::Runtime::InteropServices::ClassInterfaceType System::Runtime::InteropServices::ClassInterfaceType::_get_AutoDual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_get_AutoDual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::ClassInterfaceType>("System.Runtime.InteropServices", "ClassInterfaceType", "AutoDual"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.ClassInterfaceType AutoDual
void System::Runtime::InteropServices::ClassInterfaceType::_set_AutoDual(::System::Runtime::InteropServices::ClassInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::_set_AutoDual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "ClassInterfaceType", "AutoDual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::ClassInterfaceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ClassInterfaceAttribute
#include "System/Runtime/InteropServices/ClassInterfaceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.ClassInterfaceType _val
::System::Runtime::InteropServices::ClassInterfaceType& System::Runtime::InteropServices::ClassInterfaceAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ClassInterfaceAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::ClassInterfaceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ComVisibleAttribute
#include "System/Runtime/InteropServices/ComVisibleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Boolean _val
bool& System::Runtime::InteropServices::ComVisibleAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComVisibleAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.VarEnum
#include "System/Runtime/InteropServices/VarEnum.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_EMPTY
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_EMPTY
void System::Runtime::InteropServices::VarEnum::_set_VT_EMPTY(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_NULL
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_NULL"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_NULL
void System::Runtime::InteropServices::VarEnum::_set_VT_NULL(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_I2
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_I2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_I2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_I2"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_I2
void System::Runtime::InteropServices::VarEnum::_set_VT_I2(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_I2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_I2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_I4
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_I4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_I4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_I4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_I4
void System::Runtime::InteropServices::VarEnum::_set_VT_I4(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_I4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_I4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_R4
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_R4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_R4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_R4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_R4
void System::Runtime::InteropServices::VarEnum::_set_VT_R4(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_R4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_R4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_R8
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_R8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_R8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_R8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_R8
void System::Runtime::InteropServices::VarEnum::_set_VT_R8(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_R8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_R8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_CY
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_CY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_CY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_CY"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_CY
void System::Runtime::InteropServices::VarEnum::_set_VT_CY(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_CY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_CY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_DATE
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_DATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_DATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_DATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_DATE
void System::Runtime::InteropServices::VarEnum::_set_VT_DATE(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_DATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_DATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_BSTR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_BSTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_BSTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_BSTR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_BSTR
void System::Runtime::InteropServices::VarEnum::_set_VT_BSTR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_BSTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_BSTR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_DISPATCH
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_DISPATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_DISPATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_DISPATCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_DISPATCH
void System::Runtime::InteropServices::VarEnum::_set_VT_DISPATCH(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_DISPATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_DISPATCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_ERROR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_ERROR
void System::Runtime::InteropServices::VarEnum::_set_VT_ERROR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_BOOL
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_BOOL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_BOOL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_BOOL"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_BOOL
void System::Runtime::InteropServices::VarEnum::_set_VT_BOOL(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_BOOL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_BOOL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_VARIANT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_VARIANT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_VARIANT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_VARIANT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_VARIANT
void System::Runtime::InteropServices::VarEnum::_set_VT_VARIANT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_VARIANT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_VARIANT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UNKNOWN
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UNKNOWN
void System::Runtime::InteropServices::VarEnum::_set_VT_UNKNOWN(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_DECIMAL
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_DECIMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_DECIMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_DECIMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_DECIMAL
void System::Runtime::InteropServices::VarEnum::_set_VT_DECIMAL(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_DECIMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_DECIMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_I1
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_I1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_I1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_I1"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_I1
void System::Runtime::InteropServices::VarEnum::_set_VT_I1(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_I1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_I1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UI1
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UI1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UI1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UI1"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UI1
void System::Runtime::InteropServices::VarEnum::_set_VT_UI1(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UI1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UI1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UI2
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UI2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UI2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UI2"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UI2
void System::Runtime::InteropServices::VarEnum::_set_VT_UI2(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UI2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UI2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UI4
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UI4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UI4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UI4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UI4
void System::Runtime::InteropServices::VarEnum::_set_VT_UI4(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UI4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UI4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_I8
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_I8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_I8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_I8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_I8
void System::Runtime::InteropServices::VarEnum::_set_VT_I8(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_I8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_I8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UI8
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UI8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UI8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UI8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UI8
void System::Runtime::InteropServices::VarEnum::_set_VT_UI8(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UI8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UI8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_INT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_INT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_INT
void System::Runtime::InteropServices::VarEnum::_set_VT_INT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_INT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_UINT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_UINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_UINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_UINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_UINT
void System::Runtime::InteropServices::VarEnum::_set_VT_UINT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_UINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_UINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_VOID
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_VOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_VOID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_VOID"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_VOID
void System::Runtime::InteropServices::VarEnum::_set_VT_VOID(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_VOID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_VOID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_HRESULT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_HRESULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_HRESULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_HRESULT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_HRESULT
void System::Runtime::InteropServices::VarEnum::_set_VT_HRESULT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_HRESULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_HRESULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_PTR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_PTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_PTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_PTR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_PTR
void System::Runtime::InteropServices::VarEnum::_set_VT_PTR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_PTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_PTR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_SAFEARRAY
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_SAFEARRAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_SAFEARRAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_SAFEARRAY"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_SAFEARRAY
void System::Runtime::InteropServices::VarEnum::_set_VT_SAFEARRAY(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_SAFEARRAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_SAFEARRAY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_CARRAY
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_CARRAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_CARRAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_CARRAY"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_CARRAY
void System::Runtime::InteropServices::VarEnum::_set_VT_CARRAY(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_CARRAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_CARRAY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_USERDEFINED
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_USERDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_USERDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_USERDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_USERDEFINED
void System::Runtime::InteropServices::VarEnum::_set_VT_USERDEFINED(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_USERDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_USERDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_LPSTR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_LPSTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_LPSTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_LPSTR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_LPSTR
void System::Runtime::InteropServices::VarEnum::_set_VT_LPSTR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_LPSTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_LPSTR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_LPWSTR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_LPWSTR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_LPWSTR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_LPWSTR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_LPWSTR
void System::Runtime::InteropServices::VarEnum::_set_VT_LPWSTR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_LPWSTR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_LPWSTR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_RECORD
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_RECORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_RECORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_RECORD"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_RECORD
void System::Runtime::InteropServices::VarEnum::_set_VT_RECORD(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_RECORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_RECORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_FILETIME
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_FILETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_FILETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_FILETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_FILETIME
void System::Runtime::InteropServices::VarEnum::_set_VT_FILETIME(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_FILETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_FILETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_BLOB
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_BLOB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_BLOB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_BLOB"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_BLOB
void System::Runtime::InteropServices::VarEnum::_set_VT_BLOB(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_BLOB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_BLOB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_STREAM
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_STREAM
void System::Runtime::InteropServices::VarEnum::_set_VT_STREAM(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_STORAGE
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_STORAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_STORAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_STORAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_STORAGE
void System::Runtime::InteropServices::VarEnum::_set_VT_STORAGE(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_STORAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_STORAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_STREAMED_OBJECT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_STREAMED_OBJECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_STREAMED_OBJECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_STREAMED_OBJECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_STREAMED_OBJECT
void System::Runtime::InteropServices::VarEnum::_set_VT_STREAMED_OBJECT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_STREAMED_OBJECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_STREAMED_OBJECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_STORED_OBJECT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_STORED_OBJECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_STORED_OBJECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_STORED_OBJECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_STORED_OBJECT
void System::Runtime::InteropServices::VarEnum::_set_VT_STORED_OBJECT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_STORED_OBJECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_STORED_OBJECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_BLOB_OBJECT
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_BLOB_OBJECT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_BLOB_OBJECT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_BLOB_OBJECT"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_BLOB_OBJECT
void System::Runtime::InteropServices::VarEnum::_set_VT_BLOB_OBJECT(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_BLOB_OBJECT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_BLOB_OBJECT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_CF
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_CF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_CF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_CF"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_CF
void System::Runtime::InteropServices::VarEnum::_set_VT_CF(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_CF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_CF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_CLSID
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_CLSID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_CLSID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_CLSID"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_CLSID
void System::Runtime::InteropServices::VarEnum::_set_VT_CLSID(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_CLSID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_CLSID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_VECTOR
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_VECTOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_VECTOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_VECTOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_VECTOR
void System::Runtime::InteropServices::VarEnum::_set_VT_VECTOR(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_VECTOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_VECTOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_ARRAY
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_ARRAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_ARRAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_ARRAY"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_ARRAY
void System::Runtime::InteropServices::VarEnum::_set_VT_ARRAY(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_ARRAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_ARRAY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.VarEnum VT_BYREF
::System::Runtime::InteropServices::VarEnum System::Runtime::InteropServices::VarEnum::_get_VT_BYREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_get_VT_BYREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::VarEnum>("System.Runtime.InteropServices", "VarEnum", "VT_BYREF"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.VarEnum VT_BYREF
void System::Runtime::InteropServices::VarEnum::_set_VT_BYREF(::System::Runtime::InteropServices::VarEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::_set_VT_BYREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "VarEnum", "VT_BYREF", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::VarEnum::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::VarEnum::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.UnmanagedType
#include "System/Runtime/InteropServices/UnmanagedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType Bool
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType Bool
void System::Runtime::InteropServices::UnmanagedType::_set_Bool(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType I1
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_I1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_I1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "I1"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType I1
void System::Runtime::InteropServices::UnmanagedType::_set_I1(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_I1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "I1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType U1
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_U1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_U1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "U1"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType U1
void System::Runtime::InteropServices::UnmanagedType::_set_U1(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_U1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "U1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType I2
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_I2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_I2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "I2"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType I2
void System::Runtime::InteropServices::UnmanagedType::_set_I2(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_I2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "I2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType U2
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_U2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_U2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "U2"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType U2
void System::Runtime::InteropServices::UnmanagedType::_set_U2(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_U2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "U2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType I4
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_I4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_I4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "I4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType I4
void System::Runtime::InteropServices::UnmanagedType::_set_I4(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_I4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "I4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType U4
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_U4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_U4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "U4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType U4
void System::Runtime::InteropServices::UnmanagedType::_set_U4(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_U4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "U4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType I8
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_I8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_I8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "I8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType I8
void System::Runtime::InteropServices::UnmanagedType::_set_I8(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_I8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "I8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType U8
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_U8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_U8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "U8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType U8
void System::Runtime::InteropServices::UnmanagedType::_set_U8(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_U8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "U8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType R4
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_R4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_R4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "R4"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType R4
void System::Runtime::InteropServices::UnmanagedType::_set_R4(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_R4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "R4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType R8
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_R8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_R8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "R8"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType R8
void System::Runtime::InteropServices::UnmanagedType::_set_R8(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_R8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "R8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType Currency
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_Currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_Currency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "Currency"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType Currency
void System::Runtime::InteropServices::UnmanagedType::_set_Currency(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_Currency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "Currency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType BStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_BStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_BStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "BStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType BStr
void System::Runtime::InteropServices::UnmanagedType::_set_BStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_BStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "BStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPStr
void System::Runtime::InteropServices::UnmanagedType::_set_LPStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPWStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPWStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPWStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPWStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPWStr
void System::Runtime::InteropServices::UnmanagedType::_set_LPWStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPWStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPWStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPTStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPTStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPTStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPTStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPTStr
void System::Runtime::InteropServices::UnmanagedType::_set_LPTStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPTStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPTStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType ByValTStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_ByValTStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_ByValTStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "ByValTStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType ByValTStr
void System::Runtime::InteropServices::UnmanagedType::_set_ByValTStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_ByValTStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "ByValTStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType IUnknown
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_IUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_IUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "IUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType IUnknown
void System::Runtime::InteropServices::UnmanagedType::_set_IUnknown(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_IUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "IUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType IDispatch
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_IDispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_IDispatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "IDispatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType IDispatch
void System::Runtime::InteropServices::UnmanagedType::_set_IDispatch(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_IDispatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "IDispatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType Struct
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType Struct
void System::Runtime::InteropServices::UnmanagedType::_set_Struct(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType Interface
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_Interface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_Interface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "Interface"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType Interface
void System::Runtime::InteropServices::UnmanagedType::_set_Interface(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_Interface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "Interface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType SafeArray
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_SafeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_SafeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "SafeArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType SafeArray
void System::Runtime::InteropServices::UnmanagedType::_set_SafeArray(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_SafeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "SafeArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType ByValArray
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_ByValArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_ByValArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "ByValArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType ByValArray
void System::Runtime::InteropServices::UnmanagedType::_set_ByValArray(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_ByValArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "ByValArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType SysInt
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_SysInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_SysInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "SysInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType SysInt
void System::Runtime::InteropServices::UnmanagedType::_set_SysInt(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_SysInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "SysInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType SysUInt
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_SysUInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_SysUInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "SysUInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType SysUInt
void System::Runtime::InteropServices::UnmanagedType::_set_SysUInt(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_SysUInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "SysUInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType VBByRefStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_VBByRefStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_VBByRefStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "VBByRefStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType VBByRefStr
void System::Runtime::InteropServices::UnmanagedType::_set_VBByRefStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_VBByRefStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "VBByRefStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType AnsiBStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_AnsiBStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_AnsiBStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "AnsiBStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType AnsiBStr
void System::Runtime::InteropServices::UnmanagedType::_set_AnsiBStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_AnsiBStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "AnsiBStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType TBStr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_TBStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_TBStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "TBStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType TBStr
void System::Runtime::InteropServices::UnmanagedType::_set_TBStr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_TBStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "TBStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType VariantBool
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_VariantBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_VariantBool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "VariantBool"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType VariantBool
void System::Runtime::InteropServices::UnmanagedType::_set_VariantBool(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_VariantBool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "VariantBool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType FunctionPtr
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_FunctionPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_FunctionPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "FunctionPtr"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType FunctionPtr
void System::Runtime::InteropServices::UnmanagedType::_set_FunctionPtr(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_FunctionPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "FunctionPtr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType AsAny
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_AsAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_AsAny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "AsAny"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType AsAny
void System::Runtime::InteropServices::UnmanagedType::_set_AsAny(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_AsAny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "AsAny", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPArray
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPArray
void System::Runtime::InteropServices::UnmanagedType::_set_LPArray(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPStruct
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPStruct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPStruct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPStruct"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPStruct
void System::Runtime::InteropServices::UnmanagedType::_set_LPStruct(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPStruct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPStruct", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType CustomMarshaler
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_CustomMarshaler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_CustomMarshaler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "CustomMarshaler"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType CustomMarshaler
void System::Runtime::InteropServices::UnmanagedType::_set_CustomMarshaler(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_CustomMarshaler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "CustomMarshaler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType Error
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType Error
void System::Runtime::InteropServices::UnmanagedType::_set_Error(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "Error", value));
}
// [ComVisibleAttribute] Offset: 0x57FEC0
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType IInspectable
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_IInspectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_IInspectable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "IInspectable"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType IInspectable
void System::Runtime::InteropServices::UnmanagedType::_set_IInspectable(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_IInspectable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "IInspectable", value));
}
// [ComVisibleAttribute] Offset: 0x57FED4
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType HString
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_HString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_HString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "HString"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType HString
void System::Runtime::InteropServices::UnmanagedType::_set_HString(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_HString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "HString", value));
}
// [ComVisibleAttribute] Offset: 0x57FEE8
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.UnmanagedType LPUTF8Str
::System::Runtime::InteropServices::UnmanagedType System::Runtime::InteropServices::UnmanagedType::_get_LPUTF8Str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_get_LPUTF8Str");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::UnmanagedType>("System.Runtime.InteropServices", "UnmanagedType", "LPUTF8Str"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.UnmanagedType LPUTF8Str
void System::Runtime::InteropServices::UnmanagedType::_set_LPUTF8Str(::System::Runtime::InteropServices::UnmanagedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::_set_LPUTF8Str");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "UnmanagedType", "LPUTF8Str", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::UnmanagedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::UnmanagedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ComImportAttribute
#include "System/Runtime/InteropServices/ComImportAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.GuidAttribute
#include "System/Runtime/InteropServices/GuidAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _val
::StringW& System::Runtime::InteropServices::GuidAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GuidAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.PreserveSigAttribute
#include "System/Runtime/InteropServices/PreserveSigAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.InAttribute
#include "System/Runtime/InteropServices/InAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.OutAttribute
#include "System/Runtime/InteropServices/OutAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.OptionalAttribute
#include "System/Runtime/InteropServices/OptionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.DllImportSearchPath
#include "System/Runtime/InteropServices/DllImportSearchPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath UseDllDirectoryForDependencies
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_UseDllDirectoryForDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_UseDllDirectoryForDependencies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "UseDllDirectoryForDependencies"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath UseDllDirectoryForDependencies
void System::Runtime::InteropServices::DllImportSearchPath::_set_UseDllDirectoryForDependencies(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_UseDllDirectoryForDependencies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "UseDllDirectoryForDependencies", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath ApplicationDirectory
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_ApplicationDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_ApplicationDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "ApplicationDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath ApplicationDirectory
void System::Runtime::InteropServices::DllImportSearchPath::_set_ApplicationDirectory(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_ApplicationDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "ApplicationDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath UserDirectories
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_UserDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_UserDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "UserDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath UserDirectories
void System::Runtime::InteropServices::DllImportSearchPath::_set_UserDirectories(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_UserDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "UserDirectories", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath System32
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_System32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_System32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "System32"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath System32
void System::Runtime::InteropServices::DllImportSearchPath::_set_System32(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_System32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "System32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath SafeDirectories
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_SafeDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_SafeDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "SafeDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath SafeDirectories
void System::Runtime::InteropServices::DllImportSearchPath::_set_SafeDirectories(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_SafeDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "SafeDirectories", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath AssemblyDirectory
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_AssemblyDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_AssemblyDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "AssemblyDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath AssemblyDirectory
void System::Runtime::InteropServices::DllImportSearchPath::_set_AssemblyDirectory(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_AssemblyDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "AssemblyDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.DllImportSearchPath LegacyBehavior
::System::Runtime::InteropServices::DllImportSearchPath System::Runtime::InteropServices::DllImportSearchPath::_get_LegacyBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_get_LegacyBehavior");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::DllImportSearchPath>("System.Runtime.InteropServices", "DllImportSearchPath", "LegacyBehavior"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.DllImportSearchPath LegacyBehavior
void System::Runtime::InteropServices::DllImportSearchPath::_set_LegacyBehavior(::System::Runtime::InteropServices::DllImportSearchPath value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::_set_LegacyBehavior");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "DllImportSearchPath", "LegacyBehavior", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::DllImportSearchPath::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportSearchPath::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
#include "System/Runtime/InteropServices/DefaultDllImportSearchPathsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Runtime.InteropServices.DllImportSearchPath _paths
::System::Runtime::InteropServices::DllImportSearchPath& System::Runtime::InteropServices::DefaultDllImportSearchPathsAttribute::dyn__paths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DefaultDllImportSearchPathsAttribute::dyn__paths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paths"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::DllImportSearchPath*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.DllImportAttribute
#include "System/Runtime/InteropServices/DllImportAttribute.hpp"
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _val
::StringW& System::Runtime::InteropServices::DllImportAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EntryPoint
::StringW& System::Runtime::InteropServices::DllImportAttribute::dyn_EntryPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_EntryPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntryPoint"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.CharSet CharSet
::System::Runtime::InteropServices::CharSet& System::Runtime::InteropServices::DllImportAttribute::dyn_CharSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_CharSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharSet"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::CharSet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SetLastError
bool& System::Runtime::InteropServices::DllImportAttribute::dyn_SetLastError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_SetLastError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetLastError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExactSpelling
bool& System::Runtime::InteropServices::DllImportAttribute::dyn_ExactSpelling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_ExactSpelling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExactSpelling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PreserveSig
bool& System::Runtime::InteropServices::DllImportAttribute::dyn_PreserveSig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_PreserveSig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreserveSig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.CallingConvention CallingConvention
::System::Runtime::InteropServices::CallingConvention& System::Runtime::InteropServices::DllImportAttribute::dyn_CallingConvention() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_CallingConvention");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CallingConvention"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::CallingConvention*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean BestFitMapping
bool& System::Runtime::InteropServices::DllImportAttribute::dyn_BestFitMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_BestFitMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BestFitMapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ThrowOnUnmappableChar
bool& System::Runtime::InteropServices::DllImportAttribute::dyn_ThrowOnUnmappableChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::dyn_ThrowOnUnmappableChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ThrowOnUnmappableChar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.DllImportAttribute.get_Value
::StringW System::Runtime::InteropServices::DllImportAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.DllImportAttribute.GetCustomAttribute
::System::Attribute* System::Runtime::InteropServices::DllImportAttribute::GetCustomAttribute(::System::Reflection::RuntimeMethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::GetCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "DllImportAttribute", "GetCustomAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Runtime.InteropServices.DllImportAttribute.IsDefined
bool System::Runtime::InteropServices::DllImportAttribute::IsDefined(::System::Reflection::RuntimeMethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::DllImportAttribute::IsDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "DllImportAttribute", "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.FieldOffsetAttribute
#include "System/Runtime/InteropServices/FieldOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _val
int& System::Runtime::InteropServices::FieldOffsetAttribute::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::FieldOffsetAttribute::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ComCompatibleVersionAttribute
#include "System/Runtime/InteropServices/ComCompatibleVersionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _major
int& System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__major() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__major");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_major"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _minor
int& System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__minor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _build
int& System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__build");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_build"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _revision
int& System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ComCompatibleVersionAttribute::dyn__revision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_revision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.CallingConvention
#include "System/Runtime/InteropServices/CallingConvention.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CallingConvention Winapi
::System::Runtime::InteropServices::CallingConvention System::Runtime::InteropServices::CallingConvention::_get_Winapi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_get_Winapi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CallingConvention>("System.Runtime.InteropServices", "CallingConvention", "Winapi"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CallingConvention Winapi
void System::Runtime::InteropServices::CallingConvention::_set_Winapi(::System::Runtime::InteropServices::CallingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_set_Winapi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CallingConvention", "Winapi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CallingConvention Cdecl
::System::Runtime::InteropServices::CallingConvention System::Runtime::InteropServices::CallingConvention::_get_Cdecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_get_Cdecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CallingConvention>("System.Runtime.InteropServices", "CallingConvention", "Cdecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CallingConvention Cdecl
void System::Runtime::InteropServices::CallingConvention::_set_Cdecl(::System::Runtime::InteropServices::CallingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_set_Cdecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CallingConvention", "Cdecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CallingConvention StdCall
::System::Runtime::InteropServices::CallingConvention System::Runtime::InteropServices::CallingConvention::_get_StdCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_get_StdCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CallingConvention>("System.Runtime.InteropServices", "CallingConvention", "StdCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CallingConvention StdCall
void System::Runtime::InteropServices::CallingConvention::_set_StdCall(::System::Runtime::InteropServices::CallingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_set_StdCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CallingConvention", "StdCall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CallingConvention ThisCall
::System::Runtime::InteropServices::CallingConvention System::Runtime::InteropServices::CallingConvention::_get_ThisCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_get_ThisCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CallingConvention>("System.Runtime.InteropServices", "CallingConvention", "ThisCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CallingConvention ThisCall
void System::Runtime::InteropServices::CallingConvention::_set_ThisCall(::System::Runtime::InteropServices::CallingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_set_ThisCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CallingConvention", "ThisCall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CallingConvention FastCall
::System::Runtime::InteropServices::CallingConvention System::Runtime::InteropServices::CallingConvention::_get_FastCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_get_FastCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CallingConvention>("System.Runtime.InteropServices", "CallingConvention", "FastCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CallingConvention FastCall
void System::Runtime::InteropServices::CallingConvention::_set_FastCall(::System::Runtime::InteropServices::CallingConvention value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::_set_FastCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CallingConvention", "FastCall", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::CallingConvention::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CallingConvention::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.CharSet
#include "System/Runtime/InteropServices/CharSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CharSet None
::System::Runtime::InteropServices::CharSet System::Runtime::InteropServices::CharSet::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CharSet>("System.Runtime.InteropServices", "CharSet", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CharSet None
void System::Runtime::InteropServices::CharSet::_set_None(::System::Runtime::InteropServices::CharSet value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CharSet", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CharSet Ansi
::System::Runtime::InteropServices::CharSet System::Runtime::InteropServices::CharSet::_get_Ansi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_get_Ansi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CharSet>("System.Runtime.InteropServices", "CharSet", "Ansi"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CharSet Ansi
void System::Runtime::InteropServices::CharSet::_set_Ansi(::System::Runtime::InteropServices::CharSet value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_set_Ansi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CharSet", "Ansi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CharSet Unicode
::System::Runtime::InteropServices::CharSet System::Runtime::InteropServices::CharSet::_get_Unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_get_Unicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CharSet>("System.Runtime.InteropServices", "CharSet", "Unicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CharSet Unicode
void System::Runtime::InteropServices::CharSet::_set_Unicode(::System::Runtime::InteropServices::CharSet value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_set_Unicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CharSet", "Unicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.CharSet Auto
::System::Runtime::InteropServices::CharSet System::Runtime::InteropServices::CharSet::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::CharSet>("System.Runtime.InteropServices", "CharSet", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.CharSet Auto
void System::Runtime::InteropServices::CharSet::_set_Auto(::System::Runtime::InteropServices::CharSet value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "CharSet", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::CharSet::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::CharSet::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.COMException
#include "System/Runtime/InteropServices/COMException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.InteropServices.COMException.ToString
::StringW System::Runtime::InteropServices::COMException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::COMException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.ExternalException
#include "System/Runtime/InteropServices/ExternalException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.InteropServices.ExternalException.ToString
::StringW System::Runtime::InteropServices::ExternalException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ExternalException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Object m_wrapper
::Il2CppObject*& System::Runtime::InteropServices::HandleRef::dyn_m_wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleRef::dyn_m_wrapper");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wrapper"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_handle
::System::IntPtr& System::Runtime::InteropServices::HandleRef::dyn_m_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleRef::dyn_m_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.HandleRef.get_Handle
::System::IntPtr System::Runtime::InteropServices::HandleRef::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::HandleRef::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.HandleRef..ctor
// ABORTED elsewhere.  System::Runtime::InteropServices::HandleRef::HandleRef(::Il2CppObject* wrapper, ::System::IntPtr handle)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.InteropServices.ICustomMarshaler
#include "System/Runtime/InteropServices/ICustomMarshaler.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged
::Il2CppObject* System::Runtime::InteropServices::ICustomMarshaler::MarshalNativeToManaged(::System::IntPtr pNativeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ICustomMarshaler::MarshalNativeToManaged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarshalNativeToManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pNativeData)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pNativeData);
}
// Autogenerated method: System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative
::System::IntPtr System::Runtime::InteropServices::ICustomMarshaler::MarshalManagedToNative(::Il2CppObject* ManagedObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ICustomMarshaler::MarshalManagedToNative");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarshalManagedToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ManagedObj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ManagedObj);
}
// Autogenerated method: System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData
void System::Runtime::InteropServices::ICustomMarshaler::CleanUpNativeData(::System::IntPtr pNativeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ICustomMarshaler::CleanUpNativeData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpNativeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pNativeData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pNativeData);
}
// Autogenerated method: System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData
void System::Runtime::InteropServices::ICustomMarshaler::CleanUpManagedData(::Il2CppObject* ManagedObj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ICustomMarshaler::CleanUpManagedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUpManagedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ManagedObj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ManagedObj);
}
// Autogenerated method: System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize
int System::Runtime::InteropServices::ICustomMarshaler::GetNativeDataSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::ICustomMarshaler::GetNativeDataSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.MarshalDirectiveException
#include "System/Runtime/InteropServices/MarshalDirectiveException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 RefCount_Mask
int System::Runtime::InteropServices::SafeHandle::_get_RefCount_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::_get_RefCount_Mask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.InteropServices", "SafeHandle", "RefCount_Mask"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RefCount_Mask
void System::Runtime::InteropServices::SafeHandle::_set_RefCount_Mask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::_set_RefCount_Mask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "SafeHandle", "RefCount_Mask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RefCount_One
int System::Runtime::InteropServices::SafeHandle::_get_RefCount_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::_get_RefCount_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.InteropServices", "SafeHandle", "RefCount_One"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RefCount_One
void System::Runtime::InteropServices::SafeHandle::_set_RefCount_One(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::_set_RefCount_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "SafeHandle", "RefCount_One", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.IntPtr handle
::System::IntPtr& System::Runtime::InteropServices::SafeHandle::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _state
int& System::Runtime::InteropServices::SafeHandle::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ownsHandle
bool& System::Runtime::InteropServices::SafeHandle::dyn__ownsHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::dyn__ownsHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ownsHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fullyInitialized
bool& System::Runtime::InteropServices::SafeHandle::dyn__fullyInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::dyn__fullyInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullyInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.get_IsClosed
bool System::Runtime::InteropServices::SafeHandle::get_IsClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::get_IsClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.get_IsInvalid
bool System::Runtime::InteropServices::SafeHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.SetHandle
void System::Runtime::InteropServices::SafeHandle::SetHandle(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::SetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
::System::IntPtr System::Runtime::InteropServices::SafeHandle::DangerousGetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::DangerousGetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DangerousGetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.Close
void System::Runtime::InteropServices::SafeHandle::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.Dispose
void System::Runtime::InteropServices::SafeHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.Dispose
void System::Runtime::InteropServices::SafeHandle::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.ReleaseHandle
bool System::Runtime::InteropServices::SafeHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
void System::Runtime::InteropServices::SafeHandle::SetHandleAsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::SetHandleAsInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandleAsInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.DangerousAddRef
void System::Runtime::InteropServices::SafeHandle::DangerousAddRef(ByRef<bool> success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::DangerousAddRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DangerousAddRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(success));
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.DangerousRelease
void System::Runtime::InteropServices::SafeHandle::DangerousRelease() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::DangerousRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DangerousRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.InternalDispose
void System::Runtime::InteropServices::SafeHandle::InternalDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::InternalDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.InternalFinalize
void System::Runtime::InteropServices::SafeHandle::InternalFinalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::InternalFinalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalFinalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.DangerousReleaseInternal
void System::Runtime::InteropServices::SafeHandle::DangerousReleaseInternal(bool dispose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::DangerousReleaseInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DangerousReleaseInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dispose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dispose);
}
// Autogenerated method: System.Runtime.InteropServices.SafeHandle.Finalize
void System::Runtime::InteropServices::SafeHandle::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeHandle::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Runtime.InteropServices.GCHandleType
#include "System/Runtime/InteropServices/GCHandleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 handle
int& System::Runtime::InteropServices::GCHandle::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.get_IsAllocated
bool System::Runtime::InteropServices::GCHandle::get_IsAllocated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::get_IsAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.get_Target
::Il2CppObject* System::Runtime::InteropServices::GCHandle::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.set_Target
void System::Runtime::InteropServices::GCHandle::set_Target(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::set_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle..ctor
System::Runtime::InteropServices::GCHandle::GCHandle(::System::IntPtr h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, h);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle..ctor
System::Runtime::InteropServices::GCHandle::GCHandle(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle..ctor
System::Runtime::InteropServices::GCHandle::GCHandle(::Il2CppObject* value, ::System::Runtime::InteropServices::GCHandleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject
::System::IntPtr System::Runtime::InteropServices::GCHandle::AddrOfPinnedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::AddrOfPinnedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddrOfPinnedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.Alloc
::System::Runtime::InteropServices::GCHandle System::Runtime::InteropServices::GCHandle::Alloc(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::GCHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.Alloc
::System::Runtime::InteropServices::GCHandle System::Runtime::InteropServices::GCHandle::Alloc(::Il2CppObject* value, ::System::Runtime::InteropServices::GCHandleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::GCHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.Free
void System::Runtime::InteropServices::GCHandle::Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.op_Explicit
System::Runtime::InteropServices::GCHandle::operator ::System::IntPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.op_Explicit
System::Runtime::InteropServices::GCHandle::GCHandle(::System::IntPtr& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::GCHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.CheckCurrentDomain
bool System::Runtime::InteropServices::GCHandle::CheckCurrentDomain(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::CheckCurrentDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "CheckCurrentDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.GetTarget
::Il2CppObject* System::Runtime::InteropServices::GCHandle::GetTarget(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.GetTargetHandle
int System::Runtime::InteropServices::GCHandle::GetTargetHandle(::Il2CppObject* obj, int handle, ::System::Runtime::InteropServices::GCHandleType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::GetTargetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "GetTargetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, handle, type);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.FreeHandle
void System::Runtime::InteropServices::GCHandle::FreeHandle(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::FreeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "FreeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.GetAddrOfPinnedObject
::System::IntPtr System::Runtime::InteropServices::GCHandle::GetAddrOfPinnedObject(int handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::GetAddrOfPinnedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "GetAddrOfPinnedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.FromIntPtr
::System::Runtime::InteropServices::GCHandle System::Runtime::InteropServices::GCHandle::FromIntPtr(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::FromIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "FromIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::GCHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.ToIntPtr
::System::IntPtr System::Runtime::InteropServices::GCHandle::ToIntPtr(::System::Runtime::InteropServices::GCHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::ToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "ToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.Equals
bool System::Runtime::InteropServices::GCHandle::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.GetHashCode
int System::Runtime::InteropServices::GCHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.GCHandle.op_Equality
bool System::Runtime::InteropServices::operator ==(const ::System::Runtime::InteropServices::GCHandle& a, const ::System::Runtime::InteropServices::GCHandle& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandle::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "GCHandle", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.GCHandleType
#include "System/Runtime/InteropServices/GCHandleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.GCHandleType Weak
::System::Runtime::InteropServices::GCHandleType System::Runtime::InteropServices::GCHandleType::_get_Weak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_get_Weak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::GCHandleType>("System.Runtime.InteropServices", "GCHandleType", "Weak"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.GCHandleType Weak
void System::Runtime::InteropServices::GCHandleType::_set_Weak(::System::Runtime::InteropServices::GCHandleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_set_Weak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "GCHandleType", "Weak", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.GCHandleType WeakTrackResurrection
::System::Runtime::InteropServices::GCHandleType System::Runtime::InteropServices::GCHandleType::_get_WeakTrackResurrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_get_WeakTrackResurrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::GCHandleType>("System.Runtime.InteropServices", "GCHandleType", "WeakTrackResurrection"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.GCHandleType WeakTrackResurrection
void System::Runtime::InteropServices::GCHandleType::_set_WeakTrackResurrection(::System::Runtime::InteropServices::GCHandleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_set_WeakTrackResurrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "GCHandleType", "WeakTrackResurrection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.GCHandleType Normal
::System::Runtime::InteropServices::GCHandleType System::Runtime::InteropServices::GCHandleType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::GCHandleType>("System.Runtime.InteropServices", "GCHandleType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.GCHandleType Normal
void System::Runtime::InteropServices::GCHandleType::_set_Normal(::System::Runtime::InteropServices::GCHandleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "GCHandleType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.InteropServices.GCHandleType Pinned
::System::Runtime::InteropServices::GCHandleType System::Runtime::InteropServices::GCHandleType::_get_Pinned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_get_Pinned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Runtime::InteropServices::GCHandleType>("System.Runtime.InteropServices", "GCHandleType", "Pinned"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.InteropServices.GCHandleType Pinned
void System::Runtime::InteropServices::GCHandleType::_set_Pinned(::System::Runtime::InteropServices::GCHandleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::_set_Pinned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "GCHandleType", "Pinned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Runtime::InteropServices::GCHandleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::GCHandleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.InteropServices.Marshal
#include "System/Runtime/InteropServices/Marshal.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SystemMaxDBCSCharSize
int System::Runtime::InteropServices::Marshal::_get_SystemMaxDBCSCharSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::_get_SystemMaxDBCSCharSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.InteropServices", "Marshal", "SystemMaxDBCSCharSize"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SystemMaxDBCSCharSize
void System::Runtime::InteropServices::Marshal::_set_SystemMaxDBCSCharSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::_set_SystemMaxDBCSCharSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "Marshal", "SystemMaxDBCSCharSize", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SystemDefaultCharSize
int System::Runtime::InteropServices::Marshal::_get_SystemDefaultCharSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::_get_SystemDefaultCharSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.InteropServices", "Marshal", "SystemDefaultCharSize"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SystemDefaultCharSize
void System::Runtime::InteropServices::Marshal::_set_SystemDefaultCharSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::_set_SystemDefaultCharSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.InteropServices", "Marshal", "SystemDefaultCharSize", value));
}
// Autogenerated method: System.Runtime.InteropServices.Marshal..cctor
void System::Runtime::InteropServices::Marshal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.AllocCoTaskMem
::System::IntPtr System::Runtime::InteropServices::Marshal::AllocCoTaskMem(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::AllocCoTaskMem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "AllocCoTaskMem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.AllocHGlobal
::System::IntPtr System::Runtime::InteropServices::Marshal::AllocHGlobal(::System::IntPtr cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::AllocHGlobal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "AllocHGlobal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.AllocHGlobal
::System::IntPtr System::Runtime::InteropServices::Marshal::AllocHGlobal(int cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::AllocHGlobal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "AllocHGlobal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.copy_to_unmanaged
void System::Runtime::InteropServices::Marshal::copy_to_unmanaged(::System::Array* source, int startIndex, ::System::IntPtr destination, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::copy_to_unmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "copy_to_unmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, startIndex, destination, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.copy_from_unmanaged
void System::Runtime::InteropServices::Marshal::copy_from_unmanaged(::System::IntPtr source, int startIndex, ::System::Array* destination, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::copy_from_unmanaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "copy_from_unmanaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, startIndex, destination, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::ArrayW<uint8_t> source, int startIndex, ::System::IntPtr destination, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, startIndex, destination, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::ArrayW<float> source, int startIndex, ::System::IntPtr destination, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, startIndex, destination, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::System::IntPtr source, ::ArrayW<uint8_t> destination, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, startIndex, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::System::IntPtr source, ::ArrayW<::Il2CppChar> destination, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, startIndex, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::System::IntPtr source, ::ArrayW<int16_t> destination, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, startIndex, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Copy
void System::Runtime::InteropServices::Marshal::Copy(::System::IntPtr source, ::ArrayW<float> destination, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destination, startIndex, length);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.FreeBSTR
void System::Runtime::InteropServices::Marshal::FreeBSTR(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::FreeBSTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "FreeBSTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.FreeCoTaskMem
void System::Runtime::InteropServices::Marshal::FreeCoTaskMem(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::FreeCoTaskMem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "FreeCoTaskMem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.FreeHGlobal
void System::Runtime::InteropServices::Marshal::FreeHGlobal(::System::IntPtr hglobal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::FreeHGlobal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "FreeHGlobal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hglobal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hglobal);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ClearUnicode
void System::Runtime::InteropServices::Marshal::ClearUnicode(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ClearUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ClearUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode
void System::Runtime::InteropServices::Marshal::ZeroFreeGlobalAllocUnicode(::System::IntPtr s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ZeroFreeGlobalAllocUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ZeroFreeGlobalAllocUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.GetHRForException
int System::Runtime::InteropServices::Marshal::GetHRForException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::GetHRForException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "GetHRForException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.GetLastWin32Error
int System::Runtime::InteropServices::Marshal::GetLastWin32Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::GetLastWin32Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "GetLastWin32Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.OffsetOf
::System::IntPtr System::Runtime::InteropServices::Marshal::OffsetOf(::System::Type* t, ::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::OffsetOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "OffsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, fieldName);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.PtrToStringAnsi
::StringW System::Runtime::InteropServices::Marshal::PtrToStringAnsi(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::PtrToStringAnsi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "PtrToStringAnsi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.PtrToStringUni
::StringW System::Runtime::InteropServices::Marshal::PtrToStringUni(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::PtrToStringUni");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "PtrToStringUni", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.PtrToStructure
void System::Runtime::InteropServices::Marshal::PtrToStructure(::System::IntPtr ptr, ::Il2CppObject* structure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::PtrToStructure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "PtrToStructure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(structure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, structure);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.PtrToStructure
::Il2CppObject* System::Runtime::InteropServices::Marshal::PtrToStructure(::System::IntPtr ptr, ::System::Type* structureType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::PtrToStructure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "PtrToStructure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(structureType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, structureType);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadByte
uint8_t System::Runtime::InteropServices::Marshal::ReadByte(::System::IntPtr ptr, int ofs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadInt16
int16_t System::Runtime::InteropServices::Marshal::ReadInt16(::System::IntPtr ptr, int ofs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadInt32
int System::Runtime::InteropServices::Marshal::ReadInt32(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadInt32
int System::Runtime::InteropServices::Marshal::ReadInt32(::System::IntPtr ptr, int ofs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadInt64
int64_t System::Runtime::InteropServices::Marshal::ReadInt64(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadInt64
int64_t System::Runtime::InteropServices::Marshal::ReadInt64(::System::IntPtr ptr, int ofs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadIntPtr
::System::IntPtr System::Runtime::InteropServices::Marshal::ReadIntPtr(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReadIntPtr
::System::IntPtr System::Runtime::InteropServices::Marshal::ReadIntPtr(::System::IntPtr ptr, int ofs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReadIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReadIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.ReleaseInternal
int System::Runtime::InteropServices::Marshal::ReleaseInternal(::System::IntPtr pUnk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::ReleaseInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "ReleaseInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pUnk)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pUnk);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.Release
int System::Runtime::InteropServices::Marshal::Release(::System::IntPtr pUnk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pUnk)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pUnk);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.SizeOf
int System::Runtime::InteropServices::Marshal::SizeOf(::Il2CppObject* structure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::SizeOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "SizeOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(structure)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, structure);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.SizeOf
int System::Runtime::InteropServices::Marshal::SizeOf(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::SizeOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "SizeOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode
::System::IntPtr System::Runtime::InteropServices::Marshal::SecureStringToCoTaskMemUnicode(::System::Security::SecureString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::SecureStringToCoTaskMemUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "SecureStringToCoTaskMemUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode
::System::IntPtr System::Runtime::InteropServices::Marshal::SecureStringToGlobalAllocUnicode(::System::Security::SecureString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::SecureStringToGlobalAllocUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "SecureStringToGlobalAllocUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.StructureToPtr
void System::Runtime::InteropServices::Marshal::StructureToPtr(::Il2CppObject* structure, ::System::IntPtr ptr, bool fDeleteOld) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::StructureToPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "StructureToPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(structure), ::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(fDeleteOld)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, structure, ptr, fDeleteOld);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement
::System::IntPtr System::Runtime::InteropServices::Marshal::UnsafeAddrOfPinnedArrayElement(::System::Array* arr, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::UnsafeAddrOfPinnedArrayElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "UnsafeAddrOfPinnedArrayElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arr, index);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.WriteInt16
void System::Runtime::InteropServices::Marshal::WriteInt16(::System::IntPtr ptr, int ofs, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::WriteInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "WriteInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(ofs), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, ofs, val);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.WriteInt32
void System::Runtime::InteropServices::Marshal::WriteInt32(::System::IntPtr ptr, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::WriteInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "WriteInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, val);
}
// Autogenerated method: System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegateInternal
::System::IntPtr System::Runtime::InteropServices::Marshal::GetFunctionPointerForDelegateInternal(::System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::Marshal::GetFunctionPointerForDelegateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.InteropServices", "Marshal", "GetFunctionPointerForDelegateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.MarshalAsAttribute
#include "System/Runtime/InteropServices/MarshalAsAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String MarshalCookie
::StringW& System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarshalCookie"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MarshalType
::StringW& System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarshalType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type MarshalTypeRef
::System::Type*& System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalTypeRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_MarshalTypeRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarshalTypeRef"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type SafeArrayUserDefinedSubType
::System::Type*& System::Runtime::InteropServices::MarshalAsAttribute::dyn_SafeArrayUserDefinedSubType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_SafeArrayUserDefinedSubType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SafeArrayUserDefinedSubType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.UnmanagedType utype
::System::Runtime::InteropServices::UnmanagedType& System::Runtime::InteropServices::MarshalAsAttribute::dyn_utype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_utype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "utype"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::UnmanagedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.UnmanagedType ArraySubType
::System::Runtime::InteropServices::UnmanagedType& System::Runtime::InteropServices::MarshalAsAttribute::dyn_ArraySubType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_ArraySubType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ArraySubType"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::UnmanagedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.VarEnum SafeArraySubType
::System::Runtime::InteropServices::VarEnum& System::Runtime::InteropServices::MarshalAsAttribute::dyn_SafeArraySubType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_SafeArraySubType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SafeArraySubType"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::VarEnum*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SizeConst
int& System::Runtime::InteropServices::MarshalAsAttribute::dyn_SizeConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_SizeConst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeConst"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 IidParameterIndex
int& System::Runtime::InteropServices::MarshalAsAttribute::dyn_IidParameterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_IidParameterIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IidParameterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 SizeParamIndex
int16_t& System::Runtime::InteropServices::MarshalAsAttribute::dyn_SizeParamIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::dyn_SizeParamIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeParamIndex"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.MarshalAsAttribute.Copy
::System::Runtime::InteropServices::MarshalAsAttribute* System::Runtime::InteropServices::MarshalAsAttribute::Copy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::MarshalAsAttribute::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::MarshalAsAttribute*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean inited
bool& System::Runtime::InteropServices::SafeBuffer::dyn_inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::dyn_inited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.InteropServices.SafeBuffer.AcquirePointer
void System::Runtime::InteropServices::SafeBuffer::AcquirePointer(ByRef<uint8_t*> pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::AcquirePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquirePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pointer));
}
// Autogenerated method: System.Runtime.InteropServices.SafeBuffer.ReleasePointer
void System::Runtime::InteropServices::SafeBuffer::ReleasePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::InteropServices::SafeBuffer::ReleasePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _key
::Il2CppObject*& System::Collections::DictionaryEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _value
::Il2CppObject*& System::Collections::DictionaryEntry::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.DictionaryEntry.get_Key
::Il2CppObject* System::Collections::DictionaryEntry::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.DictionaryEntry.get_Value
::Il2CppObject* System::Collections::DictionaryEntry::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::DictionaryEntry::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.DictionaryEntry..ctor
// ABORTED elsewhere.  System::Collections::DictionaryEntry::DictionaryEntry(::Il2CppObject* key, ::Il2CppObject* value)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.LowLevelComparer
#include "System/Collections/LowLevelComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.LowLevelComparer Default
::System::Collections::LowLevelComparer* System::Collections::LowLevelComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::LowLevelComparer*>("System.Collections", "LowLevelComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.LowLevelComparer Default
void System::Collections::LowLevelComparer::_set_Default(::System::Collections::LowLevelComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "LowLevelComparer", "Default", value));
}
// Autogenerated method: System.Collections.LowLevelComparer..cctor
void System::Collections::LowLevelComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "LowLevelComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.LowLevelComparer.Compare
int System::Collections::LowLevelComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::LowLevelComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListDebugView
#include "System/Collections/ArrayList_ArrayListDebugView.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::ArrayList::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "ArrayList", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::ArrayList::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList", "_defaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] emptyArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::_get_emptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_get_emptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Collections", "ArrayList", "emptyArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] emptyArray
void System::Collections::ArrayList::_set_emptyArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::_set_emptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList", "emptyArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _items
::ArrayW<::Il2CppObject*>& System::Collections::ArrayList::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::ArrayList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::ArrayList::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::ArrayList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList.set_Capacity
void System::Collections::ArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.get_Count
int System::Collections::ArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_IsReadOnly
bool System::Collections::ArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.set_Item
void System::Collections::ArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList..cctor
void System::Collections::ArrayList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Add
int System::Collections::ArrayList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.AddRange
void System::Collections::ArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList.Clear
void System::Collections::ArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.Contains
bool System::Collections::ArrayList::Contains(::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.ArrayList.CopyTo
void System::Collections::ArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList.EnsureCapacity
void System::Collections::ArrayList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.ArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.IndexOf
int System::Collections::ArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList.Insert
void System::Collections::ArrayList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList.InsertRange
void System::Collections::ArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList.ReadOnly
::System::Collections::ArrayList* System::Collections::ArrayList::ReadOnly(::System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.ArrayList.Remove
void System::Collections::ArrayList::Remove(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList.RemoveAt
void System::Collections::ArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList.RemoveRange
void System::Collections::ArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList.ToArray
::System::Array* System::Collections::ArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList
#include "System/Collections/ArrayList_ReadOnlyArrayList.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
::System::Collections::ArrayList*& System::Collections::ArrayList::ReadOnlyArrayList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_Count
int System::Collections::ArrayList::ReadOnlyArrayList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_IsReadOnly
bool System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_Item
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.set_Item
void System::Collections::ArrayList::ReadOnlyArrayList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.get_SyncRoot
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.set_Capacity
void System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Add
int System::Collections::ArrayList::ReadOnlyArrayList::Add(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.AddRange
void System::Collections::ArrayList::ReadOnlyArrayList::AddRange(::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::AddRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Clear
void System::Collections::ArrayList::ReadOnlyArrayList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Clone
::Il2CppObject* System::Collections::ArrayList::ReadOnlyArrayList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Contains
bool System::Collections::ArrayList::ReadOnlyArrayList::Contains(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.CopyTo
void System::Collections::ArrayList::ReadOnlyArrayList::CopyTo(int index, ::System::Array* array, int arrayIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, array, arrayIndex, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.IndexOf
int System::Collections::ArrayList::ReadOnlyArrayList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Insert
void System::Collections::ArrayList::ReadOnlyArrayList::Insert(int index, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, obj);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.InsertRange
void System::Collections::ArrayList::ReadOnlyArrayList::InsertRange(int index, ::System::Collections::ICollection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::InsertRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, c);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.Remove
void System::Collections::ArrayList::ReadOnlyArrayList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.RemoveAt
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.RemoveRange
void System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange(int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::RemoveRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, count);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.ToArray
::ArrayW<::Il2CppObject*> System::Collections::ArrayList::ReadOnlyArrayList::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ReadOnlyArrayList.ToArray
::System::Array* System::Collections::ArrayList::ReadOnlyArrayList::ToArray(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ReadOnlyArrayList::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple
#include "System/Collections/ArrayList_ArrayListEnumeratorSimple.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object dummyObject
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_dummyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_get_dummyObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "dummyObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object dummyObject
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_dummyObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::_set_dummyObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "ArrayList/ArrayListEnumeratorSimple", "dummyObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
::System::Collections::ArrayList*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isArrayList
bool& System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_isArrayList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::dyn_isArrayList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isArrayList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.get_Current
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple..cctor
void System::Collections::ArrayList::ArrayListEnumeratorSimple::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "ArrayList/ArrayListEnumeratorSimple", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.Clone
::Il2CppObject* System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.MoveNext
bool System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ArrayList/System.Collections.ArrayListEnumeratorSimple.Reset
void System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ArrayList::ArrayListEnumeratorSimple::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveComparer
#include "System/Collections/CaseInsensitiveComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
::System::Globalization::CompareInfo*& System::Collections::CaseInsensitiveComparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveComparer.get_Default
::System::Collections::CaseInsensitiveComparer* System::Collections::CaseInsensitiveComparer::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "CaseInsensitiveComparer", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::CaseInsensitiveComparer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.CaseInsensitiveComparer.Compare
int System::Collections::CaseInsensitiveComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveHashCodeProvider
#include "System/Collections/CaseInsensitiveHashCodeProvider.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TextInfo m_text
::System::Globalization::TextInfo*& System::Collections::CaseInsensitiveHashCodeProvider::dyn_m_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::dyn_m_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_text"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.get_Default
::System::Collections::CaseInsensitiveHashCodeProvider* System::Collections::CaseInsensitiveHashCodeProvider::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "CaseInsensitiveHashCodeProvider", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::CaseInsensitiveHashCodeProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode
int System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
::System::Collections::ArrayList*& System::Collections::CollectionBase::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CollectionBase.get_InnerList
::System::Collections::ArrayList* System::Collections::CollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.get_Count
int System::Collections::CollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsReadOnly
bool System::Collections::CollectionBase::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::CollectionBase::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::CollectionBase::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.set_Item
void System::Collections::CollectionBase::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.Clear
void System::Collections::CollectionBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.RemoveAt
void System::Collections::CollectionBase::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::CollectionBase::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Contains
bool System::Collections::CollectionBase::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Add
int System::Collections::CollectionBase::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Remove
void System::Collections::CollectionBase::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.IndexOf
int System::Collections::CollectionBase::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Insert
void System::Collections::CollectionBase::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.GetEnumerator
::System::Collections::IEnumerator* System::Collections::CollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnSet
void System::Collections::CollectionBase::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsert
void System::Collections::CollectionBase::OnInsert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClear
void System::Collections::CollectionBase::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemove
void System::Collections::CollectionBase::OnRemove(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnValidate
void System::Collections::CollectionBase::OnValidate(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnSetComplete
void System::Collections::CollectionBase::OnSetComplete(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnSetComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsertComplete
void System::Collections::CollectionBase::OnInsertComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnInsertComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInsertComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClearComplete
void System::Collections::CollectionBase::OnClearComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnClearComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClearComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemoveComplete
void System::Collections::CollectionBase::OnRemoveComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CollectionBase::OnRemoveComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoveComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Comparer
#include "System/Collections/Comparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer Default
::System::Collections::Comparer* System::Collections::Comparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer Default
void System::Collections::Comparer::_set_Default(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer DefaultInvariant
::System::Collections::Comparer* System::Collections::Comparer::_get_DefaultInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_get_DefaultInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Comparer*>("System.Collections", "Comparer", "DefaultInvariant"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer DefaultInvariant
void System::Collections::Comparer::_set_DefaultInvariant(::System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::_set_DefaultInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "DefaultInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
::System::Globalization::CompareInfo*& System::Collections::Comparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Comparer..cctor
void System::Collections::Comparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Comparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Comparer.Compare
int System::Collections::Comparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Comparer.GetObjectData
void System::Collections::Comparer::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Comparer::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CompatibleComparer
#include "System/Collections/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer _comparer
::System::Collections::IComparer*& System::Collections::CompatibleComparer::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IHashCodeProvider _hcp
::System::Collections::IHashCodeProvider*& System::Collections::CompatibleComparer::dyn__hcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::dyn__hcp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hcp"))->offset;
  return *reinterpret_cast<::System::Collections::IHashCodeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_Comparer
::System::Collections::IComparer* System::Collections::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_HashCodeProvider
::System::Collections::IHashCodeProvider* System::Collections::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.Compare
int System::Collections::CompatibleComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.Equals
bool System::Collections::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.GetHashCode
int System::Collections::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal
#include "System/Collections/EmptyReadOnlyDictionaryInternal.hpp"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Count
int System::Collections::EmptyReadOnlyDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_SyncRoot
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Item
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.set_Item
void System::Collections::EmptyReadOnlyDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Keys
::System::Collections::ICollection* System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.CopyTo
void System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Contains
bool System::Collections::EmptyReadOnlyDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.MoveNext
bool System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/System.Collections.NodeEnumerator.Reset
void System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Hashtable/System.Collections.KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Collections.Hashtable/System.Collections.SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.Hashtable/System.Collections.HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.Hashtable/System.Collections.HashtableDebugView
#include "System/Collections/Hashtable_HashtableDebugView.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 HashPrime
int System::Collections::Hashtable::_get_HashPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "HashPrime"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HashPrime
void System::Collections::Hashtable::_set_HashPrime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashPrime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int System::Collections::Hashtable::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void System::Collections::Hashtable::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "InitialSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String LoadFactorName
::StringW System::Collections::Hashtable::_get_LoadFactorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_LoadFactorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "LoadFactorName"));
}
// Autogenerated static field setter
// Set static field: static private System.String LoadFactorName
void System::Collections::Hashtable::_set_LoadFactorName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_LoadFactorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "LoadFactorName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VersionName
::StringW System::Collections::Hashtable::_get_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_VersionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "VersionName"));
}
// Autogenerated static field setter
// Set static field: static private System.String VersionName
void System::Collections::Hashtable::_set_VersionName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_VersionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "VersionName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ComparerName
::StringW System::Collections::Hashtable::_get_ComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ComparerName
void System::Collections::Hashtable::_set_ComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ComparerName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashCodeProviderName
::StringW System::Collections::Hashtable::_get_HashCodeProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashCodeProviderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashCodeProviderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashCodeProviderName
void System::Collections::Hashtable::_set_HashCodeProviderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashCodeProviderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashCodeProviderName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashSizeName
::StringW System::Collections::Hashtable::_get_HashSizeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_HashSizeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "HashSizeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashSizeName
void System::Collections::Hashtable::_set_HashSizeName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_HashSizeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashSizeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeysName
::StringW System::Collections::Hashtable::_get_KeysName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeysName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeysName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeysName
void System::Collections::Hashtable::_set_KeysName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeysName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeysName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValuesName
::StringW System::Collections::Hashtable::_get_ValuesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_ValuesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "ValuesName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValuesName
void System::Collections::Hashtable::_set_ValuesName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_ValuesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ValuesName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeyComparerName
::StringW System::Collections::Hashtable::_get_KeyComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_get_KeyComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Collections", "Hashtable", "KeyComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyComparerName
void System::Collections::Hashtable::_set_KeyComparerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::_set_KeyComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeyComparerName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable/System.Collections.bucket[] buckets
::ArrayW<::System::Collections::Hashtable::bucket>& System::Collections::Hashtable::dyn_buckets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_buckets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buckets"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Hashtable::bucket>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Collections::Hashtable::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 occupancy
int& System::Collections::Hashtable::dyn_occupancy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_occupancy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupancy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 loadsize
int& System::Collections::Hashtable::dyn_loadsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_loadsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single loadFactor
float& System::Collections::Hashtable::dyn_loadFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_loadFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Hashtable::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isWriterInProgress
bool& System::Collections::Hashtable::dyn_isWriterInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_isWriterInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWriterInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection keys
::System::Collections::ICollection*& System::Collections::Hashtable::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection values
::System::Collections::ICollection*& System::Collections::Hashtable::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEqualityComparer _keycomparer
::System::Collections::IEqualityComparer*& System::Collections::Hashtable::dyn__keycomparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__keycomparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keycomparer"))->offset;
  return *reinterpret_cast<::System::Collections::IEqualityComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Hashtable::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.set_Item
void System::Collections::Hashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.get_Count
int System::Collections::Hashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.InitHash
uint System::Collections::Hashtable::InitHash(::Il2CppObject* key, int hashsize, ByRef<uint> seed, ByRef<uint> incr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::InitHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(hashsize), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, key, hashsize, byref(seed), byref(incr));
}
// Autogenerated method: System.Collections.Hashtable.Add
void System::Collections::Hashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable.Clear
void System::Collections::Hashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Clone
::Il2CppObject* System::Collections::Hashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Contains
bool System::Collections::Hashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.ContainsKey
bool System::Collections::Hashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.CopyKeys
void System::Collections::Hashtable::CopyKeys(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyEntries
void System::Collections::Hashtable::CopyEntries(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyTo
void System::Collections::Hashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyValues
void System::Collections::Hashtable::CopyValues(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::CopyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.expand
void System::Collections::Hashtable::expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::expand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "expand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.UpdateVersion
void System::Collections::Hashtable::UpdateVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::UpdateVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash(int newsize, bool forceNewHashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newsize), ::il2cpp_utils::ExtractType(forceNewHashCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newsize, forceNewHashCode);
}
// Autogenerated method: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetHash
int System::Collections::Hashtable::GetHash(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.KeyEquals
bool System::Collections::Hashtable::KeyEquals(::Il2CppObject* item, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyEquals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, key);
}
// Autogenerated method: System.Collections.Hashtable.Insert
void System::Collections::Hashtable::Insert(::Il2CppObject* key, ::Il2CppObject* nvalue, bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(add)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, nvalue, add);
}
// Autogenerated method: System.Collections.Hashtable.putEntry
void System::Collections::Hashtable::putEntry(::ArrayW<::System::Collections::Hashtable::bucket> newBuckets, ::Il2CppObject* key, ::Il2CppObject* nvalue, int hashcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::putEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "putEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBuckets), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(nvalue), ::il2cpp_utils::ExtractType(hashcode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBuckets, key, nvalue, hashcode);
}
// Autogenerated method: System.Collections.Hashtable.Remove
void System::Collections::Hashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.Synchronized
::System::Collections::Hashtable* System::Collections::Hashtable::Synchronized(::System::Collections::Hashtable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "Hashtable", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Collections.Hashtable.GetObjectData
void System::Collections::Hashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable.OnDeserialization
void System::Collections::Hashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _hashtable
::System::Collections::Hashtable*& System::Collections::Hashtable::KeyCollection::dyn__hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::dyn__hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::KeyCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.get_Count
int System::Collections::Hashtable::KeyCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.CopyTo
void System::Collections::Hashtable::KeyCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.KeyCollection.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::KeyCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::KeyCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Hashtable _table
::System::Collections::Hashtable*& System::Collections::Hashtable::SyncHashtable::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Hashtable::SyncHashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Count
int System::Collections::Hashtable::SyncHashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.set_Item
void System::Collections::Hashtable::SyncHashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.get_Keys
::System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.GetObjectData
void System::Collections::Hashtable::SyncHashtable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Add
void System::Collections::Hashtable::SyncHashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Clear
void System::Collections::Hashtable::SyncHashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Contains
bool System::Collections::Hashtable::SyncHashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.ContainsKey
bool System::Collections::Hashtable::SyncHashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.CopyTo
void System::Collections::Hashtable::SyncHashtable::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Clone
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::SyncHashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.Remove
void System::Collections::Hashtable::SyncHashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.SyncHashtable.OnDeserialization
void System::Collections::Hashtable::SyncHashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::SyncHashtable::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/System.Collections.HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable hashtable
::System::Collections::Hashtable*& System::Collections::Hashtable::HashtableEnumerator::dyn_hashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_hashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bucket
int& System::Collections::Hashtable::HashtableEnumerator::dyn_bucket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_bucket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bucket"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::Hashtable::HashtableEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean current
bool& System::Collections::Hashtable::HashtableEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 getObjectRetType
int& System::Collections::Hashtable::HashtableEnumerator::dyn_getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentKey
::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn_currentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_currentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentKey"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentValue
::Il2CppObject*& System::Collections::Hashtable::HashtableEnumerator::dyn_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::dyn_currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Key
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::Hashtable::HashtableEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Current
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.get_Value
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.Clone
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.MoveNext
bool System::Collections::Hashtable::HashtableEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/System.Collections.HashtableEnumerator.Reset
void System::Collections::Hashtable::HashtableEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Hashtable::HashtableEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.HashHelpers
#include "System/Collections/HashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] primes
::ArrayW<int> System::Collections::HashHelpers::_get_primes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_primes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Collections", "HashHelpers", "primes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] primes
void System::Collections::HashHelpers::_set_primes(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_primes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "primes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::_get_s_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_get_s_SerializationInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections", "HashHelpers", "s_SerializationInfoTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
void System::Collections::HashHelpers::_set_s_SerializationInfoTable(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::_set_s_SerializationInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "s_SerializationInfoTable", value));
}
// Autogenerated method: System.Collections.HashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers..cctor
void System::Collections::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers.IsPrime
bool System::Collections::HashHelpers::IsPrime(int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::IsPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "IsPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, candidate);
}
// Autogenerated method: System.Collections.HashHelpers.GetPrime
int System::Collections::HashHelpers::GetPrime(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::GetPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "GetPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min);
}
// Autogenerated method: System.Collections.HashHelpers.ExpandPrime
int System::Collections::HashHelpers::ExpandPrime(int oldSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::HashHelpers::ExpandPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "ExpandPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ICollection.get_Count
int System::Collections::ICollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ICollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ICollection.CopyTo
void System::Collections::ICollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ICollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IComparer.Compare
int System::Collections::IComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionary.get_Item
::Il2CppObject* System::Collections::IDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.set_Item
void System::Collections::IDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::Collections::IDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Contains
bool System::Collections::IDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::IDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::IDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::IDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerable::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Collections::IEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.MoveNext
bool System::Collections::IEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.Reset
void System::Collections::IEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEqualityComparer.Equals
bool System::Collections::IEqualityComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.IEqualityComparer.GetHashCode
int System::Collections::IEqualityComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IHashCodeProvider.GetHashCode
int System::Collections::IHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IHashCodeProvider::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IList.get_Item
::Il2CppObject* System::Collections::IList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.IList.set_Item
void System::Collections::IList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.get_IsReadOnly
bool System::Collections::IList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.Add
int System::Collections::IList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Contains
bool System::Collections::IList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Clear
void System::Collections::IList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.IndexOf
int System::Collections::IList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Insert
void System::Collections::IList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Remove
void System::Collections::IList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.RemoveAt
void System::Collections::IList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralComparable
#include "System/Collections/IStructuralComparable.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralComparable.CompareTo
int System::Collections::IStructuralComparable::CompareTo(::Il2CppObject* other, ::System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralComparable::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralEquatable
#include "System/Collections/IStructuralEquatable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralEquatable.Equals
bool System::Collections::IStructuralEquatable::Equals(::Il2CppObject* other, ::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Collections.IStructuralEquatable.GetHashCode
int System::Collections::IStructuralEquatable::GetHashCode(::System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::IStructuralEquatable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal
#include "System/Collections/ListDictionaryInternal.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode head
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Collections::ListDictionaryInternal::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::ListDictionaryInternal::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Item
::Il2CppObject* System::Collections::ListDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.set_Item
void System::Collections::ListDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Count
int System::Collections::ListDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Keys
::System::Collections::ICollection* System::Collections::ListDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Contains
bool System::Collections::ListDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.CopyTo
void System::Collections::ListDictionaryInternal::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::ListDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode current
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Key
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.get_Value
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal list
::System::Collections::ListDictionaryInternal*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode current
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isKeys
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_isKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean start
bool& System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/System.Collections.NodeKeyValueCollection/System.Collections.NodeKeyValueEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object key
::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object value
::Il2CppObject*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ListDictionaryInternal/System.Collections.DictionaryNode next
::System::Collections::ListDictionaryInternal::DictionaryNode*& System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::ListDictionaryInternal::DictionaryNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Collections::ListDictionaryInternal::DictionaryNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Collections.Queue/System.Collections.QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
// Including type: System.Collections.Queue/System.Collections.QueueDebugView
#include "System/Collections/Queue_QueueDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
::ArrayW<::Il2CppObject*>& System::Collections::Queue::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _head
int& System::Collections::Queue::dyn__head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_head"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tail
int& System::Collections::Queue::dyn__tail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__tail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tail"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::Queue::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _growFactor
int& System::Collections::Queue::dyn__growFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__growFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_growFactor"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Queue::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Queue::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue.get_Count
int System::Collections::Queue::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.get_SyncRoot
::Il2CppObject* System::Collections::Queue::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Clone
::Il2CppObject* System::Collections::Queue::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.CopyTo
void System::Collections::Queue::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Queue.Enqueue
void System::Collections::Queue::Enqueue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Enqueue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Queue.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Queue::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Dequeue
::Il2CppObject* System::Collections::Queue::Dequeue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Dequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Peek
::Il2CppObject* System::Collections::Queue::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.GetElement
::Il2CppObject* System::Collections::Queue::GetElement(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Collections.Queue.SetCapacity
void System::Collections::Queue::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::SetCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue/System.Collections.QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Queue _q
::System::Collections::Queue*& System::Collections::Queue::QueueEnumerator::dyn__q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_q"))->offset;
  return *reinterpret_cast<::System::Collections::Queue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& System::Collections::Queue::QueueEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Queue::QueueEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::Queue::QueueEnumerator::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.get_Current
::Il2CppObject* System::Collections::Queue::QueueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.Clone
::Il2CppObject* System::Collections::Queue::QueueEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.MoveNext
bool System::Collections::Queue::QueueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue/System.Collections.QueueEnumerator.Reset
void System::Collections::Queue::QueueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Queue::QueueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.SortedList/System.Collections.KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Collections.SortedList/System.Collections.ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Collections.SortedList/System.Collections.SortedListDebugView
#include "System/Collections/SortedList_SortedListDebugView.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::SortedList::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "SortedList", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::SortedList::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "_defaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] emptyArray
::ArrayW<::Il2CppObject*> System::Collections::SortedList::_get_emptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_get_emptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Collections", "SortedList", "emptyArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] emptyArray
void System::Collections::SortedList::_set_emptyArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::_set_emptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "emptyArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] keys
::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keys"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] values
::ArrayW<::Il2CppObject*>& System::Collections::SortedList::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::SortedList::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::SortedList::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
::System::Collections::IComparer*& System::Collections::SortedList::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/System.Collections.KeyList keyList
::System::Collections::SortedList::KeyList*& System::Collections::SortedList::dyn_keyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_keyList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::KeyList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList/System.Collections.ValueList valueList
::System::Collections::SortedList::ValueList*& System::Collections::SortedList::dyn_valueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn_valueList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList::ValueList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::SortedList::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList.get_Capacity
int System::Collections::SortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.set_Capacity
void System::Collections::SortedList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.get_Count
int System::Collections::SortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Keys
::System::Collections::ICollection* System::Collections::SortedList::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Values
::System::Collections::ICollection* System::Collections::SortedList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Item
::Il2CppObject* System::Collections::SortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.set_Item
void System::Collections::SortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList..cctor
void System::Collections::SortedList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "SortedList", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Init
void System::Collections::SortedList::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Add
void System::Collections::SortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList.Clone
::Il2CppObject* System::Collections::SortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Contains
bool System::Collections::SortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.ContainsValue
bool System::Collections::SortedList::ContainsValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.CopyTo
void System::Collections::SortedList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList.EnsureCapacity
void System::Collections::SortedList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.SortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetKey
::Il2CppObject* System::Collections::SortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.IndexOfKey
int System::Collections::SortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.IndexOfValue
int System::Collections::SortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.Insert
void System::Collections::SortedList::Insert(int index, ::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, key, value);
}
// Autogenerated method: System.Collections.SortedList.RemoveAt
void System::Collections::SortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.Synchronized
::System::Collections::SortedList* System::Collections::SortedList::Synchronized(::System::Collections::SortedList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections", "SortedList", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::SortedList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList _list
::System::Collections::SortedList*& System::Collections::SortedList::SyncSortedList::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _root
::Il2CppObject*& System::Collections::SortedList::SyncSortedList::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Count
int System::Collections::SortedList::SyncSortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Item
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.set_Item
void System::Collections::SortedList::SyncSortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.get_Capacity
int System::Collections::SortedList::SyncSortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Add
void System::Collections::SortedList::SyncSortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Clone
::Il2CppObject* System::Collections::SortedList::SyncSortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.Contains
bool System::Collections::SortedList::SyncSortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.ContainsValue
bool System::Collections::SortedList::SyncSortedList::ContainsValue(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::ContainsValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.CopyTo
void System::Collections::SortedList::SyncSortedList::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetByIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Collections::SortedList::SyncSortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetKey
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetKeyList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetKeyList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.GetValueList
::System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::GetValueList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.IndexOfKey
int System::Collections::SortedList::SyncSortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.IndexOfValue
int System::Collections::SortedList::SyncSortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::IndexOfValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SyncSortedList.RemoveAt
void System::Collections::SortedList::SyncSortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SyncSortedList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::SortedListEnumerator::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object key
::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object value
::Il2CppObject*& System::Collections::SortedList::SortedListEnumerator::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& System::Collections::SortedList::SortedListEnumerator::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startIndex
int& System::Collections::SortedList::SortedListEnumerator::dyn_startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_startIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
int& System::Collections::SortedList::SortedListEnumerator::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& System::Collections::SortedList::SortedListEnumerator::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean current
bool& System::Collections::SortedList::SortedListEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 getObjectRetType
int& System::Collections::SortedList::SortedListEnumerator::dyn_getObjectRetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::dyn_getObjectRetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getObjectRetType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Key
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Collections::SortedList::SortedListEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Current
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.get_Value
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.Clone
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.MoveNext
bool System::Collections::SortedList::SortedListEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.SortedListEnumerator.Reset
void System::Collections::SortedList::SortedListEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::SortedListEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::KeyList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_Count
int System::Collections::SortedList::KeyList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_IsReadOnly
bool System::Collections::SortedList::KeyList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::KeyList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.get_Item
::Il2CppObject* System::Collections::SortedList::KeyList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.set_Item
void System::Collections::SortedList::KeyList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Add
int System::Collections::SortedList::KeyList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Clear
void System::Collections::SortedList::KeyList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Contains
bool System::Collections::SortedList::KeyList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.CopyTo
void System::Collections::SortedList::KeyList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Insert
void System::Collections::SortedList::KeyList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::KeyList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.IndexOf
int System::Collections::SortedList::KeyList::IndexOf(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.Remove
void System::Collections::SortedList::KeyList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.KeyList.RemoveAt
void System::Collections::SortedList::KeyList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::KeyList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/System.Collections.ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList sortedList
::System::Collections::SortedList*& System::Collections::SortedList::ValueList::dyn_sortedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::dyn_sortedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortedList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_Count
int System::Collections::SortedList::ValueList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_IsReadOnly
bool System::Collections::SortedList::ValueList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::ValueList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.get_Item
::Il2CppObject* System::Collections::SortedList::ValueList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.set_Item
void System::Collections::SortedList::ValueList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Add
int System::Collections::SortedList::ValueList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Clear
void System::Collections::SortedList::ValueList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Contains
bool System::Collections::SortedList::ValueList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.CopyTo
void System::Collections::SortedList::ValueList::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Insert
void System::Collections::SortedList::ValueList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.GetEnumerator
::System::Collections::IEnumerator* System::Collections::SortedList::ValueList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.IndexOf
int System::Collections::SortedList::ValueList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.Remove
void System::Collections::SortedList::ValueList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/System.Collections.ValueList.RemoveAt
void System::Collections::SortedList::ValueList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::SortedList::ValueList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Collections.Stack/System.Collections.StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
// Including type: System.Collections.Stack/System.Collections.StackDebugView
#include "System/Collections/Stack_StackDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] _array
::ArrayW<::Il2CppObject*>& System::Collections::Stack::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _size
int& System::Collections::Stack::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Stack::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _syncRoot
::Il2CppObject*& System::Collections::Stack::dyn__syncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::dyn__syncRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncRoot"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack.get_Count
int System::Collections::Stack::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.get_SyncRoot
::Il2CppObject* System::Collections::Stack::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clear
void System::Collections::Stack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Clone
::Il2CppObject* System::Collections::Stack::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.CopyTo
void System::Collections::Stack::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Stack.GetEnumerator
::System::Collections::IEnumerator* System::Collections::Stack::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Peek
::Il2CppObject* System::Collections::Stack::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Pop
::Il2CppObject* System::Collections::Stack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Pop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Push
void System::Collections::Stack::Push(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::Push");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack/System.Collections.StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack _stack
::System::Collections::Stack*& System::Collections::Stack::StackEnumerator::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
int& System::Collections::Stack::StackEnumerator::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
int& System::Collections::Stack::StackEnumerator::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object currentElement
::Il2CppObject*& System::Collections::Stack::StackEnumerator::dyn_currentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::dyn_currentElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElement"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.get_Current
::Il2CppObject* System::Collections::Stack::StackEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.Clone
::Il2CppObject* System::Collections::Stack::StackEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.MoveNext
bool System::Collections::Stack::StackEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack/System.Collections.StackEnumerator.Reset
void System::Collections::Stack::StackEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Stack::StackEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Concurrent.CDSCollectionETWBCLProvider
#include "System/Collections/Concurrent/CDSCollectionETWBCLProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
::System::Collections::Concurrent::CDSCollectionETWBCLProvider* System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::CDSCollectionETWBCLProvider*>("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log(::System::Collections::Concurrent::CDSCollectionETWBCLProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log", value));
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider.ConcurrentDictionary_AcquiringAllLocks
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConcurrentDictionary_AcquiringAllLocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numOfBuckets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numOfBuckets);
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider..cctor
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Concurrent::CDSCollectionETWBCLProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.CollectionExtensions
#include "System/Collections/Generic/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyValuePair
#include "System/Collections/Generic/KeyValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.KeyValuePair.PairToString
::StringW System::Collections::Generic::KeyValuePair::PairToString(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::KeyValuePair::PairToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "KeyValuePair", "PairToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.IntrospectiveSortUtilities
#include "System/Collections/Generic/IntrospectiveSortUtilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.FloorLog2
int System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "FloorLog2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer
void System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer(::Il2CppObject* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "ThrowOrIgnoreBadComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InsertionBehavior
#include "System/Collections/Generic/InsertionBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior None
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior None
void System::Collections::Generic::InsertionBehavior::_set_None(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
void System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
void System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& System::Collections::Generic::InsertionBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.DictionaryHashHelpers
#include "System/Collections/Generic/DictionaryHashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
void System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField", value));
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers..cctor
void System::Collections::Generic::DictionaryHashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NonRandomizedStringEqualityComparer
#include "System/Collections/Generic/NonRandomizedStringEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.Equals
bool System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.GetHashCode
int System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ObjectEqualityComparer
#include "System/Collections/Generic/ObjectEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
::System::Collections::Generic::ObjectEqualityComparer* System::Collections::Generic::ObjectEqualityComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::ObjectEqualityComparer*>("System.Collections.Generic", "ObjectEqualityComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
void System::Collections::Generic::ObjectEqualityComparer::_set_Default(::System::Collections::Generic::ObjectEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "ObjectEqualityComparer", "Default", value));
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer..cctor
void System::Collections::Generic::ObjectEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "ObjectEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.Equals
bool System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::ArrayW<::StringW> array, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_conditionString
::StringW& System::Diagnostics::ConditionalAttribute::dyn_m_conditionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ConditionalAttribute::dyn_m_conditionString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_conditionString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes m_debuggingModes
::System::Diagnostics::DebuggableAttribute::DebuggingModes& System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debuggingModes"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggableAttribute::DebuggingModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::DebuggerBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggerBrowsableState state
::System::Diagnostics::DebuggerBrowsableState& System::Diagnostics::DebuggerBrowsableAttribute::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableAttribute::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggerBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String typeName
::StringW& System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String type
::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::StringW System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ilOffset
int& System::Diagnostics::StackFrame::dyn_ilOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_ilOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ilOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nativeOffset
int& System::Diagnostics::StackFrame::dyn_nativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_nativeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 methodAddress
int64_t& System::Diagnostics::StackFrame::dyn_methodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodAddress"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 methodIndex
uint& System::Diagnostics::StackFrame::dyn_methodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodBase methodBase
::System::Reflection::MethodBase*& System::Diagnostics::StackFrame::dyn_methodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodBase"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
::StringW& System::Diagnostics::StackFrame::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
int& System::Diagnostics::StackFrame::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 columnNumber
int& System::Diagnostics::StackFrame::dyn_columnNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_columnNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "columnNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalMethodName
::StringW& System::Diagnostics::StackFrame::dyn_internalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_internalMethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, ByRef<::System::Reflection::MethodBase*> method, ByRef<int> iloffset, ByRef<int> native_offset, ByRef<::StringW> file, ByRef<int> line, ByRef<int> column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(needFileInfo), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodBase*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skip, needFileInfo, byref(method), byref(iloffset), byref(native_offset), byref(file), byref(line), byref(column));
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::StringW System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::StringW System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetILOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetILOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
::System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetNativeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::StringW System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::StringW System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::StringW System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.StackFrame[] frames
::ArrayW<::System::Diagnostics::StackFrame*>& System::Diagnostics::StackTrace::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackFrame*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.StackTrace[] captured_traces
::ArrayW<::System::Diagnostics::StackTrace*>& System::Diagnostics::StackTrace::dyn_captured_traces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_captured_traces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captured_traces"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackTrace*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debug_info
bool& System::Diagnostics::StackTrace::dyn_debug_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_debug_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug_info"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_FrameCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::ArrayW<::System::Diagnostics::StackFrame*> System::Diagnostics::StackTrace::get_trace(::System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::StackFrame*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
::System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::StringW System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(::System::Text::StringBuilder* sb, ::System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(mi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString(::System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Diagnostics::StackTrace::TraceFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::ArrayW<uint8_t> System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
::System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::StringW System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.UnmanagedMarshal
#include "System/Reflection/Emit/UnmanagedMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.DynamicMethod
#include "System/Reflection/Emit/DynamicMethod.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::DynamicMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_DeclaringType
::System::Type* System::Reflection::Emit::DynamicMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::DynamicMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Name
::StringW System::Reflection::Emit::DynamicMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_ReflectedType
::System::Type* System::Reflection::Emit::DynamicMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::DynamicMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.Invoke
::Il2CppObject* System::Reflection::Emit::DynamicMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.IsDefined
bool System::Reflection::Emit::DynamicMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComObject
#include "System/__Il2CppComObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComObject.Finalize
void System::__Il2CppComObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComDelegate
#include "System/__Il2CppComDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComDelegate.Finalize
void System::__Il2CppComDelegate::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComDelegate::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorNoteAttribute
#include "GlobalNamespace/InspectorNoteAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
::StringW& GlobalNamespace::InspectorNoteAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorNoteAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InspectorCommentAttribute
#include "GlobalNamespace/InspectorCommentAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
::StringW& GlobalNamespace::InspectorCommentAttribute::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InspectorCommentAttribute::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.TestScript
#include "OVR/TestScript.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound1
::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound1"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef testSound2
::OVR::SoundFXRef*& OVR::TestScript::dyn_testSound2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::dyn_testSound2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testSound2"))->offset;
  return *reinterpret_cast<::OVR::SoundFXRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.TestScript.Start
void OVR::TestScript::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.TestScript.Update
void OVR::TestScript::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::TestScript::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AmbienceEmitter
#include "OVR/AmbienceEmitter.hpp"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXRef[] ambientSounds
::ArrayW<::OVR::SoundFXRef*>& OVR::AmbienceEmitter::dyn_ambientSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_ambientSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFXRef*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoActivate
bool& OVR::AmbienceEmitter::dyn_autoActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRetrigger
bool& OVR::AmbienceEmitter::dyn_autoRetrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_autoRetrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRetrigger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 randomRetriggerDelaySecs
::UnityEngine::Vector2& OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_randomRetriggerDelaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomRetriggerDelaySecs"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] playPositions
::ArrayW<::UnityEngine::Transform*>& OVR::AmbienceEmitter::dyn_playPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean activated
bool& OVR::AmbienceEmitter::dyn_activated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_activated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "activated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
int& OVR::AmbienceEmitter::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextPlayTime
float& OVR::AmbienceEmitter::dyn_nextPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_nextPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fadeTime
float& OVR::AmbienceEmitter::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastPosIdx
int& OVR::AmbienceEmitter::dyn_lastPosIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::dyn_lastPosIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AmbienceEmitter.Awake
void OVR::AmbienceEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.Update
void OVR::AmbienceEmitter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.OnTriggerEnter
void OVR::AmbienceEmitter::OnTriggerEnter(::UnityEngine::Collider* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col);
}
// Autogenerated method: OVR.AmbienceEmitter.Play
void OVR::AmbienceEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AmbienceEmitter.EnableEmitter
void OVR::AmbienceEmitter::EnableEmitter(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AmbienceEmitter::EnableEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.PreloadSounds
#include "OVR/PreloadSounds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Default
::OVR::PreloadSounds OVR::PreloadSounds::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Default
void OVR::PreloadSounds::_set_Default(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds Preload
::OVR::PreloadSounds OVR::PreloadSounds::_get_Preload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_Preload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "Preload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds Preload
void OVR::PreloadSounds::_set_Preload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_Preload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "Preload", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.PreloadSounds ManualPreload
::OVR::PreloadSounds OVR::PreloadSounds::_get_ManualPreload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_get_ManualPreload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::PreloadSounds>("OVR", "PreloadSounds", "ManualPreload"));
}
// Autogenerated static field setter
// Set static field: static public OVR.PreloadSounds ManualPreload
void OVR::PreloadSounds::_set_ManualPreload(::OVR::PreloadSounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::_set_ManualPreload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "PreloadSounds", "ManualPreload", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::PreloadSounds::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::PreloadSounds::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.Fade In
::OVR::Fade OVR::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade In
void OVR::Fade::_set_In(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.Fade Out
::OVR::Fade OVR::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::Fade>("OVR", "Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.Fade Out
void OVR::Fade::_set_Out(::OVR::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& OVR::SoundGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFX[] soundList
::ArrayW<::OVR::SoundFX*>& OVR::SoundGroup::dyn_soundList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_soundList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundList"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundFX*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup mixerGroup
::UnityEngine::Audio::AudioMixerGroup*& OVR::SoundGroup::dyn_mixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_mixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxPlayingSounds
int& OVR::SoundGroup::dyn_maxPlayingSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_maxPlayingSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayingSounds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.PreloadSounds preloadAudio
::OVR::PreloadSounds& OVR::SoundGroup::dyn_preloadAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_preloadAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preloadAudio"))->offset;
  return *reinterpret_cast<::OVR::PreloadSounds*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeOverride
float& OVR::SoundGroup::dyn_volumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_volumeOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeOverride"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playingSoundCount
int& OVR::SoundGroup::dyn_playingSoundCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::dyn_playingSoundCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundGroup.IncrementPlayCount
void OVR::SoundGroup::IncrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::IncrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.DecrementPlayCount
void OVR::SoundGroup::DecrementPlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::DecrementPlayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementPlayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundGroup.CanPlaySound
bool OVR::SoundGroup::CanPlaySound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundGroup::CanPlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanPlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.AudioManager
#include "OVR/AudioManager.hpp"
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: FastList`1
#include "GlobalNamespace/FastList_1.hpp"
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVR.AudioManager theAudioManager
::OVR::AudioManager* OVR::AudioManager::_get_theAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_theAudioManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager*>("OVR", "AudioManager", "theAudioManager"));
}
// Autogenerated static field setter
// Set static field: static private OVR.AudioManager theAudioManager
void OVR::AudioManager::_set_theAudioManager(::OVR::AudioManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_theAudioManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "theAudioManager", value));
}
// Autogenerated static field getter
// Get static field: static private FastList`1<System.String> names
::GlobalNamespace::FastList_1<::StringW>* OVR::AudioManager::_get_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_names");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FastList_1<::StringW>*>("OVR", "AudioManager", "names"));
}
// Autogenerated static field setter
// Set static field: static private FastList`1<System.String> names
void OVR::AudioManager::_set_names(::GlobalNamespace::FastList_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_names");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "names", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] defaultSound
::ArrayW<::StringW> OVR::AudioManager::_get_defaultSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("OVR", "AudioManager", "defaultSound"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] defaultSound
void OVR::AudioManager::_set_defaultSound(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultSound", value));
}
// Autogenerated static field getter
// Get static field: static private OVR.SoundFX nullSound
::OVR::SoundFX* OVR::AudioManager::_get_nullSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_nullSound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFX*>("OVR", "AudioManager", "nullSound"));
}
// Autogenerated static field setter
// Set static field: static private OVR.SoundFX nullSound
void OVR::AudioManager::_set_nullSound(::OVR::SoundFX* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_nullSound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "nullSound", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hideWarnings
bool OVR::AudioManager::_get_hideWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_hideWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "hideWarnings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hideWarnings
void OVR::AudioManager::_set_hideWarnings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_hideWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "hideWarnings", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject soundEmitterParent
::UnityEngine::GameObject* OVR::AudioManager::_get_soundEmitterParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEmitterParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("OVR", "AudioManager", "soundEmitterParent"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject soundEmitterParent
void OVR::AudioManager::_set_soundEmitterParent(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEmitterParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEmitterParent", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Transform staticListenerPosition
::UnityEngine::Transform* OVR::AudioManager::_get_staticListenerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_staticListenerPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Transform*>("OVR", "AudioManager", "staticListenerPosition"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Transform staticListenerPosition
void OVR::AudioManager::_set_staticListenerPosition(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_staticListenerPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "staticListenerPosition", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean showPlayingEmitterCount
bool OVR::AudioManager::_get_showPlayingEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_showPlayingEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "showPlayingEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean showPlayingEmitterCount
void OVR::AudioManager::_set_showPlayingEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_showPlayingEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "showPlayingEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean forceShowEmitterCount
bool OVR::AudioManager::_get_forceShowEmitterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_forceShowEmitterCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "forceShowEmitterCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean forceShowEmitterCount
void OVR::AudioManager::_set_forceShowEmitterCount(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_forceShowEmitterCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "forceShowEmitterCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean soundEnabled
bool OVR::AudioManager::_get_soundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_soundEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("OVR", "AudioManager", "soundEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean soundEnabled
void OVR::AudioManager::_set_soundEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_soundEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "soundEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
::UnityEngine::AnimationCurve* OVR::AudioManager::_get_defaultReverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_get_defaultReverbZoneMix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AnimationCurve*>("OVR", "AudioManager", "defaultReverbZoneMix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.AnimationCurve defaultReverbZoneMix
void OVR::AudioManager::_set_defaultReverbZoneMix(::UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::_set_defaultReverbZoneMix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager", "defaultReverbZoneMix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean makePersistent
bool& OVR::AudioManager::dyn_makePersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_makePersistent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makePersistent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedAudio
bool& OVR::AudioManager::dyn_enableSpatializedAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedAudio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedAudio"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatializedFastOverride
bool& OVR::AudioManager::dyn_enableSpatializedFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_enableSpatializedFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatializedFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixer audioMixer
::UnityEngine::Audio::AudioMixer*& OVR::AudioManager::dyn_audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup defaultMixerGroup
::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_defaultMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_defaultMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup reservedMixerGroup
::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_reservedMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_reservedMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reservedMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerGroup voiceChatMixerGroup
::UnityEngine::Audio::AudioMixerGroup*& OVR::AudioManager::dyn_voiceChatMixerGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_voiceChatMixerGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceChatMixerGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean verboseLogging
bool& OVR::AudioManager::dyn_verboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_verboseLogging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verboseLogging"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxSoundEmitters
int& OVR::AudioManager::dyn_maxSoundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_maxSoundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSoundEmitters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumeSoundFX
float& OVR::AudioManager::dyn_volumeSoundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_volumeSoundFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeSoundFX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single soundFxFadeSecs
float& OVR::AudioManager::dyn_soundFxFadeSecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFxFadeSecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFxFadeSecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMinFallOffDistance
float& OVR::AudioManager::dyn_audioMinFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMinFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMinFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single audioMaxFallOffDistance
float& OVR::AudioManager::dyn_audioMaxFallOffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup[] soundGroupings
::ArrayW<::OVR::SoundGroup*>& OVR::AudioManager::dyn_soundGroupings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundGroupings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroupings"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,OVR.SoundFX> soundFXCache
::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>*& OVR::AudioManager::dyn_soundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundFXCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::OVR::SoundFX*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single audioMaxFallOffDistanceSqr
float& OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_audioMaxFallOffDistanceSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioMaxFallOffDistanceSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter[] soundEmitters
::ArrayW<::OVR::SoundEmitter*>& OVR::AudioManager::dyn_soundEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_soundEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundEmitters"))->offset;
  return *reinterpret_cast<::ArrayW<::OVR::SoundEmitter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> playingEmitters
::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_playingEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_playingEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FastList`1<OVR.SoundEmitter> nextFreeEmitters
::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>*& OVR::AudioManager::dyn_nextFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_nextFreeEmitters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextFreeEmitters"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FastList_1<::OVR::SoundEmitter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.MixerSnapshot currentSnapshot
::OVR::MixerSnapshot*& OVR::AudioManager::dyn_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::dyn_currentSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSnapshot"))->offset;
  return *reinterpret_cast<::OVR::MixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager.get_enableSpatialization
bool OVR::AudioManager::get_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_enableSpatialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_enableSpatialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_Instance
::OVR::AudioManager* OVR::AudioManager::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::AudioManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_NearFallOff
float OVR::AudioManager::get_NearFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_NearFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_NearFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_FarFallOff
float OVR::AudioManager::get_FarFallOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_FarFallOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_FarFallOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_EmitterGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_EmitterGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_EmitterGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_EmitterGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_ReservedGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_ReservedGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_ReservedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_ReservedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_VoipGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::AudioManager::get_VoipGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_VoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_VoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.get_SoundEnabled
bool OVR::AudioManager::get_SoundEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::get_SoundEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "get_SoundEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Awake
void OVR::AudioManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.OnDestroy
void OVR::AudioManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Init
void OVR::AudioManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Update
void OVR::AudioManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.RebuildSoundFXCache
void OVR::AudioManager::RebuildSoundFXCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::RebuildSoundFXCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildSoundFXCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FindSoundFX
::OVR::SoundFX* OVR::AudioManager::FindSoundFX(::StringW name, bool rebuildCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindSoundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindSoundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(rebuildCache)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, rebuildCache);
}
// Autogenerated method: OVR.AudioManager.FindAudioManager
bool OVR::AudioManager::FindAudioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindAudioManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindAudioManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.GetGameObject
::UnityEngine::GameObject* OVR::AudioManager::GetGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.NameMinusGroup
::StringW OVR::AudioManager::NameMinusGroup(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::NameMinusGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "NameMinusGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: OVR.AudioManager.GetSoundFXNames
::ArrayW<::StringW> OVR::AudioManager::GetSoundFXNames(::StringW currentValue, ByRef<int> currentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetSoundFXNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetSoundFXNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentValue, byref(currentIdx));
}
// Autogenerated method: OVR.AudioManager.CalculateMaxEmittersSize
int OVR::AudioManager::CalculateMaxEmittersSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::CalculateMaxEmittersSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "CalculateMaxEmittersSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ValidateEmitterIndex
bool OVR::AudioManager::ValidateEmitterIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ValidateEmitterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "ValidateEmitterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: OVR.AudioManager.InitializeSoundSystem
void OVR::AudioManager::InitializeSoundSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::InitializeSoundSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeSoundSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.UpdateFreeEmitters
void OVR::AudioManager::UpdateFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UpdateFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.Fmt
::StringW OVR::AudioManager::Fmt(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fmt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fmt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.FmtFree
::StringW OVR::AudioManager::FmtFree(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FmtFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FmtFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, count);
}
// Autogenerated method: OVR.AudioManager.OnPreSceneLoad
void OVR::AudioManager::OnPreSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::OnPreSceneLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreSceneLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.ResetFreeEmitters
void OVR::AudioManager::ResetFreeEmitters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::ResetFreeEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetFreeEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.AudioManager.FadeOutSoundChannel
void OVR::AudioManager::FadeOutSoundChannel(int channel, float delaySecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, channel, delaySecs, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopSound
bool OVR::AudioManager::StopSound(int idx, bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime, volume);
}
// Autogenerated method: OVR.AudioManager.FadeInSound
void OVR::AudioManager::FadeInSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.FadeOutSound
void OVR::AudioManager::FadeOutSound(int idx, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FadeOutSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FadeOutSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, fadeTime);
}
// Autogenerated method: OVR.AudioManager.StopAllSounds
void OVR::AudioManager::StopAllSounds(bool fadeOut, bool stopReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::StopAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "StopAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeOut), ::il2cpp_utils::ExtractType(stopReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fadeOut, stopReserved);
}
// Autogenerated method: OVR.AudioManager.MuteAllSounds
void OVR::AudioManager::MuteAllSounds(bool mute, bool muteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::MuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mute), ::il2cpp_utils::ExtractType(muteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mute, muteReserved);
}
// Autogenerated method: OVR.AudioManager.UnMuteAllSounds
void OVR::AudioManager::UnMuteAllSounds(bool unmute, bool unmuteReserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::UnMuteAllSounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnMuteAllSounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unmute), ::il2cpp_utils::ExtractType(unmuteReserved)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unmute, unmuteReserved);
}
// Autogenerated method: OVR.AudioManager.GetEmitterEndTime
float OVR::AudioManager::GetEmitterEndTime(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetEmitterEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetEmitterEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.SetEmitterTime
float OVR::AudioManager::SetEmitterTime(int idx, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, time);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitchVariance, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitchVariance), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, volume, src, delay, pitchVariance, loop);
}
// Autogenerated method: OVR.AudioManager.FindFreeEmitter
int OVR::AudioManager::FindFreeEmitter(::OVR::EmitterChannel src, ::OVR::SoundPriority priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::FindFreeEmitter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "FindFreeEmitter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(priority)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, priority);
}
// Autogenerated method: OVR.AudioManager.PlaySound
int OVR::AudioManager::PlaySound(::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, soundFX, src, delay);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::OVR::SoundFX* soundFX, ::OVR::EmitterChannel src, float delay, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(soundFX), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, soundFX, src, delay, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.AudioManager.PlayRandomSoundAt
int OVR::AudioManager::PlayRandomSoundAt(::UnityEngine::Vector3 position, ::ArrayW<::UnityEngine::AudioClip*> clips, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlayRandomSoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlayRandomSoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clips), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clips, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.PlaySoundAt
int OVR::AudioManager::PlaySoundAt(::UnityEngine::Vector3 position, ::UnityEngine::AudioClip* clip, float volume, ::OVR::EmitterChannel src, float delay, float pitch, bool loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, position, clip, volume, src, delay, pitch, loop);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished);
}
// Autogenerated method: OVR.AudioManager.SetOnFinished
void OVR::AudioManager::SetOnFinished(int emitterIdx, ::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitterIdx), ::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitterIdx, onFinished, obj);
}
// Autogenerated method: OVR.AudioManager.AttachSoundToParent
void OVR::AudioManager::AttachSoundToParent(int idx, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::AttachSoundToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "AttachSoundToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, parent);
}
// Autogenerated method: OVR.AudioManager.DetachSoundFromParent
void OVR::AudioManager::DetachSoundFromParent(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx);
}
// Autogenerated method: OVR.AudioManager.DetachSoundsFromParent
void OVR::AudioManager::DetachSoundsFromParent(::ArrayW<::OVR::SoundEmitter*> emitters, bool stopSounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::DetachSoundsFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "DetachSoundsFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emitters), ::il2cpp_utils::ExtractType(stopSounds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, emitters, stopSounds);
}
// Autogenerated method: OVR.AudioManager.SetEmitterMixerGroup
void OVR::AudioManager::SetEmitterMixerGroup(int idx, ::UnityEngine::Audio::AudioMixerGroup* mixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetEmitterMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetEmitterMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(mixerGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idx, mixerGroup);
}
// Autogenerated method: OVR.AudioManager.GetActiveSnapshot
::OVR::MixerSnapshot* OVR::AudioManager::GetActiveSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::GetActiveSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "GetActiveSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::MixerSnapshot*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager.SetCurrentSnapshot
void OVR::AudioManager::SetCurrentSnapshot(::OVR::MixerSnapshot* mixerSnapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::SetCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "SetCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixerSnapshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixerSnapshot);
}
// Autogenerated method: OVR.AudioManager.BlendWithCurrentSnapshot
void OVR::AudioManager::BlendWithCurrentSnapshot(::OVR::MixerSnapshot* blendSnapshot, float weight, float blendTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::BlendWithCurrentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", "BlendWithCurrentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blendSnapshot), ::il2cpp_utils::ExtractType(weight), ::il2cpp_utils::ExtractType(blendTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blendSnapshot, weight, blendTime);
}
// Autogenerated method: OVR.AudioManager..cctor
void OVR::AudioManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.Fade
#include "OVR/AudioManager_Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade In
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "In"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade In
void OVR::AudioManager::Fade::_set_In(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "In", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.AudioManager/OVR.Fade Out
::OVR::AudioManager::Fade OVR::AudioManager::Fade::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::AudioManager::Fade>("OVR", "AudioManager/Fade", "Out"));
}
// Autogenerated static field setter
// Set static field: static public OVR.AudioManager/OVR.Fade Out
void OVR::AudioManager::Fade::_set_Out(::OVR::AudioManager::Fade value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "AudioManager/Fade", "Out", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::AudioManager::Fade::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::Fade::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c__DisplayClass77_0
#include "OVR/AudioManager_--c__DisplayClass77_0.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
::OVR::SoundPriority& OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c__DisplayClass77_0.<FindFreeEmitter>b__0
bool OVR::AudioManager::$$c__DisplayClass77_0::$FindFreeEmitter$b__0(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c__DisplayClass77_0::<FindFreeEmitter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.AudioManager/OVR.<>c
#include "OVR/AudioManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVR.AudioManager/OVR.<>c <>9
::OVR::AudioManager::$$c* OVR::AudioManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::OVR::AudioManager::$$c*>("OVR", "AudioManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVR.AudioManager/OVR.<>c <>9
void OVR::AudioManager::$$c::_set_$$9(::OVR::AudioManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
::System::Predicate_1<::OVR::SoundEmitter*>* OVR::AudioManager::$$c::_get_$$9__77_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_get_$$9__77_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::OVR::SoundEmitter*>*>("OVR", "AudioManager/<>c", "<>9__77_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<OVR.SoundEmitter> <>9__77_1
void OVR::AudioManager::$$c::_set_$$9__77_1(::System::Predicate_1<::OVR::SoundEmitter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::_set_$$9__77_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("OVR", "AudioManager/<>c", "<>9__77_1", value)));
}
// Autogenerated method: OVR.AudioManager/OVR.<>c..cctor
void OVR::AudioManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR", "AudioManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.AudioManager/OVR.<>c.<FindFreeEmitter>b__77_1
bool OVR::AudioManager::$$c::$FindFreeEmitter$b__77_1(::OVR::SoundEmitter* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::AudioManager::$$c::<FindFreeEmitter>b__77_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindFreeEmitter>b__77_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.EmitterChannel
#include "OVR/EmitterChannel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel None
::OVR::EmitterChannel OVR::EmitterChannel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel None
void OVR::EmitterChannel::_set_None(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Reserved
::OVR::EmitterChannel OVR::EmitterChannel::_get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Reserved
void OVR::EmitterChannel::_set_Reserved(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.EmitterChannel Any
::OVR::EmitterChannel OVR::EmitterChannel::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::EmitterChannel>("OVR", "EmitterChannel", "Any"));
}
// Autogenerated static field setter
// Set static field: static public OVR.EmitterChannel Any
void OVR::EmitterChannel::_set_Any(::OVR::EmitterChannel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "EmitterChannel", "Any", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::EmitterChannel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::EmitterChannel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MixerSnapshot
#include "OVR/MixerSnapshot.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot snapshot
::UnityEngine::Audio::AudioMixerSnapshot*& OVR::MixerSnapshot::dyn_snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single transitionTime
float& OVR::MixerSnapshot::dyn_transitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MixerSnapshot::dyn_transitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.MinMaxAttribute
#include "OVR/MinMaxAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single minDefaultVal
float& OVR::MinMaxAttribute::dyn_minDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_minDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDefaultVal
float& OVR::MinMaxAttribute::dyn_maxDefaultVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_maxDefaultVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDefaultVal"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single min
float& OVR::MinMaxAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single max
float& OVR::MinMaxAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::MinMaxAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter
#include "OVR/SoundEmitter.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
// Including type: ONSPAudioSource
#include "GlobalNamespace/ONSPAudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioVelocityUpdateMode
#include "UnityEngine/AudioVelocityUpdateMode.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: OVR.Fade
#include "OVR/Fade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVR.EmitterChannel channel
::OVR::EmitterChannel& OVR::SoundEmitter::dyn_channel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_channel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channel"))->offset;
  return *reinterpret_cast<::OVR::EmitterChannel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSpatialization
bool& OVR::SoundEmitter::dyn_disableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_disableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundEmitter/OVR.FadeState state
::OVR::SoundEmitter::FadeState& OVR::SoundEmitter::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter::FadeState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
::UnityEngine::AudioSource*& OVR::SoundEmitter::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
::OVR::SoundPriority& OVR::SoundEmitter::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ONSPAudioSource osp
::GlobalNamespace::ONSPAudioSource*& OVR::SoundEmitter::dyn_osp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_osp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "osp"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ONSPAudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single endPlayTime
float& OVR::SoundEmitter::dyn_endPlayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_endPlayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPlayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform lastParentTransform
::UnityEngine::Transform*& OVR::SoundEmitter::dyn_lastParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_lastParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastParentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
float& OVR::SoundEmitter::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform defaultParent
::UnityEngine::Transform*& OVR::SoundEmitter::dyn_defaultParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_defaultParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultParent"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 originalIdx
int& OVR::SoundEmitter::dyn_originalIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_originalIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onFinished
::System::Action*& OVR::SoundEmitter::dyn_onFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> onFinishedObject
::System::Action_1<::Il2CppObject*>*& OVR::SoundEmitter::dyn_onFinishedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedObject"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object onFinishedParam
::Il2CppObject*& OVR::SoundEmitter::dyn_onFinishedParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_onFinishedParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFinishedParam"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundGroup playingSoundGroup
::OVR::SoundGroup*& OVR::SoundEmitter::dyn_playingSoundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::dyn_playingSoundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingSoundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter.get_volume
float OVR::SoundEmitter::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_volume
void OVR::SoundEmitter::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_pitch
float OVR::SoundEmitter::get_pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_pitch
void OVR::SoundEmitter::set_pitch(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_pitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_clip
::UnityEngine::AudioClip* OVR::SoundEmitter::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_clip
void OVR::SoundEmitter::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_time
float OVR::SoundEmitter::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_time
void OVR::SoundEmitter::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_length
float OVR::SoundEmitter::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.get_loop
bool OVR::SoundEmitter::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_loop
void OVR::SoundEmitter::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_mute
bool OVR::SoundEmitter::get_mute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_mute
void OVR::SoundEmitter::set_mute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_mute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_velocityUpdateMode
::UnityEngine::AudioVelocityUpdateMode OVR::SoundEmitter::get_velocityUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioVelocityUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.set_velocityUpdateMode
void OVR::SoundEmitter::set_velocityUpdateMode(::UnityEngine::AudioVelocityUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::set_velocityUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_velocityUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundEmitter.get_isPlaying
bool OVR::SoundEmitter::get_isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::get_isPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Awake
void OVR::SoundEmitter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.SetPlayingSoundGroup
void OVR::SoundEmitter::SetPlayingSoundGroup(::OVR::SoundGroup* soundGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetPlayingSoundGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayingSoundGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundGroup);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundEmitter.SetOnFinished
void OVR::SoundEmitter::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundEmitter.SetChannel
void OVR::SoundEmitter::SetChannel(int _channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _channel);
}
// Autogenerated method: OVR.SoundEmitter.SetDefaultParent
void OVR::SoundEmitter::SetDefaultParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetDefaultParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SetAudioMixer
void OVR::SoundEmitter::SetAudioMixer(::UnityEngine::Audio::AudioMixerGroup* _mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SetAudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_mixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _mixer);
}
// Autogenerated method: OVR.SoundEmitter.IsPlaying
bool OVR::SoundEmitter::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Play
void OVR::SoundEmitter::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Pause
void OVR::SoundEmitter::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.Stop
void OVR::SoundEmitter::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.GetSampleTime
int OVR::SoundEmitter::GetSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::GetSampleTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSampleTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ParentTo
void OVR::SoundEmitter::ParentTo(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ParentTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.DetachFromParent
void OVR::SoundEmitter::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter.ResetParent
void OVR::SoundEmitter::ResetParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::ResetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundEmitter.SyncTo
void OVR::SoundEmitter::SyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::SyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.DelayedSyncTo
::System::Collections::IEnumerator* OVR::SoundEmitter::DelayedSyncTo(::OVR::SoundEmitter* other, float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::DelayedSyncTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedSyncTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, other, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeTo
void OVR::SoundEmitter::FadeTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(defaultVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime, defaultVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeIn
void OVR::SoundEmitter::FadeIn(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOut
void OVR::SoundEmitter::FadeOut(float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeOutDelayed
void OVR::SoundEmitter::FadeOutDelayed(float delayedSecs, float fadeTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeOutDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delayedSecs), ::il2cpp_utils::ExtractType(fadeTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delayedSecs, fadeTime);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannelTo
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannelTo(float fadeTime, float toVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannelTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannelTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(toVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, fadeTime, toVolume);
}
// Autogenerated method: OVR.SoundEmitter.FadeSoundChannel
::System::Collections::IEnumerator* OVR::SoundEmitter::FadeSoundChannel(float delaySecs, float fadeTime, ::OVR::Fade fadeType, float defaultVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeSoundChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeSoundChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(fadeType), ::il2cpp_utils::ExtractType(defaultVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delaySecs, fadeTime, fadeType, defaultVolume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundEmitter/OVR.FadeState
#include "OVR/SoundEmitter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Null
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Null
void OVR::SoundEmitter::FadeState::_set_Null(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingIn
void OVR::SoundEmitter::FadeState::_set_FadingIn(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingIn", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState FadingOut
void OVR::SoundEmitter::FadeState::_set_FadingOut(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
::OVR::SoundEmitter::FadeState OVR::SoundEmitter::FadeState::_get_Ducking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_get_Ducking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundEmitter::FadeState>("OVR", "SoundEmitter/FadeState", "Ducking"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundEmitter/OVR.FadeState Ducking
void OVR::SoundEmitter::FadeState::_set_Ducking(::OVR::SoundEmitter::FadeState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::_set_Ducking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundEmitter/FadeState", "Ducking", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::SoundEmitter::FadeState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::FadeState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57
#include "OVR/SoundEmitter_-DelayedSyncTo-d__57.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter other
::OVR::SoundEmitter*& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_other");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "other"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
float& OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.IDisposable.Dispose
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.MoveNext
bool OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<DelayedSyncTo>d__57.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$DelayedSyncTo$d__57::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$DelayedSyncTo$d__57::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63
#include "OVR/SoundEmitter_-FadeSoundChannelTo-d__63.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single toVolume
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_toVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__4
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$startTime$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__5
float& OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::dyn_$elapsedTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannelTo>d__63.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannelTo$d__63::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64
#include "OVR/SoundEmitter_-FadeSoundChannel-d__64.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delaySecs
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_delaySecs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delaySecs"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.Fade fadeType
::OVR::Fade& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeType"))->offset;
  return *reinterpret_cast<::OVR::Fade*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultVolume
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_defaultVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundEmitter <>4__this
::OVR::SoundEmitter*& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::OVR::SoundEmitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <start>5__2
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$start$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <end>5__3
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$end$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<end>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <restartPlay>5__4
bool& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$restartPlay$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<restartPlay>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__5
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$startTime$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__6
float& OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::dyn_$elapsedTime$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__6"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.get_Current
::Il2CppObject* OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.IDisposable.Dispose
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.MoveNext
bool OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundEmitter/OVR.<FadeSoundChannel>d__64.System.Collections.IEnumerator.Reset
void OVR::SoundEmitter::$FadeSoundChannel$d__64::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundEmitter::$FadeSoundChannel$d__64::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundFXNext
#include "OVR/SoundFXNext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Random
::OVR::SoundFXNext OVR::SoundFXNext::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Random"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Random
void OVR::SoundFXNext::_set_Random(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Random", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundFXNext Sequential
::OVR::SoundFXNext OVR::SoundFXNext::_get_Sequential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_get_Sequential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundFXNext>("OVR", "SoundFXNext", "Sequential"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundFXNext Sequential
void OVR::SoundFXNext::_set_Sequential(::OVR::SoundFXNext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::_set_Sequential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundFXNext", "Sequential", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::SoundFXNext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXNext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.FreqHint
#include "OVR/FreqHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint None
::OVR::FreqHint OVR::FreqHint::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint None
void OVR::FreqHint::_set_None(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Wide
::OVR::FreqHint OVR::FreqHint::_get_Wide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Wide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Wide"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Wide
void OVR::FreqHint::_set_Wide(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Wide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Wide", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.FreqHint Narrow
::OVR::FreqHint OVR::FreqHint::_get_Narrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_get_Narrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::FreqHint>("OVR", "FreqHint", "Narrow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.FreqHint Narrow
void OVR::FreqHint::_set_Narrow(::OVR::FreqHint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::_set_Narrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "FreqHint", "Narrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::FreqHint::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::FreqHint::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.SoundPriority
#include "OVR/SoundPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryLow
::OVR::SoundPriority OVR::SoundPriority::_get_VeryLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryLow"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryLow
void OVR::SoundPriority::_set_VeryLow(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Low
::OVR::SoundPriority OVR::SoundPriority::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Low
void OVR::SoundPriority::_set_Low(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority Default
::OVR::SoundPriority OVR::SoundPriority::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority Default
void OVR::SoundPriority::_set_Default(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority High
::OVR::SoundPriority OVR::SoundPriority::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority High
void OVR::SoundPriority::_set_High(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.SoundPriority VeryHigh
::OVR::SoundPriority OVR::SoundPriority::_get_VeryHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_get_VeryHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::SoundPriority>("OVR", "SoundPriority", "VeryHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVR.SoundPriority VeryHigh
void OVR::SoundPriority::_set_VeryHigh(::OVR::SoundPriority value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::_set_VeryHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR", "SoundPriority", "VeryHigh", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::SoundPriority::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundPriority::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableSpatialization
bool& OVR::OSPProps::dyn_enableSpatialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableSpatialization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSpatialization"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useFastOverride
bool& OVR::OSPProps::dyn_useFastOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_useFastOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useFastOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
float& OVR::OSPProps::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableInvSquare
bool& OVR::OSPProps::dyn_enableInvSquare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_enableInvSquare");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableInvSquare"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volumetric
float& OVR::OSPProps::dyn_volumetric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_volumetric");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumetric"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 invSquareFalloff
::UnityEngine::Vector2& OVR::OSPProps::dyn_invSquareFalloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OSPProps::dyn_invSquareFalloff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invSquareFalloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: OVR.OSPProps
#include "OVR/OSPProps.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: OVR.SoundGroup
#include "OVR/SoundGroup.hpp"
// Including type: UnityEngine.Audio.AudioMixerGroup
#include "UnityEngine/Audio/AudioMixerGroup.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& OVR::SoundFX::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundFXNext playback
::OVR::SoundFXNext& OVR::SoundFX::dyn_playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playback"))->offset;
  return *reinterpret_cast<::OVR::SoundFXNext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single volume
float& OVR::SoundFX::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pitchVariance
::UnityEngine::Vector2& OVR::SoundFX::dyn_pitchVariance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pitchVariance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pitchVariance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 falloffDistance
::UnityEngine::Vector2& OVR::SoundFX::dyn_falloffDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffDistance"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioRolloffMode falloffCurve
::UnityEngine::AudioRolloffMode& OVR::SoundFX::dyn_falloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_falloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioRolloffMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve volumeFalloffCurve
::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_volumeFalloffCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_volumeFalloffCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volumeFalloffCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve reverbZoneMix
::UnityEngine::AnimationCurve*& OVR::SoundFX::dyn_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverbZoneMix"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spread
float& OVR::SoundFX::dyn_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single pctChanceToPlay
float& OVR::SoundFX::dyn_pctChanceToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_pctChanceToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pctChanceToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.SoundPriority priority
::OVR::SoundPriority& OVR::SoundFX::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::OVR::SoundPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 delay
::UnityEngine::Vector2& OVR::SoundFX::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean looping
bool& OVR::SoundFX::dyn_looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_looping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "looping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVR.OSPProps ospProps
::OVR::OSPProps*& OVR::SoundFX::dyn_ospProps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_ospProps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ospProps"))->offset;
  return *reinterpret_cast<::OVR::OSPProps**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] soundClips
::ArrayW<::UnityEngine::AudioClip*>& OVR::SoundFX::dyn_soundClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visibilityToggle
bool& OVR::SoundFX::dyn_visibilityToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_visibilityToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibilityToggle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundGroup soundGroup
::OVR::SoundGroup*& OVR::SoundFX::dyn_soundGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_soundGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundGroup"))->offset;
  return *reinterpret_cast<::OVR::SoundGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastIdx
int& OVR::SoundFX::dyn_lastIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_lastIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playingIdx
int& OVR::SoundFX::dyn_playingIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::dyn_playingIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playingIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFX.get_Length
int OVR::SoundFX::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_IsValid
bool OVR::SoundFX::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_Group
::OVR::SoundGroup* OVR::SoundFX::get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundGroup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.set_Group
void OVR::SoundFX::set_Group(::OVR::SoundGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::set_Group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFX.get_MaxFalloffDistSquared
float OVR::SoundFX::get_MaxFalloffDistSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_MaxFalloffDistSquared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxFalloffDistSquared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.get_GroupVolumeOverride
float OVR::SoundFX::get_GroupVolumeOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::get_GroupVolumeOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupVolumeOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClip
::UnityEngine::AudioClip* OVR::SoundFX::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetMixerGroup
::UnityEngine::Audio::AudioMixerGroup* OVR::SoundFX::GetMixerGroup(::UnityEngine::Audio::AudioMixerGroup* defaultMixerGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetMixerGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMixerGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultMixerGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixerGroup*, false>(this, ___internal__method, defaultMixerGroup);
}
// Autogenerated method: OVR.SoundFX.ReachedGroupPlayLimit
bool OVR::SoundFX::ReachedGroupPlayLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::ReachedGroupPlayLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReachedGroupPlayLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.GetClipLength
float OVR::SoundFX::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFX.GetPitch
float OVR::SoundFX::GetPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::GetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.PlaySound
int OVR::SoundFX::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFX.PlaySoundAt
int OVR::SoundFX::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volumeOverride, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volumeOverride), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volumeOverride, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFX.SetOnFinished
void OVR::SoundFX::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFX.StopSound
bool OVR::SoundFX::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFX.AttachToParent
void OVR::SoundFX::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFX.DetachFromParent
void OVR::SoundFX::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFX::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.SoundFXRef
#include "OVR/SoundFXRef.hpp"
// Including type: OVR.SoundFX
#include "OVR/SoundFX.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String soundFXName
::StringW& OVR::SoundFXRef::dyn_soundFXName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
bool& OVR::SoundFXRef::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVR.SoundFX soundFXCached
::OVR::SoundFX*& OVR::SoundFXRef::dyn_soundFXCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::dyn_soundFXCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soundFXCached"))->offset;
  return *reinterpret_cast<::OVR::SoundFX**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.SoundFXRef.get_soundFX
::OVR::SoundFX* OVR::SoundFXRef::get_soundFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_soundFX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soundFX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::SoundFX*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_name
::StringW OVR::SoundFXRef::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.set_name
void OVR::SoundFXRef::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVR.SoundFXRef.get_Length
int OVR::SoundFXRef::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.get_IsValid
bool OVR::SoundFXRef::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.Init
void OVR::SoundFXRef::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClip
::UnityEngine::AudioClip* OVR::SoundFXRef::GetClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.GetClipLength
float OVR::SoundFXRef::GetClipLength(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::GetClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, idx);
}
// Autogenerated method: OVR.SoundFXRef.PlaySound
int OVR::SoundFXRef::PlaySound(float delaySecs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delaySecs)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, delaySecs);
}
// Autogenerated method: OVR.SoundFXRef.PlaySoundAt
int OVR::SoundFXRef::PlaySoundAt(::UnityEngine::Vector3 pos, float delaySecs, float volume, float pitchMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::PlaySoundAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySoundAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(delaySecs), ::il2cpp_utils::ExtractType(volume), ::il2cpp_utils::ExtractType(pitchMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos, delaySecs, volume, pitchMultiplier);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action* onFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished);
}
// Autogenerated method: OVR.SoundFXRef.SetOnFinished
void OVR::SoundFXRef::SetOnFinished(::System::Action_1<::Il2CppObject*>* onFinished, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::SetOnFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onFinished), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onFinished, obj);
}
// Autogenerated method: OVR.SoundFXRef.StopSound
bool OVR::SoundFXRef::StopSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::StopSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.SoundFXRef.AttachToParent
void OVR::SoundFXRef::AttachToParent(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::AttachToParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachToParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated method: OVR.SoundFXRef.DetachFromParent
void OVR::SoundFXRef::DetachFromParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::SoundFXRef::DetachFromParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetachFromParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] SwitchTargets
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnableSwitch::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnableSwitch::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_Control
#include "GlobalNamespace/LipSyncDemo_Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateLeftKey
::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateLeftKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateLeftKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode rotateRightKey
::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotateRightKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotateRightKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode resetRotationKey
::UnityEngine::KeyCode& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single resetRotation
float& GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_resetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationAmount
float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rotationMax
float& GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::dyn_rotationMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_Control.Start
void GlobalNamespace::LipSyncDemo_Control::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.Update
void GlobalNamespace::LipSyncDemo_Control::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_Control.RotateObject
void GlobalNamespace::LipSyncDemo_Control::RotateObject(float amountDegrees, bool absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_Control::RotateObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amountDegrees), ::il2cpp_utils::ExtractType(absolute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amountDegrees, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LipSyncDemo_SetCurrentTarget
#include "GlobalNamespace/LipSyncDemo_SetCurrentTarget.hpp"
// Including type: EnableSwitch
#include "GlobalNamespace/EnableSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public EnableSwitch[] SwitchTargets
::ArrayW<::GlobalNamespace::EnableSwitch*>& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_SwitchTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SwitchTargets"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnableSwitch*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 targetSet
int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_targetSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetSet"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxTarget
int& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_maxTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean XRButtonBeingPressed
bool& GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::dyn_XRButtonBeingPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XRButtonBeingPressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Start
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.Update
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.SetCurrentTarget
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::SetCurrentTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCurrentTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LipSyncDemo_SetCurrentTarget.LocalTouchEventCallback
void GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LipSyncDemo_SetCurrentTarget::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncDebugConsole
#include "GlobalNamespace/OVRLipSyncDebugConsole.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private OVRLipSyncDebugConsole s_Instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncDebugConsole*>("", "OVRLipSyncDebugConsole", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSyncDebugConsole s_Instance
void GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance(::GlobalNamespace::OVRLipSyncDebugConsole* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncDebugConsole", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.ArrayList messages
::System::Collections::ArrayList*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messages"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxMessages
int& GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_maxMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxMessages"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text textMsg
::UnityEngine::UI::Text*& GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_textMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMsg"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean clearTimeoutOn
bool& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeoutOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeoutOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single clearTimeout
float& GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::dyn_clearTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearTimeout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncDebugConsole.get_instance
::GlobalNamespace::OVRLipSyncDebugConsole* GlobalNamespace::OVRLipSyncDebugConsole::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSyncDebugConsole*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Awake
void GlobalNamespace::OVRLipSyncDebugConsole::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Update
void GlobalNamespace::OVRLipSyncDebugConsole::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Init
void GlobalNamespace::OVRLipSyncDebugConsole::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OVRLipSyncDebugConsole.Log
void GlobalNamespace::OVRLipSyncDebugConsole::Log(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.Clear
void GlobalNamespace::OVRLipSyncDebugConsole::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout(float timeToClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", "ClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeToClear)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeToClear);
}
// Autogenerated method: OVRLipSyncDebugConsole.AddMessage
void GlobalNamespace::OVRLipSyncDebugConsole::AddMessage(::StringW message, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::AddMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, color);
}
// Autogenerated method: OVRLipSyncDebugConsole.ClearMessages
void GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::ClearMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.SetClearTimeout
void GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout(float timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::SetClearTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetClearTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: OVRLipSyncDebugConsole.Prune
void GlobalNamespace::OVRLipSyncDebugConsole::Prune() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Prune");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prune", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole.Display
void GlobalNamespace::OVRLipSyncDebugConsole::Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::Display");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Display", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncDebugConsole..cctor
void GlobalNamespace::OVRLipSyncDebugConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncDebugConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSyncDebugConsole", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRNamedArrayAttribute
#include "GlobalNamespace/OVRNamedArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] names
::ArrayW<::StringW>& GlobalNamespace::OVRNamedArrayAttribute::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRNamedArrayAttribute::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad
#include "GlobalNamespace/OVRTouchpad.hpp"
// Including type: OVRTouchpad/OVRTouchpadCallback`1
#include "GlobalNamespace/OVRTouchpad_OVRTouchpadCallback_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3 moveAmountMouse
::UnityEngine::Vector3 GlobalNamespace::OVRTouchpad::_get_moveAmountMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_moveAmountMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "OVRTouchpad", "moveAmountMouse"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3 moveAmountMouse
void GlobalNamespace::OVRTouchpad::_set_moveAmountMouse(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_moveAmountMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "moveAmountMouse", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single minMovMagnitudeMouse
float GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_minMovMagnitudeMouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OVRTouchpad", "minMovMagnitudeMouse"));
}
// Autogenerated static field setter
// Set static field: static private System.Single minMovMagnitudeMouse
void GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_minMovMagnitudeMouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "minMovMagnitudeMouse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Delegate touchPadCallbacks
::System::Delegate* GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchPadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Delegate*>("", "OVRTouchpad", "touchPadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static public System.Delegate touchPadCallbacks
void GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks(::System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchPadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchPadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private OVRTouchpadHelper touchpadHelper
::GlobalNamespace::OVRTouchpadHelper* GlobalNamespace::OVRTouchpad::_get_touchpadHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_get_touchpadHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpadHelper*>("", "OVRTouchpad", "touchpadHelper"));
}
// Autogenerated static field setter
// Set static field: static private OVRTouchpadHelper touchpadHelper
void GlobalNamespace::OVRTouchpad::_set_touchpadHelper(::GlobalNamespace::OVRTouchpadHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::_set_touchpadHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad", "touchpadHelper", value));
}
// Autogenerated method: OVRTouchpad..cctor
void GlobalNamespace::OVRTouchpad::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Create
void GlobalNamespace::OVRTouchpad::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.Update
void GlobalNamespace::OVRTouchpad::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.OnDisable
void GlobalNamespace::OVRTouchpad::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRTouchpad.HandleInputMouse
void GlobalNamespace::OVRTouchpad::HandleInputMouse(ByRef<::UnityEngine::Vector3> move) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::HandleInputMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "HandleInputMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(move));
}
// Autogenerated method: OVRTouchpad.AddListener
void GlobalNamespace::OVRTouchpad::AddListener(::GlobalNamespace::OVRTouchpad::OVRTouchpadCallback_1<::GlobalNamespace::OVRTouchpad::TouchEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRTouchpad", "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent SingleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_SingleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "SingleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent SingleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_SingleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "SingleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent DoubleTap
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_DoubleTap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "DoubleTap"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent DoubleTap
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_DoubleTap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "DoubleTap", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Left
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Left
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Right
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Right
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Up
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Up
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVRTouchpad/TouchEvent Down
::GlobalNamespace::OVRTouchpad::TouchEvent GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRTouchpad::TouchEvent>("", "OVRTouchpad/TouchEvent", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVRTouchpad/TouchEvent Down
void GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down(::GlobalNamespace::OVRTouchpad::TouchEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRTouchpad/TouchEvent", "Down", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpad::TouchEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRTouchpadHelper
#include "GlobalNamespace/OVRTouchpadHelper.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRTouchpadHelper.Awake
void GlobalNamespace::OVRTouchpadHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Start
void GlobalNamespace::OVRTouchpadHelper::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.Update
void GlobalNamespace::OVRTouchpadHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.OnDisable
void GlobalNamespace::OVRTouchpadHelper::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRTouchpadHelper.LocalTouchEventCallback
void GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRTouchpadHelper::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync
#include "GlobalNamespace/OVRLipSync.hpp"
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 VisemeCount
int GlobalNamespace::OVRLipSync::_get_VisemeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_VisemeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "VisemeCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 VisemeCount
void GlobalNamespace::OVRLipSync::_set_VisemeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_VisemeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "VisemeCount", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SignalCount
int GlobalNamespace::OVRLipSync::_get_SignalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_SignalCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OVRLipSync", "SignalCount"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SignalCount
void GlobalNamespace::OVRLipSync::_set_SignalCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_SignalCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "SignalCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String strOVRLS
::StringW GlobalNamespace::OVRLipSync::_get_strOVRLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_strOVRLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OVRLipSync", "strOVRLS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strOVRLS
void GlobalNamespace::OVRLipSync::_set_strOVRLS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_strOVRLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "strOVRLS", value));
}
// Autogenerated static field getter
// Get static field: static private OVRLipSync/Result sInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::_get_sInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync", "sInitialized"));
}
// Autogenerated static field setter
// Set static field: static private OVRLipSync/Result sInitialized
void GlobalNamespace::OVRLipSync::_set_sInitialized(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync sInstance
::GlobalNamespace::OVRLipSync* GlobalNamespace::OVRLipSync::_get_sInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_get_sInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync*>("", "OVRLipSync", "sInstance"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync sInstance
void GlobalNamespace::OVRLipSync::_set_sInstance(::GlobalNamespace::OVRLipSync* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::_set_sInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync", "sInstance", value));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Initialize
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize(int samplerate, int buffersize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplerate), ::il2cpp_utils::ExtractType(buffersize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplerate, buffersize);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_Shutdown
void GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_GetVersion
::System::IntPtr GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_CreateContextWithModelFile
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_DestroyContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ResetContext
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_SendSignal
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ovrLipSyncDll_ProcessFrameEx
int GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx(uint context, ::System::IntPtr audioBuffer, uint bufferSize, ::GlobalNamespace::OVRLipSync::AudioDataType dataType, ByRef<int> frameNumber, ByRef<int> frameDelay, ::ArrayW<float> visemes, int visemeCount, ByRef<float> laughterScore, ::ArrayW<float> laughterCategories, int laughterCategoriesLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ovrLipSyncDll_ProcessFrameEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ovrLipSyncDll_ProcessFrameEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(frameNumber), ::il2cpp_utils::ExtractType(frameDelay), ::il2cpp_utils::ExtractType(visemes), ::il2cpp_utils::ExtractType(visemeCount), ::il2cpp_utils::ExtractType(laughterScore), ::il2cpp_utils::ExtractType(laughterCategories), ::il2cpp_utils::ExtractType(laughterCategoriesLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, bufferSize, dataType, byref(frameNumber), byref(frameDelay), visemes, visemeCount, byref(laughterScore), laughterCategories, laughterCategoriesLength);
}
// Autogenerated method: OVRLipSync.Awake
void GlobalNamespace::OVRLipSync::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.OnDestroy
void GlobalNamespace::OVRLipSync::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.Initialize
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Initialize(int sampleRate, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sampleRate, bufferSize);
}
// Autogenerated method: OVRLipSync.Shutdown
void GlobalNamespace::OVRLipSync::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.IsInitialized
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRLipSync.CreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContext(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.CreateContextWithModelFile
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::CreateContextWithModelFile(ByRef<uint> context, ::GlobalNamespace::OVRLipSync::ContextProviders provider, ::StringW modelPath, int sampleRate, bool enableAcceleration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::CreateContextWithModelFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "CreateContextWithModelFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(modelPath), ::il2cpp_utils::ExtractType(sampleRate), ::il2cpp_utils::ExtractType(enableAcceleration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(context), provider, modelPath, sampleRate, enableAcceleration);
}
// Autogenerated method: OVRLipSync.DestroyContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::DestroyContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::DestroyContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "DestroyContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ResetContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: OVRLipSync.SendSignal
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::SendSignal(uint context, ::GlobalNamespace::OVRLipSync::Signals signal, int arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::SendSignal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "SendSignal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(signal), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, signal, arg1, arg2);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<float> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync.ProcessFrame
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::ProcessFrame(uint context, ::ArrayW<int16_t> audioBuffer, ::GlobalNamespace::OVRLipSync::Frame* frame, bool stereo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(audioBuffer), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(stereo)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, audioBuffer, frame, stereo);
}
// Autogenerated method: OVRLipSync..cctor
void GlobalNamespace::OVRLipSync::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRLipSync", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Result
#include "GlobalNamespace/OVRLipSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Success
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Success
void GlobalNamespace::OVRLipSync::Result::_set_Success(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result Unknown
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result Unknown
void GlobalNamespace::OVRLipSync::Result::_set_Unknown(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result CannotCreateContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_CannotCreateContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "CannotCreateContext"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result CannotCreateContext
void GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_CannotCreateContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "CannotCreateContext", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result InvalidParam
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result InvalidParam
void GlobalNamespace::OVRLipSync::Result::_set_InvalidParam(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadSampleRate
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadSampleRate
void GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result MissingDLL
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_MissingDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_MissingDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "MissingDLL"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result MissingDLL
void GlobalNamespace::OVRLipSync::Result::_set_MissingDLL(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_MissingDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "MissingDLL", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result BadVersion
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_BadVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_BadVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "BadVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result BadVersion
void GlobalNamespace::OVRLipSync::Result::_set_BadVersion(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_BadVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "BadVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Result UndefinedFunction
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_get_UndefinedFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Result>("", "OVRLipSync/Result", "UndefinedFunction"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Result UndefinedFunction
void GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction(::GlobalNamespace::OVRLipSync::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::_set_UndefinedFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Result", "UndefinedFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSync::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/AudioDataType
#include "GlobalNamespace/OVRLipSync_AudioDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType S16_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_S16_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "S16_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType S16_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_S16_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "S16_Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Mono
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Mono
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/AudioDataType F32_Stereo
::GlobalNamespace::OVRLipSync::AudioDataType GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_get_F32_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::AudioDataType>("", "OVRLipSync/AudioDataType", "F32_Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/AudioDataType F32_Stereo
void GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo(::GlobalNamespace::OVRLipSync::AudioDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::_set_F32_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/AudioDataType", "F32_Stereo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::AudioDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Viseme
#include "GlobalNamespace/OVRLipSync_Viseme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme sil
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_sil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_sil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "sil"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme sil
void GlobalNamespace::OVRLipSync::Viseme::_set_sil(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_sil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "sil", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme PP
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_PP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_PP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "PP"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme PP
void GlobalNamespace::OVRLipSync::Viseme::_set_PP(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_PP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "PP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme FF
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_FF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_FF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "FF"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme FF
void GlobalNamespace::OVRLipSync::Viseme::_set_FF(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_FF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "FF", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme TH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_TH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_TH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "TH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme TH
void GlobalNamespace::OVRLipSync::Viseme::_set_TH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_TH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "TH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme DD
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_DD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_DD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "DD"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme DD
void GlobalNamespace::OVRLipSync::Viseme::_set_DD(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_DD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "DD", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme kk
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_kk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_kk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "kk"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme kk
void GlobalNamespace::OVRLipSync::Viseme::_set_kk(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_kk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "kk", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme CH
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_CH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_CH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "CH"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme CH
void GlobalNamespace::OVRLipSync::Viseme::_set_CH(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_CH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "CH", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme SS
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "SS"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme SS
void GlobalNamespace::OVRLipSync::Viseme::_set_SS(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme nn
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_nn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_nn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "nn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme nn
void GlobalNamespace::OVRLipSync::Viseme::_set_nn(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_nn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "nn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme RR
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_RR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_RR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "RR"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme RR
void GlobalNamespace::OVRLipSync::Viseme::_set_RR(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_RR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "RR", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme aa
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_aa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_aa");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "aa"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme aa
void GlobalNamespace::OVRLipSync::Viseme::_set_aa(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_aa");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "aa", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme E
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "E"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme E
void GlobalNamespace::OVRLipSync::Viseme::_set_E(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "E", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ih
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ih() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ih");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ih"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ih
void GlobalNamespace::OVRLipSync::Viseme::_set_ih(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ih");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ih", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme oh
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_oh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_oh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "oh"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme oh
void GlobalNamespace::OVRLipSync::Viseme::_set_oh(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_oh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "oh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Viseme ou
::GlobalNamespace::OVRLipSync::Viseme GlobalNamespace::OVRLipSync::Viseme::_get_ou() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_get_ou");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Viseme>("", "OVRLipSync/Viseme", "ou"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Viseme ou
void GlobalNamespace::OVRLipSync::Viseme::_set_ou(::GlobalNamespace::OVRLipSync::Viseme value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::_set_ou");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Viseme", "ou", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSync::Viseme::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Viseme::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Signals
#include "GlobalNamespace/OVRLipSync_Signals.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOn
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOn"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOn
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOn", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeOff
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeOff"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeOff
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeOff", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeAmount
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeAmount", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals VisemeSmoothing
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_VisemeSmoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "VisemeSmoothing"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals VisemeSmoothing
void GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_VisemeSmoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "VisemeSmoothing", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/Signals LaughterAmount
::GlobalNamespace::OVRLipSync::Signals GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_get_LaughterAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::Signals>("", "OVRLipSync/Signals", "LaughterAmount"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/Signals LaughterAmount
void GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount(::GlobalNamespace::OVRLipSync::Signals value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::_set_LaughterAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/Signals", "LaughterAmount", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSync::Signals::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Signals::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/ContextProviders
#include "GlobalNamespace/OVRLipSync_ContextProviders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Original
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Original"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Original
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Original(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
::GlobalNamespace::OVRLipSync::ContextProviders GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_get_Enhanced_with_Laughter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSync::ContextProviders>("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSync/ContextProviders Enhanced_with_Laughter
void GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter(::GlobalNamespace::OVRLipSync::ContextProviders value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::_set_Enhanced_with_Laughter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSync/ContextProviders", "Enhanced_with_Laughter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::ContextProviders::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameNumber
int& GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 frameDelay
int& GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_frameDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Visemes
::ArrayW<float>& GlobalNamespace::OVRLipSync::Frame::dyn_Visemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_Visemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Visemes"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
float& GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSync/Frame.CopyInput
void GlobalNamespace::OVRLipSync::Frame::CopyInput(::GlobalNamespace::OVRLipSync::Frame* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::CopyInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: OVRLipSync/Frame.Reset
void GlobalNamespace::OVRLipSync::Frame::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSync::Frame::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContext
#include "GlobalNamespace/OVRLipSyncContext.hpp"
// Including type: OVRTouchpad/TouchEvent
#include "GlobalNamespace/OVRTouchpad.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableKeyboardInput
bool& GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableKeyboardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableKeyboardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableTouchInput
bool& GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_enableTouchInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableTouchInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean audioLoopback
bool& GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_audioLoopback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioLoopback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode loopbackKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_loopbackKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopbackKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showVisemes
bool& GlobalNamespace::OVRLipSyncContext::dyn_showVisemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showVisemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showVisemes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugVisemesKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugVisemesKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugVisemesKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean skipAudioSource
bool& GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_skipAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipAudioSource"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gain
float& GlobalNamespace::OVRLipSyncContext::dyn_gain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_gain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDebugConsole
bool& GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_hasDebugConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDebugConsole"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode debugLaughterKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_debugLaughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugLaughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showLaughter
bool& GlobalNamespace::OVRLipSyncContext::dyn_showLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_showLaughter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showLaughter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterScore
float& GlobalNamespace::OVRLipSyncContext::dyn_laughterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::dyn_laughterScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterScore"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContext.Start
void GlobalNamespace::OVRLipSyncContext::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.HandleKeyboard
void GlobalNamespace::OVRLipSyncContext::HandleKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::HandleKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.Update
void GlobalNamespace::OVRLipSyncContext::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.PreprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PreprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.PostprocessAudioSamples
void GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::PostprocessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostprocessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamplesRaw
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw(::ArrayW<int16_t> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamplesRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamplesRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.ProcessAudioSamples
void GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ProcessAudioSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAudioSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.OnAudioFilterRead
void GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: OVRLipSyncContext.DebugShowVisemesAndLaughter
void GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::DebugShowVisemesAndLaughter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DebugShowVisemesAndLaughter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.ToggleAudioLoopback
void GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::ToggleAudioLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleAudioLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContext.LocalTouchEventCallback
void GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback(::GlobalNamespace::OVRTouchpad::TouchEvent touchEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContext::LocalTouchEventCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalTouchEventCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(touchEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, touchEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSync/ContextProviders provider
::GlobalNamespace::OVRLipSync::ContextProviders& GlobalNamespace::OVRLipSyncContextBase::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::ContextProviders*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableAcceleration
bool& GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_enableAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableAcceleration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame frame
::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextBase::dyn_frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_frame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 context
uint& GlobalNamespace::OVRLipSyncContextBase::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _smoothing
int& GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::dyn__smoothing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothing"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextBase.get_Smoothing
int GlobalNamespace::OVRLipSyncContextBase::get_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.set_Smoothing
void GlobalNamespace::OVRLipSyncContextBase::set_Smoothing(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::set_Smoothing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Smoothing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncContextBase.get_Context
uint GlobalNamespace::OVRLipSyncContextBase::get_Context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.get_Frame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.Awake
void GlobalNamespace::OVRLipSyncContextBase::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.OnDestroy
void GlobalNamespace::OVRLipSyncContextBase::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.GetCurrentPhonemeFrame
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::GetCurrentPhonemeFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPhonemeFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextBase.SetVisemeBlend
void GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend(int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetVisemeBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextBase.SetLaughterBlend
void GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::SetLaughterBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: OVRLipSyncContextBase.ResetContext
::GlobalNamespace::OVRLipSync::Result GlobalNamespace::OVRLipSyncContextBase::ResetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextBase::ResetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Result, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextCanned
#include "GlobalNamespace/OVRLipSyncContextCanned.hpp"
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncSequence currentSequence
::GlobalNamespace::OVRLipSyncSequence*& GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::dyn_currentSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSequence"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextCanned.Update
void GlobalNamespace::OVRLipSyncContextCanned::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextCanned::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextMorphTarget
#include "GlobalNamespace/OVRLipSyncContextMorphTarget.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer skinnedMeshRenderer
::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_skinnedMeshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinnedMeshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] visemeToBlendTargets
::ArrayW<int>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeToBlendTargets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeToBlendTargets"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableVisemeTestKeys
bool& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_enableVisemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableVisemeTestKeys"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode[] visemeTestKeys
::ArrayW<::UnityEngine::KeyCode>& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_visemeTestKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visemeTestKeys"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::KeyCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode laughterKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 laughterBlendTarget
int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterBlendTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterBlendTarget"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterThreshold
float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single laughterMultiplier
float& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_laughterMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "laughterMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
int& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Start
void GlobalNamespace::OVRLipSyncContextMorphTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.Update
void GlobalNamespace::OVRLipSyncContextMorphTarget::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckForKeys
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckForKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetVisemeToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetVisemeToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.SetLaughterToMorphTarget
void GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget(::GlobalNamespace::OVRLipSync::Frame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::SetLaughterToMorphTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLaughterToMorphTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckVisemeKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey(::UnityEngine::KeyCode key, int viseme, int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckVisemeKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckVisemeKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(viseme), ::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, viseme, amount);
}
// Autogenerated method: OVRLipSyncContextMorphTarget.CheckLaughterKey
void GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextMorphTarget::CheckLaughterKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckLaughterKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncContextTextureFlip
#include "GlobalNamespace/OVRLipSyncContextTextureFlip.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: OVRLipSyncContextBase
#include "GlobalNamespace/OVRLipSyncContextBase.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
::UnityEngine::Material*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture[] Textures
::ArrayW<::UnityEngine::Texture*>& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_Textures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Textures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Texture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 smoothAmount
int& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_smoothAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smoothAmount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSyncContextBase lipsyncContext
::GlobalNamespace::OVRLipSyncContextBase*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_lipsyncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lipsyncContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncContextBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OVRLipSync/Frame oldFrame
::GlobalNamespace::OVRLipSync::Frame*& GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::dyn_oldFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFrame"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSync::Frame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Start
void GlobalNamespace::OVRLipSyncContextTextureFlip::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.Update
void GlobalNamespace::OVRLipSyncContextTextureFlip::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncContextTextureFlip.SetVisemeToTexture
void GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncContextTextureFlip::SetVisemeToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisemeToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
::UnityEngine::AudioSource*& GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableMicSelectionGUI
bool& GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_enableMicSelectionGUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableMicSelectionGUI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micSelectionGUIKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelectionGUIKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelectionGUIKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single micInputVolume
float& GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micInputVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micInputVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micFrequency
int& GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OVRLipSyncMicInput/micActivation micControl
::GlobalNamespace::OVRLipSyncMicInput::micActivation& GlobalNamespace::OVRLipSyncMicInput::dyn_micControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OVRLipSyncMicInput::micActivation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode micActivationKey
::UnityEngine::KeyCode& GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micActivationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micActivationKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedDevice
::StringW& GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_selectedDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean micSelected
bool& GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_micSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minFreq
int& GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_minFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxFreq
int& GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_maxFreq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxFreq"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean focused
bool& GlobalNamespace::OVRLipSyncMicInput::dyn_focused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_focused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "focused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
bool& GlobalNamespace::OVRLipSyncMicInput::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncMicInput.get_MicFrequency
float GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::get_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.set_MicFrequency
void GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::set_MicFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OVRLipSyncMicInput.Awake
void GlobalNamespace::OVRLipSyncMicInput::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Start
void GlobalNamespace::OVRLipSyncMicInput::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.InitializeMicrophone
void GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::InitializeMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.Update
void GlobalNamespace::OVRLipSyncMicInput::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationFocus
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: OVRLipSyncMicInput.OnApplicationPause
void GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: OVRLipSyncMicInput.OnDisable
void GlobalNamespace::OVRLipSyncMicInput::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.OnGUI
void GlobalNamespace::OVRLipSyncMicInput::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.MicDeviceGUI
void GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::MicDeviceGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MicDeviceGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(buttonSpaceTop), ::il2cpp_utils::ExtractType(buttonSpaceLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, left, top, width, height, buttonSpaceTop, buttonSpaceLeft);
}
// Autogenerated method: OVRLipSyncMicInput.GetMicCaps
void GlobalNamespace::OVRLipSyncMicInput::GetMicCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetMicCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StartMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StartMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StartMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.StopMicrophone
void GlobalNamespace::OVRLipSyncMicInput::StopMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::StopMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVRLipSyncMicInput.GetAveragedVolume
float GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::GetAveragedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAveragedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncMicInput/micActivation
#include "GlobalNamespace/OVRLipSyncMicInput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_HoldToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation HoldToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_HoldToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "HoldToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_PushToSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "PushToSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation PushToSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_PushToSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "PushToSpeak", value));
}
// Autogenerated static field getter
// Get static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
::GlobalNamespace::OVRLipSyncMicInput::micActivation GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_get_ConstantSpeak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRLipSyncMicInput::micActivation>("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak"));
}
// Autogenerated static field setter
// Set static field: static public OVRLipSyncMicInput/micActivation ConstantSpeak
void GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak(::GlobalNamespace::OVRLipSyncMicInput::micActivation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::_set_ConstantSpeak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRLipSyncMicInput/micActivation", "ConstantSpeak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncMicInput::micActivation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRLipSyncSequence
#include "GlobalNamespace/OVRLipSyncSequence.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: OVRLipSync/Frame
#include "GlobalNamespace/OVRLipSync_Frame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<OVRLipSync/Frame> entries
::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>*& GlobalNamespace::OVRLipSyncSequence::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::OVRLipSync::Frame*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
float& GlobalNamespace::OVRLipSyncSequence::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVRLipSyncSequence.GetFrameAtTime
::GlobalNamespace::OVRLipSync::Frame* GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRLipSyncSequence::GetFrameAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OVRLipSync::Frame*, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GroupPresenceSample
#include "GlobalNamespace/GroupPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceLeaveIntent
#include "Oculus/Platform/Models/GroupPresenceLeaveIntent.hpp"
// Including type: Oculus.Platform.Models.LaunchInvitePanelFlowResult
#include "Oculus/Platform/Models/LaunchInvitePanelFlowResult.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Models.InvitePanelResultInfo
#include "Oculus/Platform/Models/InvitePanelResultInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
bool& GlobalNamespace::GroupPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LobbySessionID
::StringW& GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LobbySessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LobbySessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchSessionID
::StringW& GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_MatchSessionID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchSessionID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SuggestedUserID
uint64_t& GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_SuggestedUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuggestedUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
::UnityEngine::UI::Text*& GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
uint64_t& GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
int& GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
bool& GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GroupPresenceSample.Start
void GlobalNamespace::GroupPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.SetPresence
void GlobalNamespace::GroupPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ClearPresence
void GlobalNamespace::GroupPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchInvitePanel
void GlobalNamespace::GroupPresenceSample::LaunchInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.LaunchRosterPanel
void GlobalNamespace::GroupPresenceSample::LaunchRosterPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnJoinIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnJoinIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnJoinIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnLeaveIntentChangeNotif
void GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceLeaveIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLeaveIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLeaveIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnInviteSentNotif
void GlobalNamespace::GroupPresenceSample::OnInviteSentNotif(::Oculus::Platform::Message_1<::Oculus::Platform::Models::LaunchInvitePanelFlowResult*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnInviteSentNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInviteSentNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.OnGetDestinations
void GlobalNamespace::GroupPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.Update
void GlobalNamespace::GroupPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.ScrollThroughDestinations
void GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.OnLoggedInUser
void GlobalNamespace::GroupPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.UpdateConsole
void GlobalNamespace::GroupPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GroupPresenceSample.PressAButton
bool GlobalNamespace::GroupPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressBButton
bool GlobalNamespace::GroupPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressXButton
bool GlobalNamespace::GroupPresenceSample::PressXButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressXButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressXButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressYButton
bool GlobalNamespace::GroupPresenceSample::PressYButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressYButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressYButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressUp
bool GlobalNamespace::GroupPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.PressDown
bool GlobalNamespace::GroupPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GroupPresenceSample.<Start>b__8_0
void GlobalNamespace::GroupPresenceSample::$Start$b__8_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<Start>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_0
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<SetPresence>b__9_1
void GlobalNamespace::GroupPresenceSample::$SetPresence$b__9_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<SetPresence>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_0
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<ClearPresence>b__10_1
void GlobalNamespace::GroupPresenceSample::$ClearPresence$b__10_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<ClearPresence>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: GroupPresenceSample.<LaunchInvitePanel>b__11_0
void GlobalNamespace::GroupPresenceSample::$LaunchInvitePanel$b__11_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::InvitePanelResultInfo*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchInvitePanel>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchInvitePanel>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: GroupPresenceSample.<LaunchRosterPanel>b__12_0
void GlobalNamespace::GroupPresenceSample::$LaunchRosterPanel$b__12_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GroupPresenceSample::<LaunchRosterPanel>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchRosterPanel>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceSample
#include "GlobalNamespace/RichPresenceSample.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.DestinationList
#include "Oculus/Platform/Models/DestinationList.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DeeplinkMessageOverride
::StringW& GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DeeplinkMessageOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DeeplinkMessageOverride"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsJoinable
bool& GlobalNamespace::RichPresenceSample::dyn_IsJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsJoinable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsJoinable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsIdle
bool& GlobalNamespace::RichPresenceSample::dyn_IsIdle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_IsIdle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsIdle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String InstanceID
::StringW& GlobalNamespace::RichPresenceSample::dyn_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InstanceID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstanceID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 CurrentCapacity
uint& GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_CurrentCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxCapacity
uint& GlobalNamespace::RichPresenceSample::dyn_MaxCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_MaxCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxCapacity"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime StartTime
::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_StartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_StartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime EndTime
::System::DateTime& GlobalNamespace::RichPresenceSample::dyn_EndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_EndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.RichPresenceExtraContext ExtraContext
::Oculus::Platform::RichPresenceExtraContext& GlobalNamespace::RichPresenceSample::dyn_ExtraContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_ExtraContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraContext"))->offset;
  return *reinterpret_cast<::Oculus::Platform::RichPresenceExtraContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text InVRConsole
::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_InVRConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_InVRConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InVRConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text DestinationsConsole
::UnityEngine::UI::Text*& GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationsConsole");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationsConsole"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> DestinationAPINames
::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationAPINames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationAPINames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64 LoggedInUserID
uint64_t& GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_LoggedInUserID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LoggedInUserID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String TrackingID
::StringW& GlobalNamespace::RichPresenceSample::dyn_TrackingID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_TrackingID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TrackingID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 DestinationIndex
int& GlobalNamespace::RichPresenceSample::dyn_DestinationIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_DestinationIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DestinationIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean OnlyPushUpOnce
bool& GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::dyn_OnlyPushUpOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyPushUpOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RichPresenceSample.Start
void GlobalNamespace::RichPresenceSample::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.SetPresence
void GlobalNamespace::RichPresenceSample::SetPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ClearPresence
void GlobalNamespace::RichPresenceSample::ClearPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ClearPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.GetAppLaunchDetails
::StringW GlobalNamespace::RichPresenceSample::GetAppLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::GetAppLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLaunchIntentChangeNotif
void GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif(::Oculus::Platform::Message_1<::StringW>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLaunchIntentChangeNotif");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLaunchIntentChangeNotif", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.OnGetDestinations
void GlobalNamespace::RichPresenceSample::OnGetDestinations(::Oculus::Platform::Message_1<::Oculus::Platform::Models::DestinationList*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnGetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.Update
void GlobalNamespace::RichPresenceSample::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.ScrollThroughDestinations
void GlobalNamespace::RichPresenceSample::ScrollThroughDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::ScrollThroughDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollThroughDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.UpdateDestinationsConsole
void GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateDestinationsConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDestinationsConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.OnLoggedInUser
void GlobalNamespace::RichPresenceSample::OnLoggedInUser(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::OnLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.UpdateConsole
void GlobalNamespace::RichPresenceSample::UpdateConsole(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::UpdateConsole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConsole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RichPresenceSample.PressAButton
bool GlobalNamespace::RichPresenceSample::PressAButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressAButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressAButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressBButton
bool GlobalNamespace::RichPresenceSample::PressBButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressBButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressBButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressUp
bool GlobalNamespace::RichPresenceSample::PressUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.PressDown
bool GlobalNamespace::RichPresenceSample::PressDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::PressDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceSample.<Start>b__14_0
void GlobalNamespace::RichPresenceSample::$Start$b__14_0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PlatformInitialize*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<Start>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_0
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<SetPresence>b__15_1
void GlobalNamespace::RichPresenceSample::$SetPresence$b__15_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<SetPresence>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetPresence>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_0
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_0(::Oculus::Platform::Message* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: RichPresenceSample.<ClearPresence>b__16_1
void GlobalNamespace::RichPresenceSample::$ClearPresence$b__16_1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::User*>* message2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceSample::<ClearPresence>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearPresence>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BufferedAudioStream
#include "GlobalNamespace/BufferedAudioStream.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean VerboseLogging
bool GlobalNamespace::BufferedAudioStream::_get_VerboseLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_VerboseLogging");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BufferedAudioStream", "VerboseLogging"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean VerboseLogging
void GlobalNamespace::BufferedAudioStream::_set_VerboseLogging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_VerboseLogging");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "VerboseLogging", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single bufferLengthSeconds
float GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "bufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single bufferLengthSeconds
void GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 sampleRate
int GlobalNamespace::BufferedAudioStream::_get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_sampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "sampleRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 sampleRate
void GlobalNamespace::BufferedAudioStream::_set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_sampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "sampleRate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 bufferSize
int GlobalNamespace::BufferedAudioStream::_get_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_bufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BufferedAudioStream", "bufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 bufferSize
void GlobalNamespace::BufferedAudioStream::_set_bufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_bufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "bufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single playbackDelayTimeSeconds
float GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_get_playbackDelayTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BufferedAudioStream", "playbackDelayTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Single playbackDelayTimeSeconds
void GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::_set_playbackDelayTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BufferedAudioStream", "playbackDelayTimeSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audio
::UnityEngine::AudioSource*& GlobalNamespace::BufferedAudioStream::dyn_audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audio"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] audioBuffer
::ArrayW<float>& GlobalNamespace::BufferedAudioStream::dyn_audioBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_audioBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writePos
int& GlobalNamespace::BufferedAudioStream::dyn_writePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_writePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single playbackDelayRemaining
float& GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_playbackDelayRemaining");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackDelayRemaining"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single remainingBufferTime
float& GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::dyn_remainingBufferTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remainingBufferTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BufferedAudioStream.Update
void GlobalNamespace::BufferedAudioStream::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.Stop
void GlobalNamespace::BufferedAudioStream::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BufferedAudioStream.AddData
void GlobalNamespace::BufferedAudioStream::AddData(::ArrayW<float> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BufferedAudioStream::AddData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportOptions
#include "Oculus/Platform/AbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::AbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetPreventPeopleChooser
void Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.SetReportType
void Oculus::Platform::AbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AbuseReportOptions.Finalize
void Oculus::Platform::AbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x5A2294
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Unknown
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Unknown
void Oculus::Platform::AbuseReportType::_set_Unknown(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x5A22CC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType Object
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType Object
void Oculus::Platform::AbuseReportType::_set_Object(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "Object", value));
}
// [DescriptionAttribute] Offset: 0x5A2304
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportType User
::Oculus::Platform::AbuseReportType Oculus::Platform::AbuseReportType::_get_User() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_get_User");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportType>("Oculus.Platform", "AbuseReportType", "User"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportType User
void Oculus::Platform::AbuseReportType::_set_User(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::_set_User");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportType", "User", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::AbuseReportType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x5A233C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Unknown
void Oculus::Platform::AbuseReportVideoMode::_set_Unknown(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x5A2374
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Collect
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Collect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Collect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Collect"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Collect
void Oculus::Platform::AbuseReportVideoMode::_set_Collect(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Collect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Collect", value));
}
// [DescriptionAttribute] Offset: 0x5A23AC
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Optional
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Optional
void Oculus::Platform::AbuseReportVideoMode::_set_Optional(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Optional", value));
}
// [DescriptionAttribute] Offset: 0x5A23E4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AbuseReportVideoMode Skip
::Oculus::Platform::AbuseReportVideoMode Oculus::Platform::AbuseReportVideoMode::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AbuseReportVideoMode>("Oculus.Platform", "AbuseReportVideoMode", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AbuseReportVideoMode Skip
void Oculus::Platform::AbuseReportVideoMode::_set_Skip(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AbuseReportVideoMode", "Skip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::AbuseReportVideoMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AbuseReportVideoMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DescriptionAttribute] Offset: 0x5A241C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Unknown
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Unknown
void Oculus::Platform::AchievementType::_set_Unknown(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Unknown", value));
}
// [DescriptionAttribute] Offset: 0x5A2454
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Simple
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Simple
void Oculus::Platform::AchievementType::_set_Simple(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Simple", value));
}
// [DescriptionAttribute] Offset: 0x5A248C
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Bitfield
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Bitfield() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Bitfield");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Bitfield"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Bitfield
void Oculus::Platform::AchievementType::_set_Bitfield(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Bitfield");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Bitfield", value));
}
// [DescriptionAttribute] Offset: 0x5A24C4
// Autogenerated static field getter
// Get static field: static public Oculus.Platform.AchievementType Count
::Oculus::Platform::AchievementType Oculus::Platform::AchievementType::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Platform::AchievementType>("Oculus.Platform", "AchievementType", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Platform.AchievementType Count
void Oculus::Platform::AchievementType::_set_Count(::Oculus::Platform::AchievementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "AchievementType", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Platform::AchievementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AchievementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AdvancedAbuseReportOptions
#include "Oculus/Platform/AdvancedAbuseReportOptions.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetObjectType
void Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetReportType
void Oculus::Platform::AdvancedAbuseReportOptions::SetReportType(::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.SetVideoMode
void Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode(::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::AdvancedAbuseReportOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.AdvancedAbuseReportOptions.Finalize
void Oculus::Platform::AdvancedAbuseReportOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AdvancedAbuseReportOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.AndroidPlatform
#include "Oculus/Platform/AndroidPlatform.hpp"
// Including type: Oculus.Platform.Request`1
#include "Oculus/Platform/Request_1.hpp"
// Including type: Oculus.Platform.Models.PlatformInitialize
#include "Oculus/Platform/Models/PlatformInitialize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Platform.AndroidPlatform.Initialize
bool Oculus::Platform::AndroidPlatform::Initialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.AndroidPlatform.AsyncInitialize
::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>* Oculus::Platform::AndroidPlatform::AsyncInitialize(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::AndroidPlatform::AsyncInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Request_1<::Oculus::Platform::Models::PlatformInitialize*>*, false>(this, ___internal__method, appId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Platform.ApplicationOptions
#include "Oculus/Platform/ApplicationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr Handle
::System::IntPtr& Oculus::Platform::ApplicationOptions::dyn_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::dyn_Handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.SetDeeplinkMessage
void Oculus::Platform::ApplicationOptions::SetDeeplinkMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Platform.ApplicationOptions.op_Explicit
// ABORTED elsewhere.  Oculus::Platform::ApplicationOptions::operator ::System::IntPtr()
// Autogenerated method: Oculus.Platform.ApplicationOptions.Finalize
void Oculus::Platform::ApplicationOptions::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::ApplicationOptions::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Platform.CAPI
#include "Oculus/Platform/CAPI.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrNetSyncVec3
#include "Oculus/Platform/CAPI_ovrNetSyncVec3.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCriterion
#include "Oculus/Platform/CAPI_ovrMatchmakingCriterion.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.ovrMatchmakingCustomQueryData
#include "Oculus/Platform/CAPI_ovrMatchmakingCustomQueryData.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.OculusInitParams
#include "Oculus/Platform/CAPI_OculusInitParams.hpp"
// Including type: Oculus.Platform.CAPI/Oculus.Platform.FilterCallback
#include "Oculus/Platform/CAPI_FilterCallback.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Text.UTF8Encoding
#include "System/Text/UTF8Encoding.hpp"
// Including type: Oculus.Platform.LaunchResult
#include "Oculus/Platform/LaunchResult.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: Oculus.Platform.VoipMuteState
#include "Oculus/Platform/VoipMuteState.hpp"
// Including type: System.UIntPtr
#include "System/UIntPtr.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
// Including type: Oculus.Platform.SystemVoipStatus
#include "Oculus/Platform/SystemVoipStatus.hpp"
// Including type: Oculus.Platform.VoipDtxState
#include "Oculus/Platform/VoipDtxState.hpp"
// Including type: Oculus.Platform.VoipBitrate
#include "Oculus/Platform/VoipBitrate.hpp"
// Including type: Oculus.Platform.VoipSampleRate
#include "Oculus/Platform/VoipSampleRate.hpp"
// Including type: Oculus.Platform.LeaderboardFilterType
#include "Oculus/Platform/LeaderboardFilterType.hpp"
// Including type: Oculus.Platform.LeaderboardStartAt
#include "Oculus/Platform/LeaderboardStartAt.hpp"
// Including type: Oculus.Platform.LivestreamingAudience
#include "Oculus/Platform/LivestreamingAudience.hpp"
// Including type: Oculus.Platform.LivestreamingMicrophoneStatus
#include "Oculus/Platform/LivestreamingMicrophoneStatus.hpp"
// Including type: Oculus.Platform.MatchmakingStatApproach
#include "Oculus/Platform/MatchmakingStatApproach.hpp"
// Including type: Oculus.Platform.MediaContentType
#include "Oculus/Platform/MediaContentType.hpp"
// Including type: Oculus.Platform.NetSyncVoipMicSource
#include "Oculus/Platform/NetSyncVoipMicSource.hpp"
// Including type: Oculus.Platform.NetSyncVoipStreamMode
#include "Oculus/Platform/NetSyncVoipStreamMode.hpp"
// Including type: Oculus.Platform.RoomJoinPolicy
#include "Oculus/Platform/RoomJoinPolicy.hpp"
// Including type: Oculus.Platform.RoomMembershipLockStatus
#include "Oculus/Platform/RoomMembershipLockStatus.hpp"
// Including type: Oculus.Platform.AchievementType
#include "Oculus/Platform/AchievementType.hpp"
// Including type: Oculus.Platform.ChallengeCreationType
#include "Oculus/Platform/ChallengeCreationType.hpp"
// Including type: Oculus.Platform.ChallengeVisibility
#include "Oculus/Platform/ChallengeVisibility.hpp"
// Including type: Oculus.Platform.CloudStorageDataStatus
#include "Oculus/Platform/CloudStorageDataStatus.hpp"
// Including type: Oculus.Platform.CloudStorageUpdateStatus
#include "Oculus/Platform/CloudStorageUpdateStatus.hpp"
// Including type: Oculus.Platform.LaunchType
#include "Oculus/Platform/LaunchType.hpp"
// Including type: Oculus.Platform.ServiceProvider
#include "Oculus/Platform/ServiceProvider.hpp"
// Including type: Oculus.Platform.LivestreamingStartStatus
#include "Oculus/Platform/LivestreamingStartStatus.hpp"
// Including type: Oculus.Platform.NetSyncDisconnectReason
#include "Oculus/Platform/NetSyncDisconnectReason.hpp"
// Including type: Oculus.Platform.NetSyncConnectionStatus
#include "Oculus/Platform/NetSyncConnectionStatus.hpp"
// Including type: Oculus.Platform.PeerConnectionState
#include "Oculus/Platform/PeerConnectionState.hpp"
// Including type: Oculus.Platform.PartyUpdateAction
#include "Oculus/Platform/PartyUpdateAction.hpp"
// Including type: Oculus.Platform.PlatformInitializeResult
#include "Oculus/Platform/PlatformInitializeResult.hpp"
// Including type: Oculus.Platform.RoomJoinability
#include "Oculus/Platform/RoomJoinability.hpp"
// Including type: Oculus.Platform.RoomType
#include "Oculus/Platform/RoomType.hpp"
// Including type: Oculus.Platform.SdkAccountType
#include "Oculus/Platform/SdkAccountType.hpp"
// Including type: Oculus.Platform.ShareMediaStatus
#include "Oculus/Platform/ShareMediaStatus.hpp"
// Including type: Oculus.Platform.UserPresenceStatus
#include "Oculus/Platform/UserPresenceStatus.hpp"
// Including type: Oculus.Platform.AbuseReportType
#include "Oculus/Platform/AbuseReportType.hpp"
// Including type: Oculus.Platform.AbuseReportVideoMode
#include "Oculus/Platform/AbuseReportVideoMode.hpp"
// Including type: Oculus.Platform.ChallengeViewerFilter
#include "Oculus/Platform/ChallengeViewerFilter.hpp"
// Including type: Oculus.Platform.MultiplayerErrorErrorKey
#include "Oculus/Platform/MultiplayerErrorErrorKey.hpp"
// Including type: Oculus.Platform.RichPresenceExtraContext
#include "Oculus/Platform/RichPresenceExtraContext.hpp"
// Including type: Oculus.Platform.UserOrdering
#include "Oculus/Platform/UserOrdering.hpp"
// Including type: Oculus.Platform.TimeWindow
#include "Oculus/Platform/TimeWindow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DLL_NAME
::StringW Oculus::Platform::CAPI::_get_DLL_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_DLL_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Platform", "CAPI", "DLL_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String DLL_NAME
void Oculus::Platform::CAPI::_set_DLL_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_DLL_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "DLL_NAME", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.UTF8Encoding nativeStringEncoding
::System::Text::UTF8Encoding* Oculus::Platform::CAPI::_get_nativeStringEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_nativeStringEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UTF8Encoding*>("Oculus.Platform", "CAPI", "nativeStringEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UTF8Encoding nativeStringEncoding
void Oculus::Platform::CAPI::_set_nativeStringEncoding(::System::Text::UTF8Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_nativeStringEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "nativeStringEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 VoipFilterBufferSize
int Oculus::Platform::CAPI::_get_VoipFilterBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_get_VoipFilterBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Oculus.Platform", "CAPI", "VoipFilterBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 VoipFilterBufferSize
void Oculus::Platform::CAPI::_set_VoipFilterBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::_set_VoipFilterBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Platform", "CAPI", "VoipFilterBufferSize", value));
}
// Autogenerated method: Oculus.Platform.CAPI..cctor
void Oculus::Platform::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ArrayOfStructsToIntPtr
::System::IntPtr Oculus::Platform::CAPI::ArrayOfStructsToIntPtr(::System::Array* ar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ArrayOfStructsToIntPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ArrayOfStructsToIntPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ar);
}
// Autogenerated method: Oculus.Platform.CAPI.DictionaryToOVRKeyValuePairs
::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* dict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DictionaryToOVRKeyValuePairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DictionaryToOVRKeyValuePairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dict);
}
// Autogenerated method: Oculus.Platform.CAPI.IntPtrToByteArray
::ArrayW<uint8_t> Oculus::Platform::CAPI::IntPtrToByteArray(::System::IntPtr data, uint64_t size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::IntPtrToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "IntPtrToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, size);
}
// Autogenerated method: Oculus.Platform.CAPI.DataStoreFromNative
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Oculus::Platform::CAPI::DataStoreFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DataStoreFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DataStoreFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringFromNative
::StringW Oculus::Platform::CAPI::StringFromNative(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.GetNativeStringLengthNotIncludingNullTerminator
int Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator(::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::GetNativeStringLengthNotIncludingNullTerminator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "GetNativeStringLengthNotIncludingNullTerminator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeFromNative
::System::DateTime Oculus::Platform::CAPI::DateTimeFromNative(uint64_t seconds_since_the_one_true_epoch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seconds_since_the_one_true_epoch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seconds_since_the_one_true_epoch);
}
// Autogenerated method: Oculus.Platform.CAPI.DateTimeToNative
uint64_t Oculus::Platform::CAPI::DateTimeToNative(::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::DateTimeToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "DateTimeToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: Oculus.Platform.CAPI.BlobFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::BlobFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::BlobFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "BlobFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.FiledataFromNative
::ArrayW<uint8_t> Oculus::Platform::CAPI::FiledataFromNative(uint size, ::System::IntPtr pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::FiledataFromNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "FiledataFromNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(pointer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size, pointer);
}
// Autogenerated method: Oculus.Platform.CAPI.StringToNative
::System::IntPtr Oculus::Platform::CAPI::StringToNative(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::StringToNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "StringToNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapper
bool Oculus::Platform::CAPI::ovr_UnityInitWrapper(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitGlobals
void Oculus::Platform::CAPI::ovr_UnityInitGlobals(::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitGlobals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitGlobals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loggingCB)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous(::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperStandalone
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone(::StringW accessToken, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Platform_InitializeStandaloneOculus
uint64_t Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus(ByRef<::Oculus::Platform::CAPI::OculusInitParams> init) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Platform_InitializeStandaloneOculus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Platform_InitializeStandaloneOculus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(init)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(init));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitializeWithAccessToken
uint64_t Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken(uint64_t appId, ::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitializeWithAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitializeWithAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindows
bool Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityInitWrapperWindowsAsynchronous
uint64_t Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous(::StringW appId, ::System::IntPtr loggingCB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityInitWrapperWindowsAsynchronous");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityInitWrapperWindowsAsynchronous", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(loggingCB)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appId, loggingCB);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SetDeveloperAccessToken
bool Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken(::StringW accessToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SetDeveloperAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SetDeveloperAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessToken)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale
::StringW Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GetLoggedInUserLocale_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GetLoggedInUserLocale_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GetLoggedInUserLocale_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PopMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_PopMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PopMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PopMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_FreeMessage
void Oculus::Platform::CAPI::ovr_FreeMessage(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_FreeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_FreeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateEncoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyEncoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder(::System::IntPtr encoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_CreateDecoder
::System::IntPtr Oculus::Platform::CAPI::ovr_Voip_CreateDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_CreateDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_CreateDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_DestroyDecoder
void Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder(::System::IntPtr decoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_DestroyDecoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_DestroyDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decoder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, decoder);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, uint64_t compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_Microphone_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Destroy
void Oculus::Platform::CAPI::ovr_Microphone_Destroy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipPassthrough
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough(bool passthrough) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(passthrough)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, passthrough);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted(::Oculus::Platform::VoipMuteState muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(muted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UnityResetTestPlatform
void Oculus::Platform::CAPI::ovr_UnityResetTestPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UnityResetTestPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UnityResetTestPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetWithMessageType
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType(::StringW url, int messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetWithMessageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetWithMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(messageType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, messageType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CrashApplication
void Oculus::Platform::CAPI::ovr_CrashApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CrashApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CrashApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallback
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback(::Oculus::Platform::CAPI::FilterCallback* cb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(::Oculus::Platform::CAPI::FilterCallback* cb, ::System::UIntPtr bufferSizeElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(bufferSizeElements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cb, bufferSizeElements);
}
// Autogenerated method: Oculus.Platform.CAPI.LogNewEvent
void Oculus::Platform::CAPI::LogNewEvent(::StringW eventName, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::LogNewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "LogNewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Log_NewEvent
void Oculus::Platform::CAPI::ovr_Log_NewEvent(::System::IntPtr eventName, ::ArrayW<::System::IntPtr> values, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Log_NewEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Log_NewEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventName), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventName, values, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetLaunchDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult(::StringW trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_LogDeeplinkResult_Native
void Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native(::System::IntPtr trackingID, ::Oculus::Platform::LaunchResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_LogDeeplinkResult_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_LogDeeplinkResult_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trackingID), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trackingID, result);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer(::StringW url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_StartTransfer_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native(::System::IntPtr url, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> headers, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_StartTransfer_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_StartTransfer_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, headers, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Write
bool Oculus::Platform::CAPI::ovr_HTTP_Write(uint64_t transferId, ::ArrayW<uint8_t> bytes, ::System::UIntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId, bytes, length);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_WriteEOM
void Oculus::Platform::CAPI::ovr_HTTP_WriteEOM(uint64_t transferId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_WriteEOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_WriteEOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transferId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transferId);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript
::StringW Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetStringForJavascript_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native(::System::IntPtr message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetStringForJavascript_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetStringForJavascript_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM(int64_t connection_id, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetAmbisonicInterleavedInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM(int64_t connection_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetAmbisonicInterleavedInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetAmbisonicInterleavedInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetListenerPosition
bool Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition(int64_t connection_id, uint64_t sessionId, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamFloatPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM(int64_t connection_id, uint64_t sessionId, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamFloatPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamFloatPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetMonostreamInt16PCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM(int64_t connection_id, uint64_t session_id, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetMonostreamInt16PCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetMonostreamInt16PCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetPcmBufferMaxSamples
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetPcmBufferMaxSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetPcmBufferMaxSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAmplitude
bool Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude(int64_t connection_id, uint64_t sessionId, ByRef<float> amplitude) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAmplitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAmplitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(amplitude)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, byref(amplitude));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetListenerPosition
void Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition(int64_t connection_id, ByRef<::Oculus::Platform::CAPI::ovrNetSyncVec3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetListenerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetListenerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, byref(position));
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Accept
void Oculus::Platform::CAPI::ovr_Net_Accept(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_AcceptForCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_AcceptForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_AcceptForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Close
void Oculus::Platform::CAPI::ovr_Net_Close(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_CloseForCurrentRoom
void Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_CloseForCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_CloseForCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Connect
void Oculus::Platform::CAPI::ovr_Net_Connect(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_IsConnected
bool Oculus::Platform::CAPI::ovr_Net_IsConnected(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_Ping
uint64_t Oculus::Platform::CAPI::ovr_Net_Ping(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_ReadPacket
::System::IntPtr Oculus::Platform::CAPI::ovr_Net_ReadPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_ReadPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_ReadPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacket
bool Oculus::Platform::CAPI::ovr_Net_SendPacket(uint64_t userID, ::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Net_SendPacketToCurrentRoom
bool Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom(::System::UIntPtr length, ::ArrayW<uint8_t> bytes, ::Oculus::Platform::SendPolicy policy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Net_SendPacketToCurrentRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Net_SendPacketToCurrentRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(policy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, bytes, policy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetSharedMemHandle
int Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetSharedMemHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetSharedMemHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipPassthrough
bool Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipPassthrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipPassthrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_PluginGetVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_PluginGetVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_PluginGetVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Accept
void Oculus::Platform::CAPI::ovr_Voip_Accept(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetIsConnectionUsingDtx
::Oculus::Platform::VoipDtxState Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetIsConnectionUsingDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetIsConnectionUsingDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipDtxState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetLocalBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetLocalBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetLocalBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCM(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMSize(uint64_t senderID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestamp
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp(uint64_t senderID, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetPCMWithTimestampFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat(uint64_t senderID, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements, ::ArrayW<uint> timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetPCMWithTimestampFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetPCMWithTimestampFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderID), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, senderID, outputBuffer, outputBufferNumElements, timestamp);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetRemoteBitrate
::Oculus::Platform::VoipBitrate Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate(uint64_t peerID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetRemoteBitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetRemoteBitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peerID)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipBitrate, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, peerID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestamp
uint Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSyncTimestampDifference
int64_t Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSyncTimestampDifference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSyncTimestampDifference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetSystemVoipStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetSystemVoipStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetSystemVoipStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetMicrophoneMuted
void Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted(::Oculus::Platform::VoipMuteState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetNewConnectionOptions
void Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions(::System::IntPtr voipOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetNewConnectionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetNewConnectionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voipOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, voipOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetOutputSampleRate
void Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate(::Oculus::Platform::VoipSampleRate rate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetOutputSampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetOutputSampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Start
void Oculus::Platform::CAPI::ovr_Voip_Start(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_Stop
void Oculus::Platform::CAPI::ovr_Voip_Stop(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReport_LaunchAdvancedReportFlow
uint64_t Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow(uint64_t content_id, ::System::IntPtr abuse_report_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReport_LaunchAdvancedReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReport_LaunchAdvancedReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content_id), ::il2cpp_utils::ExtractType(abuse_report_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, content_id, abuse_report_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount(::StringW name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddCount_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native(::System::IntPtr name, uint64_t count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddCount_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddCount_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields(::StringW name, ::StringW fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_AddFields_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native(::System::IntPtr name, ::System::IntPtr fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_AddFields_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_AddFields_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, fields);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllDefinitions
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllDefinitions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllDefinitions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetAllProgress
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetAllProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetAllProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetDefinitionsByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetDefinitionsByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetDefinitionsByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_GetProgressByName
uint64_t Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName(::ArrayW<::StringW> names, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_GetProgressByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_GetProgressByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, names, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Achievements_Unlock_Native
uint64_t Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native(::System::IntPtr name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Achievements_Unlock_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Achievements_Unlock_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_ExecuteCoordinatedLaunch
uint64_t Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch(uint64_t appID, uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_ExecuteCoordinatedLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_ExecuteCoordinatedLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetInstalledApplications
uint64_t Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetInstalledApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetInstalledApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetVersion
uint64_t Oculus::Platform::CAPI::ovr_Application_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_LaunchOtherApp
uint64_t Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp(uint64_t appID, ::System::IntPtr deeplink_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_LaunchOtherApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_LaunchOtherApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID), ::il2cpp_utils::ExtractType(deeplink_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID, deeplink_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetRegisteredPIDs
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetRegisteredPIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetRegisteredPIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_GetSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_GetSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_GetSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey(::StringW sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationLifecycle_RegisterSessionKey_Native
uint64_t Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native(::System::IntPtr sessionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationLifecycle_RegisterSessionKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationLifecycle_RegisterSessionKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sessionKey);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Delete
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Delete(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DeleteByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DeleteByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DeleteByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Download
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Download(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Download");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Download", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancel
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_DownloadCancelByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_DownloadCancelByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_DownloadCancelByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_GetList
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_GetList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_Status
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_Status(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusById
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusById(uint64_t assetFileID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName(::StringW assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFile_StatusByName_Native
uint64_t Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native(::System::IntPtr assetFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFile_StatusByName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFile_StatusByName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetFileName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetFileName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData(::StringW avatarMetaData, ::StringW imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Avatar_UpdateMetaData_Native
uint64_t Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native(::System::IntPtr avatarMetaData, ::System::IntPtr imageFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Avatar_UpdateMetaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Avatar_UpdateMetaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarMetaData), ::il2cpp_utils::ExtractType(imageFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarMetaData, imageFilePath);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_FinalizeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t finalized_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_FinalizeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_FinalizeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(finalized_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, finalized_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_GetSuggestedApplications
uint64_t Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_GetSuggestedApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_GetSuggestedApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Cal_ProposeApplication
uint64_t Oculus::Platform::CAPI::ovr_Cal_ProposeApplication(uint64_t groupingObject, ::ArrayW<uint64_t> userIDs, int numUserIDs, uint64_t proposed_application_ID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Cal_ProposeApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Cal_ProposeApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupingObject), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(numUserIDs), ::il2cpp_utils::ExtractType(proposed_application_ID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupingObject, userIDs, numUserIDs, proposed_application_ID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create(::StringW leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Create_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Create_Native(::System::IntPtr leaderboardName, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Create_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Create_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_DeclineInvite
uint64_t Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_DeclineInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_DeclineInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Delete
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Delete(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Get
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Get(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntries(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank(uint64_t challengeID, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds(uint64_t challengeID, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetList
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetList(::System::IntPtr challengeOptions, int limit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeOptions), ::il2cpp_utils::ExtractType(limit)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeOptions, limit);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousChallenges
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Join
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Join(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_Leave
uint64_t Oculus::Platform::CAPI::ovr_Challenges_Leave(uint64_t challengeID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenges_UpdateInfo
uint64_t Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo(uint64_t challengeID, ::System::IntPtr challengeOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenges_UpdateInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenges_UpdateInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challengeID), ::il2cpp_utils::ExtractType(challengeOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challengeID, challengeOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Delete_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Delete_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Delete_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Load_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Load_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Load_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata(::StringW bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadBucketMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native(::System::IntPtr bucket) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadBucketMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadBucketMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadConflictMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadConflictMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadConflictMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle(::StringW handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadHandle_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata(::StringW bucket, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_LoadMetadata_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native(::System::IntPtr bucket, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_LoadMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_LoadMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepLocal_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepLocal_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepLocal_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote(::StringW bucket, ::StringW key, ::StringW remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_ResolveKeepRemote_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native(::System::IntPtr bucket, ::System::IntPtr key, ::System::IntPtr remoteHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_ResolveKeepRemote_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_ResolveKeepRemote_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(remoteHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, remoteHandle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save(::StringW bucket, ::StringW key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::StringW extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage_Save_Native
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native(::System::IntPtr bucket, ::System::IntPtr key, ::ArrayW<uint8_t> data, uint dataSize, int64_t counter, ::System::IntPtr extraData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage_Save_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage_Save_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dataSize), ::il2cpp_utils::ExtractType(counter), ::il2cpp_utils::ExtractType(extraData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bucket, key, data, dataSize, counter, extraData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2_GetUserDirectoryPath
uint64_t Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2_GetUserDirectoryPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2_GetUserDirectoryPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_GetCurrentMapUuid
uint64_t Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_GetCurrentMapUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_GetCurrentMapUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_RequestMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_RequestMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_RequestMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap(::StringW uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Colocation_ShareMap_Native
uint64_t Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native(::System::IntPtr uuid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Colocation_ShareMap_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Colocation_ShareMap_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uuid)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uuid);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Entitlement_GetIsViewerEntitled
uint64_t Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Entitlement_GetIsViewerEntitled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Entitlement_GetIsViewerEntitled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GraphAPI_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GraphAPI_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GraphAPI_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_GetSentInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_GetSentInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_GetSentInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchInvitePanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchMultiplayerErrorDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchMultiplayerErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchMultiplayerErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog(::StringW lobby_session_id, ::StringW match_session_id, ::StringW destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRejoinDialog_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native(::System::IntPtr lobby_session_id, ::System::IntPtr match_session_id, ::System::IntPtr destination_api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRejoinDialog_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRejoinDialog_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobby_session_id), ::il2cpp_utils::ExtractType(match_session_id), ::il2cpp_utils::ExtractType(destination_api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lobby_session_id, match_session_id, destination_api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_LaunchRosterPanel
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel(::System::IntPtr options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_LaunchRosterPanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_LaunchRosterPanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SendInvites
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites(::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SendInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SendInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_Set(::System::IntPtr groupPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Get_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile(::StringW url, ::StringW diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_GetToFile_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native(::System::IntPtr url, ::System::IntPtr diskFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_GetToFile_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_GetToFile_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(diskFile)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, diskFile);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost(::StringW url, ::StringW filepath_param_name, ::StringW filepath, ::StringW access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_MultiPartPost_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native(::System::IntPtr url, ::System::IntPtr filepath_param_name, ::System::IntPtr filepath, ::System::IntPtr access_token, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> post_params, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_MultiPartPost_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_MultiPartPost_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(filepath_param_name), ::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(access_token), ::il2cpp_utils::ExtractType(post_params), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, filepath_param_name, filepath, access_token, post_params, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HTTP_Post_Native
uint64_t Oculus::Platform::CAPI::ovr_HTTP_Post_Native(::System::IntPtr url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HTTP_Post_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HTTP_Post_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_ConsumePurchase_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_ConsumePurchase_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_ConsumePurchase_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetProductsBySKU
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU(::ArrayW<::StringW> skus, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetProductsBySKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetProductsBySKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skus), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skus, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchases
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_GetViewerPurchasesDurableCache
uint64_t Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_GetViewerPurchasesDurableCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_GetViewerPurchasesDurableCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_IAP_LaunchCheckoutFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native(::System::IntPtr sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_IAP_LaunchCheckoutFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_IAP_LaunchCheckoutFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sku);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePack_SetCurrent_Native
uint64_t Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native(::System::IntPtr tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePack_SetCurrent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePack_SetCurrent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get(::StringW leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_Get_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native(::System::IntPtr leaderboardName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntries_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardFilterType filter, ::Oculus::Platform::LeaderboardStartAt startAt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntries_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntries_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(startAt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, filter, startAt);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank(::StringW leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesAfterRank_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native(::System::IntPtr leaderboardName, int limit, uint64_t afterRank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesAfterRank_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesAfterRank_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(afterRank)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, afterRank);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds(::StringW leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetEntriesByIds_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native(::System::IntPtr leaderboardName, int limit, ::Oculus::Platform::LeaderboardStartAt startAt, ::ArrayW<uint64_t> userIDs, uint userIDLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetEntriesByIds_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetEntriesByIds_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(limit), ::il2cpp_utils::ExtractType(startAt), ::il2cpp_utils::ExtractType(userIDs), ::il2cpp_utils::ExtractType(userIDLength)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, limit, startAt, userIDs, userIDLength);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetNextEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetNextEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetNextEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetPreviousEntries
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetPreviousEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetPreviousEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry(::StringW leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native(::System::IntPtr leaderboardName, int64_t score, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric(::StringW leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native(::System::IntPtr leaderboardName, int64_t score, int64_t supplementaryMetric, ::ArrayW<uint8_t> extraData, uint extraDataLength, bool forceUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_WriteEntryWithSupplementaryMetric_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardName), ::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(supplementaryMetric), ::il2cpp_utils::ExtractType(extraData), ::il2cpp_utils::ExtractType(extraDataLength), ::il2cpp_utils::ExtractType(forceUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leaderboardName, score, supplementaryMetric, extraData, extraDataLength, forceUpdate);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication(::StringW packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_IsAllowedForApplication_Native
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native(::System::IntPtr packageName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_IsAllowedForApplication_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_IsAllowedForApplication_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packageName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packageName);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StartStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StartStream(::Oculus::Platform::LivestreamingAudience audience, ::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StartStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StartStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audience), ::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audience, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopPartyStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopPartyStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopPartyStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_StopStream
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_StopStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_StopStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_StopStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Livestreaming_UpdateMicStatus
uint64_t Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus(::Oculus::Platform::LivestreamingMicrophoneStatus micStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Livestreaming_UpdateMicStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Livestreaming_UpdateMicStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, micStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Browse2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Browse2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Browse2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel(::StringW pool, ::StringW requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native(::System::IntPtr pool, ::System::IntPtr requestHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(requestHash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, requestHash);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Cancel2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Cancel2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Cancel2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateAndEnqueueRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateAndEnqueueRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateAndEnqueueRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom(::StringW pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native(::System::IntPtr pool, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_CreateRoom2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_CreateRoom2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_CreateRoom2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue(::StringW pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native(::System::IntPtr pool, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2(::StringW pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_Enqueue2_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native(::System::IntPtr pool, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_Enqueue2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_Enqueue2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom(uint64_t roomID, ::System::IntPtr customQueryData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(customQueryData)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, customQueryData);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_EnqueueRoom2
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2(uint64_t roomID, ::System::IntPtr matchmakingOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_EnqueueRoom2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_EnqueueRoom2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(matchmakingOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, matchmakingOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetAdminSnapshot
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats(::StringW pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_GetStats_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native(::System::IntPtr pool, uint maxLevel, ::Oculus::Platform::MatchmakingStatApproach approach) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_GetStats_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_GetStats_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool), ::il2cpp_utils::ExtractType(maxLevel), ::il2cpp_utils::ExtractType(approach)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pool, maxLevel, approach);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_JoinRoom
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_JoinRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_JoinRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_ReportResultInsecure_Native
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_ReportResultInsecure_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_ReportResultInsecure_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Matchmaking_StartMatch
uint64_t Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Matchmaking_StartMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Matchmaking_StartMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook(::StringW postTextSuggestion, ::StringW filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Media_ShareToFacebook_Native
uint64_t Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native(::System::IntPtr postTextSuggestion, ::System::IntPtr filePath, ::Oculus::Platform::MediaContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Media_ShareToFacebook_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Media_ShareToFacebook_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(postTextSuggestion), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(contentType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, postTextSuggestion, filePath, contentType);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Connect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Connect(::System::IntPtr connect_options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connect_options)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connect_options);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_Disconnect
uint64_t Oculus::Platform::CAPI::ovr_NetSync_Disconnect(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetSessions
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetSessions(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation(int64_t connection_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_GetVoipAttenuationDefault
uint64_t Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_GetVoipAttenuationDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_GetVoipAttenuationDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuation
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation(int64_t connection_id, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel(int64_t connection_id, ::StringW name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipAttenuationModel_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native(int64_t connection_id, ::System::IntPtr name, ::ArrayW<float> distances, ::ArrayW<float> decibels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipAttenuationModel_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipAttenuationModel_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(distances), ::il2cpp_utils::ExtractType(decibels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, name, distances, decibels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg(int64_t connection_id, ::StringW channel_name, ::StringW attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipChannelCfg_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native(int64_t connection_id, ::System::IntPtr channel_name, ::System::IntPtr attnmodel, bool disable_spatialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipChannelCfg_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipChannelCfg_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(channel_name), ::il2cpp_utils::ExtractType(attnmodel), ::il2cpp_utils::ExtractType(disable_spatialization)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, channel_name, attnmodel, disable_spatialization);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup(int64_t connection_id, ::StringW group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipGroup_Native
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native(int64_t connection_id, ::System::IntPtr group_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(group_id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, group_id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipListentoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels(int64_t connection_id, ::ArrayW<::StringW> listento_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipListentoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipListentoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(listento_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, listento_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipMicSource
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource(int64_t connection_id, ::Oculus::Platform::NetSyncVoipMicSource mic_source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipMicSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipMicSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(mic_source)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, mic_source);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSessionMuted
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted(int64_t connection_id, uint64_t session_id, bool muted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSessionMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSessionMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(session_id), ::il2cpp_utils::ExtractType(muted)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, session_id, muted);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipSpeaktoChannels
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels(int64_t connection_id, ::ArrayW<::StringW> speakto_channels, ::System::UIntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipSpeaktoChannels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipSpeaktoChannels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(speakto_channels), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, speakto_channels, count);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSync_SetVoipStreamMode
uint64_t Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode(int64_t connection_id, uint64_t sessionId, ::Oculus::Platform::NetSyncVoipStreamMode streamMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSync_SetVoipStreamMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSync_SetVoipStreamMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection_id), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(streamMode)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connection_id, sessionId, streamMode);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_GetRoomInvites
uint64_t Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_GetRoomInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_GetRoomInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Notification_MarkAsRead
uint64_t Oculus::Platform::CAPI::ovr_Notification_MarkAsRead(uint64_t notificationID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Notification_MarkAsRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Notification_MarkAsRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, notificationID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Create
uint64_t Oculus::Platform::CAPI::ovr_Party_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GatherInApplication
uint64_t Oculus::Platform::CAPI::ovr_Party_GatherInApplication(uint64_t partyID, uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GatherInApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GatherInApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Get
uint64_t Oculus::Platform::CAPI::ovr_Party_Get(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Invite
uint64_t Oculus::Platform::CAPI::ovr_Party_Invite(uint64_t partyID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Invite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Join
uint64_t Oculus::Platform::CAPI::ovr_Party_Join(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_Leave
uint64_t Oculus::Platform::CAPI::ovr_Party_Leave(uint64_t partyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partyID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, partyID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Clear
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_GetDestinations
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_GetDestinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_GetDestinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_Set
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_Set(::System::IntPtr richPresenceOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, richPresenceOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination(::StringW api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetDestination_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native(::System::IntPtr api_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetDestination_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetDestination_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(api_name)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, api_name);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetIsJoinable
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable(bool is_joinable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(is_joinable)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, is_joinable);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetLobbySession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetLobbySession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetLobbySession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresence_SetMatchSession_Native
uint64_t Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native(::System::IntPtr id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresence_SetMatchSession_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresence_SetMatchSession_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, id);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_CreateAndJoinPrivate2
uint64_t Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2(::Oculus::Platform::RoomJoinPolicy joinPolicy, uint maxUsers, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_CreateAndJoinPrivate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_CreateAndJoinPrivate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinPolicy), ::il2cpp_utils::ExtractType(maxUsers), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, joinPolicy, maxUsers, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Get
uint64_t Oculus::Platform::CAPI::ovr_Room_Get(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrent
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetCurrentForUser
uint64_t Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetCurrentForUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetCurrentForUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitableUsers2
uint64_t Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2(::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitableUsers2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitableUsers2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetModeratedRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetModeratedRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetModeratedRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetSocialRooms
uint64_t Oculus::Platform::CAPI::ovr_Room_GetSocialRooms(uint64_t appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetSocialRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetSocialRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser(uint64_t roomID, ::StringW inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_InviteUser_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_InviteUser_Native(uint64_t roomID, ::System::IntPtr inviteToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_InviteUser_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_InviteUser_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(inviteToken)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, inviteToken);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join
uint64_t Oculus::Platform::CAPI::ovr_Room_Join(uint64_t roomID, bool subscribeToUpdates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(subscribeToUpdates)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, subscribeToUpdates);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Join2
uint64_t Oculus::Platform::CAPI::ovr_Room_Join2(uint64_t roomID, ::System::IntPtr roomOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Join2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Join2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(roomOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, roomOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_KickUser
uint64_t Oculus::Platform::CAPI::ovr_Room_KickUser(uint64_t roomID, uint64_t userID, int kickDurationSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_KickUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_KickUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(kickDurationSeconds)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID, kickDurationSeconds);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_LaunchInvitableUserFlow
uint64_t Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_LaunchInvitableUserFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_LaunchInvitableUserFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_Leave
uint64_t Oculus::Platform::CAPI::ovr_Room_Leave(uint64_t roomID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_Leave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription(uint64_t roomID, ::StringW description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_SetDescription_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_SetDescription_Native(uint64_t roomID, ::System::IntPtr description) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(description)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, description);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateDataStore_Native
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native(uint64_t roomID, ::ArrayW<::Oculus::Platform::CAPI::ovrKeyValuePair> data, ::System::UIntPtr numItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateDataStore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateDataStore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numItems)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, data, numItems);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateMembershipLockStatus
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus(uint64_t roomID, ::Oculus::Platform::RoomMembershipLockStatus membershipLockStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateMembershipLockStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateMembershipLockStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(membershipLockStatus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, membershipLockStatus);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdateOwner
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdateOwner(uint64_t roomID, uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdateOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdateOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_UpdatePrivateRoomJoinPolicy
uint64_t Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy(uint64_t roomID, ::Oculus::Platform::RoomJoinPolicy newJoinPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_UpdatePrivateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_UpdatePrivateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomID), ::il2cpp_utils::ExtractType(newJoinPolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomID, newJoinPolicy);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow(::StringW recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_CancelRecordingForReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native(::System::IntPtr recordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_CancelRecordingForReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_CancelRecordingForReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_Get
uint64_t Oculus::Platform::CAPI::ovr_User_Get(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetAccessToken
uint64_t Oculus::Platform::CAPI::ovr_User_GetAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLinkedAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLinkedAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLinkedAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUser
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserFriendsAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserFriendsAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserFriendsAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms
uint64_t Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(::System::IntPtr userOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOrgScopedID
uint64_t Oculus::Platform::CAPI::ovr_User_GetOrgScopedID(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSdkAccounts
uint64_t Oculus::Platform::CAPI::ovr_User_GetSdkAccounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSdkAccounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSdkAccounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetUserProof
uint64_t Oculus::Platform::CAPI::ovr_User_GetUserProof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchBlockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchBlockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchBlockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchFriendRequestFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchFriendRequestFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchFriendRequestFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2(uint64_t optionalUserID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_LaunchUnblockFlow
uint64_t Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_LaunchUnblockFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_LaunchUnblockFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewEntitledTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewEntitledTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewEntitledTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUser
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_NewTestUserFriends
uint64_t Oculus::Platform::CAPI::ovr_User_NewTestUserFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_NewTestUserFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_NewTestUserFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StartRecordingForReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StartRecordingForReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StartRecordingForReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow(uint64_t optionalUserID, ::StringW optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2(uint64_t optionalUserID, ::StringW optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_StopRecordingAndLaunchReportFlow2_Native
uint64_t Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native(uint64_t optionalUserID, ::System::IntPtr optionalRecordingUUID, ::System::IntPtr abuseReportOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_StopRecordingAndLaunchReportFlow2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_StopRecordingAndLaunchReportFlow2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionalUserID), ::il2cpp_utils::ExtractType(optionalRecordingUUID), ::il2cpp_utils::ExtractType(abuseReportOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, optionalUserID, optionalRecordingUUID, abuseReportOptions);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest(::StringW deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_TestUserCreateDeviceManifest_Native
uint64_t Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native(::System::IntPtr deviceID, ::ArrayW<uint64_t> appIDs, int numAppIDs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_TestUserCreateDeviceManifest_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_TestUserCreateDeviceManifest_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceID), ::il2cpp_utils::ExtractType(appIDs), ::il2cpp_utils::ExtractType(numAppIDs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceID, appIDs, numAppIDs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PrivateWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PrivateWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PrivateWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicDeleteEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicDeleteEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicDeleteEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntries
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey(uint64_t userID, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicGetEntryByKey_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native(uint64_t userID, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicGetEntryByKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicGetEntryByKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry(uint64_t userID, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStore_PublicWriteEntry_Native
uint64_t Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native(uint64_t userID, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStore_PublicWriteEntry_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStore_PublicWriteEntry_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_GetMicrophoneAvailability
uint64_t Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_GetMicrophoneAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_GetMicrophoneAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Voip_SetSystemVoipSuppressed
uint64_t Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed(bool suppressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Voip_SetSystemVoipSuppressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Voip_SetSystemVoipSuppressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suppressed)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, suppressed);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid
::StringW Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportRecording_GetRecordingUuid_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportRecording_GetRecordingUuid_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportRecording_GetRecordingUuid_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetBitfieldLength
uint Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetBitfieldLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetBitfieldLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetTarget
uint64_t Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinition_GetType
::Oculus::Platform::AchievementType Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinition_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinition_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::AchievementType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementDefinitionArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementDefinitionArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementDefinitionArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetBitfield_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetBitfield_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetBitfield_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetCount
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetIsUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetIsUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetIsUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementProgress_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime
::System::DateTime Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgress_GetUnlockTime_Native
uint64_t Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgress_GetUnlockTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgress_GetUnlockTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementProgressArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementProgressArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementProgressArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetJustUnlocked
bool Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetJustUnlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetJustUnlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName
::StringW Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AchievementUpdate_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AchievementUpdate_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AchievementUpdate_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Application_GetID
uint64_t Oculus::Platform::CAPI::ovr_Application_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Application_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Application_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetID
uint64_t Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetIsActive
bool Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInvite_GetRecipient
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInvite_GetRecipient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInvite_GetRecipient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationInviteArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationInviteArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationInviteArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetCurrentName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetCurrentName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetCurrentName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestCode
int Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName
::StringW Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationVersion_GetLatestName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationVersion_GetLatestName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationVersion_GetLatestName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetAssetType_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetAssetType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetAssetType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetDownloadStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetDownloadStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetDownloadStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetIapStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetIapStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetIapStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetLanguage
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata
::StringW Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetails_GetMetadata_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetails_GetMetadata_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetails_GetMetadata_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetDetailsArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetDetailsArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetDetailsArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDeleteResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDeleteResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDeleteResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadCancelResult_GetSuccess
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadCancelResult_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadCancelResult_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath
::StringW Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadResult_GetFilepath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadResult_GetFilepath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadResult_GetFilepath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetFileId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetFileId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetFileId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetAssetId
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetAssetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetAssetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotal
uint Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTotalLong
uint64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTotalLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTotalLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferred
int Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetBytesTransferredLong
int64_t Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetBytesTransferredLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetBytesTransferredLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AssetFileDownloadUpdate_GetCompleted
bool Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AssetFileDownloadUpdate_GetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AssetFileDownloadUpdate_GetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetCountdownMS
int Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetCountdownMS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetCountdownMS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails
::StringW Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationFinalized_GetLaunchDetails_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationFinalized_GetLaunchDetails_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationFinalized_GetLaunchDetails_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationProposed_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationProposed_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationProposed_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetID
uint64_t Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext
::StringW Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestion_GetSocialContext_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestion_GetSocialContext_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestion_GetSocialContext_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CalApplicationSuggestionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CalApplicationSuggestionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CalApplicationSuggestionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetCreationType
::Oculus::Platform::ChallengeCreationType Oculus::Platform::CAPI::ovr_Challenge_GetCreationType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetCreationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetCreationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeCreationType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetEndDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetEndDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetID
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetLeaderboard
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetParticipants
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetParticipants(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetParticipants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetParticipants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate
::System::DateTime Oculus::Platform::CAPI::ovr_Challenge_GetStartDate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetStartDate_Native
uint64_t Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle
::StringW Oculus::Platform::CAPI::ovr_Challenge_GetTitle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetTitle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Challenge_GetVisibility
::Oculus::Platform::ChallengeVisibility Oculus::Platform::CAPI::ovr_Challenge_GetVisibility(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Challenge_GetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Challenge_GetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ChallengeVisibility, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetRank
int Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath
::StringW Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetLocal
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageConflictMetadata_GetRemote
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageConflictMetadata_GetRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageConflictMetadata_GetRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_CloudStorageData_GetData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageData_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageData_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageData_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetCounter
int64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetCounter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetCounter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetDataSize
uint Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetSaveTime
uint64_t Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetSaveTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetSaveTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetStatus
::Oculus::Platform::CloudStorageDataStatus Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageDataStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadata_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadata_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadata_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageMetadataArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageMetadataArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageMetadataArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetBucket_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetBucket_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetBucket_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetStatus
::Oculus::Platform::CloudStorageUpdateStatus Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::CloudStorageUpdateStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle
::StringW Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_CloudStorageUpdateResponse_GetVersionHandle_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_CloudStorageUpdateResponse_GetVersionHandle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_CloudStorageUpdateResponse_GetVersionHandle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains
uint Oculus::Platform::CAPI::ovr_DataStore_Contains(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_Contains_Native
uint Oculus::Platform::CAPI::ovr_DataStore_Contains_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_Contains_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_Contains_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetKey(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetKey_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native(::System::IntPtr obj, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetNumKeys
::System::UIntPtr Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetNumKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetNumKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue
::StringW Oculus::Platform::CAPI::ovr_DataStore_GetValue(::System::IntPtr obj, ::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DataStore_GetValue_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native(::System::IntPtr obj, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DataStore_GetValue_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DataStore_GetValue_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, key);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_Destination_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Destination_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Destination_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Destination_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_DestinationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_DestinationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_DestinationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_DestinationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetCode
int Oculus::Platform::CAPI::ovr_Error_GetCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetDisplayableMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetDisplayableMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetDisplayableMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetHttpCode
int Oculus::Platform::CAPI::ovr_Error_GetHttpCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetHttpCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetHttpCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage
::StringW Oculus::Platform::CAPI::ovr_Error_GetMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Error_GetMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Error_GetMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Error_GetMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Error_GetMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceJoinIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceLeaveIntent_GetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetID
uint64_t Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_HttpTransferUpdate_IsCompleted
bool Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_HttpTransferUpdate_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_HttpTransferUpdate_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetApplicationId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetApplicationId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetApplicationId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetPackageName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetPackageName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetPackageName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetStatus_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetStatus_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetStatus_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionCode
int Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName
::StringW Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplication_GetVersionName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplication_GetVersionName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplication_GetVersionName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InstalledApplicationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InstalledApplicationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InstalledApplicationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InvitePanelResultInfo_GetInvitesSent
bool Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InvitePanelResultInfo_GetInvitesSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InvitePanelResultInfo_GetInvitesSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetEnglishName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetEnglishName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetEnglishName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetNativeName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetNativeName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetNativeName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag
::StringW Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LanguagePackInfo_GetTag_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LanguagePackInfo_GetTag_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LanguagePackInfo_GetTag_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidBlock
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchBlockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchBlockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchBlockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchSource_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchSource_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchSource_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetLaunchType
::Oculus::Platform::LaunchType Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetLaunchType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetLaunchType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LaunchType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID
::StringW Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetTrackingID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetTrackingID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetTrackingID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchDetails_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchDetails_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchDetails_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchFriendRequestFlowResult_GetDidSendRequest
bool Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchFriendRequestFlowResult_GetDidSendRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchFriendRequestFlowResult_GetDidSendRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchInvitePanelFlowResult_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchInvitePanelFlowResult_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchInvitePanelFlowResult_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchReportFlowResult_GetUserReportId
uint64_t Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchReportFlowResult_GetUserReportId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchReportFlowResult_GetUserReportId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidCancel
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LaunchUnblockFlowResult_GetDidUnblock
bool Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LaunchUnblockFlowResult_GetDidUnblock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LaunchUnblockFlowResult_GetDidUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName
::StringW Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetDestination
::System::IntPtr Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Leaderboard_GetID
uint64_t Oculus::Platform::CAPI::ovr_Leaderboard_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Leaderboard_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Leaderboard_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetDisplayScore_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetDisplayScore_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetDisplayScore_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData
::ArrayW<uint8_t> Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraData_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetExtraDataLength
uint Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetExtraDataLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetExtraDataLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetID
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetRank
int Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetScore
int64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetSupplementaryMetric
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetSupplementaryMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetSupplementaryMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp
::System::DateTime Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetTimestamp_Native
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntry_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntry_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntry_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl
::StringW Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetPreviousUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetPreviousUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetPreviousUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_GetTotalCount
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_GetTotalCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_GetTotalCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardEntryArray_HasPreviousPage
bool Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardEntryArray_HasPreviousPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardEntryArray_HasPreviousPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetDidUpdate
bool Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId
uint64_t Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize
uint Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LeaderboardUpdateStatus_GetUpdatedChallengeIdsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetServiceProvider
::Oculus::Platform::ServiceProvider Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ServiceProvider, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId
::StringW Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccount_GetUserId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccount_GetUserId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccount_GetUserId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LinkedAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LinkedAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LinkedAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingApplicationStatus_GetStreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingApplicationStatus_GetStreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingApplicationStatus_GetStreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStartResult_GetStreamingResult
::Oculus::Platform::LivestreamingStartStatus Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStartResult_GetStreamingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStartResult_GetStreamingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::LivestreamingStartStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetCommentsVisible
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetCommentsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetCommentsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetIsPaused
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetIsPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetIsPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetLivestreamingType
int Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetLivestreamingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetLivestreamingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingStatus_GetMicEnabled
bool Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingStatus_GetMicEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingStatus_GetMicEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetCommentCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetCommentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetCommentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetReactionCount
int Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetReactionCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetReactionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews
::StringW Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_LivestreamingVideoStats_GetTotalViews_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_LivestreamingVideoStats_GetTotalViews_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_LivestreamingVideoStats_GetTotalViews_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetCandidates
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetCandidates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetCandidates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch
bool Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore
double Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingAdminSnapshotCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingAdminSnapshotCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingAdminSnapshotCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingBrowseResult_GetRooms
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingBrowseResult_GetRooms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingBrowseResult_GetRooms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetEntryHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetEntryHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetEntryHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidate_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidate_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidate_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingCandidateArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingCandidateArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingCandidateArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetAverageWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetAverageWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetAverageWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetMaxExpectedWait
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetMaxExpectedWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetMaxExpectedWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetPool_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetPool_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetPool_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash
::StringW Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResult_GetRequestHash_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResult_GetRequestHash_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResult_GetRequestHash_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueueResultAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueueResultAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueueResultAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserID
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(::System::IntPtr obj, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize
uint Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetCustomData
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetCustomData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetCustomData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUser_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUser_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUser_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingEnqueuedUserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingEnqueuedUserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingEnqueuedUserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetAddedByUserId
uint64_t Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetAddedByUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetAddedByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId
::StringW Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingNotification_GetTraceId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingNotification_GetTraceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingNotification_GetTraceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetPingTime
uint Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoom_HasPingTime
bool Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoom_HasPingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoom_HasPingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetDrawCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetDrawCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetDrawCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetLossCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetLossCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetLossCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillLevel
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillMean
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillMean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillMean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetSkillStandardDeviation
double Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetSkillStandardDeviation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetSkillStandardDeviation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingStats_GetWinCount
uint Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingStats_GetWinCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingStats_GetWinCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAbuseReportRecording
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAbuseReportRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAbuseReportRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementDefinitionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementDefinitionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementDefinitionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementProgressArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementProgressArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementProgressArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAchievementUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAchievementUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAchievementUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationInviteArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationInviteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationInviteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetApplicationVersion
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetApplicationVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetApplicationVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetails
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetails(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetails");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetails", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetDetailsArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetDetailsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetDetailsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDeleteResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDeleteResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDeleteResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadCancelResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadCancelResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadCancelResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetAssetFileDownloadUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetAssetFileDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetAssetFileDownloadUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationFinalized
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationFinalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationFinalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationProposed
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationProposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationProposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCalApplicationSuggestionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCalApplicationSuggestionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCalApplicationSuggestionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallenge
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallenge(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetChallengeEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetChallengeEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetChallengeEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageConflictMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageConflictMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageConflictMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageData
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadata
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageMetadataArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageMetadataArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageMetadataArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetCloudStorageUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetCloudStorageUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetCloudStorageUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetDestinationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetDestinationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetDestinationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetDestinationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetError
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceJoinIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceJoinIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceJoinIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetGroupPresenceLeaveIntent
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetGroupPresenceLeaveIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetGroupPresenceLeaveIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetHttpTransferUpdate
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetHttpTransferUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetHttpTransferUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInstalledApplicationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInstalledApplicationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInstalledApplicationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetInvitePanelResultInfo
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetInvitePanelResultInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetInvitePanelResultInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchBlockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchBlockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchBlockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchFriendRequestFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchFriendRequestFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchFriendRequestFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchInvitePanelFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchInvitePanelFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchInvitePanelFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchReportFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchReportFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchReportFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLaunchUnblockFlowResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLaunchUnblockFlowResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLaunchUnblockFlowResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardEntryArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardEntryArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardEntryArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLeaderboardUpdateStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLeaderboardUpdateStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLeaderboardUpdateStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLinkedAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLinkedAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLinkedAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingApplicationStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingApplicationStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingApplicationStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStartResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStartResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStartResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingStatus
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetLivestreamingVideoStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetLivestreamingVideoStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetLivestreamingVideoStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingAdminSnapshot
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingAdminSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingAdminSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingBrowseResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingBrowseResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingBrowseResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingEnqueueResultAndRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingEnqueueResultAndRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingEnqueueResultAndRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMatchmakingStats
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMatchmakingStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMatchmakingStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetMicrophoneAvailabilityState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetMicrophoneAvailabilityState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetMicrophoneAvailabilityState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNativeMessage
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNativeMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNativeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNativeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncConnection
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSessionsChangedNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSessionsChangedNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSessionsChangedNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncSetSessionPropertyResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncSetSessionPropertyResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncSetSessionPropertyResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetSyncVoipAttenuationValueArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetSyncVoipAttenuationValueArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetSyncVoipAttenuationValueArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetNetworkingPeer
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetNetworkingPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetNetworkingPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetOrgScopedID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetOrgScopedID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetOrgScopedID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetParty
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetParty(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPartyUpdateNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPartyUpdateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPartyUpdateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPidArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPidArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPidArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPidArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPingResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPingResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPingResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPingResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPlatformInitialize
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPlatformInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPlatformInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetProductArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetProductArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetProductArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetProductArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchase
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchase(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetPurchaseArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetPurchaseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetPurchaseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRejoinDialogResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRejoinDialogResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRejoinDialogResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRequestID
uint64_t Oculus::Platform::CAPI::ovr_Message_GetRequestID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRequestID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRequestID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotification
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetRoomInviteNotificationArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetRoomInviteNotificationArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetRoomInviteNotificationArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSdkAccountArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSdkAccountArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSdkAccountArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSendInvitesResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSendInvitesResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSendInvitesResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetShareMediaResult
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetShareMediaResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetShareMediaResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString
::StringW Oculus::Platform::CAPI::ovr_Message_GetString(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetString_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetString_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetSystemVoipState
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetSystemVoipState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetSystemVoipState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetType
::Oculus::Platform::Message::MessageType Oculus::Platform::CAPI::ovr_Message_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::Message::MessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserAndRoomArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserAndRoomArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserAndRoomArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserArray
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserDataStoreUpdateResponse
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserDataStoreUpdateResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserDataStoreUpdateResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserProof
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserProof(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserProof");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserProof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_GetUserReportID
::System::IntPtr Oculus::Platform::CAPI::ovr_Message_GetUserReportID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_GetUserReportID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_GetUserReportID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Message_IsError
bool Oculus::Platform::CAPI::ovr_Message_IsError(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Message_IsError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Message_IsError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetNumSamplesAvailable
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetNumSamplesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetNumSamplesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetOutputBufferMaxSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetOutputBufferMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetOutputBufferMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCM(::System::IntPtr obj, ::ArrayW<int16_t> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_GetPCMFloat
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferNumElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_GetPCMFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_GetPCMFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferNumElements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferNumElements);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_ReadData
::System::UIntPtr Oculus::Platform::CAPI::ovr_Microphone_ReadData(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_SetAcceptableRecordingDelayHint
void Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint(::System::IntPtr obj, ::System::UIntPtr delayMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_SetAcceptableRecordingDelayHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_SetAcceptableRecordingDelayHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(delayMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, delayMs);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Start
void Oculus::Platform::CAPI::ovr_Microphone_Start(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Microphone_Stop
void Oculus::Platform::CAPI::ovr_Microphone_Stop(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Microphone_Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Microphone_Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable
bool Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MicrophoneAvailabilityState_GetMicrophoneAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetDisconnectReason
::Oculus::Platform::NetSyncDisconnectReason Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetDisconnectReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetDisconnectReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncDisconnectReason, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetStatus
::Oculus::Platform::NetSyncConnectionStatus Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::NetSyncConnectionStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId
::StringW Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncConnection_GetZoneId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncConnection_GetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncConnection_GetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetMuted
bool Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetSessionId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup
::StringW Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSession_GetVoipGroup_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSession_GetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSession_GetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetConnectionId
int64_t Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSessionsChangedNotification_GetSessions
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSessionsChangedNotification_GetSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSessionsChangedNotification_GetSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncSetSessionPropertyResult_GetSession
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncSetSessionPropertyResult_GetSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncSetSessionPropertyResult_GetSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDecibels
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDecibels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDecibels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValue_GetDistance
float Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValue_GetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValue_GetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncVoipAttenuationValueArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncVoipAttenuationValueArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncVoipAttenuationValueArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetID
uint64_t Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetworkingPeer_GetState
::Oculus::Platform::PeerConnectionState Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetworkingPeer_GetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetworkingPeer_GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PeerConnectionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_OrgScopedID_GetID
uint64_t Oculus::Platform::CAPI::ovr_OrgScopedID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_OrgScopedID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_OrgScopedID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_Free
void Oculus::Platform::CAPI::ovr_Packet_Free(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetBytes
::System::IntPtr Oculus::Platform::CAPI::ovr_Packet_GetBytes(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSendPolicy
::Oculus::Platform::SendPolicy Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SendPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_Packet_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Packet_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_Packet_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Packet_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Packet_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetID
uint64_t Oculus::Platform::CAPI::ovr_Party_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetLeader
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetLeader(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetLeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetLeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Party_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Party_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Party_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Party_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyID_GetID
uint64_t Oculus::Platform::CAPI::ovr_PartyID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetAction
::Oculus::Platform::PartyUpdateAction Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PartyUpdateAction, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetPartyId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetPartyId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetPartyId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetSenderId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetSenderId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetSenderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUpdateTimestamp_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUpdateTimestamp_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUpdateTimestamp_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName
::StringW Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PartyUpdateNotification_GetUserName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PartyUpdateNotification_GetUserName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PartyUpdateNotification_GetUserName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId
::StringW Oculus::Platform::CAPI::ovr_Pid_GetId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Pid_GetId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Pid_GetId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Pid_GetId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Pid_GetId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PidArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PidArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PidArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PidArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PidArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetID
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_GetPingTimeUsec
uint64_t Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_GetPingTimeUsec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_GetPingTimeUsec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PingResult_IsTimeout
bool Oculus::Platform::CAPI::ovr_PingResult_IsTimeout(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PingResult_IsTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PingResult_IsTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PlatformInitialize_GetResult
::Oculus::Platform::PlatformInitializeResult Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PlatformInitialize_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PlatformInitialize_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::PlatformInitializeResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetAmountInHundredths
uint Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetAmountInHundredths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetAmountInHundredths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency
::StringW Oculus::Platform::CAPI::ovr_Price_GetCurrency(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetCurrency_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetCurrency_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetCurrency_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted
::StringW Oculus::Platform::CAPI::ovr_Price_GetFormatted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Price_GetFormatted_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Price_GetFormatted_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Price_GetFormatted_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Product_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice
::StringW Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetFormattedPrice_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetFormattedPrice_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetFormattedPrice_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName
::StringW Oculus::Platform::CAPI::ovr_Product_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Product_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Product_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Product_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Product_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Product_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_ProductArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ProductArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ProductArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ProductArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetExpirationTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetExpirationTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetExpirationTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime
::System::DateTime Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetGrantTime_Native
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetGrantTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetGrantTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseID
uint64_t Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetPurchaseStrID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetPurchaseStrID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetPurchaseStrID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU
::StringW Oculus::Platform::CAPI::ovr_Purchase_GetSKU(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Purchase_GetSKU_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Purchase_GetSKU_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Purchase_GetSKU_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_PurchaseArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_PurchaseArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_PurchaseArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RejoinDialogResult_GetRejoinSelected
bool Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RejoinDialogResult_GetRejoinSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RejoinDialogResult_GetRejoinSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetApplicationID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetApplicationID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetApplicationID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetApplicationID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDataStore
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDataStore(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription
::StringW Oculus::Platform::CAPI::ovr_Room_GetDescription(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetDescription_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetDescription_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetID
uint64_t Oculus::Platform::CAPI::ovr_Room_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetInvitedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetInvitedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetInvitedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetIsMembershipLocked
bool Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetIsMembershipLocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetIsMembershipLocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinPolicy
::Oculus::Platform::RoomJoinPolicy Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinPolicy, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetJoinability
::Oculus::Platform::RoomJoinability Oculus::Platform::CAPI::ovr_Room_GetJoinability(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetJoinability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetJoinability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomJoinability, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMatchedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMatchedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMatchedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetMaxUsers
uint Oculus::Platform::CAPI::ovr_Room_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName
::StringW Oculus::Platform::CAPI::ovr_Room_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetOwner
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetOwner(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetTeams
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetTeams(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetTeams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetTeams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetType
::Oculus::Platform::RoomType Oculus::Platform::CAPI::ovr_Room_GetType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::RoomType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Room_GetUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Room_GetVersion
uint Oculus::Platform::CAPI::ovr_Room_GetVersion(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Room_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Room_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetRoomID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetRoomID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetRoomID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSenderID
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSenderID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSenderID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime
::System::DateTime Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotification_GetSentTime_Native
uint64_t Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotification_GetSentTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotification_GetSentTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomInviteNotificationArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomInviteNotificationArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomInviteNotificationArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetAccountType
::Oculus::Platform::SdkAccountType Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetAccountType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetAccountType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SdkAccountType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccount_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccount_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccount_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SdkAccountArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SdkAccountArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SdkAccountArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SendInvitesResult_GetInvites
::System::IntPtr Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SendInvitesResult_GetInvites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SendInvitesResult_GetInvites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ShareMediaResult_GetStatus
::Oculus::Platform::ShareMediaStatus Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ShareMediaResult_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ShareMediaResult_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::ShareMediaStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetID
uint64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SupplementaryMetric_GetMetric
int64_t Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SupplementaryMetric_GetMetric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SupplementaryMetric_GetMetric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetMicrophoneMuted
::Oculus::Platform::VoipMuteState Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetMicrophoneMuted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetMicrophoneMuted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::VoipMuteState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_SystemVoipState_GetStatus
::Oculus::Platform::SystemVoipStatus Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_SystemVoipState_GetStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_SystemVoipState_GetStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::SystemVoipStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetAssignedUsers
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetAssignedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetAssignedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMaxUsers
int Oculus::Platform::CAPI::ovr_Team_GetMaxUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetMinUsers
int Oculus::Platform::CAPI::ovr_Team_GetMinUsers(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetMinUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetMinUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName
::StringW Oculus::Platform::CAPI::ovr_Team_GetName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_Team_GetName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_Team_GetName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_Team_GetName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_Team_GetName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TeamArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TeamArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TeamArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TeamArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFbAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFbAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFbAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetFriendAppAccessArray
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetFriendAppAccessArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetFriendAppAccessArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias
::StringW Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserAlias_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserAlias_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserAlias_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserFbid
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserFbid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserFbid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUser_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUser_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUser_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUser_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken
::StringW Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAccessToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAccessToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAccessToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetAppId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccess_GetUserId
uint64_t Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccess_GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccess_GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_TestUserAppAccessArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_TestUserAppAccessArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_TestUserAppAccessArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName
::StringW Oculus::Platform::CAPI::ovr_User_GetDisplayName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetDisplayName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetDisplayName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetDisplayName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetID
uint64_t Oculus::Platform::CAPI::ovr_User_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken
::StringW Oculus::Platform::CAPI::ovr_User_GetInviteToken(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetInviteToken_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetInviteToken_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetInviteToken_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID
::StringW Oculus::Platform::CAPI::ovr_User_GetOculusID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetOculusID_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetOculusID_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetOculusID_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetOculusID_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence
::StringW Oculus::Platform::CAPI::ovr_User_GetPresence(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresence_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresence_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresence_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresence_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDeeplinkMessage_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceDestinationApiName_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceLobbySessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId
::StringW Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceMatchSessionId_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetPresenceStatus
::Oculus::Platform::UserPresenceStatus Oculus::Platform::CAPI::ovr_User_GetPresenceStatus(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetPresenceStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetPresenceStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Platform::UserPresenceStatus, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl
::StringW Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_User_GetSmallImageUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_User_GetSmallImageUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_User_GetSmallImageUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetRoom
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoom_GetUser
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoom_GetUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoom_GetUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserAndRoomArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserAndRoomArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserAndRoomArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetElement
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetElement(::System::IntPtr obj, ::System::UIntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, index);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl
::StringW Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetNextUrl_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetNextUrl_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetNextUrl_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_GetSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_UserArray_GetSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserArray_HasNextPage
bool Oculus::Platform::CAPI::ovr_UserArray_HasNextPage(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserArray_HasNextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserArray_HasNextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserDataStoreUpdateResponse_GetSuccess
bool Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserDataStoreUpdateResponse_GetSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserDataStoreUpdateResponse_GetSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce
::StringW Oculus::Platform::CAPI::ovr_UserProof_GetNonce(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserProof_GetNonce_Native
::System::IntPtr Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserProof_GetNonce_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserProof_GetNonce_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetDidCancel
bool Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserReportID_GetID
uint64_t Oculus::Platform::CAPI::ovr_UserReportID_GetID(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserReportID_GetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserReportID_GetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_Decode
void Oculus::Platform::CAPI::ovr_VoipDecoder_Decode(::System::IntPtr obj, ::ArrayW<uint8_t> compressedData, ::System::UIntPtr compressedSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(compressedData), ::il2cpp_utils::ExtractType(compressedSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, compressedData, compressedSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipDecoder_GetDecodedPCM
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM(::System::IntPtr obj, ::ArrayW<float> outputBuffer, ::System::UIntPtr outputBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipDecoder_GetDecodedPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipDecoder_GetDecodedPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, outputBufferSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_AddPCM
void Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM(::System::IntPtr obj, ::ArrayW<float> inputData, uint inputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_AddPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_AddPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(inputData), ::il2cpp_utils::ExtractType(inputSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, inputData, inputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedData
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData(::System::IntPtr obj, ::ArrayW<uint8_t> outputBuffer, ::System::UIntPtr intputSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(intputSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, outputBuffer, intputSize);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipEncoder_GetCompressedDataSize
::System::UIntPtr Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipEncoder_GetCompressedDataSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipEncoder_GetCompressedDataSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UIntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetPreventPeopleChooser
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetPreventPeopleChooser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetPreventPeopleChooser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_Destroy
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetObjectType_Native
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetObjectType_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetObjectType_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetReportType
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType(::System::IntPtr handle, ::Oculus::Platform::AbuseReportType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetReportType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetReportType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_AdvancedAbuseReportOptions_SetVideoMode
void Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode(::System::IntPtr handle, ::Oculus::Platform::AbuseReportVideoMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_AdvancedAbuseReportOptions_SetVideoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_AdvancedAbuseReportOptions_SetVideoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ApplicationOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_Destroy
void Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ApplicationOptions_SetDeeplinkMessage_Native
void Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ApplicationOptions_SetDeeplinkMessage_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ApplicationOptions_SetDeeplinkMessage_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_ChallengeOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_Destroy
void Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetDescription_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetDescription_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetDescription_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetEndDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetEndDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetEndDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeActiveChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeActiveChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeActiveChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludeFutureChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludeFutureChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludeFutureChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetIncludePastChallenges
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetIncludePastChallenges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetIncludePastChallenges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetLeaderboardName_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetLeaderboardName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetLeaderboardName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetStartDate_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetStartDate_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetStartDate_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetTitle_Native
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetTitle_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetTitle_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetViewerFilter
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter(::System::IntPtr handle, ::Oculus::Platform::ChallengeViewerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetViewerFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetViewerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_ChallengeOptions_SetVisibility
void Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility(::System::IntPtr handle, ::Oculus::Platform::ChallengeVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_ChallengeOptions_SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_ChallengeOptions_SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetDestinationApiName_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetDestinationApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetDestinationApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_GroupPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_GroupPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_GroupPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_InviteOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_Destroy
void Oculus::Platform::CAPI::ovr_InviteOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_InviteOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_InviteOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_InviteOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_Destroy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearCreateRoomDataStore
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearCreateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearCreateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomJoinPolicy
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(::System::IntPtr handle, ::Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomJoinPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomJoinPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetCreateRoomMaxUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetCreateRoomMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetCreateRoomMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_AddEnqueueAdditionalUser
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_AddEnqueueAdditionalUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_AddEnqueueAdditionalUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(::System::IntPtr handle, ::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(::System::IntPtr handle, ::System::IntPtr key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(::System::IntPtr handle, ::StringW key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(::System::IntPtr handle, ::System::IntPtr key, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_ClearEnqueueDataSettings
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_ClearEnqueueDataSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_ClearEnqueueDataSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueIsDebug
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueIsDebug");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueIsDebug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MatchmakingOptions_SetEnqueueQueryKey_Native
void Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MatchmakingOptions_SetEnqueueQueryKey_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MatchmakingOptions_SetEnqueueQueryKey_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_Destroy
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_MultiplayerErrorOptions_SetErrorKey
void Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey(::System::IntPtr handle, ::Oculus::Platform::MultiplayerErrorErrorKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_MultiplayerErrorOptions_SetErrorKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_MultiplayerErrorOptions_SetErrorKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_NetSyncOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_Destroy
void Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipGroup_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipGroup_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipGroup_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetVoipStreamDefault
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault(::System::IntPtr handle, ::Oculus::Platform::NetSyncVoipStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetVoipStreamDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetVoipStreamDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_NetSyncOptions_SetZoneId_Native
void Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_NetSyncOptions_SetZoneId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_NetSyncOptions_SetZoneId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_Destroy
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetApiName_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetApiName_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetApiName_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetArgsString_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetArgsString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetArgsString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_ClearArgs
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_ClearArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_ClearArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetCurrentCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetCurrentCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetCurrentCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetEndTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetEndTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetEndTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetExtraContext
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext(::System::IntPtr handle, ::Oculus::Platform::RichPresenceExtraContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetExtraContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetExtraContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetInstanceId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetInstanceId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetInstanceId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsIdle
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsIdle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsIdle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetIsJoinable
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetIsJoinable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetIsJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetJoinableId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetJoinableId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetJoinableId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetLobbySessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetLobbySessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetLobbySessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId(::System::IntPtr handle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMatchSessionId_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native(::System::IntPtr handle, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMatchSessionId_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMatchSessionId_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetMaxCapacity
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetMaxCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetMaxCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime(::System::IntPtr handle, ::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RichPresenceOptions_SetStartTime_Native
void Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RichPresenceOptions_SetStartTime_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RichPresenceOptions_SetStartTime_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RoomOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_Destroy
void Oculus::Platform::CAPI::ovr_RoomOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString(::System::IntPtr handle, ::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetDataStoreString_Native
void Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native(::System::IntPtr handle, ::System::IntPtr key, ::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetDataStoreString_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetDataStoreString_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_ClearDataStore
void Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_ClearDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_ClearDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetExcludeRecentlyMet
void Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetExcludeRecentlyMet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetExcludeRecentlyMet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetMaxUserResults
void Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetMaxUserResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetMaxUserResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetOrdering
void Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering(::System::IntPtr handle, ::Oculus::Platform::UserOrdering value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetOrdering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetOrdering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRecentlyMetTimeWindow
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRecentlyMetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRecentlyMetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetRoomId
void Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetRoomId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetRoomId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RoomOptions_SetTurnOffUpdates
void Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates(::System::IntPtr handle, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RoomOptions_SetTurnOffUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RoomOptions_SetTurnOffUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_RosterOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_Destroy
void Oculus::Platform::CAPI::ovr_RosterOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_AddSuggestedUser
void Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser(::System::IntPtr handle, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_AddSuggestedUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_AddSuggestedUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_RosterOptions_ClearSuggestedUsers
void Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_RosterOptions_ClearSuggestedUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_RosterOptions_ClearSuggestedUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_UserOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_Destroy
void Oculus::Platform::CAPI::ovr_UserOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetMaxUsers
void Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers(::System::IntPtr handle, uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetMaxUsers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetMaxUsers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_AddServiceProvider
void Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider(::System::IntPtr handle, ::Oculus::Platform::ServiceProvider value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_AddServiceProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_AddServiceProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_ClearServiceProviders
void Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_ClearServiceProviders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_ClearServiceProviders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_UserOptions_SetTimeWindow
void Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow(::System::IntPtr handle, ::Oculus::Platform::TimeWindow value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_UserOptions_SetTimeWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_UserOptions_SetTimeWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Create
::System::IntPtr Oculus::Platform::CAPI::ovr_VoipOptions_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_Destroy
void Oculus::Platform::CAPI::ovr_VoipOptions_Destroy(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetBitrateForNewConnections
void Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections(::System::IntPtr handle, ::Oculus::Platform::VoipBitrate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetBitrateForNewConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetBitrateForNewConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
// Autogenerated method: Oculus.Platform.CAPI.ovr_VoipOptions_SetCreateNewConnectionUseDtx
void Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx(::System::IntPtr handle, ::Oculus::Platform::VoipDtxState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Platform::CAPI::ovr_VoipOptions_SetCreateNewConnectionUseDtx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Platform", "CAPI", "ovr_VoipOptions_SetCreateNewConnectionUseDtx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, value);
}
