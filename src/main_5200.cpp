// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRResources
#include "OVR/OpenVR/CVRResources.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRResources FnTable
::OVR::OpenVR::IVRResources& OVR::OpenVR::CVRResources::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRResources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRResources.LoadSharedResource
uint OVR::OpenVR::CVRResources::LoadSharedResource(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::LoadSharedResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSharedResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen);
}
// Autogenerated method: OVR.OpenVR.CVRResources.GetResourceFullPath
uint OVR::OpenVR::CVRResources::GetResourceFullPath(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, ::System::Text::StringBuilder* pchPathBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRResources::GetResourceFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResourceFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchResourceTypeDirectory), ::il2cpp_utils::ExtractType(pchPathBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRDriverManager
#include "OVR/OpenVR/CVRDriverManager.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRDriverManager FnTable
::OVR::OpenVR::IVRDriverManager& OVR::OpenVR::CVRDriverManager::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRDriverManager*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverCount
uint OVR::OpenVR::CVRDriverManager::GetDriverCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverName
uint OVR::OpenVR::CVRDriverManager::GetDriverName(uint nDriver, ::System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDriver), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverHandle
uint64_t OVR::OpenVR::CVRDriverManager::GetDriverHandle(::StringW pchDriverName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRDriverManager::GetDriverHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchDriverName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchDriverName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: OVR.OpenVR.InputDigitalActionData_t
#include "OVR/OpenVR/InputDigitalActionData_t.hpp"
// Including type: OVR.OpenVR.InputAnalogActionData_t
#include "OVR/OpenVR/InputAnalogActionData_t.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.InputPoseActionData_t
#include "OVR/OpenVR/InputPoseActionData_t.hpp"
// Including type: OVR.OpenVR.InputSkeletalActionData_t
#include "OVR/OpenVR/InputSkeletalActionData_t.hpp"
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: OVR.OpenVR.InputOriginInfo_t
#include "OVR/OpenVR/InputOriginInfo_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRInput FnTable
::OVR::OpenVR::IVRInput& OVR::OpenVR::CVRInput::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRInput*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRInput.SetActionManifestPath
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::SetActionManifestPath(::StringW pchActionManifestPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::SetActionManifestPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActionManifestPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionManifestPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionManifestPath);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionSetHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionSetHandle(::StringW pchActionSetName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionSetHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionSetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionSetName), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionSetName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionHandle(::StringW pchActionName, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchActionName), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchActionName, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetInputSourceHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetInputSourceHandle(::StringW pchInputSourcePath, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetInputSourceHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInputSourceHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInputSourcePath), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pchInputSourcePath, byref(pHandle));
}
// Autogenerated method: OVR.OpenVR.CVRInput.UpdateActionState
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::UpdateActionState(::ArrayW<::OVR::OpenVR::VRActiveActionSet_t> pSets, uint unSizeOfVRSelectedActionSet_t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::UpdateActionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSets), ::il2cpp_utils::ExtractType(unSizeOfVRSelectedActionSet_t)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pSets, unSizeOfVRSelectedActionSet_t);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetDigitalActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetDigitalActionData(uint64_t action, ByRef<::OVR::OpenVR::InputDigitalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetDigitalActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDigitalActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetAnalogActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetAnalogActionData(uint64_t action, ByRef<::OVR::OpenVR::InputAnalogActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetAnalogActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnalogActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetPoseActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetPoseActionData(uint64_t action, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsFromNow, ByRef<::OVR::OpenVR::InputPoseActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetPoseActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoseActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(fPredictedSecondsFromNow), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eOrigin, fPredictedSecondsFromNow, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalActionData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalActionData(uint64_t action, ByRef<::OVR::OpenVR::InputSkeletalActionData_t> pActionData, uint unActionDataSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalActionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalActionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(pActionData), ::il2cpp_utils::ExtractType(unActionDataSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, byref(pActionData), unActionDataSize, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalBoneData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalBoneData(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::ArrayW<::OVR::OpenVR::VRBoneTransform_t> pTransformArray, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eTransformSpace), ::il2cpp_utils::ExtractType(eMotionRange), ::il2cpp_utils::ExtractType(pTransformArray), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pTransformArray, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetSkeletalBoneDataCompressed
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetSkeletalBoneDataCompressed(uint64_t action, ::OVR::OpenVR::EVRSkeletalTransformSpace eTransformSpace, ::OVR::OpenVR::EVRSkeletalMotionRange eMotionRange, ::System::IntPtr pvCompressedData, uint unCompressedSize, ByRef<uint> punRequiredCompressedSize, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetSkeletalBoneDataCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkeletalBoneDataCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(eTransformSpace), ::il2cpp_utils::ExtractType(eMotionRange), ::il2cpp_utils::ExtractType(pvCompressedData), ::il2cpp_utils::ExtractType(unCompressedSize), ::il2cpp_utils::ExtractType(punRequiredCompressedSize), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, eTransformSpace, eMotionRange, pvCompressedData, unCompressedSize, byref(punRequiredCompressedSize), ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.DecompressSkeletalBoneData
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::DecompressSkeletalBoneData(::System::IntPtr pvCompressedBuffer, uint unCompressedBufferSize, ByRef<::OVR::OpenVR::EVRSkeletalTransformSpace> peTransformSpace, ::ArrayW<::OVR::OpenVR::VRBoneTransform_t> pTransformArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::DecompressSkeletalBoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecompressSkeletalBoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvCompressedBuffer), ::il2cpp_utils::ExtractType(unCompressedBufferSize), ::il2cpp_utils::ExtractType(peTransformSpace), ::il2cpp_utils::ExtractType(pTransformArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pvCompressedBuffer, unCompressedBufferSize, byref(peTransformSpace), pTransformArray);
}
// Autogenerated method: OVR.OpenVR.CVRInput.TriggerHapticVibrationAction
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::TriggerHapticVibrationAction(uint64_t action, float fStartSecondsFromNow, float fDurationSeconds, float fFrequency, float fAmplitude, uint64_t ulRestrictToDevice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::TriggerHapticVibrationAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticVibrationAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(fStartSecondsFromNow), ::il2cpp_utils::ExtractType(fDurationSeconds), ::il2cpp_utils::ExtractType(fFrequency), ::il2cpp_utils::ExtractType(fAmplitude), ::il2cpp_utils::ExtractType(ulRestrictToDevice)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, action, fStartSecondsFromNow, fDurationSeconds, fFrequency, fAmplitude, ulRestrictToDevice);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetActionOrigins
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetActionOrigins(uint64_t actionSetHandle, uint64_t digitalActionHandle, ::ArrayW<uint64_t> originsOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetActionOrigins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActionOrigins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionSetHandle), ::il2cpp_utils::ExtractType(digitalActionHandle), ::il2cpp_utils::ExtractType(originsOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, digitalActionHandle, originsOut);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetOriginLocalizedName
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetOriginLocalizedName(uint64_t origin, ::System::Text::StringBuilder* pchNameArray, uint unNameArraySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetOriginLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(pchNameArray), ::il2cpp_utils::ExtractType(unNameArraySize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, pchNameArray, unNameArraySize);
}
// Autogenerated method: OVR.OpenVR.CVRInput.GetOriginTrackedDeviceInfo
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::GetOriginTrackedDeviceInfo(uint64_t origin, ByRef<::OVR::OpenVR::InputOriginInfo_t> pOriginInfo, uint unOriginInfoSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::GetOriginTrackedDeviceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginTrackedDeviceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(pOriginInfo), ::il2cpp_utils::ExtractType(unOriginInfoSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, origin, byref(pOriginInfo), unOriginInfoSize);
}
// Autogenerated method: OVR.OpenVR.CVRInput.ShowActionOrigins
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::ShowActionOrigins(uint64_t actionSetHandle, uint64_t ulActionHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::ShowActionOrigins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowActionOrigins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionSetHandle), ::il2cpp_utils::ExtractType(ulActionHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, actionSetHandle, ulActionHandle);
}
// Autogenerated method: OVR.OpenVR.CVRInput.ShowBindingsForActionSet
::OVR::OpenVR::EVRInputError OVR::OpenVR::CVRInput::ShowBindingsForActionSet(::ArrayW<::OVR::OpenVR::VRActiveActionSet_t> pSets, uint unSizeOfVRSelectedActionSet_t, uint64_t originToHighlight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRInput::ShowBindingsForActionSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowBindingsForActionSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSets), ::il2cpp_utils::ExtractType(unSizeOfVRSelectedActionSet_t), ::il2cpp_utils::ExtractType(originToHighlight)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRInputError, false>(this, ___internal__method, pSets, unSizeOfVRSelectedActionSet_t, originToHighlight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRIOBuffer
#include "OVR/OpenVR/CVRIOBuffer.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRIOBuffer FnTable
::OVR::OpenVR::IVRIOBuffer& OVR::OpenVR::CVRIOBuffer::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRIOBuffer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Open
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Open(::StringW pchPath, ::OVR::OpenVR::EIOBufferMode mode, uint unElementSize, uint unElements, ByRef<uint64_t> pulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchPath), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(unElementSize), ::il2cpp_utils::ExtractType(unElements), ::il2cpp_utils::ExtractType(pulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, pchPath, mode, unElementSize, unElements, byref(pulBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Close
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Close(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Read
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Read(uint64_t ulBuffer, ::System::IntPtr pDst, uint unBytes, ByRef<uint> punRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(unBytes), ::il2cpp_utils::ExtractType(punRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pDst, unBytes, byref(punRead));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Write
::OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Write(uint64_t ulBuffer, ::System::IntPtr pSrc, uint unBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer), ::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(unBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EIOBufferError, false>(this, ___internal__method, ulBuffer, pSrc, unBytes);
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.PropertyContainer
uint64_t OVR::OpenVR::CVRIOBuffer::PropertyContainer(uint64_t ulBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRIOBuffer::PropertyContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PropertyContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, ulBuffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
// Including type: OVR.OpenVR.SpatialAnchorPose_t
#include "OVR/OpenVR/SpatialAnchorPose_t.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OVR.OpenVR.IVRSpatialAnchors FnTable
::OVR::OpenVR::IVRSpatialAnchors& OVR::OpenVR::CVRSpatialAnchors::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<::OVR::OpenVR::IVRSpatialAnchors*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.CreateSpatialAnchorFromDescriptor
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromDescriptor(::StringW pchDescriptor, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSpatialAnchorFromDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchDescriptor), ::il2cpp_utils::ExtractType(pHandleOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, pchDescriptor, byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.CreateSpatialAnchorFromPose
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromPose(uint unDeviceIndex, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPose, ByRef<uint> pHandleOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::CreateSpatialAnchorFromPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSpatialAnchorFromPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pPose), ::il2cpp_utils::ExtractType(pHandleOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unDeviceIndex, eOrigin, byref(pPose), byref(pHandleOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.GetSpatialAnchorPose
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorPose(uint unHandle, ::OVR::OpenVR::ETrackingUniverseOrigin eOrigin, ByRef<::OVR::OpenVR::SpatialAnchorPose_t> pPoseOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpatialAnchorPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pPoseOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, eOrigin, byref(pPoseOut));
}
// Autogenerated method: OVR.OpenVR.CVRSpatialAnchors.GetSpatialAnchorDescriptor
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorDescriptor(uint unHandle, ::System::Text::StringBuilder* pchDescriptorOut, ByRef<uint> punDescriptorBufferLenInOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::CVRSpatialAnchors::GetSpatialAnchorDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpatialAnchorDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(pchDescriptorOut), ::il2cpp_utils::ExtractType(punDescriptorBufferLenInOut)})));
  return ::il2cpp_utils::RunMethodRethrow<::OVR::OpenVR::EVRSpatialAnchorError, false>(this, ___internal__method, unHandle, pchDescriptorOut, byref(punDescriptorBufferLenInOut));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVRInterop
#include "OVR/OpenVR/OpenVRInterop.hpp"
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.OpenVRInterop.InitInternal
uint OVR::OpenVR::OpenVRInterop::InitInternal(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.InitInternal2
uint OVR::OpenVR::OpenVRInterop::InitInternal2(ByRef<::OVR::OpenVR::EVRInitError> peError, ::OVR::OpenVR::EVRApplicationType eApplicationType, ByRef<::StringW> pStartupInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::InitInternal2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "InitInternal2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType), ::il2cpp_utils::ExtractType(pStartupInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType, byref(pStartupInfo));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.ShutdownInternal
void OVR::OpenVR::OpenVRInterop::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsHmdPresent
bool OVR::OpenVR::OpenVRInterop::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsRuntimeInstalled
bool OVR::OpenVR::OpenVRInterop::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetStringForHmdError
::System::IntPtr OVR::OpenVR::OpenVRInterop::GetStringForHmdError(::OVR::OpenVR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetGenericInterface
::System::IntPtr OVR::OpenVR::OpenVRInterop::GetGenericInterface(ByRef<::StringW> pchInterfaceVersion, ByRef<::OVR::OpenVR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion), byref(peError));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.IsInterfaceVersionValid
bool OVR::OpenVR::OpenVRInterop::IsInterfaceVersionValid(ByRef<::StringW> pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion));
}
// Autogenerated method: OVR.OpenVR.OpenVRInterop.GetInitToken
uint OVR::OpenVR::OpenVRInterop::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::OpenVRInterop::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OVR.OpenVR", "OpenVRInterop", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREye Eye_Left
::OVR::OpenVR::EVREye OVR::OpenVR::EVREye::_get_Eye_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_get_Eye_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREye>("OVR.OpenVR", "EVREye", "Eye_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREye Eye_Left
void OVR::OpenVR::EVREye::_set_Eye_Left(::OVR::OpenVR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_set_Eye_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREye", "Eye_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREye Eye_Right
::OVR::OpenVR::EVREye OVR::OpenVR::EVREye::_get_Eye_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_get_Eye_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREye>("OVR.OpenVR", "EVREye", "Eye_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREye Eye_Right
void OVR::OpenVR::EVREye::_set_Eye_Right(::OVR::OpenVR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::_set_Eye_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREye", "Eye_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVREye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Invalid
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Invalid
void OVR::OpenVR::ETextureType::_set_Invalid(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DirectX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX
void OVR::OpenVR::ETextureType::_set_DirectX(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DirectX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType OpenGL
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_OpenGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_OpenGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "OpenGL"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType OpenGL
void OVR::OpenVR::ETextureType::_set_OpenGL(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_OpenGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "OpenGL", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Vulkan
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Vulkan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Vulkan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Vulkan"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Vulkan
void OVR::OpenVR::ETextureType::_set_Vulkan(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Vulkan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Vulkan", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType IOSurface
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_IOSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_IOSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "IOSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType IOSurface
void OVR::OpenVR::ETextureType::_set_IOSurface(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_IOSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "IOSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX12
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DirectX12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX12"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX12
void OVR::OpenVR::ETextureType::_set_DirectX12(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DirectX12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX12", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DXGISharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_DXGISharedHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DXGISharedHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
void OVR::OpenVR::ETextureType::_set_DXGISharedHandle(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_DXGISharedHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DXGISharedHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Metal
::OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Metal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Metal
void OVR::OpenVR::ETextureType::_set_Metal(::OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Metal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETextureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETextureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EColorSpace
#include "OVR/OpenVR/EColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Auto
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Auto
void OVR::OpenVR::EColorSpace::_set_Auto(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Gamma
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Gamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Gamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Gamma"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Gamma
void OVR::OpenVR::EColorSpace::_set_Gamma(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Gamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Gamma", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EColorSpace Linear
::OVR::OpenVR::EColorSpace OVR::OpenVR::EColorSpace::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EColorSpace>("OVR.OpenVR", "EColorSpace", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EColorSpace Linear
void OVR::OpenVR::EColorSpace::_set_Linear(::OVR::OpenVR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EColorSpace", "Linear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackingResult
#include "OVR/OpenVR/ETrackingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Uninitialized
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Uninitialized
void OVR::OpenVR::ETrackingResult::_set_Uninitialized(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Calibrating_InProgress
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Calibrating_InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Calibrating_InProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Calibrating_InProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Calibrating_InProgress
void OVR::OpenVR::ETrackingResult::_set_Calibrating_InProgress(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Calibrating_InProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Calibrating_InProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Calibrating_OutOfRange
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Calibrating_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Calibrating_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Calibrating_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Calibrating_OutOfRange
void OVR::OpenVR::ETrackingResult::_set_Calibrating_OutOfRange(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Calibrating_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Calibrating_OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Running_OK
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Running_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Running_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Running_OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Running_OK
void OVR::OpenVR::ETrackingResult::_set_Running_OK(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Running_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Running_OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingResult Running_OutOfRange
::OVR::OpenVR::ETrackingResult OVR::OpenVR::ETrackingResult::_get_Running_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_get_Running_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingResult>("OVR.OpenVR", "ETrackingResult", "Running_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingResult Running_OutOfRange
void OVR::OpenVR::ETrackingResult::_set_Running_OutOfRange(::OVR::OpenVR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::_set_Running_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingResult", "Running_OutOfRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackingResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedDeviceClass
#include "OVR/OpenVR/ETrackedDeviceClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Invalid
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Invalid
void OVR::OpenVR::ETrackedDeviceClass::_set_Invalid(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass HMD
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_HMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_HMD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "HMD"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass HMD
void OVR::OpenVR::ETrackedDeviceClass::_set_HMD(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_HMD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "HMD", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Controller
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Controller
void OVR::OpenVR::ETrackedDeviceClass::_set_Controller(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Controller", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass GenericTracker
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_GenericTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_GenericTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "GenericTracker"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass GenericTracker
void OVR::OpenVR::ETrackedDeviceClass::_set_GenericTracker(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_GenericTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "GenericTracker", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass TrackingReference
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass TrackingReference
void OVR::OpenVR::ETrackedDeviceClass::_set_TrackingReference(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass DisplayRedirect
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_DisplayRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_DisplayRedirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "DisplayRedirect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass DisplayRedirect
void OVR::OpenVR::ETrackedDeviceClass::_set_DisplayRedirect(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_DisplayRedirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "DisplayRedirect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceClass Max
::OVR::OpenVR::ETrackedDeviceClass OVR::OpenVR::ETrackedDeviceClass::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceClass>("OVR.OpenVR", "ETrackedDeviceClass", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceClass Max
void OVR::OpenVR::ETrackedDeviceClass::_set_Max(::OVR::OpenVR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceClass", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackedDeviceClass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceClass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedControllerRole
#include "OVR/OpenVR/ETrackedControllerRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole Invalid
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole Invalid
void OVR::OpenVR::ETrackedControllerRole::_set_Invalid(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole LeftHand
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole LeftHand
void OVR::OpenVR::ETrackedControllerRole::_set_LeftHand(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole RightHand
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole RightHand
void OVR::OpenVR::ETrackedControllerRole::_set_RightHand(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole OptOut
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_OptOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_OptOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "OptOut"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole OptOut
void OVR::OpenVR::ETrackedControllerRole::_set_OptOut(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_OptOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "OptOut", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedControllerRole Max
::OVR::OpenVR::ETrackedControllerRole OVR::OpenVR::ETrackedControllerRole::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedControllerRole>("OVR.OpenVR", "ETrackedControllerRole", "Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedControllerRole Max
void OVR::OpenVR::ETrackedControllerRole::_set_Max(::OVR::OpenVR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedControllerRole", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackedControllerRole::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedControllerRole::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackingUniverseOrigin
#include "OVR/OpenVR/ETrackingUniverseOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseSeated
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseSeated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseSeated
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseSeated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseStanding
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseStanding"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseStanding
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseStanding", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
::OVR::OpenVR::ETrackingUniverseOrigin OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackingUniverseOrigin>("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
void OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated(::OVR::OpenVR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackingUniverseOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackingUniverseOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedDeviceProperty
#include "OVR/OpenVR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Invalid
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Invalid
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Invalid(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingSystemName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingSystemName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModelNumber_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModelNumber_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SerialNumber_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SerialNumber_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RenderModelName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RenderModelName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RenderModelName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RenderModelName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ManufacturerName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ManufacturerName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceClass_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DeviceClass_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCamera_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCamera_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverVersion_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverVersion_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ResourceRoot_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ResourceRoot_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InputProfilePath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InputProfilePath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NeverTracked_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NeverTracked_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NeverTracked_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NeverTracked_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NeverTracked_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NeverTracked_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NeverTracked_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NeverTracked_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NumCameras_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NumCameras_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NumCameras_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NumCameras_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NumCameras_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NumCameras_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NumCameras_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NumCameras_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFrameLayout_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFrameLayout_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFrameLayout_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFrameLayout_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFrameLayout_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFrameLayout_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFrameLayout_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFrameLayout_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidProductID_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_EdidProductID_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCImage_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayGCImage_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DistortionMeshResolution_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DistortionMeshResolution_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DistortionMeshResolution_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DistortionMeshResolution_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DistortionMeshResolution_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DistortionMeshResolution_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DistortionMeshResolution_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DistortionMeshResolution_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_MinimumIpdStepMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_MinimumIpdStepMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_MinimumIpdStepMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_MinimumIpdStepMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_MinimumIpdStepMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_MinimumIpdStepMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_MinimumIpdStepMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_MinimumIpdStepMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioBridgeFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioBridgeFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AudioBridgeFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioBridgeFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AudioBridgeFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioBridgeFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AudioBridgeFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AudioBridgeFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImageBridgeFirmwareVersion_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImageBridgeFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImageBridgeFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImageBridgeFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImageBridgeFirmwareVersion_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImageBridgeFirmwareVersion_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImageBridgeFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImageBridgeFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuToHeadTransform_Matrix34
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuToHeadTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuToHeadTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuToHeadTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuToHeadTransform_Matrix34
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuToHeadTransform_Matrix34(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuToHeadTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuToHeadTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroBias_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroBias_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroBias_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroBias_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroBias_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroBias_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroBias_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroBias_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroScale_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroScale_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryGyroScale_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroScale_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryGyroScale_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroScale_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryGyroScale_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryGyroScale_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerBias_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerBias_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerBias_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerBias_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerBias_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerBias_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerBias_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerBias_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerScale_Vector3
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerScale_Vector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ImuFactoryAccelerometerScale_Vector3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerScale_Vector3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ImuFactoryAccelerometerScale_Vector3
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerScale_Vector3(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ImuFactoryAccelerometerScale_Vector3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ImuFactoryAccelerometerScale_Vector3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConfigurationIncludesLighthouse20Features_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConfigurationIncludesLighthouse20Features_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ConfigurationIncludesLighthouse20Features_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConfigurationIncludesLighthouse20Features_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ConfigurationIncludesLighthouse20Features_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConfigurationIncludesLighthouse20Features_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ConfigurationIncludesLighthouse20Features_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ConfigurationIncludesLighthouse20Features_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraCorrectionMode_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraCorrectionMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraCorrectionMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraCorrectionMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraCorrectionMode_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraCorrectionMode_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraCorrectionMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraCorrectionMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerLeft_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerLeft_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerLeft_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerLeft_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerLeft_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerLeft_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerLeft_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerLeft_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerRight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerRight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerRight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerRight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerRight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerRight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerRight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerRight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerTop_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerTop_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerTop_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerTop_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerTop_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerTop_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerTop_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerTop_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerBottom_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerBottom_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_InnerBottom_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerBottom_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_InnerBottom_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerBottom_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_InnerBottom_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_InnerBottom_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterLeft_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterLeft_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterLeft_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterLeft_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterLeft_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterLeft_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterLeft_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterLeft_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterRight_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterRight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterRight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterRight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterRight_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterRight_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterRight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterRight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterTop_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterTop_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterTop_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterTop_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterTop_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterTop_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterTop_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterTop_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterBottom_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterBottom_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DriverRequestedMuraFeather_OuterBottom_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterBottom_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DriverRequestedMuraFeather_OuterBottom_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterBottom_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DriverRequestedMuraFeather_OuterBottom_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DriverRequestedMuraFeather_OuterBottom_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis0Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis0Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis1Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis1Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis2Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis2Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis3Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis3Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis4Type_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_Axis4Type_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModeLabel_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModeLabel_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ModeLabel_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ModeLabel_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IconPathName_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IconPathName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_IconPathName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IconPathName_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_IconPathName_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IconPathName_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_IconPathName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_IconPathName_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentContainer
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ParentContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentContainer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ParentContainer
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentContainer(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ParentContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ParentContainer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserConfigPath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_UserConfigPath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InstallPath_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InstallPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_InstallPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InstallPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_InstallPath_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InstallPath_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_InstallPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_InstallPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasSpatialAnchorsSupport_Bool
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasSpatialAnchorsSupport_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_HasSpatialAnchorsSupport_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasSpatialAnchorsSupport_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_HasSpatialAnchorsSupport_Bool
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasSpatialAnchorsSupport_Bool(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_HasSpatialAnchorsSupport_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_HasSpatialAnchorsSupport_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerType_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_ControllerType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_ControllerType_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerType_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_ControllerType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_ControllerType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
::OVR::OpenVR::ETrackedDeviceProperty OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedDeviceProperty>("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
void OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max(::OVR::OpenVR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackedDeviceProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedDeviceProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedPropertyError
#include "OVR/OpenVR/ETrackedPropertyError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
::OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards(::OVR::OpenVR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ETrackedPropertyError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ETrackedPropertyError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSubmitFlags
#include "OVR/OpenVR/EVRSubmitFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Default
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_GlRenderBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_GlRenderBuffer
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_GlRenderBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_GlRenderBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_Reserved
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithPose
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithPose", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
::OVR::OpenVR::EVRSubmitFlags OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_get_Submit_TextureWithDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSubmitFlags>("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSubmitFlags Submit_TextureWithDepth
void OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth(::OVR::OpenVR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::_set_Submit_TextureWithDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSubmitFlags", "Submit_TextureWithDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSubmitFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSubmitFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRState
#include "OVR/OpenVR/EVRState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Undefined
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Undefined
void OVR::OpenVR::EVRState::_set_Undefined(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Off
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Off
void OVR::OpenVR::EVRState::_set_Off(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching
void OVR::OpenVR::EVRState::_set_Searching(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Searching_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Searching_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Searching_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Searching_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Searching_Alert
void OVR::OpenVR::EVRState::_set_Searching_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Searching_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Searching_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready
void OVR::OpenVR::EVRState::_set_Ready(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert
void OVR::OpenVR::EVRState::_set_Ready_Alert(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState NotReady
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_NotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_NotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "NotReady"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState NotReady
void OVR::OpenVR::EVRState::_set_NotReady(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_NotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "NotReady", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Standby
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Standby
void OVR::OpenVR::EVRState::_set_Standby(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Standby", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
::OVR::OpenVR::EVRState OVR::OpenVR::EVRState::_get_Ready_Alert_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_get_Ready_Alert_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRState>("OVR.OpenVR", "EVRState", "Ready_Alert_Low"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRState Ready_Alert_Low
void OVR::OpenVR::EVRState::_set_Ready_Alert_Low(::OVR::OpenVR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::_set_Ready_Alert_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRState", "Ready_Alert_Low", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVREventType
#include "OVR/OpenVR/EVREventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_None
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_None
void OVR::OpenVR::EVREventType::_set_VREvent_None(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceActivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_IpdChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_IpdChanged
void OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_IpdChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_IpdChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnterStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnterStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnterStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnterStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LeaveStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LeaveStandbyMode
void OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LeaveStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LeaveStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedDeviceRoleChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedDeviceRoleChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WatchdogWakeUpRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WatchdogWakeUpRequested
void OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WatchdogWakeUpRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WatchdogWakeUpRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LensDistortionChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LensDistortionChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LensDistortionChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LensDistortionChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PropertyChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PropertyChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PropertyChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PropertyChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessDisconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WirelessReconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WirelessReconnect
void OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WirelessReconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WirelessReconnect", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonPress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUnpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUnpress
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUnpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUnpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonTouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonTouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ButtonUntouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ButtonUntouch
void OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ButtonUntouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ButtonUntouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Press");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Press
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Press");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Press", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Unpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Unpress
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Unpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Unpress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Touch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Touch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Untouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Untouch
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Untouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Untouch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Move
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Move", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch1
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_ModeSwitch2
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DualAnalog_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DualAnalog_Cancel
void OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DualAnalog_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DualAnalog_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseMove
void OVR::OpenVR::EVREventType::_set_VREvent_MouseMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonDown
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MouseButtonUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MouseButtonUp
void OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MouseButtonUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MouseButtonUp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusEnter
void OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusEnter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FocusLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FocusLeave
void OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FocusLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FocusLeave", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Scroll"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Scroll
void OVR::OpenVR::EVREventType::_set_VREvent_Scroll(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TouchPadMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TouchPadMove
void OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TouchPadMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TouchPadMove", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusCaptured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusCaptured
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusCaptured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusCaptured", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusReleased
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusReleased", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_InputFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_InputFocusChanged
void OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_InputFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_InputFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SceneApplicationUsingWrongGraphicsAdapter
void OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SceneApplicationUsingWrongGraphicsAdapter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SceneApplicationUsingWrongGraphicsAdapter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ActionBindingReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ActionBindingReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ActionBindingReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ActionBindingReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowRenderModels
void OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleOpened
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleOpened", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ConsoleClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ConsoleClosed
void OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ConsoleClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ConsoleClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayShown
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayHidden
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardActivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardActivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardDeactivated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardThumbSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardThumbSelected
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardThumbSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardThumbSelected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardRequested
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ResetDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ResetDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ResetDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ResetDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RenderToast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RenderToast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RenderToast"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RenderToast
void OVR::OpenVR::EVREventType::_set_VREvent_RenderToast(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RenderToast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RenderToast", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageLoaded
void OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ShowKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ShowKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ShowKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ShowKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_HideKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_HideKeyboard
void OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_HideKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_HideKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusGained
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlayGamepadFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlayGamepadFocusLost
void OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlayGamepadFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlayGamepadFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_OverlaySharedTextureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_OverlaySharedTextureChanged
void OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_OverlaySharedTextureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_OverlaySharedTextureChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTriggered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTriggered
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTriggered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTriggered", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ImageFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ImageFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ImageFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ImageFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardOverlayCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardOverlayCreated
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardOverlayCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardOverlayCreated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SwitchGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SwitchGamepadFocus
void OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SwitchGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SwitchGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RequestScreenshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RequestScreenshot
void OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RequestScreenshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RequestScreenshot", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotTaken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotTaken
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotTaken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotTaken", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotFailed
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SubmitScreenshotToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SubmitScreenshotToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ScreenshotProgressToDashboard
void OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ScreenshotProgressToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PrimaryDashboardDeviceChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewShown
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_RoomViewHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_RoomViewHidden
void OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_RoomViewHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_RoomViewHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Shown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Shown
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Shown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Shown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Hidden
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_BeginInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_BeginInteraction
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_BeginInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_BeginInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Notification_Destroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Notification_Destroyed
void OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Notification_Destroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Notification_Destroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Quit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Quit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Quit
void OVR::OpenVR::EVREventType::_set_VREvent_Quit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Quit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessQuit
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAborted_UserPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAborted_UserPrompt
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAborted_UserPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAborted_UserPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_QuitAcknowledged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_QuitAcknowledged
void OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_QuitAcknowledged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_QuitAcknowledged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DriverRequestedQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DriverRequestedQuit
void OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DriverRequestedQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DriverRequestedQuit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneUniverseHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneTempDataHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ChaperoneSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SeatedZeroPoseReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SeatedZeroPoseReset
void OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SeatedZeroPoseReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SeatedZeroPoseReset", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_AudioSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_AudioSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_AudioSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_AudioSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_BackgroundSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_BackgroundSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_BackgroundSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_BackgroundSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_CameraSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_CameraSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_CameraSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_CameraSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ReprojectionSettingHasChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ReprojectionSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ModelSkinSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnvironmentSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PowerSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PowerSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PowerSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PowerSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
void OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SteamVRSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SteamVRSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_LighthouseSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_LighthouseSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NullSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NullSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NullSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NullSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_UserInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_NotificationsSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_NotificationsSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerfSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerfSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerfSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerfSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_DashboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_DashboardSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_DashboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_DashboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterfaceSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackersSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackersSectionSettingChanged
void OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackersSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackersSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_StatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_StatusUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_StatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_StatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_WebInterface_InstallDriverCompleted
void OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MCImageUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MCImageUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MCImageUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MCImageUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateStarted
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_FirmwareUpdateFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_FirmwareUpdateFinished
void OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_FirmwareUpdateFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_FirmwareUpdateFinished", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardClosed
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardClosed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardCharInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardCharInput
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardCharInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardCharInput", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_KeyboardDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_KeyboardDone
void OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_KeyboardDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_KeyboardDone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionAborted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppStarted
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationListUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationListUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationListUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationListUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationMimeTypeLoad
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationMimeTypeLoad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
void OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessConnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessConnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_ProcessDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_ProcessDisconnected
void OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_ProcessDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_ProcessDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_MirrorWindowHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
void OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StartVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_StopVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_PauseVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_TrackedCamera_EditingSurface
void OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_TrackedCamera_EditingSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_EnableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_EnableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_DisableCapture
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_DisableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_PerformanceTest_FidelityLevel
void OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlay_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlay_Closed
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlay_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlay_Closed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_MessageOverlayCloseRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_MessageOverlayCloseRequested
void OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_MessageOverlayCloseRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_MessageOverlayCloseRequested", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_HapticVibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_HapticVibration
void OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_HapticVibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_HapticVibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_BindingLoadSuccessful");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_BindingLoadSuccessful
void OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_BindingLoadSuccessful");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_BindingLoadSuccessful", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestReloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestReloaded
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestReloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestReloaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_Input_ActionManifestLoadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_Input_ActionManifestLoadFailed
void OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_Input_ActionManifestLoadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_Input_ActionManifestLoadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_PoseUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_PoseUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_PoseUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_PoseUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_DescriptorUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_DescriptorUpdated
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_DescriptorUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_DescriptorUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestPoseUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestPoseUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestPoseUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestPoseUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_SpatialAnchors_RequestDescriptorUpdate
void OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_SpatialAnchors_RequestDescriptorUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_SpatialAnchors_RequestDescriptorUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_Start
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
::OVR::OpenVR::EVREventType OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVREventType>("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVREventType VREvent_VendorSpecific_Reserved_End
void OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End(::OVR::OpenVR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVREventType", "VREvent_VendorSpecific_Reserved_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVREventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVREventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDeviceActivityLevel
#include "OVR/OpenVR/EDeviceActivityLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
::OVR::OpenVR::EDeviceActivityLevel OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDeviceActivityLevel>("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
void OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby(::OVR::OpenVR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EDeviceActivityLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDeviceActivityLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRButtonId
#include "OVR/OpenVR/EVRButtonId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_System"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_System
void OVR::OpenVR::EVRButtonId::_set_k_EButton_System(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_System", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ApplicationMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ApplicationMenu
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ApplicationMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ApplicationMenu", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Grip
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Grip", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Left
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Up
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Right
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_DPad_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_DPad_Down
void OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_DPad_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_DPad_Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_ProximitySensor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_ProximitySensor
void OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_ProximitySensor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_ProximitySensor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis0
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis1
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis2
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis3
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Axis4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Axis4
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Axis4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Axis4", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Touchpad
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Touchpad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_SteamVR_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_SteamVR_Trigger
void OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_SteamVR_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_SteamVR_Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Dashboard_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Dashboard_Back
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Dashboard_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Dashboard_Back", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_A
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_A", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_B
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_B", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Knuckles_JoyStick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Knuckles_JoyStick
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Knuckles_JoyStick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Knuckles_JoyStick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
::OVR::OpenVR::EVRButtonId OVR::OpenVR::EVRButtonId::_get_k_EButton_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_get_k_EButton_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRButtonId>("OVR.OpenVR", "EVRButtonId", "k_EButton_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRButtonId k_EButton_Max
void OVR::OpenVR::EVRButtonId::_set_k_EButton_Max(::OVR::OpenVR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::_set_k_EButton_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRButtonId", "k_EButton_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRButtonId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRButtonId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMouseButton
#include "OVR/OpenVR/EVRMouseButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Left
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Left
void OVR::OpenVR::EVRMouseButton::_set_Left(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Right
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Right
void OVR::OpenVR::EVRMouseButton::_set_Right(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMouseButton Middle
::OVR::OpenVR::EVRMouseButton OVR::OpenVR::EVRMouseButton::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMouseButton>("OVR.OpenVR", "EVRMouseButton", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMouseButton Middle
void OVR::OpenVR::EVRMouseButton::_set_Middle(::OVR::OpenVR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMouseButton", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRMouseButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMouseButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EDualAnalogWhich
#include "OVR/OpenVR/EDualAnalogWhich.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Left
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
::OVR::OpenVR::EDualAnalogWhich OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_get_k_EDualAnalog_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EDualAnalogWhich>("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EDualAnalogWhich k_EDualAnalog_Right
void OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right(::OVR::OpenVR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::_set_k_EDualAnalog_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EDualAnalogWhich", "k_EDualAnalog_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EDualAnalogWhich::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EDualAnalogWhich::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError None
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError None
void OVR::OpenVR::EVRInputError::_set_None(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NameNotFound
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NameNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NameNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NameNotFound
void OVR::OpenVR::EVRInputError::_set_NameNotFound(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NameNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError WrongType
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_WrongType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_WrongType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "WrongType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError WrongType
void OVR::OpenVR::EVRInputError::_set_WrongType(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_WrongType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "WrongType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidHandle
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidHandle
void OVR::OpenVR::EVRInputError::_set_InvalidHandle(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidParam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidParam
void OVR::OpenVR::EVRInputError::_set_InvalidParam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoSteam
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoSteam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoSteam
void OVR::OpenVR::EVRInputError::_set_NoSteam(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoSteam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MaxCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MaxCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MaxCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
void OVR::OpenVR::EVRInputError::_set_MaxCapacityReached(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MaxCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MaxCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError IPCError
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_IPCError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_IPCError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "IPCError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError IPCError
void OVR::OpenVR::EVRInputError::_set_IPCError(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_IPCError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "IPCError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoActiveActionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoActiveActionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoActiveActionSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
void OVR::OpenVR::EVRInputError::_set_NoActiveActionSet(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoActiveActionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoActiveActionSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidDevice
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidDevice
void OVR::OpenVR::EVRInputError::_set_InvalidDevice(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidSkeleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidSkeleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
void OVR::OpenVR::EVRInputError::_set_InvalidSkeleton(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidSkeleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidBoneCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidBoneCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidBoneCount"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
void OVR::OpenVR::EVRInputError::_set_InvalidBoneCount(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidBoneCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidBoneCount", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_InvalidCompressedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidCompressedData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
void OVR::OpenVR::EVRInputError::_set_InvalidCompressedData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_InvalidCompressedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidCompressedData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoData
void OVR::OpenVR::EVRInputError::_set_NoData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
void OVR::OpenVR::EVRInputError::_set_BufferTooSmall(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
void OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
::OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MissingSkeletonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_get_MissingSkeletonData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MissingSkeletonData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
void OVR::OpenVR::EVRInputError::_set_MissingSkeletonData(::OVR::OpenVR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::_set_MissingSkeletonData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MissingSkeletonData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRInputError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
void OVR::OpenVR::EVRSpatialAnchorError::_set_Success(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
void OVR::OpenVR::EVRSpatialAnchorError::_set_Internal(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
void OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
void OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
void OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
void OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
::OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver(::OVR::OpenVR::EVRSpatialAnchorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSpatialAnchorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSpatialAnchorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EHiddenAreaMeshType
#include "OVR/OpenVR/EHiddenAreaMeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
::OVR::OpenVR::EHiddenAreaMeshType OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EHiddenAreaMeshType>("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
void OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max(::OVR::OpenVR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EHiddenAreaMeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EHiddenAreaMeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerAxisType
#include "OVR/OpenVR/EVRControllerAxisType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_None
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_TrackPad
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Joystick
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Joystick", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
::OVR::OpenVR::EVRControllerAxisType OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerAxisType>("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerAxisType k_eControllerAxis_Trigger
void OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger(::OVR::OpenVR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerAxisType", "k_eControllerAxis_Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRControllerAxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerAxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRControllerEventOutputType
#include "OVR/OpenVR/EVRControllerEventOutputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
::OVR::OpenVR::EVRControllerEventOutputType OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRControllerEventOutputType>("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRControllerEventOutputType ControllerEventOutput_VREvents
void OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents(::OVR::OpenVR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRControllerEventOutputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRControllerEventOutputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ECollisionBoundsStyle
#include "OVR/OpenVR/ECollisionBoundsStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
::OVR::OpenVR::ECollisionBoundsStyle OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ECollisionBoundsStyle>("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
void OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT(::OVR::OpenVR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ECollisionBoundsStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ECollisionBoundsStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError None
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError None
void OVR::OpenVR::EVROverlayError::_set_None(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnknownOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnknownOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnknownOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
void OVR::OpenVR::EVROverlayError::_set_UnknownOverlay(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnknownOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnknownOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
void OVR::OpenVR::EVROverlayError::_set_InvalidHandle(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
void OVR::OpenVR::EVROverlayError::_set_PermissionDenied(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
void OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
void OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
void OVR::OpenVR::EVROverlayError::_set_KeyTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NameTooLong
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NameTooLong
void OVR::OpenVR::EVROverlayError::_set_NameTooLong(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongTransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_WrongTransformType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongTransformType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
void OVR::OpenVR::EVROverlayError::_set_WrongTransformType(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_WrongTransformType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongTransformType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
void OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
void OVR::OpenVR::EVROverlayError::_set_InvalidParameter(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
void OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
void OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError RequestFailed
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError RequestFailed
void OVR::OpenVR::EVROverlayError::_set_RequestFailed(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
void OVR::OpenVR::EVROverlayError::_set_InvalidTexture(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
void OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NoNeighbor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_NoNeighbor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NoNeighbor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
void OVR::OpenVR::EVROverlayError::_set_NoNeighbor(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_NoNeighbor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NoNeighbor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
void OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
void OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
void OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
void OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
::OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureNotLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_get_TextureNotLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureNotLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
void OVR::OpenVR::EVROverlayError::_set_TextureNotLocked(::OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::_set_TextureNotLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureNotLocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVROverlayError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationType
#include "OVR/OpenVR/EVRApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Other
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Other", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Scene
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Scene", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Overlay
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Background
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Background", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Utility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Utility
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Utility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Utility", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_VRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_VRMonitor
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_VRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_VRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_SteamWatchdog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_SteamWatchdog
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_SteamWatchdog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_SteamWatchdog", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Bootstrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Bootstrapper
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Bootstrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Bootstrapper", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
::OVR::OpenVR::EVRApplicationType OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_get_VRApplication_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationType>("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationType VRApplication_Max
void OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max(::OVR::OpenVR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::_set_VRApplication_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationType", "VRApplication_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRFirmwareError
#include "OVR/OpenVR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError None
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError None
void OVR::OpenVR::EVRFirmwareError::_set_None(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Success
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Success
void OVR::OpenVR::EVRFirmwareError::_set_Success(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRFirmwareError Fail
::OVR::OpenVR::EVRFirmwareError OVR::OpenVR::EVRFirmwareError::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRFirmwareError>("OVR.OpenVR", "EVRFirmwareError", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRFirmwareError Fail
void OVR::OpenVR::EVRFirmwareError::_set_Fail(::OVR::OpenVR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRFirmwareError", "Fail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRFirmwareError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRFirmwareError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationError
#include "OVR/OpenVR/EVRNotificationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError OK
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError OK
void OVR::OpenVR::EVRNotificationError::_set_OK(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidNotificationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidNotificationId
void OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidNotificationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidNotificationId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_NotificationQueueFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError NotificationQueueFull
void OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_NotificationQueueFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "NotificationQueueFull", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_InvalidOverlayHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError InvalidOverlayHandle
void OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_InvalidOverlayHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "InvalidOverlayHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
::OVR::OpenVR::EVRNotificationError OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationError>("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationError SystemWithUserValueAlreadyExists
void OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists(::OVR::OpenVR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationError", "SystemWithUserValueAlreadyExists", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRNotificationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalMotionRange
#include "OVR/OpenVR/EVRSkeletalMotionRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithController", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
::OVR::OpenVR::EVRSkeletalMotionRange OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_get_WithoutController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalMotionRange>("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalMotionRange WithoutController
void OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController(::OVR::OpenVR::EVRSkeletalMotionRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::_set_WithoutController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalMotionRange", "WithoutController", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalMotionRange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInitError
#include "OVR/OpenVR/EVRInitError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError None
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError None
void OVR::OpenVR::EVRInitError::_set_None(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Unknown
void OVR::OpenVR::EVRInitError::_set_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InstallationCorrupt
void OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRClientDLLNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FileNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FileNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FactoryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InterfaceNotFound
void OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidInterface
void OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_UserConfigDirectoryInvalid
void OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFound
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotInitialized
void OVR::OpenVR::EVRInitError::_set_Init_NotInitialized(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotFound
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoConfigPath
void OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoLogPath
void OVR::OpenVR::EVRInitError::_set_Init_NoLogPath(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_PathRegistryNotWritable
void OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AppInfoInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Retry
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Retry
void OVR::OpenVR::EVRInitError::_set_Init_Retry(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InitCanceledByUser
void OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_AnotherAppLaunching
void OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_SettingsInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_ShuttingDown
void OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TooManyObjects
void OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NoServerForBackgroundApp
void OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotSupportedWithCompositor
void OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToUtilityApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_Internal
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_Internal
void OVR::OpenVR::EVRInitError::_set_Init_Internal(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdDriverIdIsNone
void OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_HmdNotFoundPresenceFailed
void OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRMonitorStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_LowPowerWatchdogNotSupported
void OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_InvalidApplicationType
void OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_NotAvailableToWatchdogApps
void OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_WatchdogDisabledInSettings
void OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRDashboardStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeNotFound
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRHomeStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_RebootingBusy
void OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareUpdateBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_FirmwareRecoveryBusy
void OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_USBServiceBusy
void OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_VRWebHelperStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_VRWebHelperStartupFailed
void OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_VRWebHelperStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_VRWebHelperStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Init_TrackerManagerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Init_TrackerManagerInitFailed
void OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Init_TrackerManagerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Init_TrackerManagerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Failed
void OVR::OpenVR::EVRInitError::_set_Driver_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_Unknown
void OVR::OpenVR::EVRInitError::_set_Driver_Unknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotLoaded
void OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_RuntimeOutOfDate
void OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdInUse
void OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_NotCalibrated
void OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_CalibrationInvalid
void OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayNotFound
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDriverIdOutOfBounds
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Driver_HmdDisplayMirrored
void OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ServerInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_SharedStateInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_MutexInitFailed
void OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_Failed
void OVR::OpenVR::EVRInitError::_set_IPC_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorConnectFailed
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_CompositorInvalidConnectResponse
void OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_Failed
void OVR::OpenVR::EVRInitError::_set_Compositor_Failed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_D3D11HardwareRequired
void OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_FirmwareRequiresUpdate
void OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_OverlayInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_ScreenshotsInitFailed
void OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Compositor_UnableToCreateDevice
void OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_WindowsNotInDevMode
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_UserDataError
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
::OVR::OpenVR::EVRInitError OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInitError>("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInitError Steam_SteamInstallationNotFound
void OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound(::OVR::OpenVR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRInitError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInitError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotType
#include "OVR/OpenVR/EVRScreenshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType None
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType None
void OVR::OpenVR::EVRScreenshotType::_set_None(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Mono
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Mono
void OVR::OpenVR::EVRScreenshotType::_set_Mono(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Stereo
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Stereo
void OVR::OpenVR::EVRScreenshotType::_set_Stereo(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType Cubemap
void OVR::OpenVR::EVRScreenshotType::_set_Cubemap(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_MonoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType MonoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_MonoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "MonoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
::OVR::OpenVR::EVRScreenshotType OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotType>("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotType StereoPanorama
void OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama(::OVR::OpenVR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotType", "StereoPanorama", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotPropertyFilenames
#include "OVR/OpenVR/EVRScreenshotPropertyFilenames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_Preview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames Preview
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_Preview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "Preview", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
::OVR::OpenVR::EVRScreenshotPropertyFilenames OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_get_VR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotPropertyFilenames>("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotPropertyFilenames VR
void OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR(::OVR::OpenVR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::_set_VR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotPropertyFilenames", "VR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotPropertyFilenames::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError None
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError None
void OVR::OpenVR::EVRTrackedCameraError::_set_None(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
void OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
void OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
void OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
void OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
::OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(::OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameLayout
#include "OVR/OpenVR/EVRTrackedCameraFrameLayout.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Mono
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout Stereo
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_VerticalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout VerticalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_VerticalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "VerticalLayout", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
::OVR::OpenVR::EVRTrackedCameraFrameLayout OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_get_HorizontalLayout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameLayout>("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameLayout HorizontalLayout
void OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout(::OVR::OpenVR::EVRTrackedCameraFrameLayout value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::_set_HorizontalLayout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameLayout", "HorizontalLayout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameLayout::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraFrameType
#include "OVR/OpenVR/EVRTrackedCameraFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Distorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Distorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Distorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_Undistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType Undistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_Undistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MaximumUndistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MaximumUndistorted
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MaximumUndistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
::OVR::OpenVR::EVRTrackedCameraFrameType OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRTrackedCameraFrameType>("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(::OVR::OpenVR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRTrackedCameraFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVSync
#include "OVR/OpenVR/EVSync.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync None
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync None
void OVR::OpenVR::EVSync::_set_None(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync WaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_WaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_WaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "WaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync WaitRender
void OVR::OpenVR::EVSync::_set_WaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_WaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "WaitRender", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVSync NoWaitRender
::OVR::OpenVR::EVSync OVR::OpenVR::EVSync::_get_NoWaitRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_get_NoWaitRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVSync>("OVR.OpenVR", "EVSync", "NoWaitRender"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVSync NoWaitRender
void OVR::OpenVR::EVSync::_set_NoWaitRender(::OVR::OpenVR::EVSync value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::_set_NoWaitRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVSync", "NoWaitRender", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVSync::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVSync::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRMuraCorrectionMode
#include "OVR/OpenVR/EVRMuraCorrectionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode Default
void OVR::OpenVR::EVRMuraCorrectionMode::_set_Default(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
::OVR::OpenVR::EVRMuraCorrectionMode OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_get_NoCorrection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRMuraCorrectionMode>("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRMuraCorrectionMode NoCorrection
void OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection(::OVR::OpenVR::EVRMuraCorrectionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::_set_NoCorrection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRMuraCorrectionMode", "NoCorrection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRMuraCorrectionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.Imu_OffScaleFlags
#include "OVR/OpenVR/Imu_OffScaleFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_AccelZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_AccelZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_AccelZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_AccelZ", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroX
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroY
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroY", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
::OVR::OpenVR::Imu_OffScaleFlags OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_get_OffScale_GyroZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::Imu_OffScaleFlags>("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.Imu_OffScaleFlags OffScale_GyroZ
void OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ(::OVR::OpenVR::Imu_OffScaleFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::_set_OffScale_GyroZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "Imu_OffScaleFlags", "OffScale_GyroZ", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::Imu_OffScaleFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::Imu_OffScaleFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationError
#include "OVR/OpenVR/EVRApplicationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError None
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError None
void OVR::OpenVR::EVRApplicationError::_set_None(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError AppKeyAlreadyExists
void OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoManifest
void OVR::OpenVR::EVRApplicationError::_set_NoManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError NoApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError NoApplication
void OVR::OpenVR::EVRApplicationError::_set_NoApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidIndex
void OVR::OpenVR::EVRApplicationError::_set_InvalidIndex(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownApplication
void OVR::OpenVR::EVRApplicationError::_set_UnknownApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IPCFailed
void OVR::OpenVR::EVRApplicationError::_set_IPCFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyRunning
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidManifest
void OVR::OpenVR::EVRApplicationError::_set_InvalidManifest(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidApplication
void OVR::OpenVR::EVRApplicationError::_set_InvalidApplication(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchFailed
void OVR::OpenVR::EVRApplicationError::_set_LaunchFailed(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError ApplicationAlreadyStarting
void OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError LaunchInProgress
void OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError OldApplicationQuitting
void OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError TransitionAborted
void OVR::OpenVR::EVRApplicationError::_set_TransitionAborted(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError IsTemplate
void OVR::OpenVR::EVRApplicationError::_set_IsTemplate(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError SteamVRIsExiting
void OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError BufferTooSmall
void OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError PropertyNotSet
void OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError UnknownProperty
void OVR::OpenVR::EVRApplicationError::_set_UnknownProperty(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
::OVR::OpenVR::EVRApplicationError OVR::OpenVR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationError>("OVR.OpenVR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationError InvalidParameter
void OVR::OpenVR::EVRApplicationError::_set_InvalidParameter(::OVR::OpenVR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationError", "InvalidParameter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationProperty
#include "OVR/OpenVR/EVRApplicationProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Name_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Name_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Name_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Name_String
void OVR::OpenVR::EVRApplicationProperty::_set_Name_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Name_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Name_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LaunchType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LaunchType_String
void OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LaunchType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LaunchType_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WorkingDirectory_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WorkingDirectory_String
void OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WorkingDirectory_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WorkingDirectory_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_BinaryPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty BinaryPath_String
void OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_BinaryPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "BinaryPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Arguments_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Arguments_String
void OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Arguments_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Arguments_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_URL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_URL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "URL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty URL_String
void OVR::OpenVR::EVRApplicationProperty::_set_URL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_URL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "URL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Description_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Description_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Description_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Description_String
void OVR::OpenVR::EVRApplicationProperty::_set_Description_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Description_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Description_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_NewsURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty NewsURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_NewsURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "NewsURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ImagePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ImagePath_String
void OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ImagePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ImagePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_Source_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_Source_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "Source_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty Source_String
void OVR::OpenVR::EVRApplicationProperty::_set_Source_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_Source_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "Source_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty ActionManifestURL_String
void OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsDashboardOverlay_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsDashboardOverlay_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsTemplate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsTemplate_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsTemplate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsTemplate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInstanced_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInstanced_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInstanced_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInstanced_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_IsInternal_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty IsInternal_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_IsInternal_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "IsInternal_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
void OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
::OVR::OpenVR::EVRApplicationProperty OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_get_LastLaunchTime_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationProperty>("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationProperty LastLaunchTime_Uint64
void OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64(::OVR::OpenVR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::_set_LastLaunchTime_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationProperty", "LastLaunchTime_Uint64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRApplicationTransitionState
#include "OVR/OpenVR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_None
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
::OVR::OpenVR::EVRApplicationTransitionState OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRApplicationTransitionState>("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
void OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched(::OVR::OpenVR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRApplicationTransitionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRApplicationTransitionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "OK"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState OK
void OVR::OpenVR::ChaperoneCalibrationState::_set_OK(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_BaseStationRemoved
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationUninitialized
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_BaseStationConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_BaseStationConflict
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_BaseStationConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_BaseStationConflict", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_PlayAreaInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
::OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::ChaperoneCalibrationState>("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
void OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid(::OVR::OpenVR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::ChaperoneCalibrationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::ChaperoneCalibrationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneConfigFile
#include "OVR/OpenVR/EChaperoneConfigFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Live
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Live() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Live");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Live"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Live
void OVR::OpenVR::EChaperoneConfigFile::_set_Live(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Live");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Live", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
::OVR::OpenVR::EChaperoneConfigFile OVR::OpenVR::EChaperoneConfigFile::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneConfigFile>("OVR.OpenVR", "EChaperoneConfigFile", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneConfigFile Temp
void OVR::OpenVR::EChaperoneConfigFile::_set_Temp(::OVR::OpenVR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneConfigFile", "Temp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EChaperoneConfigFile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneConfigFile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EChaperoneImportFlags
#include "OVR/OpenVR/EChaperoneImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
::OVR::OpenVR::EChaperoneImportFlags OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EChaperoneImportFlags>("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
void OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly(::OVR::OpenVR::EChaperoneImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EChaperoneImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EChaperoneImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorError
#include "OVR/OpenVR/EVRCompositorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError None
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError None
void OVR::OpenVR::EVRCompositorError::_set_None(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError RequestFailed
void OVR::OpenVR::EVRCompositorError::_set_RequestFailed(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IncompatibleVersion
void OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError DoNotHaveFocus
void OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidTexture
void OVR::OpenVR::EVRCompositorError::_set_InvalidTexture(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IsNotSceneApplication
void OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureIsOnWrongDevice
void OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError TextureUsesUnsupportedFormat
void OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError SharedTexturesNotSupported
void OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError IndexOutOfRange
void OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError AlreadySubmitted
void OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
::OVR::OpenVR::EVRCompositorError OVR::OpenVR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorError>("OVR.OpenVR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorError InvalidBounds
void OVR::OpenVR::EVRCompositorError::_set_InvalidBounds(::OVR::OpenVR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorError", "InvalidBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRCompositorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRCompositorTimingMode
#include "OVR/OpenVR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Implicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Implicit
void OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Implicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Implicit", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
::OVR::OpenVR::EVRCompositorTimingMode OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRCompositorTimingMode>("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
void OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff(::OVR::OpenVR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRCompositorTimingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRCompositorTimingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayInputMethod
#include "OVR/OpenVR/VROverlayInputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod None
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod None
void OVR::OpenVR::VROverlayInputMethod::_set_None(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod Mouse
void OVR::OpenVR::VROverlayInputMethod::_set_Mouse(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
::OVR::OpenVR::VROverlayInputMethod OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_get_DualAnalog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayInputMethod>("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayInputMethod DualAnalog
void OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog(::OVR::OpenVR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::_set_DualAnalog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayInputMethod", "DualAnalog", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayInputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayInputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayTransformType
#include "OVR/OpenVR/VROverlayTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_Absolute
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_SystemOverlay
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
::OVR::OpenVR::VROverlayTransformType OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayTransformType>("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayTransformType VROverlayTransform_TrackedComponent
void OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent(::OVR::OpenVR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VROverlayFlags
#include "OVR/OpenVR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags None
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags None
void OVR::OpenVR::VROverlayFlags::_set_None(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Curved
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Curved
void OVR::OpenVR::VROverlayFlags::_set_Curved(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags RGSS4X
void OVR::OpenVR::VROverlayFlags::_set_RGSS4X(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags NoDashboardTab
void OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags AcceptsGamepadEvents
void OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowGamepadFocus
void OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRScrollEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SendVRTouchpadEvents
void OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags ShowTouchPadScrollWheel
void OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags TransferOwnershipToInternalProcess
void OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Parallel
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SideBySide_Crossed
void OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags Panorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags Panorama
void OVR::OpenVR::VROverlayFlags::_set_Panorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags StereoPanorama
void OVR::OpenVR::VROverlayFlags::_set_StereoPanorama(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags SortWithNonSceneOverlays
void OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
::OVR::OpenVR::VROverlayFlags OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VROverlayFlags>("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VROverlayFlags VisibleInDashboard
void OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard(::OVR::OpenVR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.VRMessageOverlayResponse
#include "OVR/OpenVR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_0
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_1
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_2
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ButtonPress_3
void OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindSystemOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
::OVR::OpenVR::VRMessageOverlayResponse OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::VRMessageOverlayResponse>("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.VRMessageOverlayResponse ApplicationQuit
void OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit(::OVR::OpenVR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputMode
#include "OVR/OpenVR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
::OVR::OpenVR::EGamepadTextInputMode OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputMode>("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(::OVR::OpenVR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EGamepadTextInputLineMode
#include "OVR/OpenVR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
::OVR::OpenVR::EGamepadTextInputLineMode OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EGamepadTextInputLineMode>("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(::OVR::OpenVR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EOverlayDirection
#include "OVR/OpenVR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Up
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Up
void OVR::OpenVR::EOverlayDirection::_set_Up(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Down
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Down
void OVR::OpenVR::EOverlayDirection::_set_Down(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Left
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Left
void OVR::OpenVR::EOverlayDirection::_set_Left(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Right
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Right
void OVR::OpenVR::EOverlayDirection::_set_Right(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EOverlayDirection Count
::OVR::OpenVR::EOverlayDirection OVR::OpenVR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EOverlayDirection>("OVR.OpenVR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EOverlayDirection Count
void OVR::OpenVR::EOverlayDirection::_set_Count(::OVR::OpenVR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType
#include "OVR/OpenVR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType>("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRRenderModelError
#include "OVR/OpenVR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError None
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError None
void OVR::OpenVR::EVRRenderModelError::_set_None(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError Loading
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError Loading
void OVR::OpenVR::EVRRenderModelError::_set_Loading(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotSupported
void OVR::OpenVR::EVRRenderModelError::_set_NotSupported(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidArg
void OVR::OpenVR::EVRRenderModelError::_set_InvalidArg(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidModel
void OVR::OpenVR::EVRRenderModelError::_set_InvalidModel(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NoShapes
void OVR::OpenVR::EVRRenderModelError::_set_NoShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleShapes
void OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError TooManyVertices
void OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError MultipleTextures
void OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError BufferTooSmall
void OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughNormals
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError NotEnoughTexCoords
void OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
::OVR::OpenVR::EVRRenderModelError OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRRenderModelError>("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRRenderModelError InvalidTexture
void OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture(::OVR::OpenVR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRComponentProperty
#include "OVR/OpenVR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsStatic
void OVR::OpenVR::EVRComponentProperty::_set_IsStatic(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsVisible
void OVR::OpenVR::EVRComponentProperty::_set_IsVisible(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsTouched
void OVR::OpenVR::EVRComponentProperty::_set_IsTouched(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsPressed
void OVR::OpenVR::EVRComponentProperty::_set_IsPressed(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
::OVR::OpenVR::EVRComponentProperty OVR::OpenVR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRComponentProperty>("OVR.OpenVR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRComponentProperty IsScrolled
void OVR::OpenVR::EVRComponentProperty::_set_IsScrolled(::OVR::OpenVR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationType
#include "OVR/OpenVR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient
void OVR::OpenVR::EVRNotificationType::_set_Transient(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Persistent
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Persistent
void OVR::OpenVR::EVRNotificationType::_set_Persistent(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
::OVR::OpenVR::EVRNotificationType OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationType>("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationType Transient_SystemWithUserValue
void OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue(::OVR::OpenVR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRNotificationStyle
#include "OVR/OpenVR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle None
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle None
void OVR::OpenVR::EVRNotificationStyle::_set_None(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Application
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Application
void OVR::OpenVR::EVRNotificationStyle::_set_Application(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Disabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Enabled
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
::OVR::OpenVR::EVRNotificationStyle OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRNotificationStyle>("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRNotificationStyle Contact_Active
void OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active(::OVR::OpenVR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError None
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError None
void OVR::OpenVR::EVRSettingsError::_set_None(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError IPCFailed
void OVR::OpenVR::EVRSettingsError::_set_IPCFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError WriteFailed
void OVR::OpenVR::EVRSettingsError::_set_WriteFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError ReadFailed
void OVR::OpenVR::EVRSettingsError::_set_ReadFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError JsonParseFailed
void OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
::OVR::OpenVR::EVRSettingsError OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSettingsError>("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSettingsError UnsetSettingHasNoDefault
void OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault(::OVR::OpenVR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
::OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(::OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSkeletalTransformSpace
#include "OVR/OpenVR/EVRSkeletalTransformSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Model");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Model
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Model");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Model", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Parent
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
::OVR::OpenVR::EVRSkeletalTransformSpace OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRSkeletalTransformSpace>("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSkeletalTransformSpace Additive
void OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive(::OVR::OpenVR::EVRSkeletalTransformSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSkeletalTransformSpace", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRSkeletalTransformSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRInputFilterCancelType
#include "OVR/OpenVR/EVRInputFilterCancelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Timers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Timers
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Timers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Timers", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
::OVR::OpenVR::EVRInputFilterCancelType OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_get_VRInputFilterCancel_Momentum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EVRInputFilterCancelType>("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputFilterCancelType VRInputFilterCancel_Momentum
void OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum(::OVR::OpenVR::EVRInputFilterCancelType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::_set_VRInputFilterCancel_Momentum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputFilterCancelType", "VRInputFilterCancel_Momentum", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EVRInputFilterCancelType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EVRInputFilterCancelType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Success
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_OperationFailed
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidHandle
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_InvalidArgument
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathExists
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathExists", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_PathDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_PathDoesNotExist
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_PathDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_PathDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
::OVR::OpenVR::EIOBufferError OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_get_IOBuffer_Permission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferError>("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferError IOBuffer_Permission
void OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission(::OVR::OpenVR::EIOBufferError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::_set_IOBuffer_Permission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferError", "IOBuffer_Permission", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EIOBufferError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Read
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Read
void OVR::OpenVR::EIOBufferMode::_set_Read(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Write
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Write
void OVR::OpenVR::EIOBufferMode::_set_Write(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EIOBufferMode Create
::OVR::OpenVR::EIOBufferMode OVR::OpenVR::EIOBufferMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OVR::OpenVR::EIOBufferMode>("OVR.OpenVR", "EIOBufferMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EIOBufferMode Create
void OVR::OpenVR::EIOBufferMode::_set_Create(::OVR::OpenVR::EIOBufferMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EIOBufferMode", "Create", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& OVR::OpenVR::EIOBufferMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OVR::OpenVR::EIOBufferMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
