// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Auth.FirebaseAuth/Firebase.Auth.<CreateUserWithEmailAndPasswordAsync>c__AnonStoreyB
#include "Firebase/Auth/FirebaseAuth_-CreateUserWithEmailAndPasswordAsync-c__AnonStoreyB.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskCompletionSource`1<Firebase.Auth.FirebaseUser> taskCompletionSource
::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>*& Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::dyn_taskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::dyn_taskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taskCompletionSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Auth.FirebaseAuth $this
::Firebase::Auth::FirebaseAuth*& Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::Firebase::Auth::FirebaseAuth**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Auth.FirebaseAuth/Firebase.Auth.<CreateUserWithEmailAndPasswordAsync>c__AnonStoreyB.<>m__0
void Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::$$m__0(::System::Threading::Tasks::Task_1<::Firebase::Auth::FirebaseUser*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseAuth::$CreateUserWithEmailAndPasswordAsync$c__AnonStoreyB::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
// Including type: Firebase.Auth.FirebaseAuth
#include "Firebase/Auth/FirebaseAuth.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean swigCMemOwn
bool& Firebase::Auth::FirebaseUser::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Auth::FirebaseUser::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Auth.FirebaseAuth authProxy
::Firebase::Auth::FirebaseAuth*& Firebase::Auth::FirebaseUser::dyn_authProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::dyn_authProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authProxy"))->offset;
  return *reinterpret_cast<::Firebase::Auth::FirebaseAuth**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.get_IsEmailVerified
bool Firebase::Auth::FirebaseUser::get_IsEmailVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::get_IsEmailVerified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmailVerified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.get_UserId
::StringW Firebase::Auth::FirebaseUser::get_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::get_UserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Auth::FirebaseUser::getCPtr(::Firebase::Auth::FirebaseUser* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Auth", "FirebaseUser", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.Dispose
void Firebase::Auth::FirebaseUser::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.TokenAsync
::System::Threading::Tasks::Task_1<::StringW>* Firebase::Auth::FirebaseUser::TokenAsync(bool forceRefresh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::TokenAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TokenAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceRefresh)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(this, ___internal__method, forceRefresh);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.UpdateEmailAsync
::System::Threading::Tasks::Task* Firebase::Auth::FirebaseUser::UpdateEmailAsync(::StringW email) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::UpdateEmailAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEmailAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, email);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.UpdatePasswordAsync
::System::Threading::Tasks::Task* Firebase::Auth::FirebaseUser::UpdatePasswordAsync(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::UpdatePasswordAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePasswordAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, password);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.SendEmailVerificationAsync
::System::Threading::Tasks::Task* Firebase::Auth::FirebaseUser::SendEmailVerificationAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::SendEmailVerificationAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendEmailVerificationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.ReloadAsync
::System::Threading::Tasks::Task* Firebase::Auth::FirebaseUser::ReloadAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::ReloadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.FirebaseUser.Finalize
void Firebase::Auth::FirebaseUser::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::FirebaseUser::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Auth.Future_User
#include "Firebase/Auth/Future_User.hpp"
// Including type: Firebase.Auth.Future_User/Firebase.Auth.Action
#include "Firebase/Auth/Future_User_Action.hpp"
// Including type: Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate
#include "Firebase/Auth/Future_User_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Auth.Future_User/Firebase.Auth.<GetTask>c__AnonStorey0
#include "Firebase/Auth/Future_User_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Auth.Future_User/Firebase.Auth.Action> Callbacks
::System::Collections::Generic::Dictionary_2<int, ::Firebase::Auth::Future_User::Action*>* Firebase::Auth::Future_User::_get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_get_Callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::Firebase::Auth::Future_User::Action*>*>("Firebase.Auth", "Future_User", "Callbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Auth.Future_User/Firebase.Auth.Action> Callbacks
void Firebase::Auth::Future_User::_set_Callbacks(::System::Collections::Generic::Dictionary_2<int, ::Firebase::Auth::Future_User::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_set_Callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Auth", "Future_User", "Callbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CallbackIndex
int Firebase::Auth::Future_User::_get_CallbackIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_get_CallbackIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Auth", "Future_User", "CallbackIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CallbackIndex
void Firebase::Auth::Future_User::_set_CallbackIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_set_CallbackIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Auth", "Future_User", "CallbackIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object CallbackLock
::Il2CppObject* Firebase::Auth::Future_User::_get_CallbackLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_get_CallbackLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Auth", "Future_User", "CallbackLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object CallbackLock
void Firebase::Auth::Future_User::_set_CallbackLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::_set_CallbackLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Auth", "Future_User", "CallbackLock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Auth::Future_User::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr callbackData
::System::IntPtr& Firebase::Auth::Future_User::dyn_callbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::dyn_callbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate SWIG_CompletionCB
::Firebase::Auth::Future_User::SWIG_CompletionDelegate*& Firebase::Auth::Future_User::dyn_SWIG_CompletionCB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::dyn_SWIG_CompletionCB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SWIG_CompletionCB"))->offset;
  return *reinterpret_cast<::Firebase::Auth::Future_User::SWIG_CompletionDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Auth.Future_User..cctor
void Firebase::Auth::Future_User::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Auth", "Future_User", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Auth.Future_User.GetTask
::System::Threading::Tasks::Task_1<::Firebase::Auth::FirebaseUser*>* Firebase::Auth::Future_User::GetTask(::Firebase::Auth::Future_User* fu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::GetTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Auth", "Future_User", "GetTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fu)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Auth::FirebaseUser*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fu);
}
// Autogenerated method: Firebase.Auth.Future_User.ThrowIfDisposed
void Firebase::Auth::Future_User::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.Future_User.SetOnCompletionCallback
void Firebase::Auth::Future_User::SetOnCompletionCallback(::Firebase::Auth::Future_User::Action* userCompletionCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SetOnCompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userCompletionCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userCompletionCallback);
}
// Autogenerated method: Firebase.Auth.Future_User.SetCompletionData
void Firebase::Auth::Future_User::SetCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SetCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Auth.Future_User.SWIG_CompletionDispatcher
void Firebase::Auth::Future_User::SWIG_CompletionDispatcher(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_CompletionDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Auth", "Future_User", "SWIG_CompletionDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Firebase.Auth.Future_User.SWIG_OnCompletion
::System::IntPtr Firebase::Auth::Future_User::SWIG_OnCompletion(::Firebase::Auth::Future_User::SWIG_CompletionDelegate* cs_callback, int cs_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs_callback), ::il2cpp_utils::ExtractType(cs_key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cs_callback, cs_key);
}
// Autogenerated method: Firebase.Auth.Future_User.SWIG_FreeCompletionData
void Firebase::Auth::Future_User::SWIG_FreeCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Auth.Future_User.GetResult
::Firebase::Auth::FirebaseUser* Firebase::Auth::Future_User::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Auth::FirebaseUser*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.Future_User.Finalize
void Firebase::Auth::Future_User::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.Future_User.Dispose
void Firebase::Auth::Future_User::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Auth.Future_User/Firebase.Auth.Action
#include "Firebase/Auth/Future_User_Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.Action.Invoke
void Firebase::Auth::Future_User::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.Action.BeginInvoke
::System::IAsyncResult* Firebase::Auth::Future_User::Action::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.Action.EndInvoke
void Firebase::Auth::Future_User::Action::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate
#include "Firebase/Auth/Future_User_SWIG_CompletionDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate.Invoke
void Firebase::Auth::Future_User::SWIG_CompletionDelegate::Invoke(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_CompletionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Auth::Future_User::SWIG_CompletionDelegate::BeginInvoke(int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_CompletionDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, index, callback, object);
}
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.SWIG_CompletionDelegate.EndInvoke
void Firebase::Auth::Future_User::SWIG_CompletionDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::SWIG_CompletionDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Auth.Future_User/Firebase.Auth.<GetTask>c__AnonStorey0
#include "Firebase/Auth/Future_User_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Auth.Future_User fu
::Firebase::Auth::Future_User*& Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::dyn_fu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::dyn_fu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fu"))->offset;
  return *reinterpret_cast<::Firebase::Auth::Future_User**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskCompletionSource`1<Firebase.Auth.FirebaseUser> tcs
::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>*& Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Auth::FirebaseUser*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Auth.Future_User/Firebase.Auth.<GetTask>c__AnonStorey0.<>m__0
void Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Auth::Future_User::$GetTask$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SWIGTYPE_p_unsigned_char
#include "Firebase/Firestore/SWIGTYPE_p_unsigned_char.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::SWIGTYPE_p_unsigned_char::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SWIGTYPE_p_unsigned_char::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SWIGTYPE_p_unsigned_char.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::SWIGTYPE_p_unsigned_char::getCPtr(::Firebase::Firestore::SWIGTYPE_p_unsigned_char* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SWIGTYPE_p_unsigned_char::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SWIGTYPE_p_unsigned_char", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreCpp
#include "Firebase/Firestore/FirestoreCpp.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
// Including type: Firebase.FirebaseApp
#include "Firebase/FirebaseApp.hpp"
// Including type: Firebase.Firestore.FieldToValueMap
#include "Firebase/Firestore/FieldToValueMap.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.WriteBatchProxy
#include "Firebase/Firestore/WriteBatchProxy.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Firebase.Firestore.SetOptionsProxy
#include "Firebase/Firestore/SetOptionsProxy.hpp"
// Including type: Firebase.Firestore.FieldValueVector
#include "Firebase/Firestore/FieldValueVector.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotVector
#include "Firebase/Firestore/DocumentSnapshotVector.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/DocumentSnapshotProxy_ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirestoreCpp.GetFirestoreInstance
::Firebase::Firestore::FirestoreProxy* Firebase::Firestore::FirestoreCpp::GetFirestoreInstance(::Firebase::FirebaseApp* app) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::GetFirestoreInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "GetFirestoreInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(app)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirestoreProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, app);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ReleaseFirestoreInstance
void Firebase::Firestore::FirestoreCpp::ReleaseFirestoreInstance(::Firebase::Firestore::FirestoreProxy* firestore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ReleaseFirestoreInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ReleaseFirestoreInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firestore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, firestore);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ConvertFieldValueToMap
::Firebase::Firestore::FieldToValueMap* Firebase::Firestore::FirestoreCpp::ConvertFieldValueToMap(::Firebase::Firestore::FieldValueProxy* fieldValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ConvertFieldValueToMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ConvertFieldValueToMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldToValueMap*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldValue);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ConvertMapToFieldValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FirestoreCpp::ConvertMapToFieldValue(::Firebase::Firestore::FieldToValueMap* wrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ConvertMapToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ConvertMapToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wrapper);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ConvertSnapshotToFieldValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FirestoreCpp::ConvertSnapshotToFieldValue(::Firebase::Firestore::DocumentSnapshotProxy* snapshot, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior stb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ConvertSnapshotToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ConvertSnapshotToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapshot), ::il2cpp_utils::ExtractType(stb)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, snapshot, stb);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.WriteBatchUpdate
void Firebase::Firestore::FirestoreCpp::WriteBatchUpdate(::Firebase::Firestore::WriteBatchProxy* batch, ::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::WriteBatchUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "WriteBatchUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(batch), ::il2cpp_utils::ExtractType(doc), ::il2cpp_utils::ExtractType(fieldValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, batch, doc, fieldValue);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.DocumentReferenceSetAsync
::System::Threading::Tasks::Task* Firebase::Firestore::FirestoreCpp::DocumentReferenceSetAsync(::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue, ::Firebase::Firestore::SetOptionsProxy* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::DocumentReferenceSetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "DocumentReferenceSetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc), ::il2cpp_utils::ExtractType(fieldValue), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, doc, fieldValue, options);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.DocumentReferenceUpdateAsync
::System::Threading::Tasks::Task* Firebase::Firestore::FirestoreCpp::DocumentReferenceUpdateAsync(::Firebase::Firestore::DocumentReferenceProxy* doc, ::Firebase::Firestore::FieldValueProxy* fieldValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::DocumentReferenceUpdateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "DocumentReferenceUpdateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc), ::il2cpp_utils::ExtractType(fieldValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, doc, fieldValue);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.WriteBatchSet
void Firebase::Firestore::FirestoreCpp::WriteBatchSet(::Firebase::Firestore::WriteBatchProxy* writeBatch, ::Firebase::Firestore::DocumentReferenceProxy* document, ::Firebase::Firestore::FieldValueProxy* data, ::Firebase::Firestore::SetOptionsProxy* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::WriteBatchSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "WriteBatchSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writeBatch), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writeBatch, document, data, options);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ConvertFieldValueToVector
::Firebase::Firestore::FieldValueVector* Firebase::Firestore::FirestoreCpp::ConvertFieldValueToVector(::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ConvertFieldValueToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ConvertFieldValueToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueVector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.ConvertVectorToFieldValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FirestoreCpp::ConvertVectorToFieldValue(::Firebase::Firestore::FieldValueVector* wrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::ConvertVectorToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "ConvertVectorToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wrapper)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wrapper);
}
// Autogenerated method: Firebase.Firestore.FirestoreCpp.QuerySnapshotDocuments
::Firebase::Firestore::DocumentSnapshotVector* Firebase::Firestore::FirestoreCpp::QuerySnapshotDocuments(::Firebase::Firestore::QuerySnapshotProxy* snapshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCpp::QuerySnapshotDocuments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCpp", "QuerySnapshotDocuments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snapshot)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshotVector*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, snapshot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreCppPINVOKE
#include "Firebase/Firestore/FirestoreCppPINVOKE.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGPendingException
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGPendingException.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGStringHelper.hpp"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_QuerySnapshot_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_DocumentSnapshot_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_FirestoreVoid_SWIG_CompletionDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper swigExceptionHelper
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper* Firebase::Firestore::FirestoreCppPINVOKE::_get_swigExceptionHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::_get_swigExceptionHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper*>("Firebase.Firestore", "FirestoreCppPINVOKE", "swigExceptionHelper"));
}
// Autogenerated static field setter
// Set static field: static protected Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper swigExceptionHelper
void Firebase::Firestore::FirestoreCppPINVOKE::_set_swigExceptionHelper(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::_set_swigExceptionHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE", "swigExceptionHelper", value));
}
// Autogenerated static field getter
// Get static field: static protected Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper swigStringHelper
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper* Firebase::Firestore::FirestoreCppPINVOKE::_get_swigStringHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::_get_swigStringHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper*>("Firebase.Firestore", "FirestoreCppPINVOKE", "swigStringHelper"));
}
// Autogenerated static field setter
// Set static field: static protected Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper swigStringHelper
void Firebase::Firestore::FirestoreCppPINVOKE::_set_swigStringHelper(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::_set_swigStringHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE", "swigStringHelper", value));
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE..cctor
void Firebase::Firestore::FirestoreCppPINVOKE::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_GeoPointProxy
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_GeoPointProxy(double jarg1, double jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_GeoPointProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_GeoPointProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.GeoPointProxy_latitude
double Firebase::Firestore::FirestoreCppPINVOKE::GeoPointProxy_latitude(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::GeoPointProxy_latitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "GeoPointProxy_latitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.GeoPointProxy_longitude
double Firebase::Firestore::FirestoreCppPINVOKE::GeoPointProxy_longitude(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::GeoPointProxy_longitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "GeoPointProxy_longitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_GeoPointProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_GeoPointProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_GeoPointProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_GeoPointProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_TimestampProxy__SWIG_1
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_TimestampProxy__SWIG_1(int64_t jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_TimestampProxy__SWIG_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_TimestampProxy__SWIG_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.TimestampProxy_seconds
int64_t Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_seconds(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "TimestampProxy_seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.TimestampProxy_nanoseconds
int Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_nanoseconds(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_nanoseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "TimestampProxy_nanoseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.TimestampProxy_ToString
::StringW Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_ToString(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::TimestampProxy_ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "TimestampProxy_ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_TimestampProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_TimestampProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_TimestampProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_TimestampProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_QuerySnapshot_SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIG_OnCompletion(::System::Runtime::InteropServices::HandleRef jarg1, ::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate* jarg2, int jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_QuerySnapshot_SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_QuerySnapshot_SWIG_FreeCompletionData
void Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIG_FreeCompletionData(::System::Runtime::InteropServices::HandleRef jarg1, ::System::IntPtr jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_QuerySnapshot_SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_QuerySnapshot_GetResult
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_GetResult(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_QuerySnapshot_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_Future_QuerySnapshot
void Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_QuerySnapshot(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_QuerySnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_Future_QuerySnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_DocumentSnapshot_SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIG_OnCompletion(::System::Runtime::InteropServices::HandleRef jarg1, ::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate* jarg2, int jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_DocumentSnapshot_SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_DocumentSnapshot_SWIG_FreeCompletionData
void Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIG_FreeCompletionData(::System::Runtime::InteropServices::HandleRef jarg1, ::System::IntPtr jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_DocumentSnapshot_SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_DocumentSnapshot_GetResult
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_GetResult(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_DocumentSnapshot_GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_Future_DocumentSnapshot
void Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_DocumentSnapshot(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_DocumentSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_Future_DocumentSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_FirestoreVoid_SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIG_OnCompletion(::System::Runtime::InteropServices::HandleRef jarg1, ::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate* jarg2, int jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_FirestoreVoid_SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_FirestoreVoid_SWIG_FreeCompletionData
void Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIG_FreeCompletionData(::System::Runtime::InteropServices::HandleRef jarg1, ::System::IntPtr jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_FirestoreVoid_SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_Future_FirestoreVoid
void Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_FirestoreVoid(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_Future_FirestoreVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_Future_FirestoreVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_FieldPathProxy
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_FieldPathProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_FieldPathProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_FieldPathProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_FieldPathProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldPathProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldPathProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_FieldPathProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_SetOptionsProxy
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_SetOptionsProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_SetOptionsProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_SetOptionsProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_SetOptionsProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_SetOptionsProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_SetOptionsProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_SetOptionsProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_DocumentReferenceProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentReferenceProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentReferenceProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_DocumentReferenceProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_id
::StringW Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_id(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_path
::StringW Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_path(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_Collection__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Collection__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Collection__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_Collection__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_Get__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Get__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Get__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_Get__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_Delete
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Delete(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceProxy_is_valid
bool Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_is_valid(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceProxy_is_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceProxy_is_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_DocumentSnapshotProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentSnapshotProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentSnapshotProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_DocumentSnapshotProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentSnapshotProxy_id
::StringW Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_id(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentSnapshotProxy_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentSnapshotProxy_reference
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_reference(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentSnapshotProxy_reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentSnapshotProxy_exists
bool Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_exists(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentSnapshotProxy_exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentSnapshotProxy_Get__SWIG_4
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_Get__SWIG_4(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2, int jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotProxy_Get__SWIG_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentSnapshotProxy_Get__SWIG_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_FieldValueProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldValueProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldValueProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_FieldValueProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Boolean
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Boolean(bool jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Boolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Boolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Integer
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Integer(int64_t jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Integer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Integer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Double
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Double(double jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Double");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Double", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Timestamp
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Timestamp(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_String
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_String(::StringW jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Blob
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Blob(::System::Runtime::InteropServices::HandleRef jarg1, uint jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Blob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Blob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Reference
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Reference(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_GeoPoint
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_GeoPoint(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_GeoPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_GeoPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_type
int Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_type(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_is_null
bool Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_null(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_is_null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_is_map
bool Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_map(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_is_map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_boolean_value
bool Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_boolean_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_boolean_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_boolean_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_integer_value
int64_t Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_integer_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_integer_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_integer_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_double_value
double Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_double_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_double_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_double_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_timestamp_value
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_timestamp_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_timestamp_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_timestamp_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_string_value
::StringW Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_string_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_string_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_string_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_blob_value
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_blob_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_blob_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_blob_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_blob_size
uint Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_blob_size(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_blob_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_blob_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_reference_value
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_reference_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_reference_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_reference_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_geo_point_value
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_geo_point_value(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_geo_point_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_geo_point_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_is_valid
bool Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_valid(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_is_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_is_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Null
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_Delete
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_ServerTimestamp
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_ServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_ServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueProxy_IntegerIncrement
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_IntegerIncrement(int64_t jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueProxy_IntegerIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueProxy_IntegerIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_WriteBatchProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_WriteBatchProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_WriteBatchProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_WriteBatchProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.WriteBatchProxy_Delete
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchProxy_Delete(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchProxy_Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "WriteBatchProxy_Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.WriteBatchProxy_Commit
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchProxy_Commit(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchProxy_Commit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "WriteBatchProxy_Commit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_QueryProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_QueryProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_QueryProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_QueryProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.QueryProxy_Get__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::QueryProxy_Get__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::QueryProxy_Get__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "QueryProxy_Get__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.CollectionReferenceProxy_path
::StringW Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_path(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "CollectionReferenceProxy_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.CollectionReferenceProxy_Document__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_Document__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_Document__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "CollectionReferenceProxy_Document__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.CollectionReferenceProxy_Document__SWIG_1
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_Document__SWIG_1(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_Document__SWIG_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "CollectionReferenceProxy_Document__SWIG_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_CollectionReferenceProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_CollectionReferenceProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_CollectionReferenceProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_CollectionReferenceProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_QuerySnapshotProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_QuerySnapshotProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_QuerySnapshotProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_QuerySnapshotProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.QuerySnapshotProxy_size
uint Firebase::Firestore::FirestoreCppPINVOKE::QuerySnapshotProxy_size(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::QuerySnapshotProxy_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "QuerySnapshotProxy_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.SettingsProxy_kCacheSizeUnlimited_get
int64_t Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_kCacheSizeUnlimited_get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_kCacheSizeUnlimited_get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "SettingsProxy_kCacheSizeUnlimited_get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_SettingsProxy__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_SettingsProxy__SWIG_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_SettingsProxy__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_SettingsProxy__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.SettingsProxy_set_host
void Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_host(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "SettingsProxy_set_host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.SettingsProxy_set_ssl_enabled
void Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_ssl_enabled(::System::Runtime::InteropServices::HandleRef jarg1, bool jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_ssl_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "SettingsProxy_set_ssl_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.SettingsProxy_set_persistence_enabled
void Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_persistence_enabled(::System::Runtime::InteropServices::HandleRef jarg1, bool jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_persistence_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "SettingsProxy_set_persistence_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.SettingsProxy_set_cache_size_bytes
void Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_cache_size_bytes(::System::Runtime::InteropServices::HandleRef jarg1, int64_t jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SettingsProxy_set_cache_size_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "SettingsProxy_set_cache_size_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_SettingsProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_SettingsProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_SettingsProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_SettingsProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FirestoreProxy_Collection__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_Collection__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_Collection__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FirestoreProxy_Collection__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FirestoreProxy_set_settings
void Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_set_settings(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_set_settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FirestoreProxy_set_settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FirestoreProxy_batch
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_batch(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FirestoreProxy_batch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FirestoreProxy_batch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.GetFirestoreInstance
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::GetFirestoreInstance(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::GetFirestoreInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "GetFirestoreInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ReleaseFirestoreInstance
void Firebase::Firestore::FirestoreCppPINVOKE::ReleaseFirestoreInstance(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ReleaseFirestoreInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ReleaseFirestoreInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ApiHeaders_SetClientLanguage
void Firebase::Firestore::FirestoreCppPINVOKE::ApiHeaders_SetClientLanguage(::StringW jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ApiHeaders_SetClientLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ApiHeaders_SetClientLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ConvertFieldValueToMap
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::ConvertFieldValueToMap(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ConvertFieldValueToMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ConvertFieldValueToMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ConvertMapToFieldValue
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::ConvertMapToFieldValue(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ConvertMapToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ConvertMapToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ConvertSnapshotToFieldValue
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::ConvertSnapshotToFieldValue(::System::Runtime::InteropServices::HandleRef jarg1, int jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ConvertSnapshotToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ConvertSnapshotToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.WriteBatchUpdate__SWIG_0
void Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchUpdate__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2, ::System::Runtime::InteropServices::HandleRef jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchUpdate__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "WriteBatchUpdate__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceSet
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceSet(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2, ::System::Runtime::InteropServices::HandleRef jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentReferenceUpdate__SWIG_0
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceUpdate__SWIG_0(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentReferenceUpdate__SWIG_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentReferenceUpdate__SWIG_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.WriteBatchSet
void Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchSet(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2, ::System::Runtime::InteropServices::HandleRef jarg3, ::System::Runtime::InteropServices::HandleRef jarg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::WriteBatchSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "WriteBatchSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3), ::il2cpp_utils::ExtractType(jarg4)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3, jarg4);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_TransactionCallbackProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_TransactionCallbackProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_TransactionCallbackProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_TransactionCallbackProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_TransactionManagerProxy
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_TransactionManagerProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_TransactionManagerProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_TransactionManagerProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_TransactionManagerProxy
void Firebase::Firestore::FirestoreCppPINVOKE::delete_TransactionManagerProxy(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_TransactionManagerProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_TransactionManagerProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.TransactionManagerProxy_CppDispose
void Firebase::Firestore::FirestoreCppPINVOKE::TransactionManagerProxy_CppDispose(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::TransactionManagerProxy_CppDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "TransactionManagerProxy_CppDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_FieldToValueMap
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_FieldToValueMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_FieldToValueMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_FieldToValueMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMap_Insert
void Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMap_Insert(::System::Runtime::InteropServices::HandleRef jarg1, ::StringW jarg2, ::System::Runtime::InteropServices::HandleRef jarg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMap_Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMap_Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2), ::il2cpp_utils::ExtractType(jarg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2, jarg3);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMap_Iterator
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMap_Iterator(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMap_Iterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMap_Iterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_FieldToValueMap
void Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldToValueMap(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldToValueMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_FieldToValueMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMapIterator_HasMore
bool Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_HasMore(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_HasMore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMapIterator_HasMore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMapIterator_Advance
void Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_Advance(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMapIterator_Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMapIterator_UnsafeKeyView
::StringW Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_UnsafeKeyView(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_UnsafeKeyView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMapIterator_UnsafeKeyView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldToValueMapIterator_UnsafeValueView
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_UnsafeValueView(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldToValueMapIterator_UnsafeValueView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldToValueMapIterator_UnsafeValueView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_FieldToValueMapIterator
void Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldToValueMapIterator(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldToValueMapIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_FieldToValueMapIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ConvertFieldValueToVector
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::ConvertFieldValueToVector(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ConvertFieldValueToVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ConvertFieldValueToVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.ConvertVectorToFieldValue
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::ConvertVectorToFieldValue(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::ConvertVectorToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "ConvertVectorToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.QuerySnapshotDocuments
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::QuerySnapshotDocuments(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::QuerySnapshotDocuments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "QuerySnapshotDocuments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.DocumentSnapshotVector_GetCopy
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotVector_GetCopy(::System::Runtime::InteropServices::HandleRef jarg1, uint jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::DocumentSnapshotVector_GetCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "DocumentSnapshotVector_GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_DocumentSnapshotVector
void Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentSnapshotVector(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_DocumentSnapshotVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_DocumentSnapshotVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.new_FieldValueVector
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::new_FieldValueVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::new_FieldValueVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "new_FieldValueVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueVector_Size
uint Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_Size(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueVector_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueVector_GetUnsafeView
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_GetUnsafeView(::System::Runtime::InteropServices::HandleRef jarg1, uint jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_GetUnsafeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueVector_GetUnsafeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.FieldValueVector_PushBack
void Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_PushBack(::System::Runtime::InteropServices::HandleRef jarg1, ::System::Runtime::InteropServices::HandleRef jarg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::FieldValueVector_PushBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "FieldValueVector_PushBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1), ::il2cpp_utils::ExtractType(jarg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1, jarg2);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.delete_FieldValueVector
void Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldValueVector(::System::Runtime::InteropServices::HandleRef jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::delete_FieldValueVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "delete_FieldValueVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_QuerySnapshot_SWIGUpcast
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_QuerySnapshot_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_QuerySnapshot_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_DocumentSnapshot_SWIGUpcast
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_DocumentSnapshot_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_DocumentSnapshot_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.Future_FirestoreVoid_SWIGUpcast
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::Future_FirestoreVoid_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "Future_FirestoreVoid_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE.CollectionReferenceProxy_SWIGUpcast
::System::IntPtr Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_SWIGUpcast(::System::IntPtr jarg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::CollectionReferenceProxy_SWIGUpcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE", "CollectionReferenceProxy_SWIGUpcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jarg1)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jarg1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper_ExceptionDelegate.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper_ExceptionArgumentDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate applicationDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_applicationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_applicationDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "applicationDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate applicationDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_applicationDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_applicationDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "applicationDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate arithmeticDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_arithmeticDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_arithmeticDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "arithmeticDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate arithmeticDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_arithmeticDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_arithmeticDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "arithmeticDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate divideByZeroDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_divideByZeroDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_divideByZeroDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "divideByZeroDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate divideByZeroDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_divideByZeroDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_divideByZeroDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "divideByZeroDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate indexOutOfRangeDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_indexOutOfRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_indexOutOfRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "indexOutOfRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate indexOutOfRangeDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_indexOutOfRangeDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_indexOutOfRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "indexOutOfRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate invalidCastDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_invalidCastDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_invalidCastDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "invalidCastDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate invalidCastDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_invalidCastDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_invalidCastDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "invalidCastDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate invalidOperationDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_invalidOperationDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_invalidOperationDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "invalidOperationDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate invalidOperationDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_invalidOperationDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_invalidOperationDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "invalidOperationDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate ioDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_ioDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_ioDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "ioDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate ioDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_ioDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_ioDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "ioDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate nullReferenceDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_nullReferenceDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_nullReferenceDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "nullReferenceDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate nullReferenceDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_nullReferenceDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_nullReferenceDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "nullReferenceDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate outOfMemoryDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_outOfMemoryDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_outOfMemoryDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "outOfMemoryDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate outOfMemoryDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_outOfMemoryDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_outOfMemoryDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "outOfMemoryDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate overflowDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_overflowDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_overflowDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "overflowDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate overflowDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_overflowDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_overflowDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "overflowDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate systemDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_systemDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_systemDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "systemDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate systemDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_systemDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_systemDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "systemDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentNullDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentNullDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentNullDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentNullDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentNullDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentNullDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentNullDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentNullDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentOutOfRangeDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentOutOfRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_get_argumentOutOfRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentOutOfRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate argumentOutOfRangeDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentOutOfRangeDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_set_argumentOutOfRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "argumentOutOfRangeDelegate", value));
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper..cctor
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SWIGRegisterExceptionCallbacks_FirestoreCpp
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacks_FirestoreCpp(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* applicationDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* arithmeticDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* divideByZeroDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* indexOutOfRangeDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* invalidCastDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* invalidOperationDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* ioDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* nullReferenceDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* outOfMemoryDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* overflowDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate* systemExceptionDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacks_FirestoreCpp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SWIGRegisterExceptionCallbacks_FirestoreCpp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationDelegate), ::il2cpp_utils::ExtractType(arithmeticDelegate), ::il2cpp_utils::ExtractType(divideByZeroDelegate), ::il2cpp_utils::ExtractType(indexOutOfRangeDelegate), ::il2cpp_utils::ExtractType(invalidCastDelegate), ::il2cpp_utils::ExtractType(invalidOperationDelegate), ::il2cpp_utils::ExtractType(ioDelegate), ::il2cpp_utils::ExtractType(nullReferenceDelegate), ::il2cpp_utils::ExtractType(outOfMemoryDelegate), ::il2cpp_utils::ExtractType(overflowDelegate), ::il2cpp_utils::ExtractType(systemExceptionDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationDelegate, arithmeticDelegate, divideByZeroDelegate, indexOutOfRangeDelegate, invalidCastDelegate, invalidOperationDelegate, ioDelegate, nullReferenceDelegate, outOfMemoryDelegate, overflowDelegate, systemExceptionDelegate);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SWIGRegisterExceptionCallbacksArgument_FirestoreCpp
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacksArgument_FirestoreCpp(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentNullDelegate, ::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate* argumentOutOfRangeDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SWIGRegisterExceptionCallbacksArgument_FirestoreCpp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SWIGRegisterExceptionCallbacksArgument_FirestoreCpp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argumentDelegate), ::il2cpp_utils::ExtractType(argumentNullDelegate), ::il2cpp_utils::ExtractType(argumentOutOfRangeDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argumentDelegate, argumentNullDelegate, argumentOutOfRangeDelegate);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingApplicationException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingApplicationException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingApplicationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingApplicationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingArithmeticException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArithmeticException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArithmeticException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingArithmeticException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingDivideByZeroException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingDivideByZeroException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingDivideByZeroException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingDivideByZeroException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingIndexOutOfRangeException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingIndexOutOfRangeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingIndexOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingIndexOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingInvalidCastException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingInvalidCastException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingInvalidCastException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingInvalidCastException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingInvalidOperationException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingInvalidOperationException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingInvalidOperationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingInvalidOperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingIOException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingIOException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingNullReferenceException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingNullReferenceException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingNullReferenceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingNullReferenceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingOutOfMemoryException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingOutOfMemoryException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingOutOfMemoryException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingOutOfMemoryException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingOverflowException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingOverflowException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingOverflowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingOverflowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingSystemException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingSystemException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingSystemException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingSystemException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingArgumentException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingArgumentNullException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentNullException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentNullException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingArgumentNullException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper.SetPendingArgumentOutOfRangeException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentOutOfRangeException(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::SetPendingArgumentOutOfRangeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGExceptionHelper", "SetPendingArgumentOutOfRangeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, paramName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper_ExceptionDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate.Invoke
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::Invoke(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::BeginInvoke(::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionDelegate.EndInvoke
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGExceptionHelper_ExceptionArgumentDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate.Invoke
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::Invoke(::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, paramName);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::BeginInvoke(::StringW message, ::StringW paramName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, paramName, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGExceptionHelper/Firebase.Firestore.ExceptionArgumentDelegate.EndInvoke
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGExceptionHelper::ExceptionArgumentDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGPendingException
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGPendingException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Exception pendingException
::System::Exception* Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_get_pendingException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_get_pendingException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Exception*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "pendingException"));
}
// Autogenerated static field setter
// Set static field: static private System.Exception pendingException
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_set_pendingException(::System::Exception* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_set_pendingException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "pendingException", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 numExceptionsPending
int Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_get_numExceptionsPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_get_numExceptionsPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "numExceptionsPending"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 numExceptionsPending
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_set_numExceptionsPending(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::_set_numExceptionsPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "numExceptionsPending", value));
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGPendingException.Set
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::Set(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGPendingException.Retrieve
::System::Exception* Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::Retrieve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGPendingException::Retrieve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGPendingException", "Retrieve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGStringHelper.hpp"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGStringHelper_SWIGStringDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate stringDelegate
::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate* Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::_get_stringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::_get_stringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate*>("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGStringHelper", "stringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate stringDelegate
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::_set_stringDelegate(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::_set_stringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGStringHelper", "stringDelegate", value));
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper..cctor
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGStringHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper.SWIGRegisterStringCallback_FirestoreCpp
void Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGRegisterStringCallback_FirestoreCpp(::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate* stringDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGRegisterStringCallback_FirestoreCpp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGStringHelper", "SWIGRegisterStringCallback_FirestoreCpp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringDelegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringDelegate);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper.CreateString
::StringW Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::CreateString(::StringW cString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::CreateString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreCppPINVOKE/SWIGStringHelper", "CreateString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cString);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate
#include "Firebase/Firestore/FirestoreCppPINVOKE_SWIGStringHelper_SWIGStringDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate.Invoke
::StringW Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::Invoke(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, message);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::BeginInvoke(::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirestoreCppPINVOKE/Firebase.Firestore.SWIGStringHelper/Firebase.Firestore.SWIGStringDelegate.EndInvoke
::StringW Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreCppPINVOKE::SWIGStringHelper::SWIGStringDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldValueVector
#include "Firebase/Firestore/FieldValueVector.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FieldValueVector::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FieldValueVector::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::FieldValueVector::getCPtr(::Firebase::Firestore::FieldValueVector* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueVector", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.Dispose
void Firebase::Firestore::FieldValueVector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.Size
uint Firebase::Firestore::FieldValueVector::Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.GetUnsafeView
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueVector::GetUnsafeView(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::GetUnsafeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnsafeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, i);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.PushBack
void Firebase::Firestore::FieldValueVector::PushBack(::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::PushBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueVector.Finalize
void Firebase::Firestore::FieldValueVector::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueVector::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.DocumentSnapshotVector
#include "Firebase/Firestore/DocumentSnapshotVector.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::DocumentSnapshotVector::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotVector::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::DocumentSnapshotVector::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotVector::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotVector.Dispose
void Firebase::Firestore::DocumentSnapshotVector::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotVector::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotVector.GetCopy
::Firebase::Firestore::DocumentSnapshotProxy* Firebase::Firestore::DocumentSnapshotVector::GetCopy(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotVector::GetCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshotProxy*, false>(this, ___internal__method, i);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotVector.Finalize
void Firebase::Firestore::DocumentSnapshotVector::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotVector::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldToValueMapIterator
#include "Firebase/Firestore/FieldToValueMapIterator.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FieldToValueMapIterator::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FieldToValueMapIterator::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.Dispose
void Firebase::Firestore::FieldToValueMapIterator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.HasMore
bool Firebase::Firestore::FieldToValueMapIterator::HasMore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::HasMore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasMore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.Advance
void Firebase::Firestore::FieldToValueMapIterator::Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.UnsafeKeyView
::StringW Firebase::Firestore::FieldToValueMapIterator::UnsafeKeyView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::UnsafeKeyView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeKeyView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.UnsafeValueView
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldToValueMapIterator::UnsafeValueView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::UnsafeValueView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsafeValueView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMapIterator.Finalize
void Firebase::Firestore::FieldToValueMapIterator::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMapIterator::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldToValueMap
#include "Firebase/Firestore/FieldToValueMap.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.FieldToValueMapIterator
#include "Firebase/Firestore/FieldToValueMapIterator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FieldToValueMap::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FieldToValueMap::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMap.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::FieldToValueMap::getCPtr(::Firebase::Firestore::FieldToValueMap* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldToValueMap", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMap.Dispose
void Firebase::Firestore::FieldToValueMap::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMap.Insert
void Firebase::Firestore::FieldToValueMap::Insert(::StringW key, ::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMap.Iterator
::Firebase::Firestore::FieldToValueMapIterator* Firebase::Firestore::FieldToValueMap::Iterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::Iterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Iterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldToValueMapIterator*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldToValueMap.Finalize
void Firebase::Firestore::FieldToValueMap::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldToValueMap::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.TransactionManagerProxy
#include "Firebase/Firestore/TransactionManagerProxy.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::TransactionManagerProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManagerProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::TransactionManagerProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManagerProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.TransactionManagerProxy.Dispose
void Firebase::Firestore::TransactionManagerProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManagerProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TransactionManagerProxy.CppDispose
void Firebase::Firestore::TransactionManagerProxy::CppDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManagerProxy::CppDispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CppDispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TransactionManagerProxy.Finalize
void Firebase::Firestore::TransactionManagerProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManagerProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.TransactionCallbackProxy
#include "Firebase/Firestore/TransactionCallbackProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::TransactionCallbackProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionCallbackProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::TransactionCallbackProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionCallbackProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.TransactionCallbackProxy.Dispose
void Firebase::Firestore::TransactionCallbackProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionCallbackProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ApiHeaders
#include "Firebase/Firestore/ApiHeaders.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.ApiHeaders.SetClientLanguage
void Firebase::Firestore::ApiHeaders::SetClientLanguage(::StringW languageToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ApiHeaders::SetClientLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ApiHeaders", "SetClientLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(languageToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, languageToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
// Including type: Firebase.Firestore.CollectionReferenceProxy
#include "Firebase/Firestore/CollectionReferenceProxy.hpp"
// Including type: Firebase.Firestore.SettingsProxy
#include "Firebase/Firestore/SettingsProxy.hpp"
// Including type: Firebase.Firestore.WriteBatchProxy
#include "Firebase/Firestore/WriteBatchProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FirestoreProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FirestoreProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::FirestoreProxy::getCPtr(::Firebase::Firestore::FirestoreProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirestoreProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.Dispose
void Firebase::Firestore::FirestoreProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.Collection
::Firebase::Firestore::CollectionReferenceProxy* Firebase::Firestore::FirestoreProxy::Collection(::StringW collectionPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::Collection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collectionPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReferenceProxy*, false>(this, ___internal__method, collectionPath);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.set_settings
void Firebase::Firestore::FirestoreProxy::set_settings(::Firebase::Firestore::SettingsProxy* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::set_settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.batch
::Firebase::Firestore::WriteBatchProxy* Firebase::Firestore::FirestoreProxy::batch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::batch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "batch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatchProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreProxy.Finalize
void Firebase::Firestore::FirestoreProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SettingsProxy
#include "Firebase/Firestore/SettingsProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 kCacheSizeUnlimited
int64_t Firebase::Firestore::SettingsProxy::_get_kCacheSizeUnlimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::_get_kCacheSizeUnlimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Firebase.Firestore", "SettingsProxy", "kCacheSizeUnlimited"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 kCacheSizeUnlimited
void Firebase::Firestore::SettingsProxy::_set_kCacheSizeUnlimited(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::_set_kCacheSizeUnlimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SettingsProxy", "kCacheSizeUnlimited", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::SettingsProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::SettingsProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy..cctor
void Firebase::Firestore::SettingsProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SettingsProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::SettingsProxy::getCPtr(::Firebase::Firestore::SettingsProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SettingsProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.Dispose
void Firebase::Firestore::SettingsProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.set_host
void Firebase::Firestore::SettingsProxy::set_host(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::set_host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.set_ssl_enabled
void Firebase::Firestore::SettingsProxy::set_ssl_enabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::set_ssl_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ssl_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.set_persistence_enabled
void Firebase::Firestore::SettingsProxy::set_persistence_enabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::set_persistence_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_persistence_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.set_cache_size_bytes
void Firebase::Firestore::SettingsProxy::set_cache_size_bytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::set_cache_size_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cache_size_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.SettingsProxy.Finalize
void Firebase::Firestore::SettingsProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SettingsProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::QuerySnapshotProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::QuerySnapshotProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshotProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::QuerySnapshotProxy::getCPtr(::Firebase::Firestore::QuerySnapshotProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "QuerySnapshotProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshotProxy.Dispose
void Firebase::Firestore::QuerySnapshotProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshotProxy.size
uint Firebase::Firestore::QuerySnapshotProxy::size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::size");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshotProxy.Finalize
void Firebase::Firestore::QuerySnapshotProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshotProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.CollectionReferenceProxy
#include "Firebase/Firestore/CollectionReferenceProxy.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::CollectionReferenceProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.CollectionReferenceProxy.path
::StringW Firebase::Firestore::CollectionReferenceProxy::path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::path");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReferenceProxy.Document
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::CollectionReferenceProxy::Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::Document");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReferenceProxy.Document
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::CollectionReferenceProxy::Document(::StringW documentPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::Document");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method, documentPath);
}
// Autogenerated method: Firebase.Firestore.CollectionReferenceProxy.Finalize
void Firebase::Firestore::CollectionReferenceProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReferenceProxy.Dispose
void Firebase::Firestore::CollectionReferenceProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReferenceProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.QueryProxy
#include "Firebase/Firestore/QueryProxy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::QueryProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QueryProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::QueryProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QueryProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.QueryProxy.Dispose
void Firebase::Firestore::QueryProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QueryProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QueryProxy.GetAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshotProxy*>* Firebase::Firestore::QueryProxy::GetAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QueryProxy::GetAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshotProxy*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.QueryProxy.Finalize
void Firebase::Firestore::QueryProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QueryProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.WriteBatchProxy
#include "Firebase/Firestore/WriteBatchProxy.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::WriteBatchProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::WriteBatchProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.WriteBatchProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::WriteBatchProxy::getCPtr(::Firebase::Firestore::WriteBatchProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "WriteBatchProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.WriteBatchProxy.Dispose
void Firebase::Firestore::WriteBatchProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.WriteBatchProxy.Delete
::Firebase::Firestore::WriteBatchProxy* Firebase::Firestore::WriteBatchProxy::Delete(::Firebase::Firestore::DocumentReferenceProxy* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::Delete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(document)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatchProxy*, false>(this, ___internal__method, document);
}
// Autogenerated method: Firebase.Firestore.WriteBatchProxy.CommitAsync
::System::Threading::Tasks::Task* Firebase::Firestore::WriteBatchProxy::CommitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::CommitAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.WriteBatchProxy.Finalize
void Firebase::Firestore::WriteBatchProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatchProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type
#include "Firebase/Firestore/FieldValueProxy_Type.hpp"
// Including type: Firebase.Firestore.TimestampProxy
#include "Firebase/Firestore/TimestampProxy.hpp"
// Including type: Firebase.Firestore.SWIGTYPE_p_unsigned_char
#include "Firebase/Firestore/SWIGTYPE_p_unsigned_char.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: Firebase.Firestore.GeoPointProxy
#include "Firebase/Firestore/GeoPointProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FieldValueProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FieldValueProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::FieldValueProxy::getCPtr(::Firebase::Firestore::FieldValueProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Dispose
void Firebase::Firestore::FieldValueProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Boolean
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Boolean(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Boolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Boolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Integer
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Integer(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Integer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Integer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Double
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Double(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Double");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Double", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Timestamp
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Timestamp(::Firebase::Firestore::TimestampProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.String
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Blob
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Blob(::Firebase::Firestore::SWIGTYPE_p_unsigned_char* value, uint size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Blob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Blob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, size);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Reference
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Reference(::Firebase::Firestore::DocumentReferenceProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.GeoPoint
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::GeoPoint(::Firebase::Firestore::GeoPointProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::GeoPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "GeoPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.type
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy::Type, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.is_null
bool Firebase::Firestore::FieldValueProxy::is_null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::is_null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "is_null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.is_map
bool Firebase::Firestore::FieldValueProxy::is_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::is_map");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "is_map", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.boolean_value
bool Firebase::Firestore::FieldValueProxy::boolean_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::boolean_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "boolean_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.integer_value
int64_t Firebase::Firestore::FieldValueProxy::integer_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::integer_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "integer_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.double_value
double Firebase::Firestore::FieldValueProxy::double_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::double_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "double_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.timestamp_value
::Firebase::Firestore::TimestampProxy* Firebase::Firestore::FieldValueProxy::timestamp_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::timestamp_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "timestamp_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::TimestampProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.string_value
::StringW Firebase::Firestore::FieldValueProxy::string_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::string_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "string_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.blob_value
::Firebase::Firestore::SWIGTYPE_p_unsigned_char* Firebase::Firestore::FieldValueProxy::blob_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::blob_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "blob_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SWIGTYPE_p_unsigned_char*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.blob_size
uint Firebase::Firestore::FieldValueProxy::blob_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::blob_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "blob_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.reference_value
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::FieldValueProxy::reference_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::reference_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reference_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.geo_point_value
::Firebase::Firestore::GeoPointProxy* Firebase::Firestore::FieldValueProxy::geo_point_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::geo_point_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "geo_point_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::GeoPointProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.is_valid
bool Firebase::Firestore::FieldValueProxy::is_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::is_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "is_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Null
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Delete
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.ServerTimestamp
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::ServerTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "ServerTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.IntegerIncrement
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::FieldValueProxy::IntegerIncrement(int64_t byValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::IntegerIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValueProxy", "IntegerIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byValue);
}
// Autogenerated method: Firebase.Firestore.FieldValueProxy.Finalize
void Firebase::Firestore::FieldValueProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type
#include "Firebase/Firestore/FieldValueProxy_Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Null
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Null
void Firebase::Firestore::FieldValueProxy::Type::_set_Null(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Boolean
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Boolean
void Firebase::Firestore::FieldValueProxy::Type::_set_Boolean(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Integer
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Integer
void Firebase::Firestore::FieldValueProxy::Type::_set_Integer(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Double
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Double
void Firebase::Firestore::FieldValueProxy::Type::_set_Double(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Timestamp
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Timestamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Timestamp"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Timestamp
void Firebase::Firestore::FieldValueProxy::Type::_set_Timestamp(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Timestamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Timestamp", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type String
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "String"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type String
void Firebase::Firestore::FieldValueProxy::Type::_set_String(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Blob
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Blob() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Blob");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Blob"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Blob
void Firebase::Firestore::FieldValueProxy::Type::_set_Blob(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Blob");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Blob", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Reference
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Reference
void Firebase::Firestore::FieldValueProxy::Type::_set_Reference(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type GeoPoint
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_GeoPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_GeoPoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "GeoPoint"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type GeoPoint
void Firebase::Firestore::FieldValueProxy::Type::_set_GeoPoint(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_GeoPoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "GeoPoint", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Array
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Array
void Firebase::Firestore::FieldValueProxy::Type::_set_Array(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Map
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Map");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Map"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Map
void Firebase::Firestore::FieldValueProxy::Type::_set_Map(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Map");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Map", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Delete
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type Delete
void Firebase::Firestore::FieldValueProxy::Type::_set_Delete(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ServerTimestamp
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_ServerTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_ServerTimestamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "ServerTimestamp"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ServerTimestamp
void Firebase::Firestore::FieldValueProxy::Type::_set_ServerTimestamp(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_ServerTimestamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "ServerTimestamp", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ArrayUnion
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_ArrayUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_ArrayUnion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "ArrayUnion"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ArrayUnion
void Firebase::Firestore::FieldValueProxy::Type::_set_ArrayUnion(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_ArrayUnion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "ArrayUnion", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ArrayRemove
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_ArrayRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_ArrayRemove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "ArrayRemove"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type ArrayRemove
void Firebase::Firestore::FieldValueProxy::Type::_set_ArrayRemove(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_ArrayRemove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "ArrayRemove", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type IncrementInteger
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_IncrementInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_IncrementInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "IncrementInteger"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type IncrementInteger
void Firebase::Firestore::FieldValueProxy::Type::_set_IncrementInteger(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_IncrementInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "IncrementInteger", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type IncrementDouble
::Firebase::Firestore::FieldValueProxy::Type Firebase::Firestore::FieldValueProxy::Type::_get_IncrementDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_get_IncrementDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldValueProxy::Type>("Firebase.Firestore", "FieldValueProxy/Type", "IncrementDouble"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FieldValueProxy/Firebase.Firestore.Type IncrementDouble
void Firebase::Firestore::FieldValueProxy::Type::_set_IncrementDouble(::Firebase::Firestore::FieldValueProxy::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::_set_IncrementDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValueProxy/Type", "IncrementDouble", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::FieldValueProxy::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValueProxy::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/DocumentSnapshotProxy_ServerTimestampBehavior.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.FieldPathProxy
#include "Firebase/Firestore/FieldPathProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::DocumentSnapshotProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::DocumentSnapshotProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::DocumentSnapshotProxy::getCPtr(::Firebase::Firestore::DocumentSnapshotProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentSnapshotProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.Dispose
void Firebase::Firestore::DocumentSnapshotProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.id
::StringW Firebase::Firestore::DocumentSnapshotProxy::id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.reference
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::DocumentSnapshotProxy::reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::reference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.exists
bool Firebase::Firestore::DocumentSnapshotProxy::exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.Get
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::DocumentSnapshotProxy::Get(::Firebase::Firestore::FieldPathProxy* field, ::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior stb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field), ::il2cpp_utils::ExtractType(stb)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, field, stb);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshotProxy.Finalize
void Firebase::Firestore::DocumentSnapshotProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/DocumentSnapshotProxy_ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior None
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior>("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior None
void Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_None(::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Estimate
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Estimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Estimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior>("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Estimate"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Estimate
void Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Estimate(::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Estimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Estimate", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Previous
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Previous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior>("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Previous"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Previous
void Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Previous(::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Previous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Previous", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Default
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior>("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior Default
void Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Default(::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentSnapshotProxy/ServerTimestampBehavior", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: Firebase.Firestore.CollectionReferenceProxy
#include "Firebase/Firestore/CollectionReferenceProxy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::DocumentReferenceProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::DocumentReferenceProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::DocumentReferenceProxy::getCPtr(::Firebase::Firestore::DocumentReferenceProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReferenceProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.Dispose
void Firebase::Firestore::DocumentReferenceProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.id
::StringW Firebase::Firestore::DocumentReferenceProxy::id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.path
::StringW Firebase::Firestore::DocumentReferenceProxy::path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::path");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.Collection
::Firebase::Firestore::CollectionReferenceProxy* Firebase::Firestore::DocumentReferenceProxy::Collection(::StringW collectionPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::Collection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collectionPath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReferenceProxy*, false>(this, ___internal__method, collectionPath);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.GetAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshotProxy*>* Firebase::Firestore::DocumentReferenceProxy::GetAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::GetAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshotProxy*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.DeleteAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReferenceProxy::DeleteAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::DeleteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.is_valid
bool Firebase::Firestore::DocumentReferenceProxy::is_valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::is_valid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "is_valid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReferenceProxy.Finalize
void Firebase::Firestore::DocumentReferenceProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReferenceProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SetOptionsProxy
#include "Firebase/Firestore/SetOptionsProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::SetOptionsProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptionsProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::SetOptionsProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptionsProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SetOptionsProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::SetOptionsProxy::getCPtr(::Firebase::Firestore::SetOptionsProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptionsProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptionsProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.SetOptionsProxy.Dispose
void Firebase::Firestore::SetOptionsProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptionsProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptionsProxy.Finalize
void Firebase::Firestore::SetOptionsProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptionsProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FieldPathProxy
#include "Firebase/Firestore/FieldPathProxy.hpp"
// Including type: Firebase.StringList
#include "Firebase/StringList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::FieldPathProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPathProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::FieldPathProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPathProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldPathProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::FieldPathProxy::getCPtr(::Firebase::Firestore::FieldPathProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPathProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPathProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldPathProxy.Dispose
void Firebase::Firestore::FieldPathProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPathProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPathProxy.Finalize
void Firebase::Firestore::FieldPathProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPathProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Default
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Default
void Firebase::Firestore::Source::_set_Default(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Server
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Server"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Server
void Firebase::Firestore::Source::_set_Server(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Server", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Cache
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Cache"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Cache
void Firebase::Firestore::Source::_set_Cache(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Cache", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::Source::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_FirestoreVoid
#include "Firebase/Firestore/Future_FirestoreVoid.hpp"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_FirestoreVoid_Action.hpp"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_FirestoreVoid_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_FirestoreVoid_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action> Callbacks
::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_FirestoreVoid::Action*>* Firebase::Firestore::Future_FirestoreVoid::_get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_get_Callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_FirestoreVoid::Action*>*>("Firebase.Firestore", "Future_FirestoreVoid", "Callbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action> Callbacks
void Firebase::Firestore::Future_FirestoreVoid::_set_Callbacks(::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_FirestoreVoid::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_set_Callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_FirestoreVoid", "Callbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CallbackIndex
int Firebase::Firestore::Future_FirestoreVoid::_get_CallbackIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_get_CallbackIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Firestore", "Future_FirestoreVoid", "CallbackIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CallbackIndex
void Firebase::Firestore::Future_FirestoreVoid::_set_CallbackIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_set_CallbackIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_FirestoreVoid", "CallbackIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object CallbackLock
::Il2CppObject* Firebase::Firestore::Future_FirestoreVoid::_get_CallbackLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_get_CallbackLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "Future_FirestoreVoid", "CallbackLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object CallbackLock
void Firebase::Firestore::Future_FirestoreVoid::_set_CallbackLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::_set_CallbackLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_FirestoreVoid", "CallbackLock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::Future_FirestoreVoid::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr callbackData
::System::IntPtr& Firebase::Firestore::Future_FirestoreVoid::dyn_callbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::dyn_callbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate SWIG_CompletionCB
::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate*& Firebase::Firestore::Future_FirestoreVoid::dyn_SWIG_CompletionCB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::dyn_SWIG_CompletionCB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SWIG_CompletionCB"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid..cctor
void Firebase::Firestore::Future_FirestoreVoid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_FirestoreVoid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.GetTask
::System::Threading::Tasks::Task* Firebase::Firestore::Future_FirestoreVoid::GetTask(::Firebase::Firestore::Future_FirestoreVoid* fu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::GetTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_FirestoreVoid", "GetTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fu)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fu);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.ThrowIfDisposed
void Firebase::Firestore::Future_FirestoreVoid::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.SetOnCompletionCallback
void Firebase::Firestore::Future_FirestoreVoid::SetOnCompletionCallback(::Firebase::Firestore::Future_FirestoreVoid::Action* userCompletionCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SetOnCompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userCompletionCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userCompletionCallback);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.SetCompletionData
void Firebase::Firestore::Future_FirestoreVoid::SetCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SetCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.SWIG_CompletionDispatcher
void Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDispatcher(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_FirestoreVoid", "SWIG_CompletionDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::Future_FirestoreVoid::SWIG_OnCompletion(::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate* cs_callback, int cs_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs_callback), ::il2cpp_utils::ExtractType(cs_key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cs_callback, cs_key);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.SWIG_FreeCompletionData
void Firebase::Firestore::Future_FirestoreVoid::SWIG_FreeCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.Finalize
void Firebase::Firestore::Future_FirestoreVoid::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid.Dispose
void Firebase::Firestore::Future_FirestoreVoid::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_FirestoreVoid_Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action.Invoke
void Firebase::Firestore::Future_FirestoreVoid::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_FirestoreVoid::Action::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.Action.EndInvoke
void Firebase::Firestore::Future_FirestoreVoid::Action::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_FirestoreVoid_SWIG_CompletionDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate.Invoke
void Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::Invoke(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::BeginInvoke(int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, index, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.SWIG_CompletionDelegate.EndInvoke
void Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::SWIG_CompletionDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_FirestoreVoid_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Firestore.Future_FirestoreVoid fu
::Firebase::Firestore::Future_FirestoreVoid*& Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::dyn_fu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::dyn_fu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fu"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_FirestoreVoid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskCompletionSource`1<System.Int32> tcs
::System::Threading::Tasks::TaskCompletionSource_1<int>*& Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_FirestoreVoid/Firebase.Firestore.<GetTask>c__AnonStorey0.<>m__0
void Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_FirestoreVoid::$GetTask$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_DocumentSnapshot
#include "Firebase/Firestore/Future_DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_DocumentSnapshot_Action.hpp"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_DocumentSnapshot_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_DocumentSnapshot_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action> Callbacks
::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_DocumentSnapshot::Action*>* Firebase::Firestore::Future_DocumentSnapshot::_get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_get_Callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_DocumentSnapshot::Action*>*>("Firebase.Firestore", "Future_DocumentSnapshot", "Callbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action> Callbacks
void Firebase::Firestore::Future_DocumentSnapshot::_set_Callbacks(::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_DocumentSnapshot::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_set_Callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_DocumentSnapshot", "Callbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CallbackIndex
int Firebase::Firestore::Future_DocumentSnapshot::_get_CallbackIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_get_CallbackIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Firestore", "Future_DocumentSnapshot", "CallbackIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CallbackIndex
void Firebase::Firestore::Future_DocumentSnapshot::_set_CallbackIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_set_CallbackIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_DocumentSnapshot", "CallbackIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object CallbackLock
::Il2CppObject* Firebase::Firestore::Future_DocumentSnapshot::_get_CallbackLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_get_CallbackLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "Future_DocumentSnapshot", "CallbackLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object CallbackLock
void Firebase::Firestore::Future_DocumentSnapshot::_set_CallbackLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::_set_CallbackLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_DocumentSnapshot", "CallbackLock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::Future_DocumentSnapshot::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr callbackData
::System::IntPtr& Firebase::Firestore::Future_DocumentSnapshot::dyn_callbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::dyn_callbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate SWIG_CompletionCB
::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate*& Firebase::Firestore::Future_DocumentSnapshot::dyn_SWIG_CompletionCB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::dyn_SWIG_CompletionCB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SWIG_CompletionCB"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot..cctor
void Firebase::Firestore::Future_DocumentSnapshot::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_DocumentSnapshot", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.GetTask
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshotProxy*>* Firebase::Firestore::Future_DocumentSnapshot::GetTask(::Firebase::Firestore::Future_DocumentSnapshot* fu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::GetTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_DocumentSnapshot", "GetTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fu)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshotProxy*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fu);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.ThrowIfDisposed
void Firebase::Firestore::Future_DocumentSnapshot::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.SetOnCompletionCallback
void Firebase::Firestore::Future_DocumentSnapshot::SetOnCompletionCallback(::Firebase::Firestore::Future_DocumentSnapshot::Action* userCompletionCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SetOnCompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userCompletionCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userCompletionCallback);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.SetCompletionData
void Firebase::Firestore::Future_DocumentSnapshot::SetCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SetCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.SWIG_CompletionDispatcher
void Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDispatcher(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_DocumentSnapshot", "SWIG_CompletionDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::Future_DocumentSnapshot::SWIG_OnCompletion(::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate* cs_callback, int cs_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs_callback), ::il2cpp_utils::ExtractType(cs_key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cs_callback, cs_key);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.SWIG_FreeCompletionData
void Firebase::Firestore::Future_DocumentSnapshot::SWIG_FreeCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.GetResult
::Firebase::Firestore::DocumentSnapshotProxy* Firebase::Firestore::Future_DocumentSnapshot::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshotProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.Finalize
void Firebase::Firestore::Future_DocumentSnapshot::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot.Dispose
void Firebase::Firestore::Future_DocumentSnapshot::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_DocumentSnapshot_Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action.Invoke
void Firebase::Firestore::Future_DocumentSnapshot::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_DocumentSnapshot::Action::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.Action.EndInvoke
void Firebase::Firestore::Future_DocumentSnapshot::Action::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_DocumentSnapshot_SWIG_CompletionDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate.Invoke
void Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::Invoke(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::BeginInvoke(int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, index, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.SWIG_CompletionDelegate.EndInvoke
void Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::SWIG_CompletionDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_DocumentSnapshot_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Firestore.Future_DocumentSnapshot fu
::Firebase::Firestore::Future_DocumentSnapshot*& Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::dyn_fu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::dyn_fu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fu"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_DocumentSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskCompletionSource`1<Firebase.Firestore.DocumentSnapshotProxy> tcs
::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Firestore::DocumentSnapshotProxy*>*& Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Firestore::DocumentSnapshotProxy*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_DocumentSnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0.<>m__0
void Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_DocumentSnapshot::$GetTask$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_QuerySnapshot
#include "Firebase/Firestore/Future_QuerySnapshot.hpp"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_QuerySnapshot_Action.hpp"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_QuerySnapshot_SWIG_CompletionDelegate.hpp"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_QuerySnapshot_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action> Callbacks
::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_QuerySnapshot::Action*>* Firebase::Firestore::Future_QuerySnapshot::_get_Callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_get_Callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_QuerySnapshot::Action*>*>("Firebase.Firestore", "Future_QuerySnapshot", "Callbacks")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action> Callbacks
void Firebase::Firestore::Future_QuerySnapshot::_set_Callbacks(::System::Collections::Generic::Dictionary_2<int, ::Firebase::Firestore::Future_QuerySnapshot::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_set_Callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_QuerySnapshot", "Callbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 CallbackIndex
int Firebase::Firestore::Future_QuerySnapshot::_get_CallbackIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_get_CallbackIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Firestore", "Future_QuerySnapshot", "CallbackIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 CallbackIndex
void Firebase::Firestore::Future_QuerySnapshot::_set_CallbackIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_set_CallbackIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_QuerySnapshot", "CallbackIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object CallbackLock
::Il2CppObject* Firebase::Firestore::Future_QuerySnapshot::_get_CallbackLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_get_CallbackLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "Future_QuerySnapshot", "CallbackLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object CallbackLock
void Firebase::Firestore::Future_QuerySnapshot::_set_CallbackLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::_set_CallbackLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Future_QuerySnapshot", "CallbackLock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::Future_QuerySnapshot::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr callbackData
::System::IntPtr& Firebase::Firestore::Future_QuerySnapshot::dyn_callbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::dyn_callbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackData"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate SWIG_CompletionCB
::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate*& Firebase::Firestore::Future_QuerySnapshot::dyn_SWIG_CompletionCB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::dyn_SWIG_CompletionCB");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SWIG_CompletionCB"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot..cctor
void Firebase::Firestore::Future_QuerySnapshot::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_QuerySnapshot", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.GetTask
::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshotProxy*>* Firebase::Firestore::Future_QuerySnapshot::GetTask(::Firebase::Firestore::Future_QuerySnapshot* fu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::GetTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_QuerySnapshot", "GetTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fu)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshotProxy*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fu);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.ThrowIfDisposed
void Firebase::Firestore::Future_QuerySnapshot::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.SetOnCompletionCallback
void Firebase::Firestore::Future_QuerySnapshot::SetOnCompletionCallback(::Firebase::Firestore::Future_QuerySnapshot::Action* userCompletionCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SetOnCompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOnCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userCompletionCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userCompletionCallback);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.SetCompletionData
void Firebase::Firestore::Future_QuerySnapshot::SetCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SetCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.SWIG_CompletionDispatcher
void Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDispatcher(int key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Future_QuerySnapshot", "SWIG_CompletionDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.SWIG_OnCompletion
::System::IntPtr Firebase::Firestore::Future_QuerySnapshot::SWIG_OnCompletion(::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate* cs_callback, int cs_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_OnCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_OnCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cs_callback), ::il2cpp_utils::ExtractType(cs_key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cs_callback, cs_key);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.SWIG_FreeCompletionData
void Firebase::Firestore::Future_QuerySnapshot::SWIG_FreeCompletionData(::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_FreeCompletionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SWIG_FreeCompletionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.GetResult
::Firebase::Firestore::QuerySnapshotProxy* Firebase::Firestore::Future_QuerySnapshot::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::QuerySnapshotProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.Finalize
void Firebase::Firestore::Future_QuerySnapshot::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot.Dispose
void Firebase::Firestore::Future_QuerySnapshot::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action
#include "Firebase/Firestore/Future_QuerySnapshot_Action.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action.Invoke
void Firebase::Firestore::Future_QuerySnapshot::Action::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::Action::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_QuerySnapshot::Action::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::Action::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.Action.EndInvoke
void Firebase::Firestore::Future_QuerySnapshot::Action::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::Action::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate
#include "Firebase/Firestore/Future_QuerySnapshot_SWIG_CompletionDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate.Invoke
void Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::Invoke(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::BeginInvoke(int index, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, index, callback, object);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.SWIG_CompletionDelegate.EndInvoke
void Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::SWIG_CompletionDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0
#include "Firebase/Firestore/Future_QuerySnapshot_-GetTask-c__AnonStorey0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Firestore.Future_QuerySnapshot fu
::Firebase::Firestore::Future_QuerySnapshot*& Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::dyn_fu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::dyn_fu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fu"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Future_QuerySnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskCompletionSource`1<Firebase.Firestore.QuerySnapshotProxy> tcs
::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Firestore::QuerySnapshotProxy*>*& Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::dyn_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::dyn_tcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Firebase::Firestore::QuerySnapshotProxy*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Future_QuerySnapshot/Firebase.Firestore.<GetTask>c__AnonStorey0.<>m__0
void Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Future_QuerySnapshot::$GetTask$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Ok
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Ok
void Firebase::Firestore::FirestoreError::_set_Ok(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError None
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError None
void Firebase::Firestore::FirestoreError::_set_None(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Cancelled
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Cancelled
void Firebase::Firestore::FirestoreError::_set_Cancelled(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unknown
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unknown
void Firebase::Firestore::FirestoreError::_set_Unknown(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError InvalidArgument
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError InvalidArgument
void Firebase::Firestore::FirestoreError::_set_InvalidArgument(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_DeadlineExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_DeadlineExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "DeadlineExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
void Firebase::Firestore::FirestoreError::_set_DeadlineExceeded(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_DeadlineExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "DeadlineExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError NotFound
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError NotFound
void Firebase::Firestore::FirestoreError::_set_NotFound(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError AlreadyExists
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_AlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_AlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "AlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError AlreadyExists
void Firebase::Firestore::FirestoreError::_set_AlreadyExists(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_AlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "AlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError PermissionDenied
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError PermissionDenied
void Firebase::Firestore::FirestoreError::_set_PermissionDenied(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_ResourceExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_ResourceExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "ResourceExhausted"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
void Firebase::Firestore::FirestoreError::_set_ResourceExhausted(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_ResourceExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "ResourceExhausted", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_FailedPrecondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_FailedPrecondition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "FailedPrecondition"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
void Firebase::Firestore::FirestoreError::_set_FailedPrecondition(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_FailedPrecondition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "FailedPrecondition", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Aborted
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Aborted
void Firebase::Firestore::FirestoreError::_set_Aborted(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError OutOfRange
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError OutOfRange
void Firebase::Firestore::FirestoreError::_set_OutOfRange(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unimplemented
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unimplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unimplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unimplemented"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unimplemented
void Firebase::Firestore::FirestoreError::_set_Unimplemented(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unimplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unimplemented", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Internal
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Internal
void Firebase::Firestore::FirestoreError::_set_Internal(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unavailable
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unavailable
void Firebase::Firestore::FirestoreError::_set_Unavailable(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unavailable", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError DataLoss
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_DataLoss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_DataLoss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "DataLoss"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError DataLoss
void Firebase::Firestore::FirestoreError::_set_DataLoss(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_DataLoss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "DataLoss", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unauthenticated
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unauthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unauthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unauthenticated"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unauthenticated
void Firebase::Firestore::FirestoreError::_set_Unauthenticated(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unauthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unauthenticated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::FirestoreError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.TimestampProxy
#include "Firebase/Firestore/TimestampProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::TimestampProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::TimestampProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::TimestampProxy::getCPtr(::Firebase::Firestore::TimestampProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "TimestampProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.Dispose
void Firebase::Firestore::TimestampProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.seconds
int64_t Firebase::Firestore::TimestampProxy::seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.nanoseconds
int Firebase::Firestore::TimestampProxy::nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::nanoseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "nanoseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.Finalize
void Firebase::Firestore::TimestampProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TimestampProxy.ToString
::StringW Firebase::Firestore::TimestampProxy::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TimestampProxy::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.GeoPointProxy
#include "Firebase/Firestore/GeoPointProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.HandleRef swigCPtr
::System::Runtime::InteropServices::HandleRef& Firebase::Firestore::GeoPointProxy::dyn_swigCPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::dyn_swigCPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCPtr"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::HandleRef*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean swigCMemOwn
bool& Firebase::Firestore::GeoPointProxy::dyn_swigCMemOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::dyn_swigCMemOwn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swigCMemOwn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.GeoPointProxy.getCPtr
::System::Runtime::InteropServices::HandleRef Firebase::Firestore::GeoPointProxy::getCPtr(::Firebase::Firestore::GeoPointProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::getCPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "GeoPointProxy", "getCPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::InteropServices::HandleRef, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.GeoPointProxy.Dispose
void Firebase::Firestore::GeoPointProxy::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPointProxy.latitude
double Firebase::Firestore::GeoPointProxy::latitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::latitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "latitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPointProxy.longitude
double Firebase::Firestore::GeoPointProxy::longitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::longitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "longitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPointProxy.Finalize
void Firebase::Firestore::GeoPointProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPointProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Internal.Util
#include "Firebase/Firestore/Internal/Util.hpp"
// Including type: Firebase.Firestore.Internal.Util/Firebase.Firestore.Internal.<MapResult>c__AnonStorey0`2
#include "Firebase/Firestore/Internal/Util_-MapResult-c__AnonStorey0_2.hpp"
// Including type: Firebase.Firestore.Internal.Util/Firebase.Firestore.Internal.<MapResult>c__AnonStorey1`1
#include "Firebase/Firestore/Internal/Util_-MapResult-c__AnonStorey1_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Internal.Util.Unreachable
void Firebase::Firestore::Internal::Util::Unreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Util::Unreachable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Util", "Unreachable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Internal.Util.HardAssert
void Firebase::Firestore::Internal::Util::HardAssert(bool condition, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Util::HardAssert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Util", "HardAssert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, message);
}
// Autogenerated method: Firebase.Firestore.Internal.Util.FlattenAndThrowException
void Firebase::Firestore::Internal::Util::FlattenAndThrowException(::System::Threading::Tasks::Task* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Util::FlattenAndThrowException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Util", "FlattenAndThrowException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, completedTask);
}
// Autogenerated method: Firebase.Firestore.Internal.Util.FlattenException
::System::Exception* Firebase::Firestore::Internal::Util::FlattenException(::System::AggregateException* aggregateException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Util::FlattenException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Util", "FlattenException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aggregateException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aggregateException);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Internal.Preconditions
#include "Firebase/Firestore/Internal/Preconditions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Internal.Preconditions.CheckNotNullOrEmpty
::StringW Firebase::Firestore::Internal::Preconditions::CheckNotNullOrEmpty(::StringW argument, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Preconditions::CheckNotNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Preconditions", "CheckNotNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument, paramName);
}
// Autogenerated method: Firebase.Firestore.Internal.Preconditions.CheckState
void Firebase::Firestore::Internal::Preconditions::CheckState(bool condition, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Preconditions::CheckState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Preconditions", "CheckState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, message);
}
// Autogenerated method: Firebase.Firestore.Internal.Preconditions.CheckArgument
void Firebase::Firestore::Internal::Preconditions::CheckArgument(bool condition, ::StringW paramName, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Preconditions::CheckArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Preconditions", "CheckArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, paramName, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Internal.Hash
#include "Firebase/Firestore/Internal/Hash.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Internal.Hash.LongHash
int Firebase::Firestore::Internal::Hash::LongHash(int64_t l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Hash::LongHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Hash", "LongHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l);
}
// Autogenerated method: Firebase.Firestore.Internal.Hash.DoubleBitwiseHash
int Firebase::Firestore::Internal::Hash::DoubleBitwiseHash(double d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::Hash::DoubleBitwiseHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "Hash", "DoubleBitwiseHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Internal.AssertFailedException
#include "Firebase/Firestore/Internal/AssertFailedException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Internal.EnvironmentVersion
#include "Firebase/Firestore/Internal/EnvironmentVersion.hpp"
// Including type: System.Version
#include "System/Version.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Internal.EnvironmentVersion.GetEnvironmentVersion
::StringW Firebase::Firestore::Internal::EnvironmentVersion::GetEnvironmentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::EnvironmentVersion::GetEnvironmentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "EnvironmentVersion", "GetEnvironmentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Internal.EnvironmentVersion.FormatVersion
::StringW Firebase::Firestore::Internal::EnvironmentVersion::FormatVersion(::System::Version* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Internal::EnvironmentVersion::FormatVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Internal", "EnvironmentVersion", "FormatVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, version);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.ValueSerializer
#include "Firebase/Firestore/ValueSerializer.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.ValueSerializer.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::ValueSerializer::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ValueSerializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ValueSerializer", "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.ValueDeserializer
#include "Firebase/Firestore/ValueDeserializer.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.ValueDeserializer.Deserialize
::Il2CppObject* Firebase::Firestore::ValueDeserializer::Deserialize(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ValueDeserializer::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ValueDeserializer", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, value, targetType);
}
// Autogenerated method: Firebase.Firestore.ValueDeserializer.GetTargetType
::System::Type* Firebase::Firestore::ValueDeserializer::GetTargetType(::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ValueDeserializer::GetTargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ValueDeserializer", "GetTargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.TransactionManager
#include "Firebase/Firestore/TransactionManager.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.TransactionManagerProxy
#include "Firebase/Firestore/TransactionManagerProxy.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.TransactionCallbackProxy
#include "Firebase/Firestore/TransactionCallbackProxy.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Firebase.Firestore.ListenerRegistrationMap`1<System.Func`2<Firebase.Firestore.TransactionCallbackProxy,System.Threading.Tasks.Task>> _callbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Func_2<::Firebase::Firestore::TransactionCallbackProxy*, ::System::Threading::Tasks::Task*>*>* Firebase::Firestore::TransactionManager::_get__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::_get__callbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Func_2<::Firebase::Firestore::TransactionCallbackProxy*, ::System::Threading::Tasks::Task*>*>*>("Firebase.Firestore", "TransactionManager", "_callbacks")));
}
// Autogenerated static field setter
// Set static field: static private readonly Firebase.Firestore.ListenerRegistrationMap`1<System.Func`2<Firebase.Firestore.TransactionCallbackProxy,System.Threading.Tasks.Task>> _callbacks
void Firebase::Firestore::TransactionManager::_set__callbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Func_2<::Firebase::Firestore::TransactionCallbackProxy*, ::System::Threading::Tasks::Task*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::_set__callbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "TransactionManager", "_callbacks", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::TransactionManager::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.TransactionManagerProxy _transactionManagerProxy
::Firebase::Firestore::TransactionManagerProxy*& Firebase::Firestore::TransactionManager::dyn__transactionManagerProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::dyn__transactionManagerProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transactionManagerProxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::TransactionManagerProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.TransactionManager..cctor
void Firebase::Firestore::TransactionManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "TransactionManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TransactionManager.Dispose
void Firebase::Firestore::TransactionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.TransactionManager.Finalize
void Firebase::Firestore::TransactionManager::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::TransactionManager::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: Firebase.Firestore.ConverterRegistry
#include "Firebase/Firestore/ConverterRegistry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x5C76EC
// Autogenerated static field getter
// Get static field: static private readonly Firebase.Firestore.SerializationContext <Default>k__BackingField
::Firebase::Firestore::SerializationContext* Firebase::Firestore::SerializationContext::_get_$Default$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::_get_$Default$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::SerializationContext*>("Firebase.Firestore", "SerializationContext", "<Default>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly Firebase.Firestore.SerializationContext <Default>k__BackingField
void Firebase::Firestore::SerializationContext::_set_$Default$k__BackingField(::Firebase::Firestore::SerializationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::_set_$Default$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SerializationContext", "<Default>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IDictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> _customConverters
::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*& Firebase::Firestore::SerializationContext::dyn__customConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::dyn__customConverters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customConverters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SerializationContext.get_Default
::Firebase::Firestore::SerializationContext* Firebase::Firestore::SerializationContext::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SerializationContext", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SerializationContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SerializationContext..cctor
void Firebase::Firestore::SerializationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SerializationContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SerializationContext.GetConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::SerializationContext::GetConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SerializationContext::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(this, ___internal__method, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.MonoPInvokeCallbackAttribute
#include "Firebase/Firestore/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly Firebase.Firestore.DocumentSnapshot Snapshot
::Firebase::Firestore::DocumentSnapshot*& Firebase::Firestore::DeserializationContext::dyn_Snapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DeserializationContext::dyn_Snapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Snapshot"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DeserializationContext.get_Firestore
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::DeserializationContext::get_Firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DeserializationContext::get_Firestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Firestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DeserializationContext.get_DocumentReference
::Firebase::Firestore::DocumentReference* Firebase::Firestore::DeserializationContext::get_DocumentReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DeserializationContext::get_DocumentReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DeserializationContext.GetConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::DeserializationContext::GetConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DeserializationContext::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(this, ___internal__method, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.StringConverter
#include "Firebase/Firestore/Converters/StringConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.StringConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::StringConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::StringConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.StringConverter.DeserializeString
::Il2CppObject* Firebase::Firestore::Converters::StringConverter::DeserializeString(::Firebase::Firestore::DeserializationContext* context, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::StringConverter::DeserializeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.IntegerConverterBase
#include "Firebase/Firestore/Converters/IntegerConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.IntegerConverterBase.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::IntegerConverterBase::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IntegerConverterBase::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ByteConverter
#include "Firebase/Firestore/Converters/ByteConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.ByteConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ByteConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ByteConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::ByteConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.SByteConverter
#include "Firebase/Firestore/Converters/SByteConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.SByteConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::SByteConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SByteConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.SByteConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::SByteConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SByteConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.Int16Converter
#include "Firebase/Firestore/Converters/Int16Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.Int16Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::Int16Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int16Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.Int16Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::Int16Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int16Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt16Converter
#include "Firebase/Firestore/Converters/UInt16Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt16Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt16Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt16Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt16Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt16Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt16Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.Int32Converter
#include "Firebase/Firestore/Converters/Int32Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.Int32Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::Int32Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int32Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.Int32Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::Int32Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int32Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt32Converter
#include "Firebase/Firestore/Converters/UInt32Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt32Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt32Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt32Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt32Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt32Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt32Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.Int64Converter
#include "Firebase/Firestore/Converters/Int64Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.Int64Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::Int64Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int64Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.Int64Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::Int64Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int64Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt64Converter
#include "Firebase/Firestore/Converters/UInt64Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt64Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt64Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt64Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt64Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt64Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt64Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.SingleConverter
#include "Firebase/Firestore/Converters/SingleConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::SingleConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::SingleConverter::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::SingleConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DoubleConverter
#include "Firebase/Firestore/Converters/DoubleConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DoubleConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::DoubleConverter::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::DoubleConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.BooleanConverter
#include "Firebase/Firestore/Converters/BooleanConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.BooleanConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::BooleanConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BooleanConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.BooleanConverter.DeserializeBoolean
::Il2CppObject* Firebase::Firestore::Converters::BooleanConverter::DeserializeBoolean(::Firebase::Firestore::DeserializationContext* context, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BooleanConverter::DeserializeBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.TimestampConverter
#include "Firebase/Firestore/Converters/TimestampConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.TimestampConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::TimestampConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::TimestampConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.TimestampConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::TimestampConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::TimestampConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.GeoPointConverter
#include "Firebase/Firestore/Converters/GeoPointConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.GeoPointConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::GeoPointConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::GeoPointConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.GeoPointConverter.DeserializeGeoPoint
::Il2CppObject* Firebase::Firestore::Converters::GeoPointConverter::DeserializeGeoPoint(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::GeoPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::GeoPointConverter::DeserializeGeoPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGeoPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ByteArrayConverter
#include "Firebase/Firestore/Converters/ByteArrayConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.ByteArrayConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ByteArrayConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteArrayConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ByteArrayConverter.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::ByteArrayConverter::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteArrayConverter::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.BlobConverter
#include "Firebase/Firestore/Converters/BlobConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.BlobConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::BlobConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BlobConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.BlobConverter.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::BlobConverter::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BlobConverter::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.FieldValueProxyConverter
#include "Firebase/Firestore/Converters/FieldValueProxyConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.FieldValueProxyConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::FieldValueProxyConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::FieldValueProxyConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DateTimeConverter
#include "Firebase/Firestore/Converters/DateTimeConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DateTimeConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DateTimeConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DateTimeConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::DateTimeConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DateTimeOffsetConverter
#include "Firebase/Firestore/Converters/DateTimeOffsetConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DateTimeOffsetConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DateTimeOffsetConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeOffsetConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DateTimeOffsetConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::DateTimeOffsetConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeOffsetConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DocumentReferenceConverter
#include "Firebase/Firestore/Converters/DocumentReferenceConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DocumentReferenceConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DocumentReferenceConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DocumentReferenceConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DocumentReferenceConverter.DeserializeReference
::Il2CppObject* Firebase::Firestore::Converters::DocumentReferenceConverter::DeserializeReference(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::DocumentReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DocumentReferenceConverter::DeserializeReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.MapConverterBase
#include "Firebase/Firestore/Converters/MapConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.MapConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::MapConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::MapConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.IFirestoreInternalConverter.DeserializeValue
::Il2CppObject* Firebase::Firestore::Converters::IFirestoreInternalConverter::DeserializeValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IFirestoreInternalConverter::DeserializeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.IFirestoreInternalConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::IFirestoreInternalConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IFirestoreInternalConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumerableConverterBase
#include "Firebase/Firestore/Converters/EnumerableConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::EnumerableConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumerableConverter
#include "Firebase/Firestore/Converters/EnumerableConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Type*, bool>* Firebase::Firestore::Converters::EnumerableConverter::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Firebase.Firestore.Converters", "EnumerableConverter", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::EnumerableConverter::_set_$$f__am$cache0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "EnumerableConverter", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
::System::Type*& Firebase::Firestore::Converters::EnumerableConverter::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverter.<EnumerableConverter>m__0
bool Firebase::Firestore::Converters::EnumerableConverter::$EnumerableConverter$m__0(::System::Type* iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::<EnumerableConverter>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "EnumerableConverter", "<EnumerableConverter>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iface);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverter.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::EnumerableConverter::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(arrayValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumConverter
#include "Firebase/Firestore/Converters/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.TypeCode _typeCode
::System::TypeCode& Firebase::Firestore::Converters::EnumConverter::dyn__typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::dyn__typeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeCode"))->offset;
  return *reinterpret_cast<::System::TypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.EnumToInt64
int64_t Firebase::Firestore::Converters::EnumConverter::EnumToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::EnumToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnumToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.Int64ToEnumBaseType
::Il2CppObject* Firebase::Firestore::Converters::EnumConverter::Int64ToEnumBaseType(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::Int64ToEnumBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Int64ToEnumBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::EnumConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::EnumConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.CustomConverter
#include "Firebase/Firestore/Converters/CustomConverter.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FirestoreConverter`1
#include "Firebase/Firestore/FirestoreConverter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo _method
::System::Reflection::MethodInfo* Firebase::Firestore::Converters::CustomConverter::_get__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::_get__method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("Firebase.Firestore.Converters", "CustomConverter", "_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo _method
void Firebase::Firestore::Converters::CustomConverter::_set__method(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::_set__method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "CustomConverter", "_method", value));
}
// Autogenerated method: Firebase.Firestore.Converters.CustomConverter..cctor
void Firebase::Firestore::Converters::CustomConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "CustomConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.CustomConverter.ForConverterType
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::CustomConverter::ForConverterType(::System::Type* converterType, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::ForConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "CustomConverter", "ForConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(converterType), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, converterType, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.ConverterCache
#include "Firebase/Firestore/Converters/ConverterCache.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> s_converters
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* Firebase::Firestore::Converters::ConverterCache::_get_s_converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_s_converters");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*>("Firebase.Firestore.Converters", "ConverterCache", "s_converters")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> s_converters
void Firebase::Firestore::Converters::ConverterCache::_set_s_converters(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_s_converters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "s_converters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo s_createDictionaryConverter
::System::Reflection::MethodInfo* Firebase::Firestore::Converters::ConverterCache::_get_s_createDictionaryConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_s_createDictionaryConverter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("Firebase.Firestore.Converters", "ConverterCache", "s_createDictionaryConverter"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo s_createDictionaryConverter
void Firebase::Firestore::Converters::ConverterCache::_set_s_createDictionaryConverter(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_s_createDictionaryConverter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "s_createDictionaryConverter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Type> <>f__mg$cache0
::System::Func_2<::System::Type*, ::System::Type*>* Firebase::Firestore::Converters::ConverterCache::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Type*>*>("Firebase.Firestore.Converters", "ConverterCache", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Type> <>f__mg$cache0
void Firebase::Firestore::Converters::ConverterCache::_set_$$f__mg$cache0(::System::Func_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "<>f__mg$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Type*, bool>* Firebase::Firestore::Converters::ConverterCache::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Firebase.Firestore.Converters", "ConverterCache", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::ConverterCache::_set_$$f__am$cache0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "<>f__am$cache0", value));
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache..cctor
void Firebase::Firestore::Converters::ConverterCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.GetConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::ConverterCache::GetConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.InitializeConverterCache
void Firebase::Firestore::Converters::ConverterCache::InitializeConverterCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::InitializeConverterCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "InitializeConverterCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.CreateConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::ConverterCache::CreateConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::CreateConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "CreateConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.TryGetStringDictionaryValueType
bool Firebase::Firestore::Converters::ConverterCache::TryGetStringDictionaryValueType(::System::Type* type, ByRef<::System::Type*> elementType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::TryGetStringDictionaryValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "TryGetStringDictionaryValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, byref(elementType));
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.MapInterfaceToDictionaryValueTypeArgument
::System::Type* Firebase::Firestore::Converters::ConverterCache::MapInterfaceToDictionaryValueTypeArgument(::System::Type* iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::MapInterfaceToDictionaryValueTypeArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "MapInterfaceToDictionaryValueTypeArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iface);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.<TryGetStringDictionaryValueType>m__0
bool Firebase::Firestore::Converters::ConverterCache::$TryGetStringDictionaryValueType$m__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::<TryGetStringDictionaryValueType>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "<TryGetStringDictionaryValueType>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ConverterBase
#include "Firebase/Firestore/Converters/ConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Type TargetType
::System::Type*& Firebase::Firestore::Converters::ConverterBase::dyn_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::dyn_TargetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeMap
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeMap(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* mapValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(mapValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, mapValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeValue
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.SerializeMap
void Firebase::Firestore::Converters::ConverterBase::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::SerializeMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(arrayValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeBoolean
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean(::Firebase::Firestore::DeserializationContext* context, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeGeoPoint
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::GeoPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeGeoPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeReference
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeReference(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::DocumentReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeString
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeString(::Firebase::Firestore::DeserializationContext* context, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyMap
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap(::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, map);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyArray
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray(::System::Collections::Generic::IList_1<::Firebase::Firestore::FieldValueProxy*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertFromProxyBlob
::ArrayW<uint8_t> Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob(::Firebase::Firestore::FieldValueProxy* internalValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertFromProxyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyBlob
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter
#include "Firebase/Firestore/Converters/AttributedTypeConverter.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-AttributedTypeConverter-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey1.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Firebase.Firestore.FirestoreDataAttribute
#include "Firebase/Firestore/FirestoreDataAttribute.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Firebase::Firestore::Converters::AttributedTypeConverter::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Firebase.Firestore.Converters", "AttributedTypeConverter", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::AttributedTypeConverter::_set_$$f__am$cache0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "AttributedTypeConverter", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty> _writableProperties
::System::Collections::Generic::Dictionary_2<::StringW, ::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__writableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__writableProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writableProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty> _readableProperties
::System::Collections::Generic::List_1<::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__readableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__readableProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readableProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`1<System.Object> _createInstance
::System::Func_1<::Il2CppObject*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__createInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__createInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createInstance"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirestoreDataAttribute _attribute
::Firebase::Firestore::FirestoreDataAttribute*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attribute"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreDataAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.CreateObjectCreator
::System::Func_1<::Il2CppObject*>* Firebase::Firestore::Converters::AttributedTypeConverter::CreateObjectCreator(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::CreateObjectCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "CreateObjectCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.ForType
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::AttributedTypeConverter::ForType(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::ForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "ForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.<CreateObjectCreator>m__0
bool Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$m__0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::<CreateObjectCreator>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "<CreateObjectCreator>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.DeserializeMap
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::DeserializeMap(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* mapValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::DeserializeMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(mapValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, mapValue);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.SerializeMap
void Firebase::Firestore::Converters::AttributedTypeConverter::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::SerializeMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: Firebase.Firestore.FirestorePropertyAttribute
#include "Firebase/Firestore/FirestorePropertyAttribute.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.PropertyInfo _propertyInfo
::System::Reflection::PropertyInfo*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__propertyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__propertyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FieldValueProxy _sentinelValue
::Firebase::Firestore::FieldValueProxy*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__sentinelValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__sentinelValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentinelValue"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FieldValueProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.Converters.IFirestoreInternalConverter _converter
::Firebase::Firestore::Converters::IFirestoreInternalConverter*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Converters::IFirestoreInternalConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String FirestoreName
::StringW& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn_FirestoreName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn_FirestoreName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirestoreName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_CanRead
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_CanWrite
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_IsNullableValue
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_IsNullableValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_IsNullableValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullableValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.GetSerializedValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::GetSerializedValue(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::GetSerializedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, obj);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.SetValue
void Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::SetValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-AttributedTypeConverter-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String firestoreName
::StringW& Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::dyn_firestoreName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::dyn_firestoreName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firestoreName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0.<>m__0
bool Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::$$m__0(::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
