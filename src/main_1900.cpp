// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Proyecto26.Common.Extensions/Proyecto26.Common.<>c
#include "Proyecto26/Common/Extensions_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Proyecto26.Common.Extensions/Proyecto26.Common.<>c <>9
::Proyecto26::Common::Extensions::$$c* Proyecto26::Common::Extensions::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Proyecto26::Common::Extensions::$$c*>("Proyecto26.Common", "Extensions/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Proyecto26.Common.Extensions/Proyecto26.Common.<>c <>9
void Proyecto26::Common::Extensions::$$c::_set_$$9(::Proyecto26::Common::Extensions::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Proyecto26.Common", "Extensions/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_1
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* Proyecto26::Common::Extensions::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>*>("Proyecto26.Common", "Extensions/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,System.String>,System.String> <>9__3_1
void Proyecto26::Common::Extensions::$$c::_set_$$9__3_1(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW>, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Proyecto26.Common", "Extensions/<>c", "<>9__3_1", value)));
}
// Autogenerated method: Proyecto26.Common.Extensions/Proyecto26.Common.<>c..cctor
void Proyecto26::Common::Extensions::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Proyecto26.Common", "Extensions/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Proyecto26.Common.Extensions/Proyecto26.Common.<>c.<BuildUrl>b__3_1
::StringW Proyecto26::Common::Extensions::$$c::$BuildUrl$b__3_1(::System::Collections::Generic::KeyValuePair_2<::StringW, ::StringW> p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Common::Extensions::$$c::<BuildUrl>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildUrl>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Proyecto26.Models.Post
#include "Proyecto26/Models/Post.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& Proyecto26::Models::Post::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 userId
int& Proyecto26::Models::Post::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String title
::StringW& Proyecto26::Models::Post::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String body
::StringW& Proyecto26::Models::Post::dyn_body() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::dyn_body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "body"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Proyecto26.Models.Post.ToString
::StringW Proyecto26::Models::Post::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Proyecto26::Models::Post::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Models.Photo
#include "Models/Photo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 albumId
int& Models::Photo::dyn_albumId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::dyn_albumId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "albumId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& Models::Photo::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String title
::StringW& Models::Photo::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String url
::StringW& Models::Photo::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String thumbnailUrl
::StringW& Models::Photo::dyn_thumbnailUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::dyn_thumbnailUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thumbnailUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Models.Photo.ToString
::StringW Models::Photo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Photo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Models.Todo
#include "Models/Todo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& Models::Todo::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Todo::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 userId
int& Models::Todo::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Todo::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String title
::StringW& Models::Todo::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Todo::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean completed
bool& Models::Todo::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Todo::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Models.Todo.ToString
::StringW Models::Todo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::Todo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Models.User
#include "Models/User.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& Models::User::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& Models::User::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String username
::StringW& Models::User::dyn_username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String email
::StringW& Models::User::dyn_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_email");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "email"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String phone
::StringW& Models::User::dyn_phone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_phone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "phone"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String website
::StringW& Models::User::dyn_website() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::dyn_website");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "website"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Models.User.ToString
::StringW Models::User::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Models::User::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler
#include "Oculus/Voice/Demo/UIShapesDemo/InteractionHandler.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
// Including type: Facebook.WitAi.WitRequest
#include "Facebook/WitAi/WitRequest.hpp"
// Including type: Facebook.WitAi.Lib.WitResponseNode
#include "Facebook/WitAi/Lib/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String freshStateText
::StringW& Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_freshStateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_freshStateText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freshStateText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text textArea
::UnityEngine::UI::Text*& Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_textArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_textArea");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textArea"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean showJson
bool& Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_showJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_showJson");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showJson"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.AppVoiceExperience appVoiceExperience
::Oculus::Voice::AppVoiceExperience*& Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_appVoiceExperience() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_appVoiceExperience");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appVoiceExperience"))->offset;
  return *reinterpret_cast<::Oculus::Voice::AppVoiceExperience**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pendingText
::StringW& Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_pendingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::dyn_pendingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pendingText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.OnEnable
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.OnDisable
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.OnRequestStarted
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnRequestStarted(::Facebook::WitAi::WitRequest* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnRequestStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRequestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.Update
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.OnResponse
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnResponse(::Facebook::WitAi::Lib::WitResponseNode* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.OnError
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnError(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::OnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.ToggleActivation
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::ToggleActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::ToggleActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.InteractionHandler.<OnRequestStarted>b__7_0
void Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::$OnRequestStarted$b__7_0(::StringW response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::InteractionHandler::<OnRequestStarted>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnRequestStarted>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.UIShapesDemo.ColorChanger
#include "Oculus/Voice/Demo/UIShapesDemo/ColorChanger.hpp"
// Including type: Facebook.WitAi.Lib.WitResponseNode
#include "Facebook/WitAi/Lib/WitResponseNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.ColorChanger.UpdateColor
void Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor(::Facebook::WitAi::Lib::WitResponseNode* commandResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(commandResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, commandResult);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.ColorChanger.UpdateColor
void Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor(::ArrayW<::StringW> results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.ColorChanger.UpdateColor
void Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor(::StringW colorName, ::StringW shape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::ColorChanger::UpdateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorName), ::il2cpp_utils::ExtractType(shape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorName, shape);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.UIShapesDemo.Instructions
#include "Oculus/Voice/Demo/UIShapesDemo/Instructions.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] steps
::ArrayW<::StringW> Oculus::Voice::Demo::UIShapesDemo::Instructions::_get_steps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::_get_steps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("Oculus.Voice.Demo.UIShapesDemo", "Instructions", "steps"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] steps
void Oculus::Voice::Demo::UIShapesDemo::Instructions::_set_steps(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::_set_steps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions", "steps", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text instructionText
::UnityEngine::UI::Text*& Oculus::Voice::Demo::UIShapesDemo::Instructions::dyn_instructionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::dyn_instructionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instructionText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step currentStep
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step& Oculus::Voice::Demo::UIShapesDemo::Instructions::dyn_currentStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::dyn_currentStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentStep"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.get_CurrentStep
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::get_CurrentStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::get_CurrentStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.get_CurrentStepText
::StringW Oculus::Voice::Demo::UIShapesDemo::Instructions::get_CurrentStepText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::get_CurrentStepText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentStepText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.OnValidate
void Oculus::Voice::Demo::UIShapesDemo::Instructions::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.OnEnable
void Oculus::Voice::Demo::UIShapesDemo::Instructions::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.Update
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions.UpdateStep
void Oculus::Voice::Demo::UIShapesDemo::Instructions::UpdateStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::UpdateStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.UIShapesDemo.Instructions..cctor
void Oculus::Voice::Demo::UIShapesDemo::Instructions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice.Demo.UIShapesDemo", "Instructions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step
#include "Oculus/Voice/Demo/UIShapesDemo/Instructions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step SetupWit
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_SetupWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_SetupWit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "SetupWit"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step SetupWit
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_SetupWit(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_SetupWit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "SetupWit", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step MissingServerToken
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_MissingServerToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_MissingServerToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "MissingServerToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step MissingServerToken
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_MissingServerToken(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_MissingServerToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "MissingServerToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step MissingClientToken
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_MissingClientToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_MissingClientToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "MissingClientToken"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step MissingClientToken
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_MissingClientToken(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_MissingClientToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "MissingClientToken", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step AddConfig
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_AddConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_AddConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "AddConfig"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step AddConfig
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_AddConfig(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_AddConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "AddConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step AddVoiceExperiences
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_AddVoiceExperiences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_AddVoiceExperiences");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "AddVoiceExperiences"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step AddVoiceExperiences
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_AddVoiceExperiences(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_AddVoiceExperiences");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "AddVoiceExperiences", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step SetConfig
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_SetConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_SetConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "SetConfig"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step SetConfig
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_SetConfig(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_SetConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "SetConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step Ready
::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step>("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Voice.Demo.UIShapesDemo.Instructions/Oculus.Voice.Demo.UIShapesDemo.Step Ready
void Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_Ready(::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice.Demo.UIShapesDemo", "Instructions/Step", "Ready", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::UIShapesDemo::Instructions::Step::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.BuiltInDemo.TimerController
#include "Oculus/Voice/Demo/BuiltInDemo/TimerController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _time
float& Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _timerExist
bool& Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__timerExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__timerExist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerExist"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _timerRunning
bool& Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__timerRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn__timerRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timerRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text logText
::UnityEngine::UI::Text*& Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn_logText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn_logText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip buzzSound
::UnityEngine::AudioClip*& Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn_buzzSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::dyn_buzzSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buzzSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.Update
void Oculus::Voice::Demo::BuiltInDemo::TimerController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.Log
void Oculus::Voice::Demo::BuiltInDemo::TimerController::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.OnElapsedTime
void Oculus::Voice::Demo::BuiltInDemo::TimerController::OnElapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::OnElapsedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnElapsedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.DeleteTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::DeleteTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::DeleteTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.CreateTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::CreateTimer(::ArrayW<::StringW> entityValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::CreateTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityValues);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.GetTimerIntent
void Oculus::Voice::Demo::BuiltInDemo::TimerController::GetTimerIntent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::GetTimerIntent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimerIntent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.PauseTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::PauseTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::PauseTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.ResumeTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::ResumeTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::ResumeTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.SubtractTimeTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::SubtractTimeTimer(::ArrayW<::StringW> entityValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::SubtractTimeTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubtractTimeTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityValues);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.AddTimeToTimer
void Oculus::Voice::Demo::BuiltInDemo::TimerController::AddTimeToTimer(::ArrayW<::StringW> entityValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::AddTimeToTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTimeToTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entityValues);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.GetRemainingTime
float Oculus::Voice::Demo::BuiltInDemo::TimerController::GetRemainingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::GetRemainingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemainingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.GetFormattedTimeFromSeconds
::StringW Oculus::Voice::Demo::BuiltInDemo::TimerController::GetFormattedTimeFromSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::GetFormattedTimeFromSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormattedTimeFromSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerController.ParseTime
bool Oculus::Voice::Demo::BuiltInDemo::TimerController::ParseTime(::ArrayW<::StringW> entityValues, ByRef<float> time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerController::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityValues), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entityValues, byref(time));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.BuiltInDemo.TimerDisplay
#include "Oculus/Voice/Demo/BuiltInDemo/TimerDisplay.hpp"
// Including type: Oculus.Voice.Demo.BuiltInDemo.TimerController
#include "Oculus/Voice/Demo/BuiltInDemo/TimerController.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Oculus.Voice.Demo.BuiltInDemo.TimerController timer
::Oculus::Voice::Demo::BuiltInDemo::TimerController*& Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::dyn_timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::dyn_timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timer"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Demo::BuiltInDemo::TimerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Text _uiText
::UnityEngine::UI::Text*& Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::dyn__uiText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::dyn__uiText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerDisplay.Start
void Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.TimerDisplay.Update
void Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::TimerDisplay::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Demo.BuiltInDemo.WitActivation
#include "Oculus/Voice/Demo/BuiltInDemo/WitActivation.hpp"
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.AppVoiceExperience voiceExperience
::Oculus::Voice::AppVoiceExperience*& Oculus::Voice::Demo::BuiltInDemo::WitActivation::dyn_voiceExperience() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::dyn_voiceExperience");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceExperience"))->offset;
  return *reinterpret_cast<::Oculus::Voice::AppVoiceExperience**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.WitActivation.OnValidate
void Oculus::Voice::Demo::BuiltInDemo::WitActivation::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.WitActivation.Start
void Oculus::Voice::Demo::BuiltInDemo::WitActivation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.WitActivation.Update
void Oculus::Voice::Demo::BuiltInDemo::WitActivation::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Demo.BuiltInDemo.WitActivation.ActivateWit
void Oculus::Voice::Demo::BuiltInDemo::WitActivation::ActivateWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Demo::BuiltInDemo::WitActivation::ActivateWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.AvatarLogger
#include "Oculus/Avatar/AvatarLogger.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String LogAvatar
::StringW Oculus::Avatar::AvatarLogger::_get_LogAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_LogAvatar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "LogAvatar"));
}
// Autogenerated static field setter
// Set static field: static public System.String LogAvatar
void Oculus::Avatar::AvatarLogger::_set_LogAvatar(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_LogAvatar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "LogAvatar", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Tab
::StringW Oculus::Avatar::AvatarLogger::_get_Tab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_get_Tab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "AvatarLogger", "Tab"));
}
// Autogenerated static field setter
// Set static field: static public System.String Tab
void Oculus::Avatar::AvatarLogger::_set_Tab(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::_set_Tab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "AvatarLogger", "Tab", value));
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.Log
void Oculus::Avatar::AvatarLogger::Log(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogWarning
void Oculus::Avatar::AvatarLogger::LogWarning(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg);
}
// Autogenerated method: Oculus.Avatar.AvatarLogger.LogError
void Oculus::Avatar::AvatarLogger::LogError(::StringW logMsg, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::AvatarLogger::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "AvatarLogger", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logMsg), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logMsg, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI
#include "Oculus/Avatar/CAPI.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: ovrAvatarMessageType
#include "GlobalNamespace/ovrAvatarMessageType.hpp"
// Including type: ovrAvatarMessage_AvatarSpecification
#include "GlobalNamespace/ovrAvatarMessage_AvatarSpecification.hpp"
// Including type: ovrAvatarMessage_AssetLoaded
#include "GlobalNamespace/ovrAvatarMessage_AssetLoaded.hpp"
// Including type: ovrAvatarLookAndFeelVersion
#include "GlobalNamespace/ovrAvatarLookAndFeelVersion.hpp"
// Including type: ovrAvatarAssetLevelOfDetail
#include "GlobalNamespace/ovrAvatarAssetLevelOfDetail.hpp"
// Including type: ovrAvatarCapabilities
#include "GlobalNamespace/ovrAvatarCapabilities.hpp"
// Including type: ovrAvatarVisemes
#include "GlobalNamespace/ovrAvatarVisemes.hpp"
// Including type: ovrAvatarHandInputState
#include "GlobalNamespace/ovrAvatarHandInputState.hpp"
// Including type: ovrAvatarControllerType
#include "GlobalNamespace/ovrAvatarControllerType.hpp"
// Including type: ovrAvatarComponent
#include "GlobalNamespace/ovrAvatarComponent.hpp"
// Including type: ovrAvatarBaseComponent
#include "GlobalNamespace/ovrAvatarBaseComponent.hpp"
// Including type: ovrAvatarBodyComponent
#include "GlobalNamespace/ovrAvatarBodyComponent.hpp"
// Including type: ovrAvatarControllerComponent
#include "GlobalNamespace/ovrAvatarControllerComponent.hpp"
// Including type: ovrAvatarHandComponent
#include "GlobalNamespace/ovrAvatarHandComponent.hpp"
// Including type: ovrAvatarAssetType
#include "GlobalNamespace/ovrAvatarAssetType.hpp"
// Including type: ovrAvatarMeshAssetData
#include "GlobalNamespace/ovrAvatarMeshAssetData.hpp"
// Including type: ovrAvatarMeshAssetDataV2
#include "GlobalNamespace/ovrAvatarMeshAssetDataV2.hpp"
// Including type: ovrAvatarTextureAssetData
#include "GlobalNamespace/ovrAvatarTextureAssetData.hpp"
// Including type: ovrAvatarMaterialState
#include "GlobalNamespace/ovrAvatarMaterialState.hpp"
// Including type: ovrAvatarRenderPartType
#include "GlobalNamespace/ovrAvatarRenderPartType.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRender
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRender.hpp"
// Including type: ovrAvatarVisibilityFlags
#include "GlobalNamespace/ovrAvatarVisibilityFlags.hpp"
// Including type: ovrAvatarHandGesture
#include "GlobalNamespace/ovrAvatarHandGesture.hpp"
// Including type: ovrAvatarExpressiveParameters
#include "GlobalNamespace/ovrAvatarExpressiveParameters.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS.hpp"
// Including type: ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
#include "GlobalNamespace/ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2.hpp"
// Including type: ovrAvatarBlendShapeParams
#include "GlobalNamespace/ovrAvatarBlendShapeParams.hpp"
// Including type: ovrAvatarRenderPart_ProjectorRender
#include "GlobalNamespace/ovrAvatarRenderPart_ProjectorRender.hpp"
// Including type: ovrAvatarGazeTargets
#include "GlobalNamespace/ovrAvatarGazeTargets.hpp"
// Including type: ovrAvatarLights
#include "GlobalNamespace/ovrAvatarLights.hpp"
// Including type: ovrAvatarLogLevel
#include "GlobalNamespace/ovrAvatarLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LibFile
::StringW Oculus::Avatar::CAPI::_get_LibFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_LibFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "LibFile"));
}
// Autogenerated static field setter
// Set static field: static private System.String LibFile
void Oculus::Avatar::CAPI::_set_LibFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_LibFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "LibFile", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeVisemeData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeVisemeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeVisemeData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeVisemeData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeVisemeData
void Oculus::Avatar::CAPI::_set_nativeVisemeData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeVisemeData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeVisemeData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeGazeTargetsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeGazeTargetsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeGazeTargetsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeGazeTargetsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeGazeTargetsData
void Oculus::Avatar::CAPI::_set_nativeGazeTargetsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeGazeTargetsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeGazeTargetsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr nativeAvatarLightsData
::System::IntPtr Oculus::Avatar::CAPI::_get_nativeAvatarLightsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_nativeAvatarLightsData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "nativeAvatarLightsData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr nativeAvatarLightsData
void Oculus::Avatar::CAPI::_set_nativeAvatarLightsData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_nativeAvatarLightsData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "nativeAvatarLightsData", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr DebugLineCountData
::System::IntPtr Oculus::Avatar::CAPI::_get_DebugLineCountData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_DebugLineCountData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Oculus.Avatar", "CAPI", "DebugLineCountData"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr DebugLineCountData
void Oculus::Avatar::CAPI::_set_DebugLineCountData(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_DebugLineCountData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "DebugLineCountData", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single[] scratchBufferFloat
::ArrayW<float> Oculus::Avatar::CAPI::_get_scratchBufferFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_scratchBufferFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Oculus.Avatar", "CAPI", "scratchBufferFloat"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] scratchBufferFloat
void Oculus::Avatar::CAPI::_set_scratchBufferFloat(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_scratchBufferFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "scratchBufferFloat", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.GameObject debugLineGo
::UnityEngine::GameObject* Oculus::Avatar::CAPI::_get_debugLineGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_debugLineGo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GameObject*>("Oculus.Avatar", "CAPI", "debugLineGo"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.GameObject debugLineGo
void Oculus::Avatar::CAPI::_set_debugLineGo(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_debugLineGo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "debugLineGo", value));
}
// Autogenerated static field getter
// Get static field: static private System.String SDKRuntimePrefix
::StringW Oculus::Avatar::CAPI::_get_SDKRuntimePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_SDKRuntimePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "SDKRuntimePrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String SDKRuntimePrefix
void Oculus::Avatar::CAPI::_set_SDKRuntimePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_SDKRuntimePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "SDKRuntimePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ovrPluginDLL
::StringW Oculus::Avatar::CAPI::_get_ovrPluginDLL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginDLL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Avatar", "CAPI", "ovrPluginDLL"));
}
// Autogenerated static field setter
// Set static field: static private System.String ovrPluginDLL
void Oculus::Avatar::CAPI::_set_ovrPluginDLL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginDLL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginDLL", value));
}
// Autogenerated static field getter
// Get static field: static private System.Version ovrPluginVersion
::System::Version* Oculus::Avatar::CAPI::_get_ovrPluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_get_ovrPluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI", "ovrPluginVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Version ovrPluginVersion
void Oculus::Avatar::CAPI::_set_ovrPluginVersion(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_set_ovrPluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI", "ovrPluginVersion", value));
}
// Autogenerated method: Oculus.Avatar.CAPI..cctor
void Oculus::Avatar::CAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_InitializeAndroidUnity
void Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity(::StringW appID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_InitializeAndroidUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_InitializeAndroidUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appID);
}
// Autogenerated method: Oculus.Avatar.CAPI.Initialize
void Oculus::Avatar::CAPI::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.Shutdown
void Oculus::Avatar::CAPI::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Shutdown
void Oculus::Avatar::CAPI::ovrAvatar_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Pop
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetType
::GlobalNamespace::ovrAvatarMessageType Oculus::Avatar::CAPI::ovrAvatarMessage_GetType(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification
::GlobalNamespace::ovrAvatarMessage_AvatarSpecification Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AvatarSpecification, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAvatarSpecification_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAvatarSpecification_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAvatarSpecification_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded
::GlobalNamespace::ovrAvatarMessage_AssetLoaded Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMessage_AssetLoaded, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_GetAssetLoaded_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_GetAssetLoaded_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_GetAssetLoaded_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarMessage_Free
void Oculus::Avatar::CAPI::ovrAvatarMessage_Free(::System::IntPtr msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarMessage_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarMessage_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_Destroy
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetCombineMeshes
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes(::System::IntPtr specificationRequest, bool useCombinedMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetCombineMeshes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetCombineMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(useCombinedMesh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, useCombinedMesh);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetLevelOfDetail
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetLevelOfDetail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetLevelOfDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(lod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecification
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification(uint64_t userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RequestAvatarSpecificationFromSpecRequest
void Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest(::System::IntPtr specificationRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RequestAvatarSpecificationFromSpecRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RequestAvatarSpecificationFromSpecRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(::System::IntPtr specificationRequest, ::GlobalNamespace::ovrAvatarLookAndFeelVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, version);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSpecificationRequest_SetExpressiveFlag
void Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag(::System::IntPtr specificationRequest, bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSpecificationRequest_SetExpressiveFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSpecificationRequest_SetExpressiveFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specificationRequest), ::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, specificationRequest, enable);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Create
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_Create(::System::IntPtr avatarSpecification, ::GlobalNamespace::ovrAvatarCapabilities capabilities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSpecification), ::il2cpp_utils::ExtractType(capabilities)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarSpecification, capabilities);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_Destroy
void Oculus::Avatar::CAPI::ovrAvatar_Destroy(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateBody
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform headPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(headPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, headPose);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization(::System::IntPtr avatar, ::ArrayW<float> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmData);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateVoiceVisualization_Native
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native(::System::IntPtr avatar, uint pcmDataSize, ByRef<::ArrayW<float>> pcmData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateVoiceVisualization_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateVoiceVisualization_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(pcmDataSize), ::il2cpp_utils::ExtractType(pcmData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, pcmDataSize, byref(pcmData));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHands
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_UpdateHandsWithType
void Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandInputState inputStateLeft, ::GlobalNamespace::ovrAvatarHandInputState inputStateRight, ::GlobalNamespace::ovrAvatarControllerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_UpdateHandsWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_UpdateHandsWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(inputStateLeft), ::il2cpp_utils::ExtractType(inputStateRight), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, inputStateLeft, inputStateRight, type);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_Finalize
void Oculus::Avatar::CAPI::ovrAvatarPose_Finalize(::System::IntPtr avatar, float elapsedSeconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_Finalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(elapsedSeconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, elapsedSeconds);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightControllerVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightControllerVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightControllerVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandVisibility
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility(::System::IntPtr avatar, bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, show);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Count
uint Oculus::Avatar::CAPI::ovrAvatarComponent_Count(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr avatar, uint index, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get
void Oculus::Avatar::CAPI::ovrAvatarComponent_Get(::System::IntPtr componentPtr, bool includeName, ByRef<::GlobalNamespace::ovrAvatarComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentPtr), ::il2cpp_utils::ExtractType(includeName), ::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentPtr, includeName, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarComponent_Get_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarComponent_Get_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarComponent_Get_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBaseComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBaseComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBaseComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBaseComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarBodyComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetBodyComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetBodyComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetBodyComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarControllerComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightControllerComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightControllerComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightControllerComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetLeftHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetLeftHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetLeftHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent
bool Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent(::System::IntPtr avatar, ByRef<::GlobalNamespace::ovrAvatarHandComponent> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(component));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPose_GetRightHandComponent_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPose_GetRightHandComponent_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPose_GetRightHandComponent_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoading
void Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading(uint64_t assetID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetID);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_BeginLoadingLOD
bool Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD(uint64_t assetId, ::GlobalNamespace::ovrAvatarAssetLevelOfDetail lod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_BeginLoadingLOD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_BeginLoadingLOD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetId), ::il2cpp_utils::ExtractType(lod)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetId, lod);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetType
::GlobalNamespace::ovrAvatarAssetType Oculus::Avatar::CAPI::ovrAvatarAsset_GetType(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarAssetType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData
::GlobalNamespace::ovrAvatarMeshAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData
::GlobalNamespace::ovrAvatarMeshAssetDataV2 Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMeshAssetDataV2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeName
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshCount
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetSubmeshLastIndex
uint Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex(::System::IntPtr assetPtr, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetSubmeshLastIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetSubmeshLastIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMeshBlendShapeVertices
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMeshBlendShapeVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMeshBlendShapeVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetAvatar
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs
::ArrayW<uint64_t> Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs(::System::IntPtr assetHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint64_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetCombinedMeshIDs_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native(::System::IntPtr assetHandle, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetCombinedMeshIDs_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetCombinedMeshIDs_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetHandle), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetHandle, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData
void Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData(::System::IntPtr avatar, ByRef<uint64_t> textureID, ByRef<::UnityEngine::Vector4> offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureID), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, byref(textureID), byref(offset));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetCombinedMeshAlphaData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native(::System::IntPtr avatar, ::System::IntPtr textureIDPtr, ::System::IntPtr offsetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetCombinedMeshAlphaData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetCombinedMeshAlphaData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(textureIDPtr), ::il2cpp_utils::ExtractType(offsetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, textureIDPtr, offsetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData
::GlobalNamespace::ovrAvatarTextureAssetData Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTextureAssetData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetTextureData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetTextureData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetTextureData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialData_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialData_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialData_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarAsset_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState(::System::IntPtr assetPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarAsset_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarAsset_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetPtr)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetPtr);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetType
::GlobalNamespace::ovrAvatarRenderPartType Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPartType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged
bool Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask
::GlobalNamespace::ovrAvatarVisibilityFlags Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarVisibilityFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetMaterialState
::GlobalNamespace::ovrAvatarMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState
::GlobalNamespace::ovrAvatarPBSMaterialState Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarPBSMaterialState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetExpressiveParameters
::GlobalNamespace::ovrAvatarExpressiveParameters Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetExpressiveParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetExpressiveParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarExpressiveParameters, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitOnsetSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed(::System::IntPtr avatar, float onsetSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitOnsetSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitOnsetSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(onsetSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, onsetSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetActionUnitFalloffSpeed
void Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed(::System::IntPtr avatar, float falloffSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetActionUnitFalloffSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetActionUnitFalloffSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(falloffSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, falloffSpeed);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemeMultiplier
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier(::System::IntPtr avatar, float visemeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemeMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemeMultiplier);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform
::GlobalNamespace::ovrAvatarTransform Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(::System::IntPtr renderPart, uint jointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(jointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, jointIndex);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID
uint64_t Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2
::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams
void Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams(::System::IntPtr renderPart, ByRef<::GlobalNamespace::ovrAvatarBlendShapeParams> blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart, byref(blendParams));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender
::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ovrAvatarRenderPart_ProjectorRender, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates
::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState> Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::ovrAvatarPBSMaterialState>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetBodyPBSMaterialStates_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native(::System::IntPtr avatar, ::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetBodyPBSMaterialStates_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetBodyPBSMaterialStates_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarRenderPart_GetProjectorRender_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native(::System::IntPtr renderPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarRenderPart_GetProjectorRender_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarRenderPart_GetProjectorRender_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderPart)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderPart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAssetCount
uint Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAssetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAssetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetReferencedAsset
uint64_t Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset(::System::IntPtr avatar, uint index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetReferencedAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetReferencedAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, index);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarHandGesture gesture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(gesture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, gesture);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLeftHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLeftHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLeftHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetRightHandCustomGesture
void Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture(::System::IntPtr avatar, uint jointCount, ByRef<::ArrayW<::GlobalNamespace::ovrAvatarTransform>> customJointTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetRightHandCustomGesture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetRightHandCustomGesture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(jointCount), ::il2cpp_utils::ExtractType(customJointTransforms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, jointCount, byref(customJointTransforms));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdatePoseFromPacket
void Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket(::System::IntPtr avatar, ::System::IntPtr packet, float secondsFromStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdatePoseFromPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdatePoseFromPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(secondsFromStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, packet, secondsFromStart);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_BeginRecording
void Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_BeginRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_BeginRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_EndRecording
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording(::System::IntPtr avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_EndRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_EndRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetSize
uint Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_GetDurationSeconds
float Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_GetDurationSeconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_GetDurationSeconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Free
void Oculus::Avatar::CAPI::ovrAvatarPacket_Free(::System::IntPtr packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Free");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Free", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Write
bool Oculus::Avatar::CAPI::ovrAvatarPacket_Write(::System::IntPtr packet, uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packet, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatarPacket_Read
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatarPacket_Read(uint bufferSize, ByRef<::ArrayW<uint8_t>> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatarPacket_Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatarPacket_Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize, byref(buffer));
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetInternalForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetInternalForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetInternalForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetForceASTCTextures
void Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetForceASTCTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetForceASTCTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarBlendShapeParams blendParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(blendParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, blendParams);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_OverrideExpressiveLogic_Native
void Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native(::System::IntPtr avatar, ::System::IntPtr state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_OverrideExpressiveLogic_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_OverrideExpressiveLogic_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, state);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarVisemes visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetVisemes_Native
void Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native(::System::IntPtr avatar, ::System::IntPtr visemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetVisemes_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetVisemes_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(visemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, visemes);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateWorldTransform
void Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform(::System::IntPtr avatar, ::GlobalNamespace::ovrAvatarTransform transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateWorldTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateWorldTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatar, transform);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets(::GlobalNamespace::ovrAvatarGazeTargets targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateGazeTargets_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native(::System::IntPtr targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateGazeTargets_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateGazeTargets_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targets);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveGazeTargets
void Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets(uint targetCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveGazeTargets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveGazeTargets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights(::GlobalNamespace::ovrAvatarLights lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_UpdateLights_Native
void Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native(::System::IntPtr lights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_UpdateLights_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_UpdateLights_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RemoveLights
void Oculus::Avatar::CAPI::ovrAvatar_RemoveLights(uint lightCount, ::ArrayW<uint> ids) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RemoveLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RemoveLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightCount), ::il2cpp_utils::ExtractType(ids)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightCount, ids);
}
// Autogenerated method: Oculus.Avatar.CAPI.LoggingCallback
void Oculus::Avatar::CAPI::LoggingCallback(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "LoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_RegisterLoggingCallback
void Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback(::Oculus::Avatar::CAPI::LoggingDelegate* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_RegisterLoggingCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_RegisterLoggingCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetLoggingLevel
void Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel(::GlobalNamespace::ovrAvatarLogLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetLoggingLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetLoggingLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugTransforms_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugTransforms_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugTransforms_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_GetDebugLines_Native
::System::IntPtr Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native(::System::IntPtr count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_GetDebugLines_Native");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_GetDebugLines_Native", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, count);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_DrawDebugLines
void Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_DrawDebugLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_DrawDebugLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrAvatar_SetDebugDrawContext
void Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext(uint context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrAvatar_SetDebugDrawContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrAvatar_SetDebugDrawContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: Oculus.Avatar.CAPI.SendEvent
bool Oculus::Avatar::CAPI::SendEvent(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::SendEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "SendEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated method: Oculus.Avatar.CAPI._ovrp_GetVersion
::System::IntPtr Oculus::Avatar::CAPI::_ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::_ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "_ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI.ovrp_GetVersion
::StringW Oculus::Avatar::CAPI::ovrp_GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::ovrp_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI", "ovrp_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate
#include "Oculus/Avatar/CAPI_LoggingDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.Invoke
void Oculus::Avatar::CAPI::LoggingDelegate::Invoke(::System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.BeginInvoke
::System::IAsyncResult* Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke(::System::IntPtr str, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, str, callback, object);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.LoggingDelegate.EndInvoke
void Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::LoggingDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Success
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Success
void Oculus::Avatar::CAPI::Result::_set_Success(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure
void Oculus::Avatar::CAPI::Result::_set_Failure(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidParameter
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidParameter
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotInitialized
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotInitialized
void Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidOperation
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InvalidOperation
void Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_Unsupported
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_Unsupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_Unsupported
void Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_Unsupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_Unsupported", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotYetImplemented
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_NotYetImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_NotYetImplemented
void Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_NotYetImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_NotYetImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_OperationFailed
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_OperationFailed
void Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InsufficientSize
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_get_Failure_InsufficientSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Oculus::Avatar::CAPI::Result>("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize"));
}
// Autogenerated static field setter
// Set static field: static public Oculus.Avatar.CAPI/Oculus.Avatar.Result Failure_InsufficientSize
void Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize(::Oculus::Avatar::CAPI::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::_set_Failure_InsufficientSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/Result", "Failure_InsufficientSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Oculus::Avatar::CAPI::Result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::Result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0
#include "Oculus/Avatar/CAPI_OVRP_1_30_0.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: Oculus.Avatar.CAPI/Oculus.Avatar.Result
#include "Oculus/Avatar/CAPI_Result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Version version
::System::Version* Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_get_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Version version
void Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::_set_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Avatar", "CAPI/OVRP_1_30_0", "version", value));
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0..cctor
void Oculus::Avatar::CAPI::OVRP_1_30_0::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Avatar.CAPI/Oculus.Avatar.OVRP_1_30_0.ovrp_SendEvent2
::Oculus::Avatar::CAPI::Result Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2(::StringW name, ::StringW param, ::StringW source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Avatar::CAPI::OVRP_1_30_0::ovrp_SendEvent2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Avatar", "CAPI/OVRP_1_30_0", "ovrp_SendEvent2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Oculus::Avatar::CAPI::Result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, param, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.AudioDevice
#include "NatSuite/Devices/AudioDevice.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.AudioDevice.get_uniqueID
::StringW NatSuite::Devices::AudioDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.get_name
::StringW NatSuite::Devices::AudioDevice::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.get_echoCancellation
bool NatSuite::Devices::AudioDevice::get_echoCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_echoCancellation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_echoCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.get_sampleRate
int NatSuite::Devices::AudioDevice::get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.set_sampleRate
void NatSuite::Devices::AudioDevice::set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::set_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.get_channelCount
int NatSuite::Devices::AudioDevice::get_channelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.set_channelCount
void NatSuite::Devices::AudioDevice::set_channelCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::set_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.get_running
bool NatSuite::Devices::AudioDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.StartRunning
void NatSuite::Devices::AudioDevice::StartRunning(::NatSuite::Devices::SampleBufferDelegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delegate);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.StopRunning
void NatSuite::Devices::AudioDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.Equals
bool NatSuite::Devices::AudioDevice::Equals(::NatSuite::Devices::IMediaDevice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: NatSuite.Devices.AudioDevice.ToString
::StringW NatSuite::Devices::AudioDevice::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::AudioDevice::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.CameraDevice
#include "NatSuite/Devices/CameraDevice.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: NatSuite.Devices.FlashMode
#include "NatSuite/Devices/FlashMode.hpp"
// Including type: NatSuite.Devices.FrameOrientation
#include "NatSuite/Devices/FrameOrientation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.CameraDevice.get_uniqueID
::StringW NatSuite::Devices::CameraDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_frontFacing
bool NatSuite::Devices::CameraDevice::get_frontFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_frontFacing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frontFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_flashSupported
bool NatSuite::Devices::CameraDevice::get_flashSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_flashSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flashSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_torchSupported
bool NatSuite::Devices::CameraDevice::get_torchSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_torchSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torchSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_exposureLockSupported
bool NatSuite::Devices::CameraDevice::get_exposureLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_exposureLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_focusLockSupported
bool NatSuite::Devices::CameraDevice::get_focusLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_focusLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_whiteBalanceLockSupported
bool NatSuite::Devices::CameraDevice::get_whiteBalanceLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_whiteBalanceLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBalanceLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_fieldOfView
::System::ValueTuple_2<float, float> NatSuite::Devices::CameraDevice::get_fieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_fieldOfView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_exposureRange
::System::ValueTuple_2<float, float> NatSuite::Devices::CameraDevice::get_exposureRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_exposureRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_zoomRange
::System::ValueTuple_2<float, float> NatSuite::Devices::CameraDevice::get_zoomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_zoomRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zoomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_previewResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::CameraDevice::get_previewResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_previewResolution
void NatSuite::Devices::CameraDevice::set_previewResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_photoResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::CameraDevice::get_photoResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_photoResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_photoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_photoResolution
void NatSuite::Devices::CameraDevice::set_photoResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_photoResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_photoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_frameRate
int NatSuite::Devices::CameraDevice::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_frameRate
void NatSuite::Devices::CameraDevice::set_frameRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_exposureBias
float NatSuite::Devices::CameraDevice::get_exposureBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_exposureBias");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_exposureBias
void NatSuite::Devices::CameraDevice::set_exposureBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_exposureBias");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_exposureLock
bool NatSuite::Devices::CameraDevice::get_exposureLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_exposureLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_exposureLock
void NatSuite::Devices::CameraDevice::set_exposureLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_exposureLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_exposurePoint
void NatSuite::Devices::CameraDevice::set_exposurePoint(::System::ValueTuple_2<float, float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_exposurePoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposurePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_flashMode
::NatSuite::Devices::FlashMode NatSuite::Devices::CameraDevice::get_flashMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_flashMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::FlashMode, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_flashMode
void NatSuite::Devices::CameraDevice::set_flashMode(::NatSuite::Devices::FlashMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_flashMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_focusLock
bool NatSuite::Devices::CameraDevice::get_focusLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_focusLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_focusLock
void NatSuite::Devices::CameraDevice::set_focusLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_focusLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_focusPoint
void NatSuite::Devices::CameraDevice::set_focusPoint(::System::ValueTuple_2<float, float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_focusPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focusPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_torchEnabled
bool NatSuite::Devices::CameraDevice::get_torchEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_torchEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_torchEnabled
void NatSuite::Devices::CameraDevice::set_torchEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_torchEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_torchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_whiteBalanceLock
bool NatSuite::Devices::CameraDevice::get_whiteBalanceLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_whiteBalanceLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_whiteBalanceLock
void NatSuite::Devices::CameraDevice::set_whiteBalanceLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_whiteBalanceLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_whiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_zoomRatio
float NatSuite::Devices::CameraDevice::get_zoomRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_zoomRatio");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_zoomRatio
void NatSuite::Devices::CameraDevice::set_zoomRatio(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_zoomRatio");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.set_orientation
void NatSuite::Devices::CameraDevice::set_orientation(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::set_orientation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.get_running
bool NatSuite::Devices::CameraDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.StartRunning
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::CameraDevice::StartRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.StopRunning
void NatSuite::Devices::CameraDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.CapturePhoto
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::CameraDevice::CapturePhoto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::CapturePhoto");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CapturePhoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.Equals
bool NatSuite::Devices::CameraDevice::Equals(::NatSuite::Devices::IMediaDevice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: NatSuite.Devices.CameraDevice.ToString
::StringW NatSuite::Devices::CameraDevice::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::CameraDevice::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.FlashMode
#include "NatSuite/Devices/FlashMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DocAttribute] Offset: 0x677EAC
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FlashMode Off
::NatSuite::Devices::FlashMode NatSuite::Devices::FlashMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FlashMode>("NatSuite.Devices", "FlashMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FlashMode Off
void NatSuite::Devices::FlashMode::_set_Off(::NatSuite::Devices::FlashMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FlashMode", "Off", value));
}
// [DocAttribute] Offset: 0x677EE4
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FlashMode On
::NatSuite::Devices::FlashMode NatSuite::Devices::FlashMode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FlashMode>("NatSuite.Devices", "FlashMode", "On"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FlashMode On
void NatSuite::Devices::FlashMode::_set_On(::NatSuite::Devices::FlashMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FlashMode", "On", value));
}
// [DocAttribute] Offset: 0x677F1C
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FlashMode Auto
::NatSuite::Devices::FlashMode NatSuite::Devices::FlashMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FlashMode>("NatSuite.Devices", "FlashMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FlashMode Auto
void NatSuite::Devices::FlashMode::_set_Auto(::NatSuite::Devices::FlashMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FlashMode", "Auto", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& NatSuite::Devices::FlashMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FlashMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.FrameOrientation
#include "NatSuite/Devices/FrameOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DocAttribute] Offset: 0x677F54
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FrameOrientation LandscapeLeft
::NatSuite::Devices::FrameOrientation NatSuite::Devices::FrameOrientation::_get_LandscapeLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_get_LandscapeLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FrameOrientation>("NatSuite.Devices", "FrameOrientation", "LandscapeLeft"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FrameOrientation LandscapeLeft
void NatSuite::Devices::FrameOrientation::_set_LandscapeLeft(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_set_LandscapeLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FrameOrientation", "LandscapeLeft", value));
}
// [DocAttribute] Offset: 0x677F8C
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FrameOrientation Portrait
::NatSuite::Devices::FrameOrientation NatSuite::Devices::FrameOrientation::_get_Portrait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_get_Portrait");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FrameOrientation>("NatSuite.Devices", "FrameOrientation", "Portrait"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FrameOrientation Portrait
void NatSuite::Devices::FrameOrientation::_set_Portrait(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_set_Portrait");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FrameOrientation", "Portrait", value));
}
// [DocAttribute] Offset: 0x677FC4
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FrameOrientation LandscapeRight
::NatSuite::Devices::FrameOrientation NatSuite::Devices::FrameOrientation::_get_LandscapeRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_get_LandscapeRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FrameOrientation>("NatSuite.Devices", "FrameOrientation", "LandscapeRight"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FrameOrientation LandscapeRight
void NatSuite::Devices::FrameOrientation::_set_LandscapeRight(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_set_LandscapeRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FrameOrientation", "LandscapeRight", value));
}
// [DocAttribute] Offset: 0x677FFC
// Autogenerated static field getter
// Get static field: static public NatSuite.Devices.FrameOrientation PortraitUpsideDown
::NatSuite::Devices::FrameOrientation NatSuite::Devices::FrameOrientation::_get_PortraitUpsideDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_get_PortraitUpsideDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::FrameOrientation>("NatSuite.Devices", "FrameOrientation", "PortraitUpsideDown"));
}
// Autogenerated static field setter
// Set static field: static public NatSuite.Devices.FrameOrientation PortraitUpsideDown
void NatSuite::Devices::FrameOrientation::_set_PortraitUpsideDown(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::_set_PortraitUpsideDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "FrameOrientation", "PortraitUpsideDown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& NatSuite::Devices::FrameOrientation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::FrameOrientation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.IMediaDevice.get_uniqueID
::StringW NatSuite::Devices::IMediaDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IMediaDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.IMediaDevice.get_running
bool NatSuite::Devices::IMediaDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IMediaDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.IMediaDevice.StopRunning
void NatSuite::Devices::IMediaDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IMediaDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.IAudioDevice
#include "NatSuite/Devices/IAudioDevice.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.IAudioDevice.get_sampleRate
int NatSuite::Devices::IAudioDevice::get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IAudioDevice::get_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.IAudioDevice.get_channelCount
int NatSuite::Devices::IAudioDevice::get_channelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IAudioDevice::get_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.IAudioDevice.StartRunning
void NatSuite::Devices::IAudioDevice::StartRunning(::NatSuite::Devices::SampleBufferDelegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::IAudioDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delegate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.ICameraDevice
#include "NatSuite/Devices/ICameraDevice.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.ICameraDevice.get_frontFacing
bool NatSuite::Devices::ICameraDevice::get_frontFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::get_frontFacing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frontFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.ICameraDevice.get_previewResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::ICameraDevice::get_previewResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::get_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.ICameraDevice.set_previewResolution
void NatSuite::Devices::ICameraDevice::set_previewResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::set_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.ICameraDevice.get_frameRate
int NatSuite::Devices::ICameraDevice::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::get_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.ICameraDevice.set_frameRate
void NatSuite::Devices::ICameraDevice::set_frameRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::set_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.ICameraDevice.StartRunning
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::ICameraDevice::StartRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::ICameraDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.SampleBufferDelegate.Invoke
void NatSuite::Devices::SampleBufferDelegate::Invoke(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::SampleBufferDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated method: NatSuite.Devices.SampleBufferDelegate.BeginInvoke
::System::IAsyncResult* NatSuite::Devices::SampleBufferDelegate::BeginInvoke(::ArrayW<float> sampleBuffer, int64_t timestamp, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::SampleBufferDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sampleBuffer, timestamp, callback, object);
}
// Autogenerated method: NatSuite.Devices.SampleBufferDelegate.EndInvoke
void NatSuite::Devices::SampleBufferDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::SampleBufferDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery
#include "NatSuite/Devices/MediaDeviceQuery.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion
#include "NatSuite/Devices/MediaDeviceQuery_Criterion.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria
#include "NatSuite/Devices/MediaDeviceQuery_Criteria.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper
#include "NatSuite/Devices/MediaDeviceQuery_MediaDeviceQueryPermissionsHelper.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass2_0`1
#include "NatSuite/Devices/MediaDeviceQuery_--c__DisplayClass2_0_1.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_0
#include "NatSuite/Devices/MediaDeviceQuery_--c__DisplayClass9_0.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_1
#include "NatSuite/Devices/MediaDeviceQuery_--c__DisplayClass9_1.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c
#include "NatSuite/Devices/MediaDeviceQuery_--c.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NatSuite.Devices.AudioDevice
#include "NatSuite/Devices/AudioDevice.hpp"
// Including type: NatSuite.Devices.CameraDevice
#include "NatSuite/Devices/CameraDevice.hpp"
// Including type: NatSuite.Devices.WebCameraDevice
#include "NatSuite/Devices/WebCameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NatSuite.Devices.IMediaDevice[] devices
::ArrayW<::NatSuite::Devices::IMediaDevice*>& NatSuite::Devices::MediaDeviceQuery::dyn_devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::dyn_devices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devices"))->offset;
  return *reinterpret_cast<::ArrayW<::NatSuite::Devices::IMediaDevice*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
int& NatSuite::Devices::MediaDeviceQuery::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.get_currentDevice
::NatSuite::Devices::IMediaDevice* NatSuite::Devices::MediaDeviceQuery::get_currentDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::get_currentDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::IMediaDevice*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.get_count
int NatSuite::Devices::MediaDeviceQuery::get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::get_count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.Advance
void NatSuite::Devices::MediaDeviceQuery::Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.AudioDevices
::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::AudioDevice*>* NatSuite::Devices::MediaDeviceQuery::AudioDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::AudioDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery", "AudioDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::AudioDevice*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.CameraDevices
::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::CameraDevice*>* NatSuite::Devices::MediaDeviceQuery::CameraDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::CameraDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery", "CameraDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::CameraDevice*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery.WebCamDevices
::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::WebCameraDevice*>* NatSuite::Devices::MediaDeviceQuery::WebCamDevices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::WebCamDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery", "WebCamDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NatSuite::Devices::WebCameraDevice*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion
#include "NatSuite/Devices/MediaDeviceQuery_Criterion.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion.Invoke
bool NatSuite::Devices::MediaDeviceQuery::Criterion::Invoke(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criterion::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion.BeginInvoke
::System::IAsyncResult* NatSuite::Devices::MediaDeviceQuery::Criterion::BeginInvoke(::NatSuite::Devices::IMediaDevice* device, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criterion::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, device, callback, object);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion.EndInvoke
bool NatSuite::Devices::MediaDeviceQuery::Criterion::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criterion::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria
#include "NatSuite/Devices/MediaDeviceQuery_Criteria.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c
#include "NatSuite/Devices/MediaDeviceQuery_Criteria_--c.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion
#include "NatSuite/Devices/MediaDeviceQuery_Criterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DocAttribute] Offset: 0x67806C
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion AudioDevice
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_AudioDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_AudioDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "AudioDevice"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion AudioDevice
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_AudioDevice(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_AudioDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "AudioDevice", value));
}
// [DocAttribute] Offset: 0x6780A4
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion CameraDevice
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_CameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_CameraDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "CameraDevice"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion CameraDevice
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_CameraDevice(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_CameraDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "CameraDevice", value));
}
// [DocAttribute] Offset: 0x6780DC
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion GenericCameraDevice
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_GenericCameraDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_GenericCameraDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "GenericCameraDevice"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion GenericCameraDevice
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_GenericCameraDevice(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_GenericCameraDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "GenericCameraDevice", value));
}
// [DocAttribute] Offset: 0x678114
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion RearFacing
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_RearFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_RearFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "RearFacing"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion RearFacing
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_RearFacing(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_RearFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "RearFacing", value));
}
// [DocAttribute] Offset: 0x67814C
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion FrontFacing
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_FrontFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_FrontFacing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "FrontFacing"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion FrontFacing
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_FrontFacing(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_FrontFacing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "FrontFacing", value));
}
// [DocAttribute] Offset: 0x678184
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion EchoCancellation
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_EchoCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_EchoCancellation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "EchoCancellation"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion EchoCancellation
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_EchoCancellation(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_EchoCancellation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "EchoCancellation", value));
}
// [DocAttribute] Offset: 0x6781BC
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion Torch
::NatSuite::Devices::MediaDeviceQuery::Criterion* NatSuite::Devices::MediaDeviceQuery::Criteria::_get_Torch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_get_Torch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criterion*>("NatSuite.Devices", "MediaDeviceQuery/Criteria", "Torch"));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion Torch
void NatSuite::Devices::MediaDeviceQuery::Criteria::_set_Torch(::NatSuite::Devices::MediaDeviceQuery::Criterion* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::_set_Torch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria", "Torch", value));
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria..cctor
void NatSuite::Devices::MediaDeviceQuery::Criteria::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery/Criteria", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c
#include "NatSuite/Devices/MediaDeviceQuery_Criteria_--c.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c <>9
::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c* NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c*>("NatSuite.Devices", "MediaDeviceQuery/Criteria/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c <>9
void NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::_set_$$9(::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/Criteria/<>c", "<>9", value)));
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c..cctor
void NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery/Criteria/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_0
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_0(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_1
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_1(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_2
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_2(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_3
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_3(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_4
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_4(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_5
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_5(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criteria/NatSuite.Devices.<>c.<.cctor>b__7_6
bool NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::$_cctor$b__7_6(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::Criteria::$$c::<.cctor>b__7_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper
#include "NatSuite/Devices/MediaDeviceQuery_MediaDeviceQueryPermissionsHelper.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7
#include "NatSuite/Devices/MediaDeviceQuery_MediaDeviceQueryPermissionsHelper_-RequestiOS-d__7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Android.PermissionCallbacks
#include "UnityEngine/Android/PermissionCallbacks.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> _androidCompletionHandler
::System::Action_1<bool>*& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::dyn__androidCompletionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::dyn__androidCompletionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_androidCompletionHandler"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Android.PermissionCallbacks _androidPermissionCallbacks
::UnityEngine::Android::PermissionCallbacks*& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::dyn__androidPermissionCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::dyn__androidPermissionCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_androidPermissionCallbacks"))->offset;
  return *reinterpret_cast<::UnityEngine::Android::PermissionCallbacks**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.Awake
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.Request
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::Request(bool camera, ::System::Action_1<bool>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, completionHandler);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.RequestAndroid
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::RequestAndroid(bool camera, ::System::Action_1<bool>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::RequestAndroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestAndroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(completionHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, completionHandler);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.AndroidPermissionGranted
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::AndroidPermissionGranted(::StringW permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::AndroidPermissionGranted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AndroidPermissionGranted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permission);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.AndroidPermissionDenied
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::AndroidPermissionDenied(::StringW permission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::AndroidPermissionDenied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AndroidPermissionDenied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permission)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permission);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper.RequestiOS
::System::Collections::IEnumerator* NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::RequestiOS(bool camera, ::System::Action_1<bool>* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::RequestiOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestiOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(completionHandler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, camera, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7
#include "NatSuite/Devices/MediaDeviceQuery_MediaDeviceQueryPermissionsHelper_-RequestiOS-d__7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean camera
bool& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Boolean> completionHandler
::System::Action_1<bool>*& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_completionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_completionHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completionHandler"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UserAuthorization <permission>5__2
::UnityEngine::UserAuthorization& NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$permission$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::dyn_$permission$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<permission>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::UserAuthorization*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7.System.IDisposable.Dispose
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7.MoveNext
bool NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.MediaDeviceQueryPermissionsHelper/NatSuite.Devices.<RequestiOS>d__7.System.Collections.IEnumerator.Reset
void NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::MediaDeviceQueryPermissionsHelper::$RequestiOS$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_0
#include "NatSuite/Devices/MediaDeviceQuery_--c__DisplayClass9_0.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion
#include "NatSuite/Devices/MediaDeviceQuery_Criterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion[] criteria
::ArrayW<::NatSuite::Devices::MediaDeviceQuery::Criterion*>& NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_0::dyn_criteria() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_0::dyn_criteria");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "criteria"))->offset;
  return *reinterpret_cast<::ArrayW<::NatSuite::Devices::MediaDeviceQuery::Criterion*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_0.<.ctor>b__0
bool NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_0::$_ctor$b__0(::NatSuite::Devices::IMediaDevice* device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_0::<.ctor>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, device);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_1
#include "NatSuite/Devices/MediaDeviceQuery_--c__DisplayClass9_1.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.Criterion
#include "NatSuite/Devices/MediaDeviceQuery_Criterion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.IMediaDevice device
::NatSuite::Devices::IMediaDevice*& NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::IMediaDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c__DisplayClass9_1.<.ctor>b__1
bool NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::$_ctor$b__1(::NatSuite::Devices::MediaDeviceQuery::Criterion* criterion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c__DisplayClass9_1::<.ctor>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(criterion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, criterion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c
#include "NatSuite/Devices/MediaDeviceQuery_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NatSuite.Devices.WebCameraDevice
#include "NatSuite/Devices/WebCameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c <>9
::NatSuite::Devices::MediaDeviceQuery::$$c* NatSuite::Devices::MediaDeviceQuery::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::NatSuite::Devices::MediaDeviceQuery::$$c*>("NatSuite.Devices", "MediaDeviceQuery/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c <>9
void NatSuite::Devices::MediaDeviceQuery::$$c::_set_$$9(::NatSuite::Devices::MediaDeviceQuery::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.WebCamDevice,NatSuite.Devices.WebCameraDevice> <>9__14_0
::System::Func_2<::UnityEngine::WebCamDevice, ::NatSuite::Devices::WebCameraDevice*>* NatSuite::Devices::MediaDeviceQuery::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::WebCamDevice, ::NatSuite::Devices::WebCameraDevice*>*>("NatSuite.Devices", "MediaDeviceQuery/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.WebCamDevice,NatSuite.Devices.WebCameraDevice> <>9__14_0
void NatSuite::Devices::MediaDeviceQuery::$$c::_set_$$9__14_0(::System::Func_2<::UnityEngine::WebCamDevice, ::NatSuite::Devices::WebCameraDevice*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("NatSuite.Devices", "MediaDeviceQuery/<>c", "<>9__14_0", value)));
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c..cctor
void NatSuite::Devices::MediaDeviceQuery::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices", "MediaDeviceQuery/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MediaDeviceQuery/NatSuite.Devices.<>c.<WebCamDevices>b__14_0
::NatSuite::Devices::WebCameraDevice* NatSuite::Devices::MediaDeviceQuery::$$c::$WebCamDevices$b__14_0(::UnityEngine::WebCamDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MediaDeviceQuery::$$c::<WebCamDevices>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WebCamDevices>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::WebCameraDevice*, false>(this, ___internal__method, device);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MixerDevice
#include "NatSuite/Devices/MixerDevice.hpp"
// Including type: NatSuite.Devices.MixerDevice/NatSuite.Devices.MixerDeviceAttachment
#include "NatSuite/Devices/MixerDevice_MixerDeviceAttachment.hpp"
// Including type: NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0
#include "NatSuite/Devices/MixerDevice_--c__DisplayClass10_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NatSuite.Devices.IAudioDevice audioDevice
::NatSuite::Devices::IAudioDevice*& NatSuite::Devices::MixerDevice::dyn_audioDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::dyn_audioDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioDevice"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::IAudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NatSuite.Devices.MixerDevice/NatSuite.Devices.MixerDeviceAttachment attachment
::NatSuite::Devices::MixerDevice::MixerDeviceAttachment*& NatSuite::Devices::MixerDevice::dyn_attachment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::dyn_attachment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachment"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::MixerDevice::MixerDeviceAttachment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Single> stagingBuffer
::System::Collections::Generic::List_1<float>*& NatSuite::Devices::MixerDevice::dyn_stagingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::dyn_stagingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stagingBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.get_uniqueID
::StringW NatSuite::Devices::MixerDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.get_sampleRate
int NatSuite::Devices::MixerDevice::get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::get_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.get_channelCount
int NatSuite::Devices::MixerDevice::get_channelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::get_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.get_running
bool NatSuite::Devices::MixerDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.StartRunning
void NatSuite::Devices::MixerDevice::StartRunning(::NatSuite::Devices::SampleBufferDelegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delegate);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.StopRunning
void NatSuite::Devices::MixerDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.Dispose
void NatSuite::Devices::MixerDevice::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.Equals
bool NatSuite::Devices::MixerDevice::Equals(::NatSuite::Devices::IMediaDevice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: NatSuite.Devices.MixerDevice.ToString
::StringW NatSuite::Devices::MixerDevice::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MixerDevice/NatSuite.Devices.MixerDeviceAttachment
#include "NatSuite/Devices/MixerDevice_MixerDeviceAttachment.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.SampleBufferDelegate delegate
::NatSuite::Devices::SampleBufferDelegate*& NatSuite::Devices::MixerDevice::MixerDeviceAttachment::dyn_delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::MixerDeviceAttachment::dyn_delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegate"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::SampleBufferDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MixerDevice/NatSuite.Devices.MixerDeviceAttachment.OnAudioFilterRead
void NatSuite::Devices::MixerDevice::MixerDeviceAttachment::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::MixerDeviceAttachment::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0
#include "NatSuite/Devices/MixerDevice_--c__DisplayClass10_0.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.MixerDevice <>4__this
::NatSuite::Devices::MixerDevice*& NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::MixerDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] copyBuffer
::ArrayW<float>& NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_copyBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_copyBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "copyBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.SampleBufferDelegate delegate
::NatSuite::Devices::SampleBufferDelegate*& NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::dyn_delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegate"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::SampleBufferDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0.<StartRunning>b__0
void NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__0(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::<StartRunning>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRunning>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated method: NatSuite.Devices.MixerDevice/NatSuite.Devices.<>c__DisplayClass10_0.<StartRunning>b__1
void NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::$StartRunning$b__1(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::MixerDevice::$$c__DisplayClass10_0::<StartRunning>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRunning>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.WebCameraDevice
#include "NatSuite/Devices/WebCameraDevice.hpp"
// Including type: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.WebCameraDeviceAttachment
#include "NatSuite/Devices/WebCameraDevice_WebCameraDeviceAttachment.hpp"
// Including type: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.<>c__DisplayClass15_0
#include "NatSuite/Devices/WebCameraDevice_--c__DisplayClass15_0.hpp"
// Including type: UnityEngine.WebCamTexture
#include "UnityEngine/WebCamTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: NatSuite.Devices.IMediaDevice
#include "NatSuite/Devices/IMediaDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.WebCamDevice device
::UnityEngine::WebCamDevice& NatSuite::Devices::WebCameraDevice::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::UnityEngine::WebCamDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ValueTuple`2<System.Int32,System.Int32> <previewResolution>k__BackingField
::System::ValueTuple_2<int, int>& NatSuite::Devices::WebCameraDevice::dyn_$previewResolution$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_$previewResolution$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previewResolution>k__BackingField"))->offset;
  return *reinterpret_cast<::System::ValueTuple_2<int, int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <frameRate>k__BackingField
int& NatSuite::Devices::WebCameraDevice::dyn_$frameRate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_$frameRate$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<frameRate>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WebCamTexture webCamTexture
::UnityEngine::WebCamTexture*& NatSuite::Devices::WebCameraDevice::dyn_webCamTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_webCamTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webCamTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::WebCamTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D previewTexture
::UnityEngine::Texture2D*& NatSuite::Devices::WebCameraDevice::dyn_previewTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_previewTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32[] pixelBuffer
::ArrayW<::UnityEngine::Color32>& NatSuite::Devices::WebCameraDevice::dyn_pixelBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_pixelBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pixelBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NatSuite.Devices.WebCameraDevice/NatSuite.Devices.WebCameraDeviceAttachment attachment
::NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment*& NatSuite::Devices::WebCameraDevice::dyn_attachment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::dyn_attachment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attachment"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.get_uniqueID
::StringW NatSuite::Devices::WebCameraDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.get_frontFacing
bool NatSuite::Devices::WebCameraDevice::get_frontFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::get_frontFacing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frontFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.get_previewResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::WebCameraDevice::get_previewResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::get_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.set_previewResolution
void NatSuite::Devices::WebCameraDevice::set_previewResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::set_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.get_frameRate
int NatSuite::Devices::WebCameraDevice::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::get_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.set_frameRate
void NatSuite::Devices::WebCameraDevice::set_frameRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::set_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.get_running
bool NatSuite::Devices::WebCameraDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.StartRunning
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::WebCameraDevice::StartRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.StopRunning
void NatSuite::Devices::WebCameraDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.Equals
bool NatSuite::Devices::WebCameraDevice::Equals(::NatSuite::Devices::IMediaDevice* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice.ToString
::StringW NatSuite::Devices::WebCameraDevice::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.WebCameraDeviceAttachment
#include "NatSuite/Devices/WebCameraDevice_WebCameraDeviceAttachment.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action delegate
::System::Action*& NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::dyn_delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::dyn_delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegate"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.WebCameraDeviceAttachment.Awake
void NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.WebCameraDeviceAttachment.Update
void NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::WebCameraDeviceAttachment::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.<>c__DisplayClass15_0
#include "NatSuite/Devices/WebCameraDevice_--c__DisplayClass15_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.WebCameraDevice <>4__this
::NatSuite::Devices::WebCameraDevice*& NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::WebCameraDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Texture2D> startTask
::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*& NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::dyn_startTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::dyn_startTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.WebCameraDevice/NatSuite.Devices.<>c__DisplayClass15_0.<StartRunning>b__0
void NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::$StartRunning$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::WebCameraDevice::$$c__DisplayClass15_0::<StartRunning>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRunning>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.Bridge
#include "NatSuite/Devices/Internal/Bridge.hpp"
// Including type: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate
#include "NatSuite/Devices/Internal/Bridge_FrameDelegate.hpp"
// Including type: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate
#include "NatSuite/Devices/Internal/Bridge_SampleBufferDelegate.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: NatSuite.Devices.FlashMode
#include "NatSuite/Devices/FlashMode.hpp"
// Including type: NatSuite.Devices.FrameOrientation
#include "NatSuite/Devices/FrameOrientation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String Assembly
::StringW NatSuite::Devices::Internal::Bridge::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NatSuite.Devices.Internal", "Bridge", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static private System.String Assembly
void NatSuite::Devices::Internal::Bridge::_set_Assembly(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Devices.Internal", "Bridge", "Assembly", value));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Dispose
void NatSuite::Devices::Internal::Bridge::Dispose(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.UniqueID
void NatSuite::Devices::Internal::Bridge::UniqueID(::System::IntPtr device, ::System::Text::StringBuilder* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::UniqueID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "UniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, dest);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Running
bool NatSuite::Devices::Internal::Bridge::Running(::System::IntPtr camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Running");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.StartRunning
bool NatSuite::Devices::Internal::Bridge::StartRunning(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate* callback, ::System::IntPtr context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::StartRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, callback, context);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.StopRunning
void NatSuite::Devices::Internal::Bridge::StopRunning(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::StopRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.AudioDevices
void NatSuite::Devices::Internal::Bridge::AudioDevices(ByRef<::System::IntPtr> outDevicesArray, ByRef<int> outDevicesArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::AudioDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "AudioDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(outDevicesArray), byref(outDevicesArrayCount));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Name
void NatSuite::Devices::Internal::Bridge::Name(::System::IntPtr device, ::System::Text::StringBuilder* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, dest);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.EchoCancellation
bool NatSuite::Devices::Internal::Bridge::EchoCancellation(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::EchoCancellation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "EchoCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.SampleRate
int NatSuite::Devices::Internal::Bridge::SampleRate(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.SampleRate
void NatSuite::Devices::Internal::Bridge::SampleRate(::System::IntPtr device, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::SampleRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "SampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, sampleRate);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ChannelCount
int NatSuite::Devices::Internal::Bridge::ChannelCount(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ChannelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ChannelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ChannelCount
void NatSuite::Devices::Internal::Bridge::ChannelCount(::System::IntPtr device, int sampleRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ChannelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ChannelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(sampleRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, sampleRate);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.CameraDevices
void NatSuite::Devices::Internal::Bridge::CameraDevices(ByRef<::System::IntPtr> outDevicesArray, ByRef<int> outDevicesArrayCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::CameraDevices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "CameraDevices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(outDevicesArray), byref(outDevicesArrayCount));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FrontFacing
bool NatSuite::Devices::Internal::Bridge::FrontFacing(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FrontFacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FrontFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FlashSupported
bool NatSuite::Devices::Internal::Bridge::FlashSupported(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FlashSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FlashSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.TorchSupported
bool NatSuite::Devices::Internal::Bridge::TorchSupported(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::TorchSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "TorchSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureLockSupported
bool NatSuite::Devices::Internal::Bridge::ExposureLockSupported(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureLockSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FocusLockSupported
bool NatSuite::Devices::Internal::Bridge::FocusLockSupported(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FocusLockSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FocusLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.WhiteBalanceLockSupported
bool NatSuite::Devices::Internal::Bridge::WhiteBalanceLockSupported(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::WhiteBalanceLockSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "WhiteBalanceLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FieldOfView
void NatSuite::Devices::Internal::Bridge::FieldOfView(::System::IntPtr device, ByRef<float> x, ByRef<float> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FieldOfView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, byref(x), byref(y));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureRange
void NatSuite::Devices::Internal::Bridge::ExposureRange(::System::IntPtr device, ByRef<float> min, ByRef<float> max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, byref(min), byref(max));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ZoomRange
void NatSuite::Devices::Internal::Bridge::ZoomRange(::System::IntPtr device, ByRef<float> min, ByRef<float> max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ZoomRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ZoomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, byref(min), byref(max));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.PreviewResolution
void NatSuite::Devices::Internal::Bridge::PreviewResolution(::System::IntPtr device, ByRef<int> width, ByRef<int> height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::PreviewResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "PreviewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, byref(width), byref(height));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.PreviewResolution
void NatSuite::Devices::Internal::Bridge::PreviewResolution_(::System::IntPtr device, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::PreviewResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "PreviewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, width, height);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.PhotoResolution
void NatSuite::Devices::Internal::Bridge::PhotoResolution(::System::IntPtr device, ByRef<int> width, ByRef<int> height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::PhotoResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "PhotoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, byref(width), byref(height));
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.PhotoResolution
void NatSuite::Devices::Internal::Bridge::PhotoResolution_(::System::IntPtr device, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::PhotoResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "PhotoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, width, height);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Framerate
int NatSuite::Devices::Internal::Bridge::Framerate(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Framerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Framerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Framerate
void NatSuite::Devices::Internal::Bridge::Framerate(::System::IntPtr device, int framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Framerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Framerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(framerate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, framerate);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureBias
float NatSuite::Devices::Internal::Bridge::ExposureBias(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureBias
void NatSuite::Devices::Internal::Bridge::ExposureBias(::System::IntPtr device, float bias) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureBias");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(bias)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, bias);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposurePoint
void NatSuite::Devices::Internal::Bridge::ExposurePoint(::System::IntPtr device, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposurePoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposurePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, x, y);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureLock
bool NatSuite::Devices::Internal::Bridge::ExposureLock(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ExposureLock
void NatSuite::Devices::Internal::Bridge::ExposureLock(::System::IntPtr device, bool locked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ExposureLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ExposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(locked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, locked);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FlashMode
::NatSuite::Devices::FlashMode NatSuite::Devices::Internal::Bridge::FlashMode(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FlashMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FlashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::FlashMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FlashMode
void NatSuite::Devices::Internal::Bridge::FlashMode(::System::IntPtr device, ::NatSuite::Devices::FlashMode state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FlashMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FlashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, state);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FocusLock
bool NatSuite::Devices::Internal::Bridge::FocusLock(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FocusLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FocusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FocusLock
void NatSuite::Devices::Internal::Bridge::FocusLock(::System::IntPtr device, bool locked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FocusLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FocusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(locked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, locked);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.FocusPoint
void NatSuite::Devices::Internal::Bridge::FocusPoint(::System::IntPtr device, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FocusPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "FocusPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, x, y);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.TorchEnabled
bool NatSuite::Devices::Internal::Bridge::TorchEnabled(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::TorchEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "TorchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.TorchEnabled
void NatSuite::Devices::Internal::Bridge::TorchEnabled(::System::IntPtr device, bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::TorchEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "TorchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, enabled);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.WhiteBalanceLock
bool NatSuite::Devices::Internal::Bridge::WhiteBalanceLock(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::WhiteBalanceLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "WhiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.WhiteBalanceLock
void NatSuite::Devices::Internal::Bridge::WhiteBalanceLock(::System::IntPtr device, bool locked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::WhiteBalanceLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "WhiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(locked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, locked);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ZoomRatio
float NatSuite::Devices::Internal::Bridge::ZoomRatio(::System::IntPtr device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ZoomRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ZoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.ZoomRatio
void NatSuite::Devices::Internal::Bridge::ZoomRatio(::System::IntPtr device, float ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::ZoomRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "ZoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(ratio)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, ratio);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.Orientation
void NatSuite::Devices::Internal::Bridge::Orientation(::System::IntPtr device, ::NatSuite::Devices::FrameOrientation orentation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::Orientation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "Orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(orentation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, orentation);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.StartRunning
void NatSuite::Devices::Internal::Bridge::StartRunning(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::FrameDelegate* handler, ::System::IntPtr context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::StartRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, handler, context);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge.CapturePhoto
void NatSuite::Devices::Internal::Bridge::CapturePhoto(::System::IntPtr device, ::NatSuite::Devices::Internal::Bridge::FrameDelegate* handler, ::System::IntPtr context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::CapturePhoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "Bridge", "CapturePhoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, device, handler, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate
#include "NatSuite/Devices/Internal/Bridge_FrameDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate.Invoke
void NatSuite::Devices::Internal::Bridge::FrameDelegate::Invoke(::System::IntPtr context, ::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FrameDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(pixelBuffer), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, pixelBuffer, width, height, timestamp);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate.BeginInvoke
::System::IAsyncResult* NatSuite::Devices::Internal::Bridge::FrameDelegate::BeginInvoke(::System::IntPtr context, ::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FrameDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(pixelBuffer), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, context, pixelBuffer, width, height, timestamp, callback, object);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.FrameDelegate.EndInvoke
void NatSuite::Devices::Internal::Bridge::FrameDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::FrameDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate
#include "NatSuite/Devices/Internal/Bridge_SampleBufferDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate.Invoke
void NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::Invoke(::System::IntPtr context, ::System::IntPtr sampleBuffer, int sampleCount, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, sampleBuffer, sampleCount, timestamp);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate.BeginInvoke
::System::IAsyncResult* NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::BeginInvoke(::System::IntPtr context, ::System::IntPtr sampleBuffer, int sampleCount, int64_t timestamp, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(timestamp), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, context, sampleBuffer, sampleCount, timestamp, callback, object);
}
// Autogenerated method: NatSuite.Devices.Internal.Bridge/NatSuite.Devices.Internal.SampleBufferDelegate.EndInvoke
void NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::Bridge::SampleBufferDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.DocAttribute
#include "NatSuite/Devices/Internal/DocAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.CodeAttribute
#include "NatSuite/Devices/Internal/CodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.RefAttribute
#include "NatSuite/Devices/Internal/RefAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.NativeAudioDevice
#include "NatSuite/Devices/Internal/NativeAudioDevice.hpp"
// Including type: NatSuite.Devices.Internal.NativeAudioDevice/NatSuite.Devices.Internal.<>c__DisplayClass14_0
#include "NatSuite/Devices/Internal/NativeAudioDevice_--c__DisplayClass14_0.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IntPtr device
::System::IntPtr& NatSuite::Devices::Internal::NativeAudioDevice::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.OnSampleBuffer
void NatSuite::Devices::Internal::NativeAudioDevice::OnSampleBuffer(::System::IntPtr context, ::System::IntPtr sampleBuffer, int sampleCount, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::OnSampleBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "NativeAudioDevice", "OnSampleBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(sampleCount), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, sampleBuffer, sampleCount, timestamp);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_uniqueID
::StringW NatSuite::Devices::Internal::NativeAudioDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_name
::StringW NatSuite::Devices::Internal::NativeAudioDevice::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_echoCancellation
bool NatSuite::Devices::Internal::NativeAudioDevice::get_echoCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_echoCancellation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_echoCancellation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_sampleRate
int NatSuite::Devices::Internal::NativeAudioDevice::get_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.set_sampleRate
void NatSuite::Devices::Internal::NativeAudioDevice::set_sampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::set_sampleRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sampleRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_channelCount
int NatSuite::Devices::Internal::NativeAudioDevice::get_channelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.set_channelCount
void NatSuite::Devices::Internal::NativeAudioDevice::set_channelCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::set_channelCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_channelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.get_running
bool NatSuite::Devices::Internal::NativeAudioDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.StartRunning
void NatSuite::Devices::Internal::NativeAudioDevice::StartRunning(::NatSuite::Devices::SampleBufferDelegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delegate);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.StopRunning
void NatSuite::Devices::Internal::NativeAudioDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice.Finalize
void NatSuite::Devices::Internal::NativeAudioDevice::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.NativeAudioDevice/NatSuite.Devices.Internal.<>c__DisplayClass14_0
#include "NatSuite/Devices/Internal/NativeAudioDevice_--c__DisplayClass14_0.hpp"
// Including type: NatSuite.Devices.SampleBufferDelegate
#include "NatSuite/Devices/SampleBufferDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.SampleBufferDelegate delegate
::NatSuite::Devices::SampleBufferDelegate*& NatSuite::Devices::Internal::NativeAudioDevice::$$c__DisplayClass14_0::dyn_delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::$$c__DisplayClass14_0::dyn_delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegate"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::SampleBufferDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeAudioDevice/NatSuite.Devices.Internal.<>c__DisplayClass14_0.<StartRunning>b__0
void NatSuite::Devices::Internal::NativeAudioDevice::$$c__DisplayClass14_0::$StartRunning$b__0(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeAudioDevice::$$c__DisplayClass14_0::<StartRunning>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRunning>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.NativeCameraDevice
#include "NatSuite/Devices/Internal/NativeCameraDevice.hpp"
// Including type: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass58_0
#include "NatSuite/Devices/Internal/NativeCameraDevice_--c__DisplayClass58_0.hpp"
// Including type: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass60_0
#include "NatSuite/Devices/Internal/NativeCameraDevice_--c__DisplayClass60_0.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: NatSuite.Devices.FlashMode
#include "NatSuite/Devices/FlashMode.hpp"
// Including type: NatSuite.Devices.FrameOrientation
#include "NatSuite/Devices/FrameOrientation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IntPtr device
::System::IntPtr& NatSuite::Devices::Internal::NativeCameraDevice::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D previewTexture
::UnityEngine::Texture2D*& NatSuite::Devices::Internal::NativeCameraDevice::dyn_previewTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::dyn_previewTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.OnFrame
void NatSuite::Devices::Internal::NativeCameraDevice::OnFrame(::System::IntPtr context, ::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::OnFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NatSuite.Devices.Internal", "NativeCameraDevice", "OnFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(pixelBuffer), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, pixelBuffer, width, height, timestamp);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_uniqueID
::StringW NatSuite::Devices::Internal::NativeCameraDevice::get_uniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_uniqueID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uniqueID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_frontFacing
bool NatSuite::Devices::Internal::NativeCameraDevice::get_frontFacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_frontFacing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frontFacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_flashSupported
bool NatSuite::Devices::Internal::NativeCameraDevice::get_flashSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_flashSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flashSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_torchSupported
bool NatSuite::Devices::Internal::NativeCameraDevice::get_torchSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_torchSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torchSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_exposureLockSupported
bool NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_focusLockSupported
bool NatSuite::Devices::Internal::NativeCameraDevice::get_focusLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_focusLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_whiteBalanceLockSupported
bool NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLockSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLockSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBalanceLockSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_fieldOfView
::System::ValueTuple_2<float, float> NatSuite::Devices::Internal::NativeCameraDevice::get_fieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_fieldOfView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_exposureRange
::System::ValueTuple_2<float, float> NatSuite::Devices::Internal::NativeCameraDevice::get_exposureRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_exposureRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_zoomRange
::System::ValueTuple_2<float, float> NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zoomRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<float, float>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_previewResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::Internal::NativeCameraDevice::get_previewResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_previewResolution
void NatSuite::Devices::Internal::NativeCameraDevice::set_previewResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_previewResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_photoResolution
::System::ValueTuple_2<int, int> NatSuite::Devices::Internal::NativeCameraDevice::get_photoResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_photoResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_photoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, int>, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_photoResolution
void NatSuite::Devices::Internal::NativeCameraDevice::set_photoResolution(::System::ValueTuple_2<int, int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_photoResolution");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_photoResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_frameRate
int NatSuite::Devices::Internal::NativeCameraDevice::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_frameRate
void NatSuite::Devices::Internal::NativeCameraDevice::set_frameRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_frameRate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_exposureBias
float NatSuite::Devices::Internal::NativeCameraDevice::get_exposureBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_exposureBias");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_exposureBias
void NatSuite::Devices::Internal::NativeCameraDevice::set_exposureBias(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_exposureBias");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposureBias", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_exposureLock
bool NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_exposureLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_exposureLock
void NatSuite::Devices::Internal::NativeCameraDevice::set_exposureLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_exposureLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposureLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_exposurePoint
void NatSuite::Devices::Internal::NativeCameraDevice::set_exposurePoint(::System::ValueTuple_2<float, float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_exposurePoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_exposurePoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_flashMode
::NatSuite::Devices::FlashMode NatSuite::Devices::Internal::NativeCameraDevice::get_flashMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_flashMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NatSuite::Devices::FlashMode, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_flashMode
void NatSuite::Devices::Internal::NativeCameraDevice::set_flashMode(::NatSuite::Devices::FlashMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_flashMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_focusLock
bool NatSuite::Devices::Internal::NativeCameraDevice::get_focusLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_focusLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_focusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_focusLock
void NatSuite::Devices::Internal::NativeCameraDevice::set_focusLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_focusLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focusLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_focusPoint
void NatSuite::Devices::Internal::NativeCameraDevice::set_focusPoint(::System::ValueTuple_2<float, float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_focusPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_focusPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_torchEnabled
bool NatSuite::Devices::Internal::NativeCameraDevice::get_torchEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_torchEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_torchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_torchEnabled
void NatSuite::Devices::Internal::NativeCameraDevice::set_torchEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_torchEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_torchEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_whiteBalanceLock
bool NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_whiteBalanceLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_whiteBalanceLock
void NatSuite::Devices::Internal::NativeCameraDevice::set_whiteBalanceLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_whiteBalanceLock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_whiteBalanceLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_zoomRatio
float NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_zoomRatio");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_zoomRatio
void NatSuite::Devices::Internal::NativeCameraDevice::set_zoomRatio(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_zoomRatio");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zoomRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.set_orientation
void NatSuite::Devices::Internal::NativeCameraDevice::set_orientation(::NatSuite::Devices::FrameOrientation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::set_orientation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_orientation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.get_running
bool NatSuite::Devices::Internal::NativeCameraDevice::get_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::get_running");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_running", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.StartRunning
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::Internal::NativeCameraDevice::StartRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::StartRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.StopRunning
void NatSuite::Devices::Internal::NativeCameraDevice::StopRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::StopRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.CapturePhoto
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* NatSuite::Devices::Internal::NativeCameraDevice::CapturePhoto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::CapturePhoto");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CapturePhoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice.Finalize
void NatSuite::Devices::Internal::NativeCameraDevice::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass58_0
#include "NatSuite/Devices/Internal/NativeCameraDevice_--c__DisplayClass58_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public NatSuite.Devices.Internal.NativeCameraDevice <>4__this
::NatSuite::Devices::Internal::NativeCameraDevice*& NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::Internal::NativeCameraDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Texture2D> startTask
::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*& NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::dyn_startTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::dyn_startTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass58_0.<StartRunning>b__0
void NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::$StartRunning$b__0(::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass58_0::<StartRunning>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartRunning>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixelBuffer), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixelBuffer, width, height, timestamp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass60_0
#include "NatSuite/Devices/Internal/NativeCameraDevice_--c__DisplayClass60_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Runtime.InteropServices.GCHandle handle
::System::Runtime::InteropServices::GCHandle& NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<UnityEngine.Texture2D> captureTask
::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>*& NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::dyn_captureTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::dyn_captureTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captureTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Devices.Internal.NativeCameraDevice/NatSuite.Devices.Internal.<>c__DisplayClass60_0.<CapturePhoto>b__0
void NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::$CapturePhoto$b__0(::System::IntPtr pixelBuffer, int width, int height, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Devices::Internal::NativeCameraDevice::$$c__DisplayClass60_0::<CapturePhoto>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CapturePhoto>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixelBuffer), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pixelBuffer, width, height, timestamp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.HotMic
#include "NatSuite/Examples/HotMic.hpp"
// Including type: NatSuite.Examples.HotMic/NatSuite.Examples.<Start>d__2
#include "NatSuite/Examples/HotMic_-Start-d__2.hpp"
// Including type: NatSuite.Devices.IAudioDevice
#include "NatSuite/Devices/IAudioDevice.hpp"
// Including type: NatSuite.Examples.Components.ClipRecorder
#include "NatSuite/Examples/Components/ClipRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NatSuite.Devices.IAudioDevice device
::NatSuite::Devices::IAudioDevice*& NatSuite::Examples::HotMic::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::IAudioDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NatSuite.Examples.Components.ClipRecorder recorder
::NatSuite::Examples::Components::ClipRecorder*& NatSuite::Examples::HotMic::dyn_recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::dyn_recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recorder"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::Components::ClipRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.HotMic.Start
void NatSuite::Examples::HotMic::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.HotMic.StartRecording
void NatSuite::Examples::HotMic::StartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.HotMic.StopRecording
void NatSuite::Examples::HotMic::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.HotMic/NatSuite.Examples.<Start>d__2
#include "NatSuite/Examples/HotMic_-Start-d__2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& NatSuite::Examples::HotMic::$Start$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& NatSuite::Examples::HotMic::$Start$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Examples.HotMic <>4__this
::NatSuite::Examples::HotMic*& NatSuite::Examples::HotMic::$Start$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::HotMic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& NatSuite::Examples::HotMic::$Start$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.HotMic/NatSuite.Examples.<Start>d__2.MoveNext
void NatSuite::Examples::HotMic::$Start$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.HotMic/NatSuite.Examples.<Start>d__2.SetStateMachine
void NatSuite::Examples::HotMic::$Start$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::HotMic::$Start$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.MiniCam
#include "NatSuite/Examples/MiniCam.hpp"
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<Start>d__7
#include "NatSuite/Examples/MiniCam_-Start-d__7.hpp"
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<CapturePhoto>d__8
#include "NatSuite/Examples/MiniCam_-CapturePhoto-d__8.hpp"
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<SwitchCamera>d__9
#include "NatSuite/Examples/MiniCam_-SwitchCamera-d__9.hpp"
// Including type: UnityEngine.UI.RawImage
#include "UnityEngine/UI/RawImage.hpp"
// Including type: UnityEngine.UI.AspectRatioFitter
#include "UnityEngine/UI/AspectRatioFitter.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: NatSuite.Devices.MediaDeviceQuery
#include "NatSuite/Devices/MediaDeviceQuery.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.RawImage previewPanel
::UnityEngine::UI::RawImage*& NatSuite::Examples::MiniCam::dyn_previewPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_previewPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RawImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.AspectRatioFitter previewAspectFitter
::UnityEngine::UI::AspectRatioFitter*& NatSuite::Examples::MiniCam::dyn_previewAspectFitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_previewAspectFitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewAspectFitter"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::AspectRatioFitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.RawImage photoPanel
::UnityEngine::UI::RawImage*& NatSuite::Examples::MiniCam::dyn_photoPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_photoPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photoPanel"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::RawImage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.AspectRatioFitter photoAspectFitter
::UnityEngine::UI::AspectRatioFitter*& NatSuite::Examples::MiniCam::dyn_photoAspectFitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_photoAspectFitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photoAspectFitter"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::AspectRatioFitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image flashIcon
::UnityEngine::UI::Image*& NatSuite::Examples::MiniCam::dyn_flashIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_flashIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flashIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image switchIcon
::UnityEngine::UI::Image*& NatSuite::Examples::MiniCam::dyn_switchIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_switchIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NatSuite.Devices.MediaDeviceQuery deviceQuery
::NatSuite::Devices::MediaDeviceQuery*& NatSuite::Examples::MiniCam::dyn_deviceQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::dyn_deviceQuery");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deviceQuery"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::MediaDeviceQuery**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.MiniCam.Start
void NatSuite::Examples::MiniCam::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam.CapturePhoto
void NatSuite::Examples::MiniCam::CapturePhoto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::CapturePhoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CapturePhoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam.SwitchCamera
void NatSuite::Examples::MiniCam::SwitchCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::SwitchCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam.FocusCamera
void NatSuite::Examples::MiniCam::FocusCamera(::UnityEngine::EventSystems::BaseEventData* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::FocusCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FocusCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: NatSuite.Examples.MiniCam.ToggleFlashMode
void NatSuite::Examples::MiniCam::ToggleFlashMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::ToggleFlashMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleFlashMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<Start>d__7
#include "NatSuite/Examples/MiniCam_-Start-d__7.hpp"
// Including type: NatSuite.Devices.ICameraDevice
#include "NatSuite/Devices/ICameraDevice.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Examples.MiniCam <>4__this
::NatSuite::Examples::MiniCam*& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::MiniCam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NatSuite.Devices.ICameraDevice <device>5__2
::NatSuite::Devices::ICameraDevice*& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$device$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$device$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<device>5__2"))->offset;
  return *reinterpret_cast<::NatSuite::Devices::ICameraDevice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Texture2D> <>u__2
::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>& NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<Start>d__7.MoveNext
void NatSuite::Examples::MiniCam::$Start$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<Start>d__7.SetStateMachine
void NatSuite::Examples::MiniCam::$Start$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$Start$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<CapturePhoto>d__8
#include "NatSuite/Examples/MiniCam_-CapturePhoto-d__8.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Examples.MiniCam <>4__this
::NatSuite::Examples::MiniCam*& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::MiniCam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D <photoTexture>5__2
::UnityEngine::Texture2D*& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$photoTexture$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$photoTexture$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<photoTexture>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Texture2D> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
::System::Runtime::CompilerServices::TaskAwaiter& NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<CapturePhoto>d__8.MoveNext
void NatSuite::Examples::MiniCam::$CapturePhoto$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<CapturePhoto>d__8.SetStateMachine
void NatSuite::Examples::MiniCam::$CapturePhoto$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$CapturePhoto$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.MiniCam/NatSuite.Examples.<SwitchCamera>d__9
#include "NatSuite/Examples/MiniCam_-SwitchCamera-d__9.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Examples.MiniCam <>4__this
::NatSuite::Examples::MiniCam*& NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::MiniCam**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Texture2D> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>& NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<SwitchCamera>d__9.MoveNext
void NatSuite::Examples::MiniCam::$SwitchCamera$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.MiniCam/NatSuite.Examples.<SwitchCamera>d__9.SetStateMachine
void NatSuite::Examples::MiniCam::$SwitchCamera$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::MiniCam::$SwitchCamera$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.Components.ClipRecorder
#include "NatSuite/Examples/Components/ClipRecorder.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 sampleRate
int& NatSuite::Examples::Components::ClipRecorder::dyn_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::dyn_sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 channelCount
int& NatSuite::Examples::Components::ClipRecorder::dyn_channelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::dyn_channelCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channelCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.MemoryStream audioBuffer
::System::IO::MemoryStream*& NatSuite::Examples::Components::ClipRecorder::dyn_audioBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::dyn_audioBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioBuffer"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.Components.ClipRecorder.CommitSamples
void NatSuite::Examples::Components::ClipRecorder::CommitSamples(::ArrayW<float> sampleBuffer, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::CommitSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sampleBuffer), ::il2cpp_utils::ExtractType(timestamp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sampleBuffer, timestamp);
}
// Autogenerated method: NatSuite.Examples.Components.ClipRecorder.FinishWriting
::UnityEngine::AudioClip* NatSuite::Examples::Components::ClipRecorder::FinishWriting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::ClipRecorder::FinishWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NatSuite.Examples.Components.RecordButton
#include "NatSuite/Examples/Components/RecordButton.hpp"
// Including type: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10
#include "NatSuite/Examples/Components/RecordButton_-Countdown-d__10.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single MaxRecordingTime
float NatSuite::Examples::Components::RecordButton::_get_MaxRecordingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::_get_MaxRecordingTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("NatSuite.Examples.Components", "RecordButton", "MaxRecordingTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single MaxRecordingTime
void NatSuite::Examples::Components::RecordButton::_set_MaxRecordingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::_set_MaxRecordingTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NatSuite.Examples.Components", "RecordButton", "MaxRecordingTime", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image button
::UnityEngine::UI::Image*& NatSuite::Examples::Components::RecordButton::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image countdown
::UnityEngine::UI::Image*& NatSuite::Examples::Components::RecordButton::dyn_countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::dyn_countdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdown"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onTouchDown
::UnityEngine::Events::UnityEvent*& NatSuite::Examples::Components::RecordButton::dyn_onTouchDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::dyn_onTouchDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onTouchDown"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent onTouchUp
::UnityEngine::Events::UnityEvent*& NatSuite::Examples::Components::RecordButton::dyn_onTouchUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::dyn_onTouchUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onTouchUp"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pressed
bool& NatSuite::Examples::Components::RecordButton::dyn_pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::dyn_pressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pressed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton.Start
void NatSuite::Examples::Components::RecordButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton.Reset
void NatSuite::Examples::Components::RecordButton::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton.UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown
void NatSuite::Examples::Components::RecordButton::UnityEngine_EventSystems_IPointerDownHandler_OnPointerDown(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton.UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp
void NatSuite::Examples::Components::RecordButton::UnityEngine_EventSystems_IPointerUpHandler_OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton.Countdown
::System::Collections::IEnumerator* NatSuite::Examples::Components::RecordButton::Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::Countdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Countdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10
#include "NatSuite/Examples/Components/RecordButton_-Countdown-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NatSuite.Examples.Components.RecordButton <>4__this
::NatSuite::Examples::Components::RecordButton*& NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NatSuite::Examples::Components::RecordButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
float& NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10.System.IDisposable.Dispose
void NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10.MoveNext
bool NatSuite::Examples::Components::RecordButton::$Countdown$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NatSuite.Examples.Components.RecordButton/NatSuite.Examples.Components.<Countdown>d__10.System.Collections.IEnumerator.Reset
void NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NatSuite::Examples::Components::RecordButton::$Countdown$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MiniJSON.Json
#include "MiniJSON/Json.hpp"
// Including type: MiniJSON.Json/MiniJSON.Parser
#include "MiniJSON/Json_Parser.hpp"
// Including type: MiniJSON.Json/MiniJSON.Serializer
#include "MiniJSON/Json_Serializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MiniJSON.Json.Deserialize
::Il2CppObject* MiniJSON::Json::Deserialize(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MiniJSON", "Json", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: MiniJSON.Json.Serialize
::StringW MiniJSON::Json::Serialize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MiniJSON", "Json", "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MiniJSON.Json/MiniJSON.Parser
#include "MiniJSON/Json_Parser.hpp"
// Including type: MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN
#include "MiniJSON/Json_Parser_TOKEN.hpp"
// Including type: System.IO.StringReader
#include "System/IO/StringReader.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String WORD_BREAK
::StringW MiniJSON::Json::Parser::_get_WORD_BREAK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::_get_WORD_BREAK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("MiniJSON", "Json/Parser", "WORD_BREAK"));
}
// Autogenerated static field setter
// Set static field: static private System.String WORD_BREAK
void MiniJSON::Json::Parser::_set_WORD_BREAK(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::_set_WORD_BREAK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser", "WORD_BREAK", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StringReader json
::System::IO::StringReader*& MiniJSON::Json::Parser::dyn_json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::dyn_json");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "json"))->offset;
  return *reinterpret_cast<::System::IO::StringReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.get_PeekChar
::Il2CppChar MiniJSON::Json::Parser::get_PeekChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::get_PeekChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PeekChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.get_NextChar
::Il2CppChar MiniJSON::Json::Parser::get_NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::get_NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.get_NextWord
::StringW MiniJSON::Json::Parser::get_NextWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::get_NextWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.get_NextToken
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::get_NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::get_NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MiniJSON::Json::Parser::TOKEN, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.IsWordBreak
bool MiniJSON::Json::Parser::IsWordBreak(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::IsWordBreak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MiniJSON", "Json/Parser", "IsWordBreak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.Parse
::Il2CppObject* MiniJSON::Json::Parser::Parse(::StringW jsonString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MiniJSON", "Json/Parser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, jsonString);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.Dispose
void MiniJSON::Json::Parser::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseObject
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* MiniJSON::Json::Parser::ParseObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseArray
::System::Collections::Generic::List_1<::Il2CppObject*>* MiniJSON::Json::Parser::ParseArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseValue
::Il2CppObject* MiniJSON::Json::Parser::ParseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseByToken
::Il2CppObject* MiniJSON::Json::Parser::ParseByToken(::MiniJSON::Json::Parser::TOKEN token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseByToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseByToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, token);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseString
::StringW MiniJSON::Json::Parser::ParseString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.ParseNumber
::Il2CppObject* MiniJSON::Json::Parser::ParseNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Parser.EatWhitespace
void MiniJSON::Json::Parser::EatWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::EatWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN
#include "MiniJSON/Json_Parser_TOKEN.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NONE
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NONE
void MiniJSON::Json::Parser::TOKEN::_set_NONE(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN CURLY_OPEN
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_CURLY_OPEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_CURLY_OPEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "CURLY_OPEN"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN CURLY_OPEN
void MiniJSON::Json::Parser::TOKEN::_set_CURLY_OPEN(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_CURLY_OPEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "CURLY_OPEN", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN CURLY_CLOSE
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_CURLY_CLOSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_CURLY_CLOSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "CURLY_CLOSE"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN CURLY_CLOSE
void MiniJSON::Json::Parser::TOKEN::_set_CURLY_CLOSE(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_CURLY_CLOSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "CURLY_CLOSE", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN SQUARED_OPEN
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_SQUARED_OPEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_SQUARED_OPEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "SQUARED_OPEN"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN SQUARED_OPEN
void MiniJSON::Json::Parser::TOKEN::_set_SQUARED_OPEN(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_SQUARED_OPEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "SQUARED_OPEN", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN SQUARED_CLOSE
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_SQUARED_CLOSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_SQUARED_CLOSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "SQUARED_CLOSE"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN SQUARED_CLOSE
void MiniJSON::Json::Parser::TOKEN::_set_SQUARED_CLOSE(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_SQUARED_CLOSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "SQUARED_CLOSE", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN COLON
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_COLON() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_COLON");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "COLON"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN COLON
void MiniJSON::Json::Parser::TOKEN::_set_COLON(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_COLON");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "COLON", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN COMMA
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_COMMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_COMMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "COMMA"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN COMMA
void MiniJSON::Json::Parser::TOKEN::_set_COMMA(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_COMMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "COMMA", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN STRING
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "STRING"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN STRING
void MiniJSON::Json::Parser::TOKEN::_set_STRING(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "STRING", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NUMBER
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_NUMBER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_NUMBER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "NUMBER"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NUMBER
void MiniJSON::Json::Parser::TOKEN::_set_NUMBER(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_NUMBER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "NUMBER", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN TRUE
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_TRUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_TRUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "TRUE"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN TRUE
void MiniJSON::Json::Parser::TOKEN::_set_TRUE(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_TRUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "TRUE", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN FALSE
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_FALSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_FALSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "FALSE"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN FALSE
void MiniJSON::Json::Parser::TOKEN::_set_FALSE(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_FALSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "FALSE", value));
}
// Autogenerated static field getter
// Get static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NULL
::MiniJSON::Json::Parser::TOKEN MiniJSON::Json::Parser::TOKEN::_get_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_get_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MiniJSON::Json::Parser::TOKEN>("MiniJSON", "Json/Parser/TOKEN", "NULL"));
}
// Autogenerated static field setter
// Set static field: static public MiniJSON.Json/MiniJSON.Parser/MiniJSON.TOKEN NULL
void MiniJSON::Json::Parser::TOKEN::_set_NULL(::MiniJSON::Json::Parser::TOKEN value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::_set_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MiniJSON", "Json/Parser/TOKEN", "NULL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MiniJSON::Json::Parser::TOKEN::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Parser::TOKEN::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MiniJSON.Json/MiniJSON.Serializer
#include "MiniJSON/Json_Serializer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder builder
::System::Text::StringBuilder*& MiniJSON::Json::Serializer::dyn_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::dyn_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.Serialize
::StringW MiniJSON::Json::Serializer::Serialize(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MiniJSON", "Json/Serializer", "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.SerializeValue
void MiniJSON::Json::Serializer::SerializeValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::SerializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.SerializeObject
void MiniJSON::Json::Serializer::SerializeObject(::System::Collections::IDictionary* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.SerializeArray
void MiniJSON::Json::Serializer::SerializeArray(::System::Collections::IList* anArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::SerializeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anArray);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.SerializeString
void MiniJSON::Json::Serializer::SerializeString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::SerializeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: MiniJSON.Json/MiniJSON.Serializer.SerializeOther
void MiniJSON::Json::Serializer::SerializeOther(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MiniJSON::Json::Serializer::SerializeOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MalbersAnimations.Readme
#include "MalbersAnimations/Readme.hpp"
// Including type: MalbersAnimations.Readme/MalbersAnimations.Section
#include "MalbersAnimations/Readme_Section.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D icon
::UnityEngine::Texture2D*& MalbersAnimations::Readme::dyn_icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::dyn_icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "icon"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String title
::StringW& MalbersAnimations::Readme::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MalbersAnimations.Readme/MalbersAnimations.Section[] sections
::ArrayW<::MalbersAnimations::Readme::Section*>& MalbersAnimations::Readme::dyn_sections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::dyn_sections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sections"))->offset;
  return *reinterpret_cast<::ArrayW<::MalbersAnimations::Readme::Section*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MalbersAnimations.Readme/MalbersAnimations.Section
#include "MalbersAnimations/Readme_Section.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String heading
::StringW& MalbersAnimations::Readme::Section::dyn_heading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::Section::dyn_heading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heading"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String text
::StringW& MalbersAnimations::Readme::Section::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::Section::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String linkText
::StringW& MalbersAnimations::Readme::Section::dyn_linkText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::Section::dyn_linkText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String url
::StringW& MalbersAnimations::Readme::Section::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Readme::Section::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MalbersAnimations.UseTransform
#include "MalbersAnimations/UseTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform Reference
::UnityEngine::Transform*& MalbersAnimations::UseTransform::dyn_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::dyn_Reference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Reference"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rotation
bool& MalbersAnimations::UseTransform::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode updateMode
::MalbersAnimations::UseTransform::UpdateMode& MalbersAnimations::UseTransform::dyn_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::dyn_updateMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateMode"))->offset;
  return *reinterpret_cast<::MalbersAnimations::UseTransform::UpdateMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MalbersAnimations.UseTransform.Update
void MalbersAnimations::UseTransform::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MalbersAnimations.UseTransform.LateUpdate
void MalbersAnimations::UseTransform::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MalbersAnimations.UseTransform.FixedUpdate
void MalbersAnimations::UseTransform::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MalbersAnimations.UseTransform.SetTransformReference
void MalbersAnimations::UseTransform::SetTransformReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::SetTransformReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTransformReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode
#include "MalbersAnimations/UseTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode Update
::MalbersAnimations::UseTransform::UpdateMode MalbersAnimations::UseTransform::UpdateMode::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MalbersAnimations::UseTransform::UpdateMode>("MalbersAnimations", "UseTransform/UpdateMode", "Update"));
}
// Autogenerated static field setter
// Set static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode Update
void MalbersAnimations::UseTransform::UpdateMode::_set_Update(::MalbersAnimations::UseTransform::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MalbersAnimations", "UseTransform/UpdateMode", "Update", value));
}
// Autogenerated static field getter
// Get static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode FixedUpdate
::MalbersAnimations::UseTransform::UpdateMode MalbersAnimations::UseTransform::UpdateMode::_get_FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_get_FixedUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MalbersAnimations::UseTransform::UpdateMode>("MalbersAnimations", "UseTransform/UpdateMode", "FixedUpdate"));
}
// Autogenerated static field setter
// Set static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode FixedUpdate
void MalbersAnimations::UseTransform::UpdateMode::_set_FixedUpdate(::MalbersAnimations::UseTransform::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_set_FixedUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MalbersAnimations", "UseTransform/UpdateMode", "FixedUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode LateUpdate
::MalbersAnimations::UseTransform::UpdateMode MalbersAnimations::UseTransform::UpdateMode::_get_LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_get_LateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MalbersAnimations::UseTransform::UpdateMode>("MalbersAnimations", "UseTransform/UpdateMode", "LateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public MalbersAnimations.UseTransform/MalbersAnimations.UpdateMode LateUpdate
void MalbersAnimations::UseTransform::UpdateMode::_set_LateUpdate(::MalbersAnimations::UseTransform::UpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::_set_LateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MalbersAnimations", "UseTransform/UpdateMode", "LateUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& MalbersAnimations::UseTransform::UpdateMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::UseTransform::UpdateMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MalbersAnimations.Events.UnityEventRaiser
#include "MalbersAnimations/Events/UnityEventRaiser.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single Delayed
float& MalbersAnimations::Events::UnityEventRaiser::dyn_Delayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Events::UnityEventRaiser::dyn_Delayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delayed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Events.UnityEvent OnEnableEvent
::UnityEngine::Events::UnityEvent*& MalbersAnimations::Events::UnityEventRaiser::dyn_OnEnableEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Events::UnityEventRaiser::dyn_OnEnableEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnEnableEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MalbersAnimations.Events.UnityEventRaiser.OnEnable
void MalbersAnimations::Events::UnityEventRaiser::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Events::UnityEventRaiser::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MalbersAnimations.Events.UnityEventRaiser.StartEvent
void MalbersAnimations::Events::UnityEventRaiser::StartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Events::UnityEventRaiser::StartEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MalbersAnimations.Events.UnityEventRaiser.DestroyMe
void MalbersAnimations::Events::UnityEventRaiser::DestroyMe(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MalbersAnimations::Events::UnityEventRaiser::DestroyMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.INVALIDATION_FLAGS
#include "LIV/SDK/Unity/INVALIDATION_FLAGS.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS NONE
::LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS NONE
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_NONE(::LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS HMD_CAMERA
::LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_HMD_CAMERA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_get_HMD_CAMERA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "HMD_CAMERA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS HMD_CAMERA
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_HMD_CAMERA(::LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_set_HMD_CAMERA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "HMD_CAMERA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS STAGE
::LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_STAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_get_STAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "STAGE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS STAGE
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_STAGE(::LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_set_STAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "STAGE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS MR_CAMERA_PREFAB
::LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_MR_CAMERA_PREFAB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_get_MR_CAMERA_PREFAB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "MR_CAMERA_PREFAB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS MR_CAMERA_PREFAB
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_MR_CAMERA_PREFAB(::LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_set_MR_CAMERA_PREFAB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "MR_CAMERA_PREFAB", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS EXCLUDE_BEHAVIOURS
::LIV::SDK::Unity::INVALIDATION_FLAGS LIV::SDK::Unity::INVALIDATION_FLAGS::_get_EXCLUDE_BEHAVIOURS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_get_EXCLUDE_BEHAVIOURS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::INVALIDATION_FLAGS>("LIV.SDK.Unity", "INVALIDATION_FLAGS", "EXCLUDE_BEHAVIOURS"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.INVALIDATION_FLAGS EXCLUDE_BEHAVIOURS
void LIV::SDK::Unity::INVALIDATION_FLAGS::_set_EXCLUDE_BEHAVIOURS(::LIV::SDK::Unity::INVALIDATION_FLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::_set_EXCLUDE_BEHAVIOURS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "INVALIDATION_FLAGS", "EXCLUDE_BEHAVIOURS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::INVALIDATION_FLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::INVALIDATION_FLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68
#include "LIV/SDK/Unity/LIV_-WaitForUnityEndOfFrame-d__68.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action onActivate
::System::Action*& LIV::SDK::Unity::LIV::dyn_onActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onActivate"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRender
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPreRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRender"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRenderBackground
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPreRenderBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRenderBackground"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRenderBackground
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPostRenderBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRenderBackground"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPreRenderForeground
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPreRenderForeground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPreRenderForeground"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRenderForeground
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPostRenderForeground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRenderForeground"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<LIV.SDK.Unity.SDKRender> onPostRender
::System::Action_1<::LIV::SDK::Unity::SDKRender*>*& LIV::SDK::Unity::LIV::dyn_onPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onPostRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onPostRender"))->offset;
  return *reinterpret_cast<::System::Action_1<::LIV::SDK::Unity::SDKRender*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onDeactivate
::System::Action*& LIV::SDK::Unity::LIV::dyn_onDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn_onDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDeactivate"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stage
::UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__stage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stage"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stageTransform
::UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__stageTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _HMDCamera
::UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__HMDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__HMDCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HMDCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _MRCameraPrefab
::UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__MRCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__MRCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MRCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableStandardAssets
bool& LIV::SDK::Unity::LIV::dyn__disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__disableStandardAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableStandardAssets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _spectatorLayerMask
::UnityEngine::LayerMask& LIV::SDK::Unity::LIV::dyn__spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__spectatorLayerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatorLayerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludeBehaviours
::ArrayW<::StringW>& LIV::SDK::Unity::LIV::dyn__excludeBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__excludeBehaviours");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeBehaviours"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fixPostEffectsAlpha
bool& LIV::SDK::Unity::LIV::dyn__fixPostEffectsAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__fixPostEffectsAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fixPostEffectsAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
bool& LIV::SDK::Unity::LIV::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKRender _render
::LIV::SDK::Unity::SDKRender*& LIV::SDK::Unity::LIV::dyn__render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__render");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_render"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKRender**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasReady
bool& LIV::SDK::Unity::LIV::dyn__wasReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__wasReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.INVALIDATION_FLAGS _invalidate
::LIV::SDK::Unity::INVALIDATION_FLAGS& LIV::SDK::Unity::LIV::dyn__invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__invalidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invalidate"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::INVALIDATION_FLAGS*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _stageCandidate
::UnityEngine::Transform*& LIV::SDK::Unity::LIV::dyn__stageCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__stageCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageCandidate"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _HMDCameraCandidate
::UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__HMDCameraCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__HMDCameraCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HMDCameraCandidate"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _MRCameraPrefabCandidate
::UnityEngine::Camera*& LIV::SDK::Unity::LIV::dyn__MRCameraPrefabCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__MRCameraPrefabCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MRCameraPrefabCandidate"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _excludeBehavioursCandidate
::ArrayW<::StringW>& LIV::SDK::Unity::LIV::dyn__excludeBehavioursCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__excludeBehavioursCandidate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_excludeBehavioursCandidate"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enabled
bool& LIV::SDK::Unity::LIV::dyn__enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _waitForEndOfFrameCoroutine
::UnityEngine::Coroutine*& LIV::SDK::Unity::LIV::dyn__waitForEndOfFrameCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::dyn__waitForEndOfFrameCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitForEndOfFrameCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stage
::UnityEngine::Transform* LIV::SDK::Unity::LIV::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_stage
void LIV::SDK::Unity::LIV::set_stage(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_trackedSpaceOrigin
::UnityEngine::Transform* LIV::SDK::Unity::LIV::get_trackedSpaceOrigin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_trackedSpaceOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackedSpaceOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_trackedSpaceOrigin
void LIV::SDK::Unity::LIV::set_trackedSpaceOrigin(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_trackedSpaceOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackedSpaceOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageLocalToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::LIV::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageWorldToLocalMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::LIV::get_stageWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_stageWorldToLocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageWorldToLocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_stageTransform
::UnityEngine::Transform* LIV::SDK::Unity::LIV::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_stageTransform
void LIV::SDK::Unity::LIV::set_stageTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_HMDCamera
::UnityEngine::Camera* LIV::SDK::Unity::LIV::get_HMDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_HMDCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HMDCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_HMDCamera
void LIV::SDK::Unity::LIV::set_HMDCamera(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_HMDCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HMDCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_MRCameraPrefab
::UnityEngine::Camera* LIV::SDK::Unity::LIV::get_MRCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_MRCameraPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MRCameraPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_MRCameraPrefab
void LIV::SDK::Unity::LIV::set_MRCameraPrefab(::UnityEngine::Camera* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_MRCameraPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MRCameraPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_disableStandardAssets
bool LIV::SDK::Unity::LIV::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_disableStandardAssets
void LIV::SDK::Unity::LIV::set_disableStandardAssets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_spectatorLayerMask
::UnityEngine::LayerMask LIV::SDK::Unity::LIV::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_spectatorLayerMask
void LIV::SDK::Unity::LIV::set_spectatorLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_excludeBehaviours
::ArrayW<::StringW> LIV::SDK::Unity::LIV::get_excludeBehaviours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_excludeBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_excludeBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_excludeBehaviours
void LIV::SDK::Unity::LIV::set_excludeBehaviours(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_excludeBehaviours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_excludeBehaviours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_fixPostEffectsAlpha
bool LIV::SDK::Unity::LIV::get_fixPostEffectsAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_fixPostEffectsAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixPostEffectsAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.set_fixPostEffectsAlpha
void LIV::SDK::Unity::LIV::set_fixPostEffectsAlpha(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::set_fixPostEffectsAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fixPostEffectsAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_isValid
bool LIV::SDK::Unity::LIV::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_isActive
bool LIV::SDK::Unity::LIV::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_isActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get__isReady
bool LIV::SDK::Unity::LIV::get__isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get__isReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.get_render
::LIV::SDK::Unity::SDKRender* LIV::SDK::Unity::LIV::get_render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::get_render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKRender*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnEnable
void LIV::SDK::Unity::LIV::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.Update
void LIV::SDK::Unity::LIV::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnDisable
void LIV::SDK::Unity::LIV::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.WaitForUnityEndOfFrame
::System::Collections::IEnumerator* LIV::SDK::Unity::LIV::WaitForUnityEndOfFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::WaitForUnityEndOfFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForUnityEndOfFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.UpdateSDKReady
void LIV::SDK::Unity::LIV::UpdateSDKReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::UpdateSDKReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDKReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKReadyChanged
void LIV::SDK::Unity::LIV::OnSDKReadyChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnSDKReadyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKReadyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKActivate
void LIV::SDK::Unity::LIV::OnSDKActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnSDKActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.OnSDKDeactivate
void LIV::SDK::Unity::LIV::OnSDKDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::OnSDKDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSDKDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.CreateAssets
void LIV::SDK::Unity::LIV::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.DestroyAssets
void LIV::SDK::Unity::LIV::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.StartRenderCoroutine
void LIV::SDK::Unity::LIV::StartRenderCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::StartRenderCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRenderCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.StopRenderCoroutine
void LIV::SDK::Unity::LIV::StopRenderCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::StopRenderCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRenderCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.SubmitSDKOutput
void LIV::SDK::Unity::LIV::SubmitSDKOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::SubmitSDKOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitSDKOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV.Invalidate
void LIV::SDK::Unity::LIV::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68
#include "LIV/SDK/Unity/LIV_-WaitForUnityEndOfFrame-d__68.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.LIV <>4__this
::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.get_Current
::Il2CppObject* LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.IDisposable.Dispose
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.MoveNext
bool LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.LIV/LIV.SDK.Unity.<WaitForUnityEndOfFrame>d__68.System.Collections.IEnumerator.Reset
void LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::LIV::$WaitForUnityEndOfFrame$d__68::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKBridge
#include "LIV/SDK/Unity/SDKBridge.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKInputFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKInputFrame> _injection_SDKInputFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKInputFrame> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKInputFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKInputFrame", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_SDKResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution>>("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<LIV.SDK.Unity.SDKResolution> _injection_SDKResolution
void LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<::LIV::SDK::Unity::SDKResolution> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_SDKResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_SDKResolution", value));
}
// Autogenerated static field getter
// Get static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> LIV::SDK::Unity::SDKBridge::_get__injection_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_IsActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool>>("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive"));
}
// Autogenerated static field setter
// Set static field: static private LIV.SDK.Unity.SDKBridge/LIV.SDK.Unity.SDKInjection`1<System.Boolean> _injection_IsActive
void LIV::SDK::Unity::SDKBridge::_set__injection_IsActive(::LIV::SDK::Unity::SDKBridge::SDKInjection_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_IsActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_IsActive", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmit
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmit
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableSubmitApplicationOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableSubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableSubmitApplicationOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableSubmitApplicationOutput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableAddTexture
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableAddTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableAddTexture
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableAddTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableAddTexture", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _injection_DisableCreateFrame
bool LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_get__injection_DisableCreateFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _injection_DisableCreateFrame
void LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::_set__injection_DisableCreateFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKBridge", "_injection_DisableCreateFrame", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.get_IsActive
bool LIV::SDK::Unity::SDKBridge::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge..cctor
void LIV::SDK::Unity::SDKBridge::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddStringToChannel
int LIV::SDK::Unity::SDKBridge::AddStringToChannel(int slot, ::System::IntPtr str, int length, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddStringToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddStringToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, str, length, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.addtexture
int LIV::SDK::Unity::SDKBridge::addtexture(::System::IntPtr sourcetexture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::addtexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "addtexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourcetexture), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourcetexture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTimeStamp
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp(::System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTimeStamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTimeStamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTimeTicks
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetIsCaptureActive
bool LIV::SDK::Unity::SDKBridge::GetIsCaptureActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetIsCaptureActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetIsCaptureActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetRenderEventFunc
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetRenderEventFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetRenderEventFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetRenderEventFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCompositorChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCompositorChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCompositorChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToCompositorChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToCompositorChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToCompositorChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToFrame
int LIV::SDK::Unity::SDKBridge::AddObjectToFrame(::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.updatinputframe
::System::IntPtr LIV::SDK::Unity::SDKBridge::updatinputframe(::System::IntPtr InputFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::updatinputframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "updatinputframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InputFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InputFrame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewportTexture
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetViewportTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewportTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewportTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetChannelObject
::System::IntPtr LIV::SDK::Unity::SDKBridge::GetChannelObject(int slot, uint64_t tag, uint64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetChannelObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetChannelObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(timestamp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, tag, timestamp);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddObjectToChannel
int LIV::SDK::Unity::SDKBridge::AddObjectToChannel(int slot, ::System::IntPtr obj, int objectsize, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddObjectToChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddObjectToChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectsize), ::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slot, obj, objectsize, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.Tag
uint64_t LIV::SDK::Unity::SDKBridge::Tag(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddString
void LIV::SDK::Unity::SDKBridge::AddString(::StringW tag, ::StringW value, int slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(slot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag, value, slot);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture, uint64_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, tag);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetObjectTime
uint64_t LIV::SDK::Unity::SDKBridge::GetObjectTime(::System::IntPtr objectptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectptr)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectptr);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetCurrentTime
uint64_t LIV::SDK::Unity::SDKBridge::GetCurrentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetCurrentTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetCurrentTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.IssuePluginEvent
void LIV::SDK::Unity::SDKBridge::IssuePluginEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::IssuePluginEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "IssuePluginEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SubmitApplicationOutput
void LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput(::LIV::SDK::Unity::SDKApplicationOutput applicationOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SubmitApplicationOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SubmitApplicationOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applicationOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, applicationOutput);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.UpdateInputFrame
bool LIV::SDK::Unity::SDKBridge::UpdateInputFrame(ByRef<::LIV::SDK::Unity::SDKInputFrame> setframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::UpdateInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "UpdateInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setframe)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(setframe));
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetViewfinderTexture
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKBridge::GetViewfinderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetViewfinderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetViewfinderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.AddTexture
void LIV::SDK::Unity::SDKBridge::AddTexture(::LIV::SDK::Unity::SDKTexture texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::AddTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "AddTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.CreateFrame
void LIV::SDK::Unity::SDKBridge::CreateFrame(::LIV::SDK::Unity::SDKOutputFrame frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::CreateFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "CreateFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frame);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.SetGroundPlane
void LIV::SDK::Unity::SDKBridge::SetGroundPlane(::LIV::SDK::Unity::SDKPlane groundPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groundPlane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groundPlane);
}
// Autogenerated method: LIV.SDK.Unity.SDKBridge.GetResolution
bool LIV::SDK::Unity::SDKBridge::GetResolution(ByRef<::LIV::SDK::Unity::SDKResolution> sdkResolution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKBridge::GetResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKBridge", "GetResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sdkResolution)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(sdkResolution));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKRender
#include "LIV/SDK/Unity/SDKRender.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _clipPlaneCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _combineAlphaCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _captureTextureCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__captureTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _applyTextureCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__applyTextureCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _optimizedRenderingCommandBuffer
::UnityEngine::Rendering::CommandBuffer*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCommandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCommandBuffer"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCameraEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _clipPlaneCombineAlphaCameraEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__clipPlaneCombineAlphaCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneCombineAlphaCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneCombineAlphaCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _captureTextureEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__captureTextureEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__captureTextureEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureTextureEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _applyTextureEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__applyTextureEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__applyTextureEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyTextureEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CameraEvent _optimizedRenderingCameraEvent
::UnityEngine::Rendering::CameraEvent& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderingCameraEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderingCameraEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::CameraEvent*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _clipPlaneMesh
::UnityEngine::Mesh*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneSimpleDebugMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneSimpleDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneSimpleDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipPlaneComplexDebugMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__clipPlaneComplexDebugMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipPlaneComplexDebugMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeOpaqueToAlphaMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeOpaqueToAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeOpaqueToAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _combineAlphaMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__combineAlphaMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combineAlphaMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _writeMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__writeMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__writeMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _forceForwardRenderingMaterial
::UnityEngine::Material*& LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__forceForwardRenderingMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceForwardRenderingMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _backgroundRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__backgroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _foregroundRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__foregroundRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foregroundRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _optimizedRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__optimizedRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optimizedRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _complexClipPlaneRenderTexture
::UnityEngine::RenderTexture*& LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__complexClipPlaneRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_complexClipPlaneRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
::LIV::SDK::Unity::LIV*& LIV::SDK::Unity::SDKRender::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKOutputFrame _outputFrame
::LIV::SDK::Unity::SDKOutputFrame& LIV::SDK::Unity::SDKRender::dyn__outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__outputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKOutputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKInputFrame _inputFrame
::LIV::SDK::Unity::SDKInputFrame& LIV::SDK::Unity::SDKRender::dyn__inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__inputFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFrame"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKInputFrame*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKResolution _resolution
::LIV::SDK::Unity::SDKResolution& LIV::SDK::Unity::SDKRender::dyn__resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__resolution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolution"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKResolution*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _cameraInstance
::UnityEngine::Camera*& LIV::SDK::Unity::SDKRender::dyn__cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__cameraInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.SDKPose _requestedPose
::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKRender::dyn__requestedPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _requestedPoseFrameIndex
int& LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::dyn__requestedPoseFrameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedPoseFrameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_BackgroundRenderTexture
::UnityEngine::RenderTexture* LIV::SDK::Unity::SDKRender::get_BackgroundRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_BackgroundRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BackgroundRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_useDeferredRendering
bool LIV::SDK::Unity::SDKRender::get_useDeferredRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_useDeferredRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDeferredRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_interlacedRendering
bool LIV::SDK::Unity::SDKRender::get_interlacedRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_interlacedRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interlacedRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderBackground
bool LIV::SDK::Unity::SDKRender::get_canRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderForeground
bool LIV::SDK::Unity::SDKRender::get_canRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canRenderOptimized
bool LIV::SDK::Unity::SDKRender::get_canRenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canRenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canRenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_liv
::LIV::SDK::Unity::LIV* LIV::SDK::Unity::SDKRender::get_liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_liv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::LIV*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_outputFrame
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKRender::get_outputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_outputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_inputFrame
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKRender::get_inputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_inputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_resolution
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKRender::get_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_resolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraInstance
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_cameraReference
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_cameraReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_cameraReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cameraReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_hmdCamera
::UnityEngine::Camera* LIV::SDK::Unity::SDKRender::get_hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_hmdCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stage
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageTransform
::UnityEngine::Transform* LIV::SDK::Unity::SDKRender::get_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_stageLocalToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_stageLocalToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stageLocalToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_localToWorldMatrix
::UnityEngine::Matrix4x4 LIV::SDK::Unity::SDKRender::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_spectatorLayerMask
int LIV::SDK::Unity::SDKRender::get_spectatorLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_spectatorLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatorLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_disableStandardAssets
bool LIV::SDK::Unity::SDKRender::get_disableStandardAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_disableStandardAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableStandardAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.get_canSetPose
bool LIV::SDK::Unity::SDKRender::get_canSetPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::get_canSetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(complexClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, complexClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.GetGroundClipPlaneMaterial
::UnityEngine::Material* LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial(bool debugClipPlane, ::UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::GetGroundClipPlaneMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroundClipPlaneMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugClipPlane), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method, debugClipPlane, colorWriteMask);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Render
void LIV::SDK::Unity::SDKRender::Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Render");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderBackground
void LIV::SDK::Unity::SDKRender::RenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderForeground
void LIV::SDK::Unity::SDKRender::RenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.RenderOptimized
void LIV::SDK::Unity::SDKRender::RenderOptimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::RenderOptimized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderOptimized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateAssets
void LIV::SDK::Unity::SDKRender::CreateAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.DestroyAssets
void LIV::SDK::Unity::SDKRender::DestroyAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::DestroyAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.Dispose
void LIV::SDK::Unity::SDKRender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetPose
bool LIV::SDK::Unity::SDKRender::SetPose(::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, float verticalFieldOfView, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(verticalFieldOfView), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, position, rotation, verticalFieldOfView, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(float distance, ::UnityEngine::Vector3 normal, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, normal, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Plane plane, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SetGroundPlane
void LIV::SDK::Unity::SDKRender::SetGroundPlane(::UnityEngine::Transform* transform, bool useLocalSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SetGroundPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGroundPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(useLocalSpace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, useLocalSpace);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.ReleaseBridgePoseControl
void LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::ReleaseBridgePoseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBridgePoseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeResolution
void LIV::SDK::Unity::SDKRender::UpdateBridgeResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeResolution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeResolution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateBridgeInputFrame
void LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateBridgeInputFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBridgeInputFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRender
void LIV::SDK::Unity::SDKRender::InvokePreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.IvokePostRender
void LIV::SDK::Unity::SDKRender::IvokePostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::IvokePostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IvokePostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePreRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderBackground
void LIV::SDK::Unity::SDKRender::InvokePostRenderBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePreRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePreRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePreRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePreRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.InvokePostRenderForeground
void LIV::SDK::Unity::SDKRender::InvokePostRenderForeground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::InvokePostRenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokePostRenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateBackgroundTexture
void LIV::SDK::Unity::SDKRender::CreateBackgroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateBackgroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBackgroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateForegroundTexture
void LIV::SDK::Unity::SDKRender::CreateForegroundTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateForegroundTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateForegroundTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateOptimizedTexture
void LIV::SDK::Unity::SDKRender::CreateOptimizedTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateOptimizedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOptimizedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.CreateComplexClipPlaneTexture
void LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::CreateComplexClipPlaneTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComplexClipPlaneTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.UpdateTextures
void LIV::SDK::Unity::SDKRender::UpdateTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::UpdateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKRender.SendTextureToBridge
void LIV::SDK::Unity::SDKRender::SendTextureToBridge(::UnityEngine::RenderTexture* texture, ::LIV::SDK::Unity::TEXTURE_ID id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKRender::SendTextureToBridge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTextureToBridge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, texture, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKShaders
#include "LIV/SDK/Unity/SDKShaders.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_COLOR_MASK
int LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COLOR_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_COLOR_MASK
void LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COLOR_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COLOR_MASK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_TESSELLATION_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_TESSELLATION_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_TESSELLATION_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_TESSELLATION_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
int LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_FOREGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_FOREGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_FOREGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_FOREGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_BACKGROUND_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_BACKGROUND_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_BACKGROUND_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_BACKGROUND_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_MR_KEYWORD
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_MR_KEYWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_MR_KEYWORD
void LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_MR_KEYWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_MR_KEYWORD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_OPAQUE_TO_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_OPAQUE_TO_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_OPAQUE_TO_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_COMBINE_ALPHA_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_COMBINE_ALPHA_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_COMBINE_ALPHA_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_COMBINE_ALPHA_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_COMBINE_ALPHA_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_WRITE_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_WRITE_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_WRITE_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_WRITE_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_WRITE_SHADER", value));
}
// Autogenerated static field getter
// Get static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
::StringW LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_get_LIV_FORCE_FORWARD_RENDERING_SHADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER"));
}
// Autogenerated static field setter
// Set static field: static public System.String LIV_FORCE_FORWARD_RENDERING_SHADER
void LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::_set_LIV_FORCE_FORWARD_RENDERING_SHADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKShaders", "LIV_FORCE_FORWARD_RENDERING_SHADER", value));
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders..cctor
void LIV::SDK::Unity::SDKShaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartRendering
void LIV::SDK::Unity::SDKShaders::StartRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopRendering
void LIV::SDK::Unity::SDKShaders::StopRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartForegroundRendering
void LIV::SDK::Unity::SDKShaders::StartForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopForegroundRendering
void LIV::SDK::Unity::SDKShaders::StopForegroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopForegroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopForegroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StartBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StartBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StartBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StartBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKShaders.StopBackgroundRendering
void LIV::SDK::Unity::SDKShaders::StopBackgroundRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKShaders::StopBackgroundRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKShaders", "StopBackgroundRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKConstants
#include "LIV/SDK/Unity/SDKConstants.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String SDK_ID
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_ID"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_ID
void LIV::SDK::Unity::SDKConstants::_set_SDK_ID(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.String SDK_VERSION
::StringW LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_SDK_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION"));
}
// Autogenerated static field setter
// Set static field: static public System.String SDK_VERSION
void LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_SDK_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "SDK_VERSION", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ENGINE_NAME
::StringW LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_get_ENGINE_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.String ENGINE_NAME
void LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKConstants::_set_ENGINE_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "SDKConstants", "ENGINE_NAME", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.PRIORITY
#include "LIV/SDK/Unity/PRIORITY.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY NONE
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY NONE
void LIV::SDK::Unity::PRIORITY::_set_NONE(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.PRIORITY GAME
::LIV::SDK::Unity::PRIORITY LIV::SDK::Unity::PRIORITY::_get_GAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_get_GAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::PRIORITY>("LIV.SDK.Unity", "PRIORITY", "GAME"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.PRIORITY GAME
void LIV::SDK::Unity::PRIORITY::_set_GAME(::LIV::SDK::Unity::PRIORITY value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::_set_GAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "PRIORITY", "GAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
int8_t& LIV::SDK::Unity::PRIORITY::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::PRIORITY::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.FEATURES
#include "LIV/SDK/Unity/FEATURES.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES NONE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "NONE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES NONE
void LIV::SDK::Unity::FEATURES::_set_NONE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "NONE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FOREGROUND_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FOREGROUND_RENDER
void LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FOREGROUND_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FOREGROUND_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_COMPLEX_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES COMPLEX_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_COMPLEX_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "COMPLEX_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_BACKGROUND_DEPTH_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES BACKGROUND_DEPTH_RENDER
void LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_BACKGROUND_DEPTH_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "BACKGROUND_DEPTH_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OVERRIDE_POST_PROCESSING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OVERRIDE_POST_PROCESSING
void LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OVERRIDE_POST_PROCESSING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OVERRIDE_POST_PROCESSING", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_FIX_FOREGROUND_ALPHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES FIX_FOREGROUND_ALPHA
void LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_FIX_FOREGROUND_ALPHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "FIX_FOREGROUND_ALPHA", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_GROUND_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES GROUND_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_GROUND_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "GROUND_CLIP_PLANE", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_RELEASE_CONTROL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES RELEASE_CONTROL
void LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_RELEASE_CONTROL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "RELEASE_CONTROL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_OPTIMIZED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES OPTIMIZED_RENDER
void LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_OPTIMIZED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "OPTIMIZED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_INTERLACED_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES INTERLACED_RENDER
void LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_INTERLACED_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "INTERLACED_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
::LIV::SDK::Unity::FEATURES LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_get_DEBUG_CLIP_PLANE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::FEATURES>("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.FEATURES DEBUG_CLIP_PLANE
void LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE(::LIV::SDK::Unity::FEATURES value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::_set_DEBUG_CLIP_PLANE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "FEATURES", "DEBUG_CLIP_PLANE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
uint64_t& LIV::SDK::Unity::FEATURES::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::FEATURES::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_ID
#include "LIV/SDK/Unity/TEXTURE_ID.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID UNDEFINED
void LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_BACKGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID BACKGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_BACKGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "BACKGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_FOREGROUND_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID FOREGROUND_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_FOREGROUND_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "FOREGROUND_COLOR_BUFFER_ID", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
::LIV::SDK::Unity::TEXTURE_ID LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_get_OPTIMIZED_COLOR_BUFFER_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_ID>("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_ID OPTIMIZED_COLOR_BUFFER_ID
void LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID(::LIV::SDK::Unity::TEXTURE_ID value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::_set_OPTIMIZED_COLOR_BUFFER_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_ID", "OPTIMIZED_COLOR_BUFFER_ID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_ID::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_ID::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_TYPE
#include "LIV/SDK/Unity/TEXTURE_TYPE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE UNDEFINED
void LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
::LIV::SDK::Unity::TEXTURE_TYPE LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_get_COLOR_BUFFER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_TYPE>("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_TYPE COLOR_BUFFER
void LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER(::LIV::SDK::Unity::TEXTURE_TYPE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::_set_COLOR_BUFFER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_TYPE", "COLOR_BUFFER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_TYPE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_FORMAT
#include "LIV/SDK/Unity/TEXTURE_FORMAT.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT UNDEFINED
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
::LIV::SDK::Unity::TEXTURE_FORMAT LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_get_ARGB32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_FORMAT>("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_FORMAT ARGB32
void LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32(::LIV::SDK::Unity::TEXTURE_FORMAT value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::_set_ARGB32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_FORMAT", "ARGB32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_FORMAT::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_DEVICE
#include "LIV/SDK/Unity/TEXTURE_DEVICE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE UNDEFINED
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_RAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE RAW
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_RAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "RAW", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_DIRECTX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE DIRECTX
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_DIRECTX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "DIRECTX", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_OPENGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE OPENGL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_OPENGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "OPENGL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_VULKAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE VULKAN
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_VULKAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "VULKAN", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
::LIV::SDK::Unity::TEXTURE_DEVICE LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_get_METAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_DEVICE>("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_DEVICE METAL
void LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL(::LIV::SDK::Unity::TEXTURE_DEVICE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::_set_METAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_DEVICE", "METAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_DEVICE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.TEXTURE_COLOR_SPACE
#include "LIV/SDK/Unity/TEXTURE_COLOR_SPACE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE UNDEFINED
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_LINEAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE LINEAR
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_LINEAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "LINEAR", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_get_SRGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE>("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.TEXTURE_COLOR_SPACE SRGB
void LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB(::LIV::SDK::Unity::TEXTURE_COLOR_SPACE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::_set_SRGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "TEXTURE_COLOR_SPACE", "SRGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::TEXTURE_COLOR_SPACE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.RENDERING_PIPELINE
#include "LIV/SDK/Unity/RENDERING_PIPELINE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNDEFINED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNDEFINED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNDEFINED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNDEFINED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_FORWARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE FORWARD
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_FORWARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "FORWARD", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_DEFERRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE DEFERRED
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_DEFERRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "DEFERRED", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_VERTEX_LIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE VERTEX_LIT
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_VERTEX_LIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "VERTEX_LIT", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_UNIVERSAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE UNIVERSAL
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_UNIVERSAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "UNIVERSAL", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
::LIV::SDK::Unity::RENDERING_PIPELINE LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_get_HIGH_DEFINITION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::RENDERING_PIPELINE>("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.RENDERING_PIPELINE HIGH_DEFINITION
void LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION(::LIV::SDK::Unity::RENDERING_PIPELINE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::_set_HIGH_DEFINITION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LIV.SDK.Unity", "RENDERING_PIPELINE", "HIGH_DEFINITION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::RENDERING_PIPELINE::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKResolution
#include "LIV/SDK/Unity/SDKResolution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKResolution::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKResolution::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.get_zero
::LIV::SDK::Unity::SDKResolution LIV::SDK::Unity::SDKResolution::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKResolution", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKResolution, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKResolution.ToString
::StringW LIV::SDK::Unity::SDKResolution::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKResolution::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKVector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKVector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKVector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_zero
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_one
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_forward
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_up
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.get_right
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::SDKVector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.ToString
::StringW LIV::SDK::Unity::SDKVector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Addition
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator+(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Subtraction
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator-(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKVector3.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKVector3& lhs, const float& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKVector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKVector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& LIV::SDK::Unity::SDKQuaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& LIV::SDK::Unity::SDKQuaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& LIV::SDK::Unity::SDKQuaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& LIV::SDK::Unity::SDKQuaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.get_identity
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.Euler
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::SDKQuaternion::Euler(float pitch, float yaw, float roll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitch), ::il2cpp_utils::ExtractType(yaw), ::il2cpp_utils::ExtractType(roll)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pitch, yaw, roll);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.ToString
::StringW LIV::SDK::Unity::SDKQuaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKQuaternion LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKQuaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKQuaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKQuaternion.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKQuaternion& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKQuaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKQuaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKMatrix4x4
#include "LIV/SDK/Unity/SDKMatrix4x4.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: LIV.SDK.Unity.SDKVector3
#include "LIV/SDK/Unity/SDKVector3.hpp"
// Including type: LIV.SDK.Unity.SDKQuaternion
#include "LIV/SDK/Unity/SDKQuaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m00
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
float& LIV::SDK::Unity::SDKMatrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.get_identity
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Perspective
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Perspective(float vFov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vFov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vFov, aspect, zNear, zFar);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Translate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Translate(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Rotate
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Rotate(::LIV::SDK::Unity::SDKQuaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.Scale
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::Scale(::LIV::SDK::Unity::SDKVector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.TRS
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::SDKMatrix4x4::TRS(::LIV::SDK::Unity::SDKVector3 translation, ::LIV::SDK::Unity::SDKQuaternion rotation, ::LIV::SDK::Unity::SDKVector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, translation, rotation, scale);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.ToString
::StringW LIV::SDK::Unity::SDKMatrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKMatrix4x4 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKMatrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKMatrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: LIV.SDK.Unity.SDKMatrix4x4.op_Multiply
::LIV::SDK::Unity::SDKVector3 LIV::SDK::Unity::operator*(const ::LIV::SDK::Unity::SDKMatrix4x4& lhs, const ::LIV::SDK::Unity::SDKVector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKMatrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKMatrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKVector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPlane
#include "LIV/SDK/Unity/SDKPlane.hpp"
// Including type: UnityEngine.Plane
#include "UnityEngine/Plane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single distance
float& LIV::SDK::Unity::SDKPlane::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_distance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 normal
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKPlane::dyn_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::dyn_normal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normal"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.get_empty
::LIV::SDK::Unity::SDKPlane LIV::SDK::Unity::SDKPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPlane.ToString
::StringW LIV::SDK::Unity::SDKPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKPriority
#include "LIV/SDK/Unity/SDKPriority.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.SByte pose
int8_t& LIV::SDK::Unity::SDKPriority::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte clipPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte stage
int8_t& LIV::SDK::Unity::SDKPriority::dyn_stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_stage");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stage"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte resolution
int8_t& LIV::SDK::Unity::SDKPriority::dyn_resolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_resolution");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolution"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte feature
int8_t& LIV::SDK::Unity::SDKPriority::dyn_feature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_feature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feature"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte nearFarAdjustment
int8_t& LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_nearFarAdjustment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearFarAdjustment"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte groundPlane
int8_t& LIV::SDK::Unity::SDKPriority::dyn_groundPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_groundPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundPlane"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.SByte reserved2
int8_t& LIV::SDK::Unity::SDKPriority::dyn_reserved2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::dyn_reserved2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved2"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.get_empty
::LIV::SDK::Unity::SDKPriority LIV::SDK::Unity::SDKPriority::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKPriority", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKPriority, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKPriority.ToString
::StringW LIV::SDK::Unity::SDKPriority::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKPriority::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKApplicationOutput
#include "LIV/SDK/Unity/SDKApplicationOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES supportedFeatures
::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_supportedFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportedFeatures"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String engineVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_engineVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "engineVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String applicationVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_applicationVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "applicationVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xrDeviceName
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_xrDeviceName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xrDeviceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String graphicsAPI
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_graphicsAPI");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "graphicsAPI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkID
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sdkVersion
::StringW& LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::dyn_sdkVersion");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sdkVersion"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.get_empty
::LIV::SDK::Unity::SDKApplicationOutput LIV::SDK::Unity::SDKApplicationOutput::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKApplicationOutput", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKApplicationOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKApplicationOutput.ToString
::StringW LIV::SDK::Unity::SDKApplicationOutput::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKApplicationOutput::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKInputFrame
#include "LIV/SDK/Unity/SDKInputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPose pose
::LIV::SDK::Unity::SDKPose& LIV::SDK::Unity::SDKInputFrame::dyn_pose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_pose");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pose"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPose*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane clipPlane
::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_clipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTransform stageTransform
::LIV::SDK::Unity::SDKTransform& LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_stageTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stageTransform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.FEATURES features
::LIV::SDK::Unity::FEATURES& LIV::SDK::Unity::SDKInputFrame::dyn_features() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_features");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "features"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::FEATURES*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKClipPlane groundClipPlane
::LIV::SDK::Unity::SDKClipPlane& LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_groundClipPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groundClipPlane"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKClipPlane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 frameid
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_frameid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_frameid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameid"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 referenceframe
uint64_t& LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_referenceframe");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceframe"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKPriority priority
::LIV::SDK::Unity::SDKPriority& LIV::SDK::Unity::SDKInputFrame::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::dyn_priority");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKPriority*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.get_empty
::LIV::SDK::Unity::SDKInputFrame LIV::SDK::Unity::SDKInputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKInputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKInputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ReleaseControl
void LIV::SDK::Unity::SDKInputFrame::ReleaseControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ReleaseControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ReleaseControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ObtainControl
void LIV::SDK::Unity::SDKInputFrame::ObtainControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ObtainControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ObtainControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKInputFrame.ToString
::StringW LIV::SDK::Unity::SDKInputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKInputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKOutputFrame
#include "LIV/SDK/Unity/SDKOutputFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.RENDERING_PIPELINE renderingPipeline
::LIV::SDK::Unity::RENDERING_PIPELINE& LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_renderingPipeline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderingPipeline"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::RENDERING_PIPELINE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKTrackedSpace trackedSpace
::LIV::SDK::Unity::SDKTrackedSpace& LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::dyn_trackedSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKTrackedSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.get_empty
::LIV::SDK::Unity::SDKOutputFrame LIV::SDK::Unity::SDKOutputFrame::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKOutputFrame", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKOutputFrame, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKOutputFrame.ToString
::StringW LIV::SDK::Unity::SDKOutputFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKOutputFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTrackedSpace
#include "LIV/SDK/Unity/SDKTrackedSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceWorldPosition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion trackedSpaceWorldRotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 trackedSpaceLocalScale
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceLocalToWorldMatrix
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceLocalToWorldMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceLocalToWorldMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 trackedSpaceWorldToLocalMatrix
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::dyn_trackedSpaceWorldToLocalMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedSpaceWorldToLocalMatrix"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.get_empty
::LIV::SDK::Unity::SDKTrackedSpace LIV::SDK::Unity::SDKTrackedSpace::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTrackedSpace", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTrackedSpace, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTrackedSpace.ToString
::StringW LIV::SDK::Unity::SDKTrackedSpace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTrackedSpace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTexture
#include "LIV/SDK/Unity/SDKTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_ID id
::LIV::SDK::Unity::TEXTURE_ID& LIV::SDK::Unity::SDKTexture::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_ID*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr texturePtr
::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_texturePtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_texturePtr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturePtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr SharedHandle
::System::IntPtr& LIV::SDK::Unity::SDKTexture::dyn_SharedHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_SharedHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SharedHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_DEVICE device
::LIV::SDK::Unity::TEXTURE_DEVICE& LIV::SDK::Unity::SDKTexture::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_device");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_DEVICE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 dummy
int& LIV::SDK::Unity::SDKTexture::dyn_dummy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_dummy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_TYPE type
::LIV::SDK::Unity::TEXTURE_TYPE& LIV::SDK::Unity::SDKTexture::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_TYPE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_FORMAT format
::LIV::SDK::Unity::TEXTURE_FORMAT& LIV::SDK::Unity::SDKTexture::dyn_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_format");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "format"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_FORMAT*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.TEXTURE_COLOR_SPACE colorSpace
::LIV::SDK::Unity::TEXTURE_COLOR_SPACE& LIV::SDK::Unity::SDKTexture::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_colorSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::TEXTURE_COLOR_SPACE*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKTexture::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKTexture::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.get_empty
::LIV::SDK::Unity::SDKTexture LIV::SDK::Unity::SDKTexture::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTexture", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTexture, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTexture.ToString
::StringW LIV::SDK::Unity::SDKTexture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTexture::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKTransform
#include "LIV/SDK/Unity/SDKTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localPosition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPosition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion localRotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKTransform::dyn_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localRotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 localScale
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKTransform::dyn_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::dyn_localScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localScale"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.get_empty
::LIV::SDK::Unity::SDKTransform LIV::SDK::Unity::SDKTransform::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKTransform", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKTransform.ToString
::StringW LIV::SDK::Unity::SDKTransform::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKTransform::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKClipPlane
#include "LIV/SDK/Unity/SDKClipPlane.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKMatrix4x4 transform
::LIV::SDK::Unity::SDKMatrix4x4& LIV::SDK::Unity::SDKClipPlane::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKMatrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
int& LIV::SDK::Unity::SDKClipPlane::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_width");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
int& LIV::SDK::Unity::SDKClipPlane::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_height");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tesselation
float& LIV::SDK::Unity::SDKClipPlane::dyn_tesselation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::dyn_tesselation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tesselation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.get_empty
::LIV::SDK::Unity::SDKClipPlane LIV::SDK::Unity::SDKClipPlane::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKClipPlane", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKClipPlane, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKClipPlane.ToString
::StringW LIV::SDK::Unity::SDKClipPlane::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKClipPlane::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LIV.SDK.Unity.SDKControllerState
#include "LIV/SDK/Unity/SDKControllerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 hmdposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_hmdposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion hmdrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_hmdrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 calibrationcameraposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion calibrationcamerarotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_calibrationcamerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationcamerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 cameraposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_cameraposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_cameraposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion camerarotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_camerarotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_camerarotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "camerarotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 leftposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_leftposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion leftrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_leftrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_leftrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKVector3 rightposition
::LIV::SDK::Unity::SDKVector3& LIV::SDK::Unity::SDKControllerState::dyn_rightposition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightposition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightposition"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKVector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LIV.SDK.Unity.SDKQuaternion rightrotation
::LIV::SDK::Unity::SDKQuaternion& LIV::SDK::Unity::SDKControllerState::dyn_rightrotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::dyn_rightrotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightrotation"))->offset;
  return *reinterpret_cast<::LIV::SDK::Unity::SDKQuaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.get_empty
::LIV::SDK::Unity::SDKControllerState LIV::SDK::Unity::SDKControllerState::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::get_empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LIV.SDK.Unity", "SDKControllerState", "get_empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LIV::SDK::Unity::SDKControllerState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LIV.SDK.Unity.SDKControllerState.ToString
::StringW LIV::SDK::Unity::SDKControllerState::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LIV::SDK::Unity::SDKControllerState::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
