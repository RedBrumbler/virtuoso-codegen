// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ILogger
#include "UnityEngine/ILogger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ILogger.get_logHandler
::UnityEngine::ILogHandler* UnityEngine::ILogger::get_logHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::get_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ILogHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ILogger.get_logEnabled
bool UnityEngine::ILogger::get_logEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::get_logEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ILogger.Log
void UnityEngine::ILogger::Log(::UnityEngine::LogType logType, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, message);
}
// Autogenerated method: UnityEngine.ILogger.Log
void UnityEngine::ILogger::Log(::UnityEngine::LogType logType, ::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, message, context);
}
// Autogenerated method: UnityEngine.ILogger.LogError
void UnityEngine::ILogger::LogError(::StringW tag, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: UnityEngine.ILogger.LogFormat
void UnityEngine::ILogger::LogFormat(::UnityEngine::LogType logType, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ILogger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, format, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Logger
#include "UnityEngine/Logger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ILogHandler <logHandler>k__BackingField
::UnityEngine::ILogHandler*& UnityEngine::Logger::dyn_$logHandler$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::dyn_$logHandler$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<logHandler>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::ILogHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <logEnabled>k__BackingField
bool& UnityEngine::Logger::dyn_$logEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::dyn_$logEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<logEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LogType <filterLogType>k__BackingField
::UnityEngine::LogType& UnityEngine::Logger::dyn_$filterLogType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::dyn_$filterLogType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<filterLogType>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Logger.get_logHandler
::UnityEngine::ILogHandler* UnityEngine::Logger::get_logHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::get_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ILogHandler*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_logHandler
void UnityEngine::Logger::set_logHandler(::UnityEngine::ILogHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::set_logHandler");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_logHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_logEnabled
bool UnityEngine::Logger::get_logEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::get_logEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_logEnabled
void UnityEngine::Logger::set_logEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::set_logEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_logEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.get_filterLogType
::UnityEngine::LogType UnityEngine::Logger::get_filterLogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::get_filterLogType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_filterLogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LogType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Logger.set_filterLogType
void UnityEngine::Logger::set_filterLogType(::UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::set_filterLogType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_filterLogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Logger.IsLogTypeAllowed
bool UnityEngine::Logger::IsLogTypeAllowed(::UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::IsLogTypeAllowed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLogTypeAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, logType);
}
// Autogenerated method: UnityEngine.Logger.GetString
::StringW UnityEngine::Logger::GetString(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Logger", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(::UnityEngine::LogType logType, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, message);
}
// Autogenerated method: UnityEngine.Logger.Log
void UnityEngine::Logger::Log(::UnityEngine::LogType logType, ::Il2CppObject* message, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, message, context);
}
// Autogenerated method: UnityEngine.Logger.LogError
void UnityEngine::Logger::LogError(::StringW tag, ::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag, message);
}
// Autogenerated method: UnityEngine.Logger.LogException
void UnityEngine::Logger::LogException(::System::Exception* exception, ::UnityEngine::Object* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(::UnityEngine::LogType logType, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, format, args);
}
// Autogenerated method: UnityEngine.Logger.LogFormat
void UnityEngine::Logger::LogFormat(::UnityEngine::LogType logType, ::UnityEngine::Object* context, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Logger::LogFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logType, context, format, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityLogWriter
#include "UnityEngine/UnityLogWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnityLogWriter.WriteStringToUnityLog
void UnityEngine::UnityLogWriter::WriteStringToUnityLog(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::WriteStringToUnityLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "WriteStringToUnityLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.WriteStringToUnityLogImpl
void UnityEngine::UnityLogWriter::WriteStringToUnityLogImpl(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::WriteStringToUnityLogImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "WriteStringToUnityLogImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Init
void UnityEngine::UnityLogWriter::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnityLogWriter", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.UnityLogWriter.Write
void UnityEngine::UnityLogWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnityLogWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single r
float& UnityEngine::Color::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_r");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single g
float& UnityEngine::Color::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single b
float& UnityEngine::Color::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single a
float& UnityEngine::Color::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Color.get_red
::UnityEngine::Color UnityEngine::Color::get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_red");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_red", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_green
::UnityEngine::Color UnityEngine::Color::get_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_green");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_green", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_blue
::UnityEngine::Color UnityEngine::Color::get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_blue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_blue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_white
::UnityEngine::Color UnityEngine::Color::get_white() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_white");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_white", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_black
::UnityEngine::Color UnityEngine::Color::get_black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_black");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_black", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_yellow
::UnityEngine::Color UnityEngine::Color::get_yellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_yellow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_yellow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_cyan
::UnityEngine::Color UnityEngine::Color::get_cyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_cyan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_cyan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_magenta
::UnityEngine::Color UnityEngine::Color::get_magenta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_magenta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_magenta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_gray
::UnityEngine::Color UnityEngine::Color::get_gray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_gray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_gray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_grey
::UnityEngine::Color UnityEngine::Color::get_grey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_grey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_grey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_clear
::UnityEngine::Color UnityEngine::Color::get_clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_grayscale
float UnityEngine::Color::get_grayscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_grayscale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_grayscale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_linear
::UnityEngine::Color UnityEngine::Color::get_linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_linear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_linear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_maxColorComponent
float UnityEngine::Color::get_maxColorComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_maxColorComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_maxColorComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_Item
float UnityEngine::Color::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Color..ctor
// ABORTED elsewhere.  UnityEngine::Color::Color(float r, float g, float b, float a)
// Autogenerated method: UnityEngine.Color..ctor
UnityEngine::Color::Color(float r, float g, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, g, b);
}
// Autogenerated method: UnityEngine.Color.ToString
::StringW UnityEngine::Color::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(::UnityEngine::Color other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.Lerp
::UnityEngine::Color UnityEngine::Color::Lerp(::UnityEngine::Color a, ::UnityEngine::Color b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color.LerpUnclamped
::UnityEngine::Color UnityEngine::Color::LerpUnclamped(::UnityEngine::Color a, ::UnityEngine::Color b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color.RGBMultiplied
::UnityEngine::Color UnityEngine::Color::RGBMultiplied(float multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBMultiplied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RGBMultiplied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, multiplier);
}
// Autogenerated method: UnityEngine.Color.RGBToHSV
void UnityEngine::Color::RGBToHSV(::UnityEngine::Color rgbColor, ByRef<float> H, ByRef<float> S, ByRef<float> V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBToHSV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbColor), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbColor, byref(H), byref(S), byref(V));
}
// Autogenerated method: UnityEngine.Color.RGBToHSVHelper
void UnityEngine::Color::RGBToHSVHelper(float offset, float dominantcolor, float colorone, float colortwo, ByRef<float> H, ByRef<float> S, ByRef<float> V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBToHSVHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSVHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(dominantcolor), ::il2cpp_utils::ExtractType(colorone), ::il2cpp_utils::ExtractType(colortwo), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset, dominantcolor, colorone, colortwo, byref(H), byref(S), byref(V));
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
::UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(H), ::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(V)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, H, S, V);
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
::UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V, bool hdr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(H), ::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(V), ::il2cpp_utils::ExtractType(hdr)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, H, S, V, hdr);
}
// Autogenerated method: UnityEngine.Color.ToString
::StringW UnityEngine::Color::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.GetHashCode
int UnityEngine::Color::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.op_Addition
::UnityEngine::Color UnityEngine::operator+(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Subtraction
::UnityEngine::Color UnityEngine::operator-(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
::UnityEngine::Color UnityEngine::operator*(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
::UnityEngine::Color UnityEngine::operator*(const ::UnityEngine::Color& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Color& lhs, const ::UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Color.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Color& lhs, const ::UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 rgba
int& UnityEngine::Color32::dyn_rgba() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_rgba");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rgba"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte r
uint8_t& UnityEngine::Color32::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_r");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte g
uint8_t& UnityEngine::Color32::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte b
uint8_t& UnityEngine::Color32::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte a
uint8_t& UnityEngine::Color32::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Color32..ctor
// ABORTED elsewhere.  UnityEngine::Color32::Color32(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
// Autogenerated method: UnityEngine.Color32.Lerp
::UnityEngine::Color32 UnityEngine::Color32::Lerp(::UnityEngine::Color32 a, ::UnityEngine::Color32 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color32", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color32.ToString
::StringW UnityEngine::Color32::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Color32.ToString
::StringW UnityEngine::Color32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ColorUtility
#include "UnityEngine/ColorUtility.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ColorUtility.DoTryParseHtmlColor
bool UnityEngine::ColorUtility::DoTryParseHtmlColor(::StringW htmlString, ByRef<::UnityEngine::Color32> color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUtility::DoTryParseHtmlColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ColorUtility", "DoTryParseHtmlColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(htmlString), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color32&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, htmlString, byref(color));
}
// Autogenerated method: UnityEngine.ColorUtility.TryParseHtmlString
bool UnityEngine::ColorUtility::TryParseHtmlString(::StringW htmlString, ByRef<::UnityEngine::Color> color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUtility::TryParseHtmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ColorUtility", "TryParseHtmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(htmlString), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, htmlString, byref(color));
}
// Autogenerated method: UnityEngine.ColorUtility.ToHtmlStringRGB
::StringW UnityEngine::ColorUtility::ToHtmlStringRGB(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUtility::ToHtmlStringRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ColorUtility", "ToHtmlStringRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GradientColorKey
#include "UnityEngine/GradientColorKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
::UnityEngine::Color& UnityEngine::GradientColorKey::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientColorKey::dyn_color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& UnityEngine::GradientColorKey::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientColorKey::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.GradientColorKey..ctor
// ABORTED elsewhere.  UnityEngine::GradientColorKey::GradientColorKey(::UnityEngine::Color col, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GradientAlphaKey
#include "UnityEngine/GradientAlphaKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single alpha
float& UnityEngine::GradientAlphaKey::dyn_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientAlphaKey::dyn_alpha");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& UnityEngine::GradientAlphaKey::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientAlphaKey::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.GradientAlphaKey..ctor
// ABORTED elsewhere.  UnityEngine::GradientAlphaKey::GradientAlphaKey(float alpha, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::Gradient::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Gradient.get_colorKeys
::ArrayW<::UnityEngine::GradientColorKey> UnityEngine::Gradient::get_colorKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::get_colorKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GradientColorKey>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.set_colorKeys
void UnityEngine::Gradient::set_colorKeys(::ArrayW<::UnityEngine::GradientColorKey> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::set_colorKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gradient.get_alphaKeys
::ArrayW<::UnityEngine::GradientAlphaKey> UnityEngine::Gradient::get_alphaKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::get_alphaKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphaKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GradientAlphaKey>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.set_alphaKeys
void UnityEngine::Gradient::set_alphaKeys(::ArrayW<::UnityEngine::GradientAlphaKey> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::set_alphaKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alphaKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gradient.Init
::System::IntPtr UnityEngine::Gradient::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gradient", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Cleanup
void UnityEngine::Gradient::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Internal_Equals
bool UnityEngine::Gradient::Internal_Equals(::System::IntPtr other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Internal_Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Gradient.Evaluate
::UnityEngine::Color UnityEngine::Gradient::Evaluate(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Gradient.SetKeys
void UnityEngine::Gradient::SetKeys(::ArrayW<::UnityEngine::GradientColorKey> colorKeys, ::ArrayW<::UnityEngine::GradientAlphaKey> alphaKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::SetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorKeys), ::il2cpp_utils::ExtractType(alphaKeys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorKeys, alphaKeys);
}
// Autogenerated method: UnityEngine.Gradient.Equals
bool UnityEngine::Gradient::Equals(::UnityEngine::Gradient* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Gradient.Evaluate_Injected
void UnityEngine::Gradient::Evaluate_Injected(float time, ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Evaluate_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, byref(ret));
}
// Autogenerated method: UnityEngine.Gradient.Finalize
void UnityEngine::Gradient::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Equals
bool UnityEngine::Gradient::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.Gradient.GetHashCode
int UnityEngine::Gradient::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Matrix4x4 zeroMatrix
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::_get_zeroMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_get_zeroMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Matrix4x4>("UnityEngine", "Matrix4x4", "zeroMatrix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Matrix4x4 zeroMatrix
void UnityEngine::Matrix4x4::_set_zeroMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_set_zeroMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Matrix4x4", "zeroMatrix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Matrix4x4 identityMatrix
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::_get_identityMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_get_identityMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Matrix4x4>("UnityEngine", "Matrix4x4", "identityMatrix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Matrix4x4 identityMatrix
void UnityEngine::Matrix4x4::_set_identityMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_set_identityMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Matrix4x4", "identityMatrix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single m00
float& UnityEngine::Matrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
float& UnityEngine::Matrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
float& UnityEngine::Matrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
float& UnityEngine::Matrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
float& UnityEngine::Matrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
float& UnityEngine::Matrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
float& UnityEngine::Matrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
float& UnityEngine::Matrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
float& UnityEngine::Matrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
float& UnityEngine::Matrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
float& UnityEngine::Matrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
float& UnityEngine::Matrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
float& UnityEngine::Matrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
float& UnityEngine::Matrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
float& UnityEngine::Matrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
float& UnityEngine::Matrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_lossyScale
::UnityEngine::Vector3 UnityEngine::Matrix4x4::get_lossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_lossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_transpose
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_transpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_transpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_transpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_Item
float UnityEngine::Matrix4x4::get_Item(int row, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, row, column);
}
// Autogenerated method: UnityEngine.Matrix4x4.set_Item
void UnityEngine::Matrix4x4::set_Item(int row, int column, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, column, value);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_Item
float UnityEngine::Matrix4x4::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Matrix4x4.set_Item
void UnityEngine::Matrix4x4::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_identity
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4..ctor
UnityEngine::Matrix4x4::Matrix4x4(::UnityEngine::Vector4 column0, ::UnityEngine::Vector4 column1, ::UnityEngine::Vector4 column2, ::UnityEngine::Vector4 column3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column0), ::il2cpp_utils::ExtractType(column1), ::il2cpp_utils::ExtractType(column2), ::il2cpp_utils::ExtractType(column3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column0, column1, column2, column3);
}
// Autogenerated method: UnityEngine.Matrix4x4..cctor
void UnityEngine::Matrix4x4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetLossyScale
::UnityEngine::Vector3 UnityEngine::Matrix4x4::GetLossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetLossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.TRS
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::TRS(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion q, ::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, q, s);
}
// Autogenerated method: UnityEngine.Matrix4x4.Transpose
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Transpose(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Transpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Transpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: UnityEngine.Matrix4x4.Perspective
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Perspective(float fov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fov, aspect, zNear, zFar);
}
// Autogenerated method: UnityEngine.Matrix4x4.Equals
bool UnityEngine::Matrix4x4::Equals(::UnityEngine::Matrix4x4 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetColumn
::UnityEngine::Vector4 UnityEngine::Matrix4x4::GetColumn(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Matrix4x4.SetColumn
void UnityEngine::Matrix4x4::SetColumn(int index, ::UnityEngine::Vector4 column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::SetColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, column);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyPoint
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyPoint3x4
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyPoint3x4(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyPoint3x4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyPoint3x4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyVector
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyVector(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Matrix4x4.Scale
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Scale(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Matrix4x4.ToString
::StringW UnityEngine::Matrix4x4::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetLossyScale_Injected
void UnityEngine::Matrix4x4::GetLossyScale_Injected(ByRef<::UnityEngine::Matrix4x4> _unity_self, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetLossyScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "GetLossyScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.TRS_Injected
void UnityEngine::Matrix4x4::TRS_Injected(ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> q, ByRef<::UnityEngine::Vector3> s, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::TRS_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "TRS_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pos), byref(q), byref(s), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Transpose_Injected
void UnityEngine::Matrix4x4::Transpose_Injected(ByRef<::UnityEngine::Matrix4x4> m, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Transpose_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Transpose_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(m), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Perspective_Injected
void UnityEngine::Matrix4x4::Perspective_Injected(float fov, float aspect, float zNear, float zFar, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Perspective_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Perspective_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fov, aspect, zNear, zFar, byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.GetHashCode
int UnityEngine::Matrix4x4::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.Equals
bool UnityEngine::Matrix4x4::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Matrix4x4.ToString
::StringW UnityEngine::Matrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Multiply
::UnityEngine::Matrix4x4 UnityEngine::operator*(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Matrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Multiply
::UnityEngine::Vector4 UnityEngine::operator*(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Vector4& vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, vector);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector3::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector3", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector3::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilonNormalSqrt
float UnityEngine::Vector3::_get_kEpsilonNormalSqrt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_kEpsilonNormalSqrt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector3", "kEpsilonNormalSqrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilonNormalSqrt
void UnityEngine::Vector3::_set_kEpsilonNormalSqrt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_kEpsilonNormalSqrt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "kEpsilonNormalSqrt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 zeroVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 zeroVector
void UnityEngine::Vector3::_set_zeroVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 oneVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 oneVector
void UnityEngine::Vector3::_set_oneVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 upVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_upVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_upVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "upVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 upVector
void UnityEngine::Vector3::_set_upVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_upVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "upVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 downVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_downVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_downVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "downVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 downVector
void UnityEngine::Vector3::_set_downVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_downVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "downVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 leftVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_leftVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_leftVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "leftVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 leftVector
void UnityEngine::Vector3::_set_leftVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_leftVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "leftVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 rightVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_rightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_rightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "rightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 rightVector
void UnityEngine::Vector3::_set_rightVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_rightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "rightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 forwardVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_forwardVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_forwardVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "forwardVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 forwardVector
void UnityEngine::Vector3::_set_forwardVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_forwardVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "forwardVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 backVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_backVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_backVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "backVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 backVector
void UnityEngine::Vector3::_set_backVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_backVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "backVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 positiveInfinityVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 positiveInfinityVector
void UnityEngine::Vector3::_set_positiveInfinityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 negativeInfinityVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 negativeInfinityVector
void UnityEngine::Vector3::_set_negativeInfinityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "negativeInfinityVector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& UnityEngine::Vector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& UnityEngine::Vector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& UnityEngine::Vector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector3.get_Item
float UnityEngine::Vector3::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector3.set_Item
void UnityEngine::Vector3::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector3.get_normalized
::UnityEngine::Vector3 UnityEngine::Vector3::get_normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_normalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_magnitude
float UnityEngine::Vector3::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_sqrMagnitude
float UnityEngine::Vector3::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_zero
::UnityEngine::Vector3 UnityEngine::Vector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_one
::UnityEngine::Vector3 UnityEngine::Vector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_forward
::UnityEngine::Vector3 UnityEngine::Vector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_back
::UnityEngine::Vector3 UnityEngine::Vector3::get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_up
::UnityEngine::Vector3 UnityEngine::Vector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_down
::UnityEngine::Vector3 UnityEngine::Vector3::get_down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_down");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_down", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_left
::UnityEngine::Vector3 UnityEngine::Vector3::get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_right
::UnityEngine::Vector3 UnityEngine::Vector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3..ctor
// ABORTED elsewhere.  UnityEngine::Vector3::Vector3(float x, float y, float z)
// Autogenerated method: UnityEngine.Vector3..ctor
UnityEngine::Vector3::Vector3(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.Vector3..cctor
void UnityEngine::Vector3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Lerp
::UnityEngine::Vector3 UnityEngine::Vector3::Lerp(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector3.LerpUnclamped
::UnityEngine::Vector3 UnityEngine::Vector3::LerpUnclamped(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector3.SmoothDamp
::UnityEngine::Vector3 UnityEngine::Vector3::SmoothDamp(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, ByRef<::UnityEngine::Vector3> currentVelocity, float smoothTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime);
}
// Autogenerated method: UnityEngine.Vector3.SmoothDamp
::UnityEngine::Vector3 UnityEngine::Vector3::SmoothDamp(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, ByRef<::UnityEngine::Vector3> currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime, maxSpeed, deltaTime);
}
// Autogenerated method: UnityEngine.Vector3.Scale
::UnityEngine::Vector3 UnityEngine::Vector3::Scale(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.Scale
void UnityEngine::Vector3::Scale(::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: UnityEngine.Vector3.Cross
::UnityEngine::Vector3 UnityEngine::Vector3::Cross(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Cross");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Cross", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Equals
bool UnityEngine::Vector3::Equals(::UnityEngine::Vector3 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3.Normalize
::UnityEngine::Vector3 UnityEngine::Vector3::Normalize(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector3.Normalize
void UnityEngine::Vector3::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Dot
float UnityEngine::Vector3::Dot(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Project
::UnityEngine::Vector3 UnityEngine::Vector3::Project(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 onNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Project");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Project", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(onNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, onNormal);
}
// Autogenerated method: UnityEngine.Vector3.Angle
float UnityEngine::Vector3::Angle(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Vector3.SignedAngle
float UnityEngine::Vector3::SignedAngle(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, ::UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SignedAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SignedAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to, axis);
}
// Autogenerated method: UnityEngine.Vector3.Distance
float UnityEngine::Vector3::Distance(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.ClampMagnitude
::UnityEngine::Vector3 UnityEngine::Vector3::ClampMagnitude(::UnityEngine::Vector3 vector, float maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ClampMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "ClampMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, maxLength);
}
// Autogenerated method: UnityEngine.Vector3.Magnitude
float UnityEngine::Vector3::Magnitude(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Vector3.Min
::UnityEngine::Vector3 UnityEngine::Vector3::Min(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Max
::UnityEngine::Vector3 UnityEngine::Vector3::Max(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.ToString
::StringW UnityEngine::Vector3::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Vector3.GetHashCode
int UnityEngine::Vector3::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Equals
bool UnityEngine::Vector3::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3.ToString
::StringW UnityEngine::Vector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.op_Addition
::UnityEngine::Vector3 UnityEngine::operator+(const ::UnityEngine::Vector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.op_Subtraction
::UnityEngine::Vector3 UnityEngine::operator-(const ::UnityEngine::Vector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.op_UnaryNegation
::UnityEngine::Vector3 UnityEngine::operator-(const ::UnityEngine::Vector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: UnityEngine.Vector3.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const ::UnityEngine::Vector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector3.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const float& d, const ::UnityEngine::Vector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, a);
}
// Autogenerated method: UnityEngine.Vector3.op_Division
::UnityEngine::Vector3 UnityEngine::operator/(const ::UnityEngine::Vector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector3.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion identityQuaternion
::UnityEngine::Quaternion UnityEngine::Quaternion::_get_identityQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_get_identityQuaternion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("UnityEngine", "Quaternion", "identityQuaternion"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion identityQuaternion
void UnityEngine::Quaternion::_set_identityQuaternion(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_set_identityQuaternion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "identityQuaternion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Quaternion::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Quaternion", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Quaternion::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "kEpsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& UnityEngine::Quaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& UnityEngine::Quaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& UnityEngine::Quaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& UnityEngine::Quaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Quaternion.get_identity
::UnityEngine::Quaternion UnityEngine::Quaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.get_eulerAngles
::UnityEngine::Vector3 UnityEngine::Quaternion::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.set_eulerAngles
void UnityEngine::Quaternion::set_eulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Quaternion..ctor
// ABORTED elsewhere.  UnityEngine::Quaternion::Quaternion(float x, float y, float z, float w)
// Autogenerated method: UnityEngine.Quaternion..cctor
void UnityEngine::Quaternion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::FromToRotation(::UnityEngine::Vector3 fromDirection, ::UnityEngine::Vector3 toDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::FromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromDirection, toDirection);
}
// Autogenerated method: UnityEngine.Quaternion.Inverse
::UnityEngine::Quaternion UnityEngine::Quaternion::Inverse(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.Slerp
::UnityEngine::Quaternion UnityEngine::Quaternion::Slerp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped
::UnityEngine::Quaternion UnityEngine::Quaternion::SlerpUnclamped(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SlerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Lerp
::UnityEngine::Quaternion UnityEngine::Quaternion::Lerp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad
::UnityEngine::Quaternion UnityEngine::Quaternion::Internal_FromEulerRad(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_FromEulerRad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad
::UnityEngine::Vector3 UnityEngine::Quaternion::Internal_ToEulerRad(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToEulerRad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis
::UnityEngine::Quaternion UnityEngine::Quaternion::AngleAxis(float angle, ::UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::AngleAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, axis);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(::UnityEngine::Vector3 forward, ::UnityEngine::Vector3 upwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(upwards)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, forward, upwards);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(::UnityEngine::Vector3 forward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, forward);
}
// Autogenerated method: UnityEngine.Quaternion.IsEqualUsingDot
bool UnityEngine::Quaternion::IsEqualUsingDot(float dot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::IsEqualUsingDot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "IsEqualUsingDot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dot)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dot);
}
// Autogenerated method: UnityEngine.Quaternion.Dot
float UnityEngine::Quaternion::Dot(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(::UnityEngine::Vector3 view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(::UnityEngine::Vector3 view, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(up)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, up);
}
// Autogenerated method: UnityEngine.Quaternion.Angle
float UnityEngine::Quaternion::Angle(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_MakePositive
::UnityEngine::Vector3 UnityEngine::Quaternion::Internal_MakePositive(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_MakePositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_MakePositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
::UnityEngine::Quaternion UnityEngine::Quaternion::Euler(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
::UnityEngine::Quaternion UnityEngine::Quaternion::Euler(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(::UnityEngine::Quaternion other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.ToString
::StringW UnityEngine::Quaternion::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation_Injected
void UnityEngine::Quaternion::FromToRotation_Injected(ByRef<::UnityEngine::Vector3> fromDirection, ByRef<::UnityEngine::Vector3> toDirection, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::FromToRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(fromDirection), byref(toDirection), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Inverse_Injected
void UnityEngine::Quaternion::Inverse_Injected(ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Inverse_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rotation), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Slerp_Injected
void UnityEngine::Quaternion::Slerp_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Slerp_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped_Injected
void UnityEngine::Quaternion::SlerpUnclamped_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SlerpUnclamped_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Lerp_Injected
void UnityEngine::Quaternion::Lerp_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Lerp_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad_Injected
void UnityEngine::Quaternion::Internal_FromEulerRad_Injected(ByRef<::UnityEngine::Vector3> euler, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_FromEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(euler), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad_Injected
void UnityEngine::Quaternion::Internal_ToEulerRad_Injected(ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rotation), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis_Injected
void UnityEngine::Quaternion::AngleAxis_Injected(float angle, ByRef<::UnityEngine::Vector3> axis, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::AngleAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, byref(axis), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation_Injected
void UnityEngine::Quaternion::LookRotation_Injected(ByRef<::UnityEngine::Vector3> forward, ByRef<::UnityEngine::Vector3> upwards, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(upwards), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(forward), byref(upwards), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.GetHashCode
int UnityEngine::Quaternion::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.ToString
::StringW UnityEngine::Quaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
::UnityEngine::Quaternion UnityEngine::operator*(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const ::UnityEngine::Quaternion& rotation, const ::UnityEngine::Vector3& point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation, point);
}
// Autogenerated method: UnityEngine.Quaternion.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Mathf
#include "UnityEngine/Mathf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single Epsilon
float UnityEngine::Mathf::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Mathf", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Epsilon
void UnityEngine::Mathf::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Mathf", "Epsilon", value));
}
// Autogenerated method: UnityEngine.Mathf..cctor
void UnityEngine::Mathf::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Mathf.NextPowerOfTwo
int UnityEngine::Mathf::NextPowerOfTwo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::NextPowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "NextPowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.GammaToLinearSpace
float UnityEngine::Mathf::GammaToLinearSpace(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::GammaToLinearSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "GammaToLinearSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Sin
float UnityEngine::Mathf::Sin(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Cos
float UnityEngine::Mathf::Cos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Cos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Cos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Tan
float UnityEngine::Mathf::Tan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Tan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Tan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Acos
float UnityEngine::Mathf::Acos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Acos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Acos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan
float UnityEngine::Mathf::Atan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Atan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan2
float UnityEngine::Mathf::Atan2(float y, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Atan2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, y, x);
}
// Autogenerated method: UnityEngine.Mathf.Sqrt
float UnityEngine::Mathf::Sqrt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sqrt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sqrt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
float UnityEngine::Mathf::Abs(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
int UnityEngine::Mathf::Abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Min
float UnityEngine::Mathf::Min(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Min
int UnityEngine::Mathf::Min(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: UnityEngine.Mathf.Max
int UnityEngine::Mathf::Max(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Pow
float UnityEngine::Mathf::Pow(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log10
float UnityEngine::Mathf::Log10(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Log10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Ceil
float UnityEngine::Mathf::Ceil(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Ceil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Ceil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Floor
float UnityEngine::Mathf::Floor(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Round
float UnityEngine::Mathf::Round(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.CeilToInt
int UnityEngine::Mathf::CeilToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::CeilToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "CeilToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.FloorToInt
int UnityEngine::Mathf::FloorToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::FloorToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "FloorToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.RoundToInt
int UnityEngine::Mathf::RoundToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::RoundToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "RoundToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Sign
float UnityEngine::Mathf::Sign(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
float UnityEngine::Mathf::Clamp(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
int UnityEngine::Mathf::Clamp(int value, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp01
float UnityEngine::Mathf::Clamp01(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp01");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp01", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Lerp
float UnityEngine::Mathf::Lerp(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.LerpUnclamped
float UnityEngine::Mathf::LerpUnclamped(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.SmoothStep
float UnityEngine::Mathf::SmoothStep(float from, float to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::SmoothStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to, t);
}
// Autogenerated method: UnityEngine.Mathf.Approximately
bool UnityEngine::Mathf::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, ByRef<float> currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime, maxSpeed, deltaTime);
}
// Autogenerated method: UnityEngine.Mathf.Repeat
float UnityEngine::Mathf::Repeat(float t, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Repeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Repeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, length);
}
// Autogenerated method: UnityEngine.Mathf.PingPong
float UnityEngine::Mathf::PingPong(float t, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::PingPong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "PingPong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, length);
}
// Autogenerated method: UnityEngine.Mathf.InverseLerp
float UnityEngine::Mathf::InverseLerp(float a, float b, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::InverseLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "InverseLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 zeroVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 zeroVector
void UnityEngine::Vector2::_set_zeroVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 oneVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 oneVector
void UnityEngine::Vector2::_set_oneVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 upVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_upVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_upVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "upVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 upVector
void UnityEngine::Vector2::_set_upVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_upVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "upVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 downVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_downVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_downVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "downVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 downVector
void UnityEngine::Vector2::_set_downVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_downVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "downVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 leftVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_leftVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_leftVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "leftVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 leftVector
void UnityEngine::Vector2::_set_leftVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_leftVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "leftVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 rightVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_rightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_rightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "rightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 rightVector
void UnityEngine::Vector2::_set_rightVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_rightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "rightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
void UnityEngine::Vector2::_set_positiveInfinityVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
void UnityEngine::Vector2::_set_negativeInfinityVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "negativeInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector2::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector2::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilonNormalSqrt
float UnityEngine::Vector2::_get_kEpsilonNormalSqrt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_kEpsilonNormalSqrt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilonNormalSqrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilonNormalSqrt
void UnityEngine::Vector2::_set_kEpsilonNormalSqrt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_kEpsilonNormalSqrt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilonNormalSqrt", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& UnityEngine::Vector2::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& UnityEngine::Vector2::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector2.get_Item
float UnityEngine::Vector2::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector2.set_Item
void UnityEngine::Vector2::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector2.get_normalized
::UnityEngine::Vector2 UnityEngine::Vector2::get_normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_normalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_magnitude
float UnityEngine::Vector2::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_sqrMagnitude
float UnityEngine::Vector2::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_zero
::UnityEngine::Vector2 UnityEngine::Vector2::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_one
::UnityEngine::Vector2 UnityEngine::Vector2::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_up
::UnityEngine::Vector2 UnityEngine::Vector2::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_right
::UnityEngine::Vector2 UnityEngine::Vector2::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_negativeInfinity
::UnityEngine::Vector2 UnityEngine::Vector2::get_negativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_negativeInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_negativeInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2..ctor
// ABORTED elsewhere.  UnityEngine::Vector2::Vector2(float x, float y)
// Autogenerated method: UnityEngine.Vector2..cctor
void UnityEngine::Vector2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.Lerp
::UnityEngine::Vector2 UnityEngine::Vector2::Lerp(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector2.Scale
::UnityEngine::Vector2 UnityEngine::Vector2::Scale(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.Normalize
void UnityEngine::Vector2::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.ToString
::StringW UnityEngine::Vector2::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(::UnityEngine::Vector2 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2.Dot
float UnityEngine::Vector2::Dot(::UnityEngine::Vector2 lhs, ::UnityEngine::Vector2 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector2.Angle
float UnityEngine::Vector2::Angle(::UnityEngine::Vector2 from, ::UnityEngine::Vector2 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Vector2.ToString
::StringW UnityEngine::Vector2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.GetHashCode
int UnityEngine::Vector2::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2.op_Addition
::UnityEngine::Vector2 UnityEngine::operator+(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Subtraction
::UnityEngine::Vector2 UnityEngine::operator-(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Division
::UnityEngine::Vector2 UnityEngine::operator/(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const ::UnityEngine::Vector2& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const float& d, const ::UnityEngine::Vector2& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, a);
}
// Autogenerated method: UnityEngine.Vector2.op_Division
::UnityEngine::Vector2 UnityEngine::operator/(const ::UnityEngine::Vector2& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector2.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector2& lhs, const ::UnityEngine::Vector2& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector2.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector2& lhs, const ::UnityEngine::Vector2& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2Int
#include "UnityEngine/Vector2Int.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Zero
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Zero
void UnityEngine::Vector2Int::_set_s_Zero(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Zero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_One
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_One"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_One
void UnityEngine::Vector2Int::_set_s_One(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_One", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Up
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Up"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Up
void UnityEngine::Vector2Int::_set_s_Up(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Up", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Down
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Down"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Down
void UnityEngine::Vector2Int::_set_s_Down(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Down", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Left
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Left"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Left
void UnityEngine::Vector2Int::_set_s_Left(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Left", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Right
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Right"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Right
void UnityEngine::Vector2Int::_set_s_Right(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Right", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_X
int& UnityEngine::Vector2Int::dyn_m_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::dyn_m_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_X"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Y
int& UnityEngine::Vector2Int::dyn_m_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::dyn_m_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector2Int.get_x
int UnityEngine::Vector2Int::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.set_x
void UnityEngine::Vector2Int::set_x(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector2Int.get_y
int UnityEngine::Vector2Int::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.set_y
void UnityEngine::Vector2Int::set_y(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector2Int..ctor
// ABORTED elsewhere.  UnityEngine::Vector2Int::Vector2Int(int x, int y)
// Autogenerated method: UnityEngine.Vector2Int..cctor
void UnityEngine::Vector2Int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2Int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.Equals
bool UnityEngine::Vector2Int::Equals(::UnityEngine::Vector2Int other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2Int.ToString
::StringW UnityEngine::Vector2Int::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Vector2Int.Equals
bool UnityEngine::Vector2Int::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2Int.GetHashCode
int UnityEngine::Vector2Int::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.ToString
::StringW UnityEngine::Vector2Int::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector4::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector4", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector4::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 zeroVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 zeroVector
void UnityEngine::Vector4::_set_zeroVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 oneVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 oneVector
void UnityEngine::Vector4::_set_oneVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 positiveInfinityVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 positiveInfinityVector
void UnityEngine::Vector4::_set_positiveInfinityVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 negativeInfinityVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 negativeInfinityVector
void UnityEngine::Vector4::_set_negativeInfinityVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "negativeInfinityVector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& UnityEngine::Vector4::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& UnityEngine::Vector4::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
float& UnityEngine::Vector4::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
float& UnityEngine::Vector4::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector4.get_Item
float UnityEngine::Vector4::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector4.set_Item
void UnityEngine::Vector4::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector4.get_magnitude
float UnityEngine::Vector4::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_sqrMagnitude
float UnityEngine::Vector4::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_zero
::UnityEngine::Vector4 UnityEngine::Vector4::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_one
::UnityEngine::Vector4 UnityEngine::Vector4::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4..ctor
// ABORTED elsewhere.  UnityEngine::Vector4::Vector4(float x, float y, float z, float w)
// Autogenerated method: UnityEngine.Vector4..ctor
UnityEngine::Vector4::Vector4(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Vector4..cctor
void UnityEngine::Vector4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.Lerp
::UnityEngine::Vector4 UnityEngine::Vector4::Lerp(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector4.LerpUnclamped
::UnityEngine::Vector4 UnityEngine::Vector4::LerpUnclamped(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector4.Scale
void UnityEngine::Vector4::Scale(::UnityEngine::Vector4 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: UnityEngine.Vector4.Equals
bool UnityEngine::Vector4::Equals(::UnityEngine::Vector4 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector4.Dot
float UnityEngine::Vector4::Dot(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.ToString
::StringW UnityEngine::Vector4::ToString(::StringW format, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, formatProvider);
}
// Autogenerated method: UnityEngine.Vector4.GetHashCode
int UnityEngine::Vector4::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.Equals
bool UnityEngine::Vector4::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector4.ToString
::StringW UnityEngine::Vector4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.op_Addition
::UnityEngine::Vector4 UnityEngine::operator+(const ::UnityEngine::Vector4& a, const ::UnityEngine::Vector4& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.op_Subtraction
::UnityEngine::Vector4 UnityEngine::operator-(const ::UnityEngine::Vector4& a, const ::UnityEngine::Vector4& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.op_Multiply
::UnityEngine::Vector4 UnityEngine::operator*(const ::UnityEngine::Vector4& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector4.op_Division
::UnityEngine::Vector4 UnityEngine::operator/(const ::UnityEngine::Vector4& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector4.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector4& lhs, const ::UnityEngine::Vector4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector4.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector4& lhs, const ::UnityEngine::Vector4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IPlayerEditorConnectionNative
#include "UnityEngine/IPlayerEditorConnectionNative.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.Initialize
void UnityEngine::IPlayerEditorConnectionNative::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.DisconnectAll
void UnityEngine::IPlayerEditorConnectionNative::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.SendMessage
void UnityEngine::IPlayerEditorConnectionNative::SendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::SendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.TrySendMessage
bool UnityEngine::IPlayerEditorConnectionNative::TrySendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::TrySendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.Poll
void UnityEngine::IPlayerEditorConnectionNative::Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::Poll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.RegisterInternal
void UnityEngine::IPlayerEditorConnectionNative::RegisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::RegisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal
void UnityEngine::IPlayerEditorConnectionNative::UnregisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::UnregisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.IsConnected
bool UnityEngine::IPlayerEditorConnectionNative::IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::IsConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerConnectionInternal
#include "UnityEngine/PlayerConnectionInternal.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.SendMessage
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_SendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.SendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.TrySendMessage
bool UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_TrySendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.TrySendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.Poll
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.Poll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.RegisterInternal
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_RegisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.RegisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_UnregisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.Initialize
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.IsConnected
bool UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.IsConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.DisconnectAll
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.IsConnected
bool UnityEngine::PlayerConnectionInternal::IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.Initialize
void UnityEngine::PlayerConnectionInternal::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.RegisterInternal
void UnityEngine::PlayerConnectionInternal::RegisterInternal(::StringW messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::RegisterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnregisterInternal
void UnityEngine::PlayerConnectionInternal::UnregisterInternal(::StringW messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnregisterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.SendMessage
void UnityEngine::PlayerConnectionInternal::SendMessage(::StringW messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.TrySendMessage
bool UnityEngine::PlayerConnectionInternal::TrySendMessage(::StringW messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::TrySendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.PollInternal
void UnityEngine::PlayerConnectionInternal::PollInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::PollInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "PollInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.DisconnectAll
void UnityEngine::PlayerConnectionInternal::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::DisconnectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerPrefsException
#include "UnityEngine/PlayerPrefsException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerPrefs
#include "UnityEngine/PlayerPrefs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PlayerPrefs.TrySetInt
bool UnityEngine::PlayerPrefs::TrySetInt(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::TrySetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "TrySetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.TrySetFloat
bool UnityEngine::PlayerPrefs::TrySetFloat(::StringW key, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::TrySetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "TrySetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.TrySetSetString
bool UnityEngine::PlayerPrefs::TrySetSetString(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::TrySetSetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "TrySetSetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.SetInt
void UnityEngine::PlayerPrefs::SetInt(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetInt
int UnityEngine::PlayerPrefs::GetInt(::StringW key, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetInt
int UnityEngine::PlayerPrefs::GetInt(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.SetFloat
void UnityEngine::PlayerPrefs::SetFloat(::StringW key, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetFloat
float UnityEngine::PlayerPrefs::GetFloat(::StringW key, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetFloat
float UnityEngine::PlayerPrefs::GetFloat(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.SetString
void UnityEngine::PlayerPrefs::SetString(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetString
::StringW UnityEngine::PlayerPrefs::GetString(::StringW key, ::StringW defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetString
::StringW UnityEngine::PlayerPrefs::GetString(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.HasKey
bool UnityEngine::PlayerPrefs::HasKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::HasKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "HasKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.DeleteKey
void UnityEngine::PlayerPrefs::DeleteKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::DeleteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "DeleteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TooltipAttribute
#include "UnityEngine/TooltipAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String tooltip
::StringW& UnityEngine::TooltipAttribute::dyn_tooltip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TooltipAttribute::dyn_tooltip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tooltip"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpaceAttribute
#include "UnityEngine/SpaceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single height
float& UnityEngine::SpaceAttribute::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpaceAttribute::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HeaderAttribute
#include "UnityEngine/HeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
::StringW& UnityEngine::HeaderAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HeaderAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RangeAttribute
#include "UnityEngine/RangeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single min
float& UnityEngine::RangeAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single max
float& UnityEngine::RangeAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MultilineAttribute
#include "UnityEngine/MultilineAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 lines
int& UnityEngine::MultilineAttribute::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MultilineAttribute::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAreaAttribute
#include "UnityEngine/TextAreaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minLines
int& UnityEngine::TextAreaAttribute::dyn_minLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAreaAttribute::dyn_minLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxLines
int& UnityEngine::TextAreaAttribute::dyn_maxLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAreaAttribute::dyn_maxLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ColorUsageAttribute
#include "UnityEngine/ColorUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showAlpha
bool& UnityEngine::ColorUsageAttribute::dyn_showAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_showAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hdr
bool& UnityEngine::ColorUsageAttribute::dyn_hdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_hdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hdr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single minBrightness
float& UnityEngine::ColorUsageAttribute::dyn_minBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_minBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxBrightness
float& UnityEngine::ColorUsageAttribute::dyn_maxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_maxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single minExposureValue
float& UnityEngine::ColorUsageAttribute::dyn_minExposureValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_minExposureValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minExposureValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxExposureValue
float& UnityEngine::ColorUsageAttribute::dyn_maxExposureValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_maxExposureValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxExposureValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GradientUsageAttribute
#include "UnityEngine/GradientUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hdr
bool& UnityEngine::GradientUsageAttribute::dyn_hdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientUsageAttribute::dyn_hdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hdr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.ColorSpace colorSpace
::UnityEngine::ColorSpace& UnityEngine::GradientUsageAttribute::dyn_colorSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientUsageAttribute::dyn_colorSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSpace"))->offset;
  return *reinterpret_cast<::UnityEngine::ColorSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PropertyNameUtils
#include "UnityEngine/PropertyNameUtils.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PropertyNameUtils.PropertyNameFromString
::UnityEngine::PropertyName UnityEngine::PropertyNameUtils::PropertyNameFromString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyNameUtils::PropertyNameFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyNameUtils", "PropertyNameFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PropertyName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.PropertyNameUtils.PropertyNameFromString_Injected
void UnityEngine::PropertyNameUtils::PropertyNameFromString_Injected(::StringW name, ByRef<::UnityEngine::PropertyName> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyNameUtils::PropertyNameFromString_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyNameUtils", "PropertyNameFromString_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::PropertyName&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 id
int& UnityEngine::PropertyName::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PropertyName..ctor
UnityEngine::PropertyName::PropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.PropertyName..ctor
// ABORTED elsewhere.  UnityEngine::PropertyName::PropertyName(::UnityEngine::PropertyName other)
// Autogenerated method: UnityEngine.PropertyName.Equals
bool UnityEngine::PropertyName::Equals(::UnityEngine::PropertyName other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PropertyName.GetHashCode
int UnityEngine::PropertyName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PropertyName.Equals
bool UnityEngine::PropertyName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PropertyName.ToString
::StringW UnityEngine::PropertyName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PropertyName.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::PropertyName& lhs, const ::UnityEngine::PropertyName& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Random
#include "UnityEngine/Random.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Random.get_value
float UnityEngine::Random::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_insideUnitSphere
::UnityEngine::Vector3 UnityEngine::Random::get_insideUnitSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_insideUnitSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_insideUnitSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_insideUnitCircle
::UnityEngine::Vector2 UnityEngine::Random::get_insideUnitCircle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_insideUnitCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_insideUnitCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_onUnitSphere
::UnityEngine::Vector3 UnityEngine::Random::get_onUnitSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_onUnitSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_onUnitSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_rotation
::UnityEngine::Quaternion UnityEngine::Random::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_rotationUniform
::UnityEngine::Quaternion UnityEngine::Random::get_rotationUniform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotationUniform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotationUniform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.Range
float UnityEngine::Random::Range(float minInclusive, float maxInclusive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minInclusive), ::il2cpp_utils::ExtractType(maxInclusive)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minInclusive, maxInclusive);
}
// Autogenerated method: UnityEngine.Random.Range
int UnityEngine::Random::Range(int minInclusive, int maxExclusive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minInclusive), ::il2cpp_utils::ExtractType(maxExclusive)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minInclusive, maxExclusive);
}
// Autogenerated method: UnityEngine.Random.RandomRangeInt
int UnityEngine::Random::RandomRangeInt(int minInclusive, int maxExclusive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::RandomRangeInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "RandomRangeInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minInclusive), ::il2cpp_utils::ExtractType(maxExclusive)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, minInclusive, maxExclusive);
}
// Autogenerated method: UnityEngine.Random.GetRandomUnitCircle
void UnityEngine::Random::GetRandomUnitCircle(ByRef<::UnityEngine::Vector2> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::GetRandomUnitCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "GetRandomUnitCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(output));
}
// Autogenerated method: UnityEngine.Random.get_insideUnitSphere_Injected
void UnityEngine::Random::get_insideUnitSphere_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_insideUnitSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_insideUnitSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Random.get_onUnitSphere_Injected
void UnityEngine::Random::get_onUnitSphere_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_onUnitSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_onUnitSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Random.get_rotation_Injected
void UnityEngine::Random::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Random.get_rotationUniform_Injected
void UnityEngine::Random::get_rotationUniform_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotationUniform_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotationUniform_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourcesAPIInternal
#include "UnityEngine/ResourcesAPIInternal.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourcesAPIInternal.FindObjectsOfTypeAll
::ArrayW<::UnityEngine::Object*> UnityEngine::ResourcesAPIInternal::FindObjectsOfTypeAll(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPIInternal::FindObjectsOfTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPIInternal", "FindObjectsOfTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.ResourcesAPIInternal.FindShaderByName
::UnityEngine::Shader* UnityEngine::ResourcesAPIInternal::FindShaderByName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPIInternal::FindShaderByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPIInternal", "FindShaderByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.ResourcesAPIInternal.Load
::UnityEngine::Object* UnityEngine::ResourcesAPIInternal::Load(::StringW path, ::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPIInternal::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPIInternal", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, systemTypeInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourcesAPI
#include "UnityEngine/ResourcesAPI.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.ResourcesAPI s_DefaultAPI
::UnityEngine::ResourcesAPI* UnityEngine::ResourcesAPI::_get_s_DefaultAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::_get_s_DefaultAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::ResourcesAPI*>("UnityEngine", "ResourcesAPI", "s_DefaultAPI"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.ResourcesAPI s_DefaultAPI
void UnityEngine::ResourcesAPI::_set_s_DefaultAPI(::UnityEngine::ResourcesAPI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::_set_s_DefaultAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ResourcesAPI", "s_DefaultAPI", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56B1F0
// Autogenerated static field getter
// Get static field: static private UnityEngine.ResourcesAPI <overrideAPI>k__BackingField
::UnityEngine::ResourcesAPI* UnityEngine::ResourcesAPI::_get_$overrideAPI$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::_get_$overrideAPI$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::ResourcesAPI*>("UnityEngine", "ResourcesAPI", "<overrideAPI>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.ResourcesAPI <overrideAPI>k__BackingField
void UnityEngine::ResourcesAPI::_set_$overrideAPI$k__BackingField(::UnityEngine::ResourcesAPI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::_set_$overrideAPI$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "ResourcesAPI", "<overrideAPI>k__BackingField", value));
}
// Autogenerated method: UnityEngine.ResourcesAPI.get_ActiveAPI
::UnityEngine::ResourcesAPI* UnityEngine::ResourcesAPI::get_ActiveAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::get_ActiveAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPI", "get_ActiveAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourcesAPI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourcesAPI.get_overrideAPI
::UnityEngine::ResourcesAPI* UnityEngine::ResourcesAPI::get_overrideAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::get_overrideAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPI", "get_overrideAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourcesAPI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourcesAPI..cctor
void UnityEngine::ResourcesAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ResourcesAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourcesAPI.FindObjectsOfTypeAll
::ArrayW<::UnityEngine::Object*> UnityEngine::ResourcesAPI::FindObjectsOfTypeAll(::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::FindObjectsOfTypeAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindObjectsOfTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(this, ___internal__method, systemTypeInstance);
}
// Autogenerated method: UnityEngine.ResourcesAPI.FindShaderByName
::UnityEngine::Shader* UnityEngine::ResourcesAPI::FindShaderByName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::FindShaderByName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindShaderByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.ResourcesAPI.Load
::UnityEngine::Object* UnityEngine::ResourcesAPI::Load(::StringW path, ::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourcesAPI::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method, path, systemTypeInstance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Resources
#include "UnityEngine/Resources.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Resources.FindObjectsOfTypeAll
::ArrayW<::UnityEngine::Object*> UnityEngine::Resources::FindObjectsOfTypeAll(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::FindObjectsOfTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "FindObjectsOfTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Resources.Load
::UnityEngine::Object* UnityEngine::Resources::Load(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.Resources.Load
::UnityEngine::Object* UnityEngine::Resources::Load(::StringW path, ::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, systemTypeInstance);
}
// Autogenerated method: UnityEngine.Resources.GetBuiltinResource
::UnityEngine::Object* UnityEngine::Resources::GetBuiltinResource(::System::Type* type, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::GetBuiltinResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "GetBuiltinResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::AsyncOperation::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.AsyncOperation> m_completeCallback
::System::Action_1<::UnityEngine::AsyncOperation*>*& UnityEngine::AsyncOperation::dyn_m_completeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::dyn_m_completeCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completeCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::AsyncOperation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AsyncOperation.get_isDone
bool UnityEngine::AsyncOperation::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.get_progress
float UnityEngine::AsyncOperation::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.add_completed
void UnityEngine::AsyncOperation::add_completed(::System::Action_1<::UnityEngine::AsyncOperation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::add_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.remove_completed
void UnityEngine::AsyncOperation::remove_completed(::System::Action_1<::UnityEngine::AsyncOperation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::remove_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.InternalDestroy
void UnityEngine::AsyncOperation::InternalDestroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AsyncOperation", "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AsyncOperation.InvokeCompletionEvent
void UnityEngine::AsyncOperation::InvokeCompletionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::InvokeCompletionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.Finalize
void UnityEngine::AsyncOperation::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AttributeHelperEngine
#include "UnityEngine/AttributeHelperEngine.hpp"
// Including type: UnityEngine.DisallowMultipleComponent
#include "UnityEngine/DisallowMultipleComponent.hpp"
// Including type: UnityEngine.ExecuteInEditMode
#include "UnityEngine/ExecuteInEditMode.hpp"
// Including type: UnityEngine.RequireComponent
#include "UnityEngine/RequireComponent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisallowMultipleComponent[] _disallowMultipleComponentArray
::ArrayW<::UnityEngine::DisallowMultipleComponent*> UnityEngine::AttributeHelperEngine::_get__disallowMultipleComponentArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__disallowMultipleComponentArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::DisallowMultipleComponent*>>("UnityEngine", "AttributeHelperEngine", "_disallowMultipleComponentArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisallowMultipleComponent[] _disallowMultipleComponentArray
void UnityEngine::AttributeHelperEngine::_set__disallowMultipleComponentArray(::ArrayW<::UnityEngine::DisallowMultipleComponent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__disallowMultipleComponentArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_disallowMultipleComponentArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ExecuteInEditMode[] _executeInEditModeArray
::ArrayW<::UnityEngine::ExecuteInEditMode*> UnityEngine::AttributeHelperEngine::_get__executeInEditModeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__executeInEditModeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::ExecuteInEditMode*>>("UnityEngine", "AttributeHelperEngine", "_executeInEditModeArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ExecuteInEditMode[] _executeInEditModeArray
void UnityEngine::AttributeHelperEngine::_set__executeInEditModeArray(::ArrayW<::UnityEngine::ExecuteInEditMode*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__executeInEditModeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_executeInEditModeArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RequireComponent[] _requireComponentArray
::ArrayW<::UnityEngine::RequireComponent*> UnityEngine::AttributeHelperEngine::_get__requireComponentArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__requireComponentArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::RequireComponent*>>("UnityEngine", "AttributeHelperEngine", "_requireComponentArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RequireComponent[] _requireComponentArray
void UnityEngine::AttributeHelperEngine::_set__requireComponentArray(::ArrayW<::UnityEngine::RequireComponent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__requireComponentArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_requireComponentArray", value));
}
// Autogenerated method: UnityEngine.AttributeHelperEngine..cctor
void UnityEngine::AttributeHelperEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetParentTypeDisallowingMultipleInclusion
::System::Type* UnityEngine::AttributeHelperEngine::GetParentTypeDisallowingMultipleInclusion(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetParentTypeDisallowingMultipleInclusion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetParentTypeDisallowingMultipleInclusion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetRequiredComponents
::ArrayW<::System::Type*> UnityEngine::AttributeHelperEngine::GetRequiredComponents(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetRequiredComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetRequiredComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetExecuteMode
int UnityEngine::AttributeHelperEngine::GetExecuteMode(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetExecuteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetExecuteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.CheckIsEditorScript
int UnityEngine::AttributeHelperEngine::CheckIsEditorScript(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::CheckIsEditorScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "CheckIsEditorScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetDefaultExecutionOrderFor
int UnityEngine::AttributeHelperEngine::GetDefaultExecutionOrderFor(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetDefaultExecutionOrderFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetDefaultExecutionOrderFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DisallowMultipleComponent
#include "UnityEngine/DisallowMultipleComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RequireComponent
#include "UnityEngine/RequireComponent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type0
::System::Type*& UnityEngine::RequireComponent::dyn_m_Type0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type0"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type1
::System::Type*& UnityEngine::RequireComponent::dyn_m_Type1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type1"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type2
::System::Type*& UnityEngine::RequireComponent::dyn_m_Type2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type2"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddComponentMenu
#include "UnityEngine/AddComponentMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_AddComponentMenu
::StringW& UnityEngine::AddComponentMenu::dyn_m_AddComponentMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddComponentMenu::dyn_m_AddComponentMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AddComponentMenu"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Ordering
int& UnityEngine::AddComponentMenu::dyn_m_Ordering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddComponentMenu::dyn_m_Ordering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ordering"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CreateAssetMenuAttribute
#include "UnityEngine/CreateAssetMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <menuName>k__BackingField
::StringW& UnityEngine::CreateAssetMenuAttribute::dyn_$menuName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::dyn_$menuName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menuName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <fileName>k__BackingField
::StringW& UnityEngine::CreateAssetMenuAttribute::dyn_$fileName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::dyn_$fileName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fileName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <order>k__BackingField
int& UnityEngine::CreateAssetMenuAttribute::dyn_$order$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::dyn_$order$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CreateAssetMenuAttribute.set_menuName
void UnityEngine::CreateAssetMenuAttribute::set_menuName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::set_menuName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menuName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CreateAssetMenuAttribute.set_fileName
void UnityEngine::CreateAssetMenuAttribute::set_fileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::set_fileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CreateAssetMenuAttribute.set_order
void UnityEngine::CreateAssetMenuAttribute::set_order(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::set_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContextMenu
#include "UnityEngine/ContextMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String menuItem
::StringW& UnityEngine::ContextMenu::dyn_menuItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_menuItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuItem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean validate
bool& UnityEngine::ContextMenu::dyn_validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_validate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 priority
int& UnityEngine::ContextMenu::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExecuteInEditMode
#include "UnityEngine/ExecuteInEditMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExecuteAlways
#include "UnityEngine/ExecuteAlways.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HideInInspector
#include "UnityEngine/HideInInspector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HelpURLAttribute
#include "UnityEngine/HelpURLAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String m_Url
::StringW& UnityEngine::HelpURLAttribute::dyn_m_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HelpURLAttribute::dyn_m_Url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean m_Dispatcher
bool& UnityEngine::HelpURLAttribute::dyn_m_Dispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HelpURLAttribute::dyn_m_Dispatcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dispatcher"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String m_DispatchingFieldName
::StringW& UnityEngine::HelpURLAttribute::dyn_m_DispatchingFieldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HelpURLAttribute::dyn_m_DispatchingFieldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DispatchingFieldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DefaultExecutionOrder
#include "UnityEngine/DefaultExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Order
int& UnityEngine::DefaultExecutionOrder::dyn_m_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DefaultExecutionOrder::dyn_m_Order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.DefaultExecutionOrder.get_order
int UnityEngine::DefaultExecutionOrder::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DefaultExecutionOrder::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExcludeFromPresetAttribute
#include "UnityEngine/ExcludeFromPresetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Behaviour.get_enabled
bool UnityEngine::Behaviour::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Behaviour.set_enabled
void UnityEngine::Behaviour::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Behaviour.get_isActiveAndEnabled
bool UnityEngine::Behaviour::get_isActiveAndEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::get_isActiveAndEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActiveAndEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ClassLibraryInitializer
#include "UnityEngine/ClassLibraryInitializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ClassLibraryInitializer.Init
void UnityEngine::ClassLibraryInitializer::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ClassLibraryInitializer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ClassLibraryInitializer", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Component.get_transform
::UnityEngine::Transform* UnityEngine::Component::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.get_gameObject
::UnityEngine::GameObject* UnityEngine::Component::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.get_tag
::StringW UnityEngine::Component::get_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.set_tag
void UnityEngine::Component::set_tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::set_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Component.GetComponent
::UnityEngine::Component* UnityEngine::Component::GetComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Component.GetComponentFastPath
void UnityEngine::Component::GetComponentFastPath(::System::Type* type, ::System::IntPtr oneFurtherThanResultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentFastPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentFastPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(oneFurtherThanResultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, oneFurtherThanResultValue);
}
// Autogenerated method: UnityEngine.Component.GetComponent
::UnityEngine::Component* UnityEngine::Component::GetComponent(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Component.GetComponentInChildren
::UnityEngine::Component* UnityEngine::Component::GetComponentInChildren(::System::Type* t, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, t, includeInactive);
}
// Autogenerated method: UnityEngine.Component.GetComponentInParent
::UnityEngine::Component* UnityEngine::Component::GetComponentInParent(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, t);
}
// Autogenerated method: UnityEngine.Component.GetComponentsForListInternal
void UnityEngine::Component::GetComponentsForListInternal(::System::Type* searchType, ::Il2CppObject* resultList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentsForListInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsForListInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchType), ::il2cpp_utils::ExtractType(resultList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, searchType, resultList);
}
// Autogenerated method: UnityEngine.Component.GetComponents
void UnityEngine::Component::GetComponents(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::Component*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, results);
}
// Autogenerated method: UnityEngine.Component.CompareTag
bool UnityEngine::Component::CompareTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::CompareTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::Coroutine::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Coroutine.ReleaseCoroutine
void UnityEngine::Coroutine::ReleaseCoroutine(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::ReleaseCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Coroutine", "ReleaseCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Coroutine.Finalize
void UnityEngine::Coroutine::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SetupCoroutine
#include "UnityEngine/SetupCoroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SetupCoroutine.InvokeMoveNext
void UnityEngine::SetupCoroutine::InvokeMoveNext(::System::Collections::IEnumerator* enumerator, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SetupCoroutine::InvokeMoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SetupCoroutine", "InvokeMoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumerator, returnValueAddress);
}
// Autogenerated method: UnityEngine.SetupCoroutine.InvokeMember
::Il2CppObject* UnityEngine::SetupCoroutine::InvokeMember(::Il2CppObject* behaviour, ::StringW name, ::Il2CppObject* variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SetupCoroutine::InvokeMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SetupCoroutine", "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour, name, variable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CustomYieldInstruction
#include "UnityEngine/CustomYieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CustomYieldInstruction.get_keepWaiting
bool UnityEngine::CustomYieldInstruction::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.get_Current
::Il2CppObject* UnityEngine::CustomYieldInstruction::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.MoveNext
bool UnityEngine::CustomYieldInstruction::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.Reset
void UnityEngine::CustomYieldInstruction::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExcludeFromObjectFactoryAttribute
#include "UnityEngine/ExcludeFromObjectFactoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExtensionOfNativeClassAttribute
#include "UnityEngine/ExtensionOfNativeClassAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.PrimitiveType
#include "UnityEngine/PrimitiveType.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.SendMessageOptions
#include "UnityEngine/SendMessageOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GameObject.get_transform
::UnityEngine::Transform* UnityEngine::GameObject::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_layer
int UnityEngine::GameObject::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_layer
void UnityEngine::GameObject::set_layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_activeSelf
bool UnityEngine::GameObject::get_activeSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_activeSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_activeInHierarchy
bool UnityEngine::GameObject::get_activeInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_activeInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_tag
::StringW UnityEngine::GameObject::get_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_tag
void UnityEngine::GameObject::set_tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_scene
::UnityEngine::SceneManagement::Scene UnityEngine::GameObject::get_scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_scene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_gameObject
::UnityEngine::GameObject* UnityEngine::GameObject::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.CreatePrimitive
::UnityEngine::GameObject* UnityEngine::GameObject::CreatePrimitive(::UnityEngine::PrimitiveType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::CreatePrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "CreatePrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponent
::UnityEngine::Component* UnityEngine::GameObject::GetComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentFastPath
void UnityEngine::GameObject::GetComponentFastPath(::System::Type* type, ::System::IntPtr oneFurtherThanResultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentFastPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentFastPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(oneFurtherThanResultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, oneFurtherThanResultValue);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentByName
::UnityEngine::Component* UnityEngine::GameObject::GetComponentByName(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponent
::UnityEngine::Component* UnityEngine::GameObject::GetComponent(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInChildren
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInChildren(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInParent
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInParent(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInParent
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInParent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInternal
::System::Array* UnityEngine::GameObject::GetComponentsInternal(::System::Type* type, bool useSearchTypeAsArrayReturnType, bool recursive, bool includeInactive, bool reverse, ::Il2CppObject* resultList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(useSearchTypeAsArrayReturnType), ::il2cpp_utils::ExtractType(recursive), ::il2cpp_utils::ExtractType(includeInactive), ::il2cpp_utils::ExtractType(reverse), ::il2cpp_utils::ExtractType(resultList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type, useSearchTypeAsArrayReturnType, recursive, includeInactive, reverse, resultList);
}
// Autogenerated method: UnityEngine.GameObject.Internal_AddComponentWithType
::UnityEngine::Component* UnityEngine::GameObject::Internal_AddComponentWithType(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Internal_AddComponentWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_AddComponentWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, componentType);
}
// Autogenerated method: UnityEngine.GameObject.AddComponent
::UnityEngine::Component* UnityEngine::GameObject::AddComponent(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::AddComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, componentType);
}
// Autogenerated method: UnityEngine.GameObject.SetActive
void UnityEngine::GameObject::SetActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.CompareTag
bool UnityEngine::GameObject::CompareTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::CompareTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.FindGameObjectsWithTag
::ArrayW<::UnityEngine::GameObject*> UnityEngine::GameObject::FindGameObjectsWithTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::FindGameObjectsWithTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "FindGameObjectsWithTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.SendMessage
void UnityEngine::GameObject::SendMessage(::StringW methodName, ::Il2CppObject* value, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value, options);
}
// Autogenerated method: UnityEngine.GameObject.Internal_CreateGameObject
void UnityEngine::GameObject::Internal_CreateGameObject(::UnityEngine::GameObject* self, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Internal_CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "Internal_CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, name);
}
// Autogenerated method: UnityEngine.GameObject.Find
::UnityEngine::GameObject* UnityEngine::GameObject::Find(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.GameObject.get_scene_Injected
void UnityEngine::GameObject::get_scene_Injected(ByRef<::UnityEngine::SceneManagement::Scene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_scene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Mask
int& UnityEngine::LayerMask::dyn_m_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::dyn_m_Mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.LayerMask.get_value
int UnityEngine::LayerMask::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.LayerMask.NameToLayer
int UnityEngine::LayerMask::NameToLayer(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::NameToLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "LayerMask", "NameToLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.LayerMask.GetMask
int UnityEngine::LayerMask::GetMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::GetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "LayerMask", "GetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNames);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ManagedStreamHelpers
#include "UnityEngine/ManagedStreamHelpers.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ValidateLoadFromStream
void UnityEngine::ManagedStreamHelpers::ValidateLoadFromStream(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ValidateLoadFromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ValidateLoadFromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamRead
void UnityEngine::ManagedStreamHelpers::ManagedStreamRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, count, stream, returnValueAddress);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamSeek
void UnityEngine::ManagedStreamHelpers::ManagedStreamSeek(int64_t offset, uint origin, ::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset, origin, stream, returnValueAddress);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamLength
void UnityEngine::ManagedStreamHelpers::ManagedStreamLength(::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, returnValueAddress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MonoBehaviour.get_useGUILayout
bool UnityEngine::MonoBehaviour::get_useGUILayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::get_useGUILayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGUILayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.set_useGUILayout
void UnityEngine::MonoBehaviour::set_useGUILayout(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::set_useGUILayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGUILayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Invoke
void UnityEngine::MonoBehaviour::Invoke(::StringW methodName, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, time);
}
// Autogenerated method: UnityEngine.MonoBehaviour.InvokeRepeating
void UnityEngine::MonoBehaviour::InvokeRepeating(::StringW methodName, float time, float repeatRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::InvokeRepeating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRepeating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(repeatRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, time, repeatRate);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine_Auto
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine_Auto(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine_Auto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine_Auto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::UnityEngine::Coroutine* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopAllCoroutines
void UnityEngine::MonoBehaviour::StopAllCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopAllCoroutines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllCoroutines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.print
void UnityEngine::MonoBehaviour::print(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::print");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "print", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll
void UnityEngine::MonoBehaviour::Internal_CancelInvokeAll(::UnityEngine::MonoBehaviour* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Internal_CancelInvokeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "Internal_CancelInvokeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Internal_IsInvokingAll
bool UnityEngine::MonoBehaviour::Internal_IsInvokingAll(::UnityEngine::MonoBehaviour* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Internal_IsInvokingAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "Internal_IsInvokingAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.MonoBehaviour.InvokeDelayed
void UnityEngine::MonoBehaviour::InvokeDelayed(::UnityEngine::MonoBehaviour* self, ::StringW methodName, float time, float repeatRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::InvokeDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "InvokeDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(repeatRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName, time, repeatRate);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke(::UnityEngine::MonoBehaviour* self, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking(::UnityEngine::MonoBehaviour* self, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour
bool UnityEngine::MonoBehaviour::IsObjectMonoBehaviour(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsObjectMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "IsObjectMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutineManaged
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutineManaged(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutineManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutineManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutineManaged2
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutineManaged2(::System::Collections::IEnumerator* enumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutineManaged2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutineManaged2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, enumerator);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutineManaged
void UnityEngine::MonoBehaviour::StopCoroutineManaged(::UnityEngine::Coroutine* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutineManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutineManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged
void UnityEngine::MonoBehaviour::StopCoroutineFromEnumeratorManaged(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutineFromEnumeratorManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutineFromEnumeratorManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.GetScriptClassName
::StringW UnityEngine::MonoBehaviour::GetScriptClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::GetScriptClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScriptClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.NoAllocHelpers
#include "UnityEngine/NoAllocHelpers.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.NoAllocHelpers.SafeLength
int UnityEngine::NoAllocHelpers::SafeLength(::System::Array* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::SafeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "SafeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: UnityEngine.NoAllocHelpers.Internal_ResizeList
void UnityEngine::NoAllocHelpers::Internal_ResizeList(::Il2CppObject* list, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::Internal_ResizeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "Internal_ResizeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list, size);
}
// Autogenerated method: UnityEngine.NoAllocHelpers.ExtractArrayFromList
::System::Array* UnityEngine::NoAllocHelpers::ExtractArrayFromList(::Il2CppObject* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::ExtractArrayFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "ExtractArrayFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RangeInt
#include "UnityEngine/RangeInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 start
int& UnityEngine::RangeInt::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::dyn_start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
int& UnityEngine::RangeInt::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RangeInt.get_end
int UnityEngine::RangeInt::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RangeInt..ctor
// ABORTED elsewhere.  UnityEngine::RangeInt::RangeInt(int start, int length)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeInitializeLoadType
#include "UnityEngine/RuntimeInitializeLoadType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType AfterSceneLoad
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_AfterSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_AfterSceneLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "AfterSceneLoad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType AfterSceneLoad
void UnityEngine::RuntimeInitializeLoadType::_set_AfterSceneLoad(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_AfterSceneLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "AfterSceneLoad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSceneLoad
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_BeforeSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_BeforeSceneLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "BeforeSceneLoad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSceneLoad
void UnityEngine::RuntimeInitializeLoadType::_set_BeforeSceneLoad(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_BeforeSceneLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "BeforeSceneLoad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType AfterAssembliesLoaded
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_AfterAssembliesLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_AfterAssembliesLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "AfterAssembliesLoaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType AfterAssembliesLoaded
void UnityEngine::RuntimeInitializeLoadType::_set_AfterAssembliesLoaded(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_AfterAssembliesLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "AfterAssembliesLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSplashScreen
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_BeforeSplashScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_BeforeSplashScreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "BeforeSplashScreen"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSplashScreen
void UnityEngine::RuntimeInitializeLoadType::_set_BeforeSplashScreen(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_BeforeSplashScreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "BeforeSplashScreen", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType SubsystemRegistration
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_SubsystemRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_SubsystemRegistration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "SubsystemRegistration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType SubsystemRegistration
void UnityEngine::RuntimeInitializeLoadType::_set_SubsystemRegistration(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_SubsystemRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "SubsystemRegistration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::RuntimeInitializeLoadType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeInitializeOnLoadMethodAttribute
#include "UnityEngine/RuntimeInitializeOnLoadMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RuntimeInitializeLoadType m_LoadType
::UnityEngine::RuntimeInitializeLoadType& UnityEngine::RuntimeInitializeOnLoadMethodAttribute::dyn_m_LoadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeOnLoadMethodAttribute::dyn_m_LoadType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoadType"))->offset;
  return *reinterpret_cast<::UnityEngine::RuntimeInitializeLoadType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RuntimeInitializeOnLoadMethodAttribute.set_loadType
void UnityEngine::RuntimeInitializeOnLoadMethodAttribute::set_loadType(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeOnLoadMethodAttribute::set_loadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptableObject.CreateInstance
::UnityEngine::ScriptableObject* UnityEngine::ScriptableObject::CreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ScriptableObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.ScriptableObject.CreateScriptableObject
void UnityEngine::ScriptableObject::CreateScriptableObject(::UnityEngine::ScriptableObject* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.ScriptableObject.CreateScriptableObjectInstanceFromType
::UnityEngine::ScriptableObject* UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType(::System::Type* type, bool applyDefaultsAndReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateScriptableObjectInstanceFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(applyDefaultsAndReset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ScriptableObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, applyDefaultsAndReset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptingUtility
#include "UnityEngine/ScriptingUtility.hpp"
// Including type: UnityEngine.ScriptingUtility/UnityEngine.TestClass
#include "UnityEngine/ScriptingUtility_TestClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptingUtility.IsManagedCodeWorking
bool UnityEngine::ScriptingUtility::IsManagedCodeWorking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptingUtility::IsManagedCodeWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptingUtility", "IsManagedCodeWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SelectionBaseAttribute
#include "UnityEngine/SelectionBaseAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.StackTraceUtility
#include "UnityEngine/StackTraceUtility.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String projectFolder
::StringW UnityEngine::StackTraceUtility::_get_projectFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_get_projectFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "StackTraceUtility", "projectFolder"));
}
// Autogenerated static field setter
// Set static field: static private System.String projectFolder
void UnityEngine::StackTraceUtility::_set_projectFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_set_projectFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StackTraceUtility", "projectFolder", value));
}
// Autogenerated method: UnityEngine.StackTraceUtility..cctor
void UnityEngine::StackTraceUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StackTraceUtility.SetProjectFolder
void UnityEngine::StackTraceUtility::SetProjectFolder(::StringW folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::SetProjectFolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "SetProjectFolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStringFromExceptionInternal
void UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal(::Il2CppObject* exceptiono, ByRef<::StringW> message, ByRef<::StringW> stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStringFromExceptionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptiono), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exceptiono, byref(message), byref(stackTrace));
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractFormattedStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractFormattedStackTrace(::System::Diagnostics::StackTrace* stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractFormattedStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractFormattedStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackTrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stackTrace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityException
#include "UnityEngine/UnityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.TextAsset/UnityEngine.EncodingUtility
#include "UnityEngine/TextAsset_EncodingUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextAsset.get_bytes
::ArrayW<uint8_t> UnityEngine::TextAsset::get_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.get_text
::StringW UnityEngine::TextAsset::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.DecodeString
::StringW UnityEngine::TextAsset::DecodeString(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextAsset", "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.TextAsset.ToString
::StringW UnityEngine::TextAsset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAsset/UnityEngine.EncodingUtility
#include "UnityEngine/TextAsset_EncodingUtility.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.KeyValuePair`2<System.Byte[],System.Text.Encoding>[] encodingLookup
::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>> UnityEngine::TextAsset::EncodingUtility::_get_encodingLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_get_encodingLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>>>("UnityEngine", "TextAsset/EncodingUtility", "encodingLookup")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.KeyValuePair`2<System.Byte[],System.Text.Encoding>[] encodingLookup
void UnityEngine::TextAsset::EncodingUtility::_set_encodingLookup(::ArrayW<::System::Collections::Generic::KeyValuePair_2<::ArrayW<uint8_t>, ::System::Text::Encoding*>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_set_encodingLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAsset/EncodingUtility", "encodingLookup", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Text.Encoding targetEncoding
::System::Text::Encoding* UnityEngine::TextAsset::EncodingUtility::_get_targetEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_get_targetEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("UnityEngine", "TextAsset/EncodingUtility", "targetEncoding"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.Encoding targetEncoding
void UnityEngine::TextAsset::EncodingUtility::_set_targetEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::_set_targetEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAsset/EncodingUtility", "targetEncoding", value));
}
// Autogenerated method: UnityEngine.TextAsset/UnityEngine.EncodingUtility..cctor
void UnityEngine::TextAsset::EncodingUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::EncodingUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextAsset/EncodingUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TrackedReference
#include "UnityEngine/TrackedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::TrackedReference::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TrackedReference.Equals
bool UnityEngine::TrackedReference::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.TrackedReference.GetHashCode
int UnityEngine::TrackedReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TrackedReference.op_Equality
bool UnityEngine::operator ==(::UnityEngine::TrackedReference* x, ::UnityEngine::TrackedReference& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TrackedReference", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnhandledExceptionHandler
#include "UnityEngine/UnhandledExceptionHandler.hpp"
// Including type: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnhandledExceptionHandler.RegisterUECatcher
void UnityEngine::UnhandledExceptionHandler::RegisterUECatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::RegisterUECatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler", "RegisterUECatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c <>9
::UnityEngine::UnhandledExceptionHandler::$$c* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UnhandledExceptionHandler::$$c*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c <>9
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9(::UnityEngine::UnhandledExceptionHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.UnhandledExceptionEventHandler <>9__0_0
::System::UnhandledExceptionEventHandler* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::UnhandledExceptionEventHandler*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.UnhandledExceptionEventHandler <>9__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0(::System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0", value)));
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c..cctor
void UnityEngine::UnhandledExceptionHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c.<RegisterUECatcher>b__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::$RegisterUECatcher$b__0_0(::Il2CppObject* sender, ::System::UnhandledExceptionEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::<RegisterUECatcher>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterUECatcher>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags None
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags None
void UnityEngine::HideFlags::_set_None(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInHierarchy
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInHierarchy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInHierarchy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInHierarchy
void UnityEngine::HideFlags::_set_HideInHierarchy(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInHierarchy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInHierarchy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInInspector
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInInspector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInInspector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInInspector
void UnityEngine::HideFlags::_set_HideInInspector(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInInspector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInInspector", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInEditor
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInEditor
void UnityEngine::HideFlags::_set_DontSaveInEditor(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags NotEditable
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_NotEditable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_NotEditable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "NotEditable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags NotEditable
void UnityEngine::HideFlags::_set_NotEditable(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_NotEditable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "NotEditable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInBuild
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInBuild"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInBuild
void UnityEngine::HideFlags::_set_DontSaveInBuild(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInBuild", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontUnloadUnusedAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontUnloadUnusedAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontUnloadUnusedAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
void UnityEngine::HideFlags::_set_DontUnloadUnusedAsset(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontUnloadUnusedAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontUnloadUnusedAsset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSave
void UnityEngine::HideFlags::_set_DontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSave", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideAndDontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideAndDontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideAndDontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideAndDontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideAndDontSave
void UnityEngine::HideFlags::_set_HideAndDontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideAndDontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideAndDontSave", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::HideFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
void UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.String objectIsNullMessage
::StringW UnityEngine::Object::_get_objectIsNullMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_objectIsNullMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "objectIsNullMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String objectIsNullMessage
void UnityEngine::Object::_set_objectIsNullMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_objectIsNullMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "objectIsNullMessage", value));
}
// Autogenerated static field getter
// Get static field: static private System.String cloneDestroyedMessage
::StringW UnityEngine::Object::_get_cloneDestroyedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_cloneDestroyedMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "cloneDestroyedMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String cloneDestroyedMessage
void UnityEngine::Object::_set_cloneDestroyedMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_cloneDestroyedMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "cloneDestroyedMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_CachedPtr
::System::IntPtr& UnityEngine::Object::dyn_m_CachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::dyn_m_CachedPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Object.get_name
::StringW UnityEngine::Object::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_name
void UnityEngine::Object::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object.get_hideFlags
::UnityEngine::HideFlags UnityEngine::Object::get_hideFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HideFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_hideFlags
void UnityEngine::Object::set_hideFlags(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object..cctor
void UnityEngine::Object::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.GetInstanceID
int UnityEngine::Object::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.CompareBaseObjects
bool UnityEngine::Object::CompareBaseObjects(::UnityEngine::Object* lhs, ::UnityEngine::Object* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CompareBaseObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CompareBaseObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Object.IsNativeObjectAlive
bool UnityEngine::Object::IsNativeObjectAlive(::UnityEngine::Object* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::IsNativeObjectAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "IsNativeObjectAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: UnityEngine.Object.GetCachedPtr
::System::IntPtr UnityEngine::Object::GetCachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetCachedPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent, instantiateInWorldSpace);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj, bool allowDestroyingAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(allowDestroyingAssets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, allowDestroyingAssets);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfType(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.Object.DontDestroyOnLoad
void UnityEngine::Object::DontDestroyOnLoad(::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DontDestroyOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DontDestroyOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: UnityEngine.Object.CheckNullArgument
void UnityEngine::Object::CheckNullArgument(::Il2CppObject* arg, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CheckNullArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CheckNullArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, message);
}
// Autogenerated method: UnityEngine.Object.FindObjectOfType
::UnityEngine::Object* UnityEngine::Object::FindObjectOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.FindObjectOfType
::UnityEngine::Object* UnityEngine::Object::FindObjectOfType(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetOffsetOfInstanceIDInCPlusPlusObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingle
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingle(::UnityEngine::Object* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingleWithParent
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingleWithParent(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingleWithParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingleWithParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle(::UnityEngine::Object* data, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, pos, rot);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.GetName
::StringW UnityEngine::Object::GetName(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.SetName
void UnityEngine::Object::SetName(::UnityEngine::Object* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Object.FindObjectFromInstanceID
::UnityEngine::Object* UnityEngine::Object::FindObjectFromInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectFromInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectFromInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle_Injected
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle_Injected(::UnityEngine::Object* data, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos), byref(rot));
}
// Autogenerated method: UnityEngine.Object.GetHashCode
int UnityEngine::Object::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Equals
bool UnityEngine::Object::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.op_Equality
bool UnityEngine::operator ==(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated method: UnityEngine.Object.op_Inequality
bool UnityEngine::operator !=(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest> m_AsyncWorkQueue
::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncWorkQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest> m_CurrentFrameWork
::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentFrameWork"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_MainThreadID
int& UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MainThreadID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_TrackedCount
int& UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Exec
void UnityEngine::UnitySynchronizationContext::Exec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Exec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.HasPendingTasks
bool UnityEngine::UnitySynchronizationContext::HasPendingTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::HasPendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.InitializeSynchronizationContext
void UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "InitializeSynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecuteTasks
void UnityEngine::UnitySynchronizationContext::ExecuteTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecuteTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecuteTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecutePendingTasks
bool UnityEngine::UnitySynchronizationContext::ExecutePendingTasks(int64_t millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecutePendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecutePendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Send
void UnityEngine::UnitySynchronizationContext::Send(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationStarted
void UnityEngine::UnitySynchronizationContext::OperationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationCompleted
void UnityEngine::UnitySynchronizationContext::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Post
void UnityEngine::UnitySynchronizationContext::Post(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* UnityEngine::UnitySynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SendOrPostCallback m_DelagateCallback
::System::Threading::SendOrPostCallback*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateCallback"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object m_DelagateState
::Il2CppObject*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEvent m_WaitHandle
::System::Threading::ManualResetEvent*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest..ctor
// ABORTED elsewhere.  UnityEngine::UnitySynchronizationContext::WorkRequest::WorkRequest(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state, ::System::Threading::ManualResetEvent* waitHandle)
// Autogenerated method: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest.Invoke
void UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForEndOfFrame
#include "UnityEngine/WaitForEndOfFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForFixedUpdate
#include "UnityEngine/WaitForFixedUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_Seconds
float& UnityEngine::WaitForSeconds::dyn_m_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSeconds::dyn_m_Seconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Seconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <waitTime>k__BackingField
float& UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_WaitUntilTime
float& UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitUntilTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_waitTime
float UnityEngine::WaitForSecondsRealtime::get_waitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.set_waitTime
void UnityEngine::WaitForSecondsRealtime::set_waitTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::set_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_keepWaiting
bool UnityEngine::WaitForSecondsRealtime::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.Reset
void UnityEngine::WaitForSecondsRealtime::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SerializeField
#include "UnityEngine/SerializeField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DisableBatchingType
#include "UnityEngine/DisableBatchingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType False
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "False"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType False
void UnityEngine::DisableBatchingType::_set_False(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "False", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType True
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "True"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType True
void UnityEngine::DisableBatchingType::_set_True(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "True", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType WhenLODFading
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_WhenLODFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_WhenLODFading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "WhenLODFading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType WhenLODFading
void UnityEngine::DisableBatchingType::_set_WhenLODFading(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_WhenLODFading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "WhenLODFading", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::DisableBatchingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ComputeShader
#include "UnityEngine/ComputeShader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ComputeShader.FindKernel
int UnityEngine::ComputeShader::FindKernel(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::FindKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StaticBatchingUtility
#include "UnityEngine/StaticBatchingUtility.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Unity.Profiling.ProfilerMarker s_CombineMarker
::Unity::Profiling::ProfilerMarker UnityEngine::StaticBatchingUtility::_get_s_CombineMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_get_s_CombineMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine", "StaticBatchingUtility", "s_CombineMarker"));
}
// Autogenerated static field setter
// Set static field: static Unity.Profiling.ProfilerMarker s_CombineMarker
void UnityEngine::StaticBatchingUtility::_set_s_CombineMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_set_s_CombineMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StaticBatchingUtility", "s_CombineMarker", value));
}
// Autogenerated static field getter
// Get static field: static Unity.Profiling.ProfilerMarker s_SortMarker
::Unity::Profiling::ProfilerMarker UnityEngine::StaticBatchingUtility::_get_s_SortMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_get_s_SortMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine", "StaticBatchingUtility", "s_SortMarker"));
}
// Autogenerated static field setter
// Set static field: static Unity.Profiling.ProfilerMarker s_SortMarker
void UnityEngine::StaticBatchingUtility::_set_s_SortMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_set_s_SortMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StaticBatchingUtility", "s_SortMarker", value));
}
// Autogenerated static field getter
// Get static field: static Unity.Profiling.ProfilerMarker s_MakeBatchMarker
::Unity::Profiling::ProfilerMarker UnityEngine::StaticBatchingUtility::_get_s_MakeBatchMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_get_s_MakeBatchMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::Profiling::ProfilerMarker>("UnityEngine", "StaticBatchingUtility", "s_MakeBatchMarker"));
}
// Autogenerated static field setter
// Set static field: static Unity.Profiling.ProfilerMarker s_MakeBatchMarker
void UnityEngine::StaticBatchingUtility::_set_s_MakeBatchMarker(::Unity::Profiling::ProfilerMarker value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::_set_s_MakeBatchMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StaticBatchingUtility", "s_MakeBatchMarker", value));
}
// Autogenerated method: UnityEngine.StaticBatchingUtility..cctor
void UnityEngine::StaticBatchingUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StaticBatchingUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StaticBatchingUtility.Combine
void UnityEngine::StaticBatchingUtility::Combine(::ArrayW<::UnityEngine::GameObject*> gos, ::UnityEngine::GameObject* staticBatchRoot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StaticBatchingUtility::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StaticBatchingUtility", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gos), ::il2cpp_utils::ExtractType(staticBatchRoot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gos, staticBatchRoot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InternalStaticBatchingUtility
#include "UnityEngine/InternalStaticBatchingUtility.hpp"
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter
#include "UnityEngine/InternalStaticBatchingUtility_StaticBatcherGOSorter.hpp"
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c__DisplayClass5_0
#include "UnityEngine/InternalStaticBatchingUtility_--c__DisplayClass5_0.hpp"
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c
#include "UnityEngine/InternalStaticBatchingUtility_--c.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility.GetMeshFormatHash
uint UnityEngine::InternalStaticBatchingUtility::GetMeshFormatHash(::UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::GetMeshFormatHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility", "GetMeshFormatHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility.SortGameObjectsForStaticBatching
::ArrayW<::UnityEngine::GameObject*> UnityEngine::InternalStaticBatchingUtility::SortGameObjectsForStaticBatching(::ArrayW<::UnityEngine::GameObject*> gos, ::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::SortGameObjectsForStaticBatching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility", "SortGameObjectsForStaticBatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gos), ::il2cpp_utils::ExtractType(sorter)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gos, sorter);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility.CombineGameObjects
void UnityEngine::InternalStaticBatchingUtility::CombineGameObjects(::ArrayW<::UnityEngine::GameObject*> gos, ::UnityEngine::GameObject* staticBatchRoot, bool isEditorPostprocessScene, ::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::CombineGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility", "CombineGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gos), ::il2cpp_utils::ExtractType(staticBatchRoot), ::il2cpp_utils::ExtractType(isEditorPostprocessScene), ::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gos, staticBatchRoot, isEditorPostprocessScene, sorter);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility.MakeBatch
void UnityEngine::InternalStaticBatchingUtility::MakeBatch(::System::Collections::Generic::List_1<::UnityEngine::MeshSubsetCombineUtility::MeshContainer>* meshes, ::UnityEngine::Transform* staticBatchRootTransform, int batchIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::MakeBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility", "MakeBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(meshes), ::il2cpp_utils::ExtractType(staticBatchRootTransform), ::il2cpp_utils::ExtractType(batchIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, meshes, staticBatchRootTransform, batchIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter
#include "UnityEngine/InternalStaticBatchingUtility_StaticBatcherGOSorter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter.GetMaterialId
int64_t UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetMaterialId(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetMaterialId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterialId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, renderer);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter.GetLightmapIndex
int UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetLightmapIndex(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetLightmapIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLightmapIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, renderer);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter.GetRenderer
::UnityEngine::Renderer* UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetRenderer(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility/StaticBatcherGOSorter", "GetRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Renderer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter.GetMesh
::UnityEngine::Mesh* UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetMesh(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility/StaticBatcherGOSorter", "GetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter.GetRendererId
int64_t UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetRendererId(::UnityEngine::Renderer* renderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter::GetRendererId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRendererId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderer)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, renderer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c__DisplayClass5_0
#include "UnityEngine/InternalStaticBatchingUtility_--c__DisplayClass5_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter
#include "UnityEngine/InternalStaticBatchingUtility_StaticBatcherGOSorter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.InternalStaticBatchingUtility/UnityEngine.StaticBatcherGOSorter sorter
::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter*& UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::dyn_sorter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::dyn_sorter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sorter"))->offset;
  return *reinterpret_cast<::UnityEngine::InternalStaticBatchingUtility::StaticBatcherGOSorter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c__DisplayClass5_0.<SortGameObjectsForStaticBatching>b__0
int64_t UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::$SortGameObjectsForStaticBatching$b__0(::UnityEngine::GameObject* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::<SortGameObjectsForStaticBatching>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGameObjectsForStaticBatching>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, g);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c__DisplayClass5_0.<SortGameObjectsForStaticBatching>b__1
int UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::$SortGameObjectsForStaticBatching$b__1(::UnityEngine::GameObject* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::<SortGameObjectsForStaticBatching>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGameObjectsForStaticBatching>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, g);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c__DisplayClass5_0.<SortGameObjectsForStaticBatching>b__3
int64_t UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::$SortGameObjectsForStaticBatching$b__3(::UnityEngine::GameObject* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c__DisplayClass5_0::<SortGameObjectsForStaticBatching>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGameObjectsForStaticBatching>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, g);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c
#include "UnityEngine/InternalStaticBatchingUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c <>9
::UnityEngine::InternalStaticBatchingUtility::$$c* UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::InternalStaticBatchingUtility::$$c*>("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c <>9
void UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9(::UnityEngine::InternalStaticBatchingUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.GameObject,System.UInt32> <>9__5_2
::System::Func_2<::UnityEngine::GameObject*, uint>* UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9__5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9__5_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::GameObject*, uint>*>("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9__5_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.GameObject,System.UInt32> <>9__5_2
void UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9__5_2(::System::Func_2<::UnityEngine::GameObject*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9__5_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9__5_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.Material,System.Boolean> <>9__6_0
::System::Func_2<::UnityEngine::Material*, bool>* UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::UnityEngine::Material*, bool>*>("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.Material,System.Boolean> <>9__6_0
void UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9__6_0(::System::Func_2<::UnityEngine::Material*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "InternalStaticBatchingUtility/<>c", "<>9__6_0", value)));
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c..cctor
void UnityEngine::InternalStaticBatchingUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "InternalStaticBatchingUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c.<SortGameObjectsForStaticBatching>b__5_2
uint UnityEngine::InternalStaticBatchingUtility::$$c::$SortGameObjectsForStaticBatching$b__5_2(::UnityEngine::GameObject* g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::<SortGameObjectsForStaticBatching>b__5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGameObjectsForStaticBatching>b__5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, g);
}
// Autogenerated method: UnityEngine.InternalStaticBatchingUtility/UnityEngine.<>c.<CombineGameObjects>b__6_0
bool UnityEngine::InternalStaticBatchingUtility::$$c::$CombineGameObjects$b__6_0(::UnityEngine::Material* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InternalStaticBatchingUtility::$$c::<CombineGameObjects>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CombineGameObjects>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LowerResBlitTexture
#include "UnityEngine/LowerResBlitTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LowerResBlitTexture.LowerResBlitTextureDontStripMe
void UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowerResBlitTextureDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PreloadData
#include "UnityEngine/PreloadData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PreloadData.PreloadDataDontStripMe
void UnityEngine::PreloadData::PreloadDataDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PreloadData::PreloadDataDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreloadDataDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Other
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Other"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Other
void UnityEngine::OperatingSystemFamily::_set_Other(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily MacOSX
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_MacOSX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_MacOSX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "MacOSX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily MacOSX
void UnityEngine::OperatingSystemFamily::_set_MacOSX(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_MacOSX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "MacOSX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Windows
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Windows
void UnityEngine::OperatingSystemFamily::_set_Windows(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Linux
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Linux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Linux"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Linux
void UnityEngine::OperatingSystemFamily::_set_Linux(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Linux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Linux", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::OperatingSystemFamily::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Unknown
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Unknown
void UnityEngine::DeviceType::_set_Unknown(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Handheld
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Handheld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Handheld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Handheld"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Handheld
void UnityEngine::DeviceType::_set_Handheld(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Handheld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Handheld", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Console
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Console() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Console"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Console
void UnityEngine::DeviceType::_set_Console(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Console", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Desktop
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Desktop
void UnityEngine::DeviceType::_set_Desktop(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Desktop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::DeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SystemInfo
#include "UnityEngine/SystemInfo.hpp"
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
// Including type: UnityEngine.Rendering.GraphicsDeviceType
#include "UnityEngine/Rendering/GraphicsDeviceType.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.FormatUsage
#include "UnityEngine/Experimental/Rendering/FormatUsage.hpp"
// Including type: UnityEngine.Experimental.Rendering.DefaultFormat
#include "UnityEngine/Experimental/Rendering/DefaultFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SystemInfo.get_operatingSystem
::StringW UnityEngine::SystemInfo::get_operatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_operatingSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_operatingSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_operatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::get_operatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_operatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_operatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceName
::StringW UnityEngine::SystemInfo::get_deviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceModel
::StringW UnityEngine::SystemInfo::get_deviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceName
::StringW UnityEngine::SystemInfo::get_graphicsDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::get_graphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceVersion
::StringW UnityEngine::SystemInfo::get_graphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.IsValidEnumValue
bool UnityEngine::SystemInfo::IsValidEnumValue(::System::Enum* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsValidEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsValidEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsRenderTextureFormat
bool UnityEngine::SystemInfo::SupportsRenderTextureFormat(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsRenderTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsRenderTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormat
bool UnityEngine::SystemInfo::SupportsTextureFormat(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.GetOperatingSystem
::StringW UnityEngine::SystemInfo::GetOperatingSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetOperatingSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetOperatingSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetOperatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::GetOperatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetOperatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetOperatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceName
::StringW UnityEngine::SystemInfo::GetDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceModel
::StringW UnityEngine::SystemInfo::GetDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::GetDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceName
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::GetGraphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceVersion
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.HasRenderTextureNative
bool UnityEngine::SystemInfo::HasRenderTextureNative(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::HasRenderTextureNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "HasRenderTextureNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormatNative
bool UnityEngine::SystemInfo::SupportsTextureFormatNative(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormatNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormatNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.IsFormatSupported
bool UnityEngine::SystemInfo::IsFormatSupported(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsFormatSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsFormatSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetCompatibleFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetCompatibleFormat(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetCompatibleFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetCompatibleFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetGraphicsFormat(::UnityEngine::Experimental::Rendering::DefaultFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Time
#include "UnityEngine/Time.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Time.get_time
float UnityEngine::Time::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_timeSinceLevelLoad
float UnityEngine::Time::get_timeSinceLevelLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_timeSinceLevelLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_timeSinceLevelLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_deltaTime
float UnityEngine::Time::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_unscaledTime
float UnityEngine::Time::get_unscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_unscaledTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_unscaledTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_unscaledDeltaTime
float UnityEngine::Time::get_unscaledDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_unscaledDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_unscaledDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_fixedDeltaTime
float UnityEngine::Time::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_maximumDeltaTime
float UnityEngine::Time::get_maximumDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_maximumDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_maximumDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_smoothDeltaTime
float UnityEngine::Time::get_smoothDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_smoothDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_smoothDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_timeScale
float UnityEngine::Time::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_frameCount
int UnityEngine::Time::get_frameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_frameCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_frameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Time.get_realtimeSinceStartup
float UnityEngine::Time::get_realtimeSinceStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Time::get_realtimeSinceStartup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Time", "get_realtimeSinceStartup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.TouchScreenKeyboard/UnityEngine.Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
// Including type: UnityEngine.RangeInt
#include "UnityEngine/RangeInt.hpp"
// Including type: UnityEngine.TouchScreenKeyboard_InternalConstructorHelperArguments
#include "UnityEngine/TouchScreenKeyboard_InternalConstructorHelperArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::TouchScreenKeyboard::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isSupported
bool UnityEngine::TouchScreenKeyboard::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_isSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_isInPlaceEditingAllowed
bool UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_isInPlaceEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "get_isInPlaceEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_text
::StringW UnityEngine::TouchScreenKeyboard::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_text
void UnityEngine::TouchScreenKeyboard::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_hideInput
void UnityEngine::TouchScreenKeyboard::set_hideInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_hideInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "set_hideInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_active
bool UnityEngine::TouchScreenKeyboard::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_active
void UnityEngine::TouchScreenKeyboard::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_status
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboard::Status, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_characterLimit
void UnityEngine::TouchScreenKeyboard::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canGetSelection
bool UnityEngine::TouchScreenKeyboard::get_canGetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_canGetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canGetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_canSetSelection
bool UnityEngine::TouchScreenKeyboard::get_canSetSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_canSetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canSetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.get_selection
::UnityEngine::RangeInt UnityEngine::TouchScreenKeyboard::get_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::get_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RangeInt, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.set_selection
void UnityEngine::TouchScreenKeyboard::set_selection(::UnityEngine::RangeInt value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::set_selection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Internal_Destroy
void UnityEngine::TouchScreenKeyboard::Internal_Destroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Destroy
void UnityEngine::TouchScreenKeyboard::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.TouchScreenKeyboard_InternalConstructorHelper
::System::IntPtr UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper(ByRef<::UnityEngine::TouchScreenKeyboard_InternalConstructorHelperArguments> arguments, ::StringW text, ::StringW textPlaceholder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::TouchScreenKeyboard_InternalConstructorHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "TouchScreenKeyboard_InternalConstructorHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textPlaceholder)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(arguments), text, textPlaceholder);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.IsInPlaceEditingAllowed
bool UnityEngine::TouchScreenKeyboard::IsInPlaceEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::IsInPlaceEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "IsInPlaceEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Open
::UnityEngine::TouchScreenKeyboard* UnityEngine::TouchScreenKeyboard::Open(::StringW text, ::UnityEngine::TouchScreenKeyboardType keyboardType, bool autocorrection, bool multiline, bool secure, bool alert, ::StringW textPlaceholder, int characterLimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(keyboardType), ::il2cpp_utils::ExtractType(autocorrection), ::il2cpp_utils::ExtractType(multiline), ::il2cpp_utils::ExtractType(secure), ::il2cpp_utils::ExtractType(alert), ::il2cpp_utils::ExtractType(textPlaceholder), ::il2cpp_utils::ExtractType(characterLimit)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TouchScreenKeyboard*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, keyboardType, autocorrection, multiline, secure, alert, textPlaceholder, characterLimit);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.GetSelection
void UnityEngine::TouchScreenKeyboard::GetSelection(ByRef<int> start, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::GetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "GetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(start), byref(length));
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.SetSelection
void UnityEngine::TouchScreenKeyboard::SetSelection(int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::SetSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TouchScreenKeyboard", "SetSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, length);
}
// Autogenerated method: UnityEngine.TouchScreenKeyboard.Finalize
void UnityEngine::TouchScreenKeyboard::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboard/UnityEngine.Status
#include "UnityEngine/TouchScreenKeyboard_Status.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Visible
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Visible
void UnityEngine::TouchScreenKeyboard::Status::_set_Visible(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Done
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Done"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Done
void UnityEngine::TouchScreenKeyboard::Status::_set_Done(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Done", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Canceled
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_Canceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_Canceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "Canceled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status Canceled
void UnityEngine::TouchScreenKeyboard::Status::_set_Canceled(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_Canceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "Canceled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status LostFocus
::UnityEngine::TouchScreenKeyboard::Status UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_get_LostFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboard::Status>("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboard/UnityEngine.Status LostFocus
void UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus(::UnityEngine::TouchScreenKeyboard::Status value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::_set_LostFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboard/Status", "LostFocus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::TouchScreenKeyboard::Status::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboard::Status::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TouchScreenKeyboardType
#include "UnityEngine/TouchScreenKeyboardType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Default
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Default
void UnityEngine::TouchScreenKeyboardType::_set_Default(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_ASCIICapable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType ASCIICapable
void UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_ASCIICapable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "ASCIICapable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NumbersAndPunctuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumbersAndPunctuation
void UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NumbersAndPunctuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumbersAndPunctuation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType URL
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "URL"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType URL
void UnityEngine::TouchScreenKeyboardType::_set_URL(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "URL", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NumberPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NumberPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NumberPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NumberPad
void UnityEngine::TouchScreenKeyboardType::_set_NumberPad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NumberPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NumberPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_PhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_PhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "PhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType PhonePad
void UnityEngine::TouchScreenKeyboardType::_set_PhonePad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_PhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "PhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NamePhonePad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NamePhonePad
void UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NamePhonePad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NamePhonePad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType EmailAddress
void UnityEngine::TouchScreenKeyboardType::_set_EmailAddress(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "EmailAddress", value));
}
// [ObsoleteAttribute] Offset: 0x56B354
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_NintendoNetworkAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType NintendoNetworkAccount
void UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_NintendoNetworkAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "NintendoNetworkAccount", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Social
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Social() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Social");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Social"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Social
void UnityEngine::TouchScreenKeyboardType::_set_Social(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Social");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Social", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType Search
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_Search() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_Search");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "Search"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType Search
void UnityEngine::TouchScreenKeyboardType::_set_Search(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_Search");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "Search", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_DecimalPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_DecimalPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "DecimalPad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType DecimalPad
void UnityEngine::TouchScreenKeyboardType::_set_DecimalPad(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_DecimalPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "DecimalPad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TouchScreenKeyboardType OneTimeCode
::UnityEngine::TouchScreenKeyboardType UnityEngine::TouchScreenKeyboardType::_get_OneTimeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_get_OneTimeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::TouchScreenKeyboardType>("UnityEngine", "TouchScreenKeyboardType", "OneTimeCode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TouchScreenKeyboardType OneTimeCode
void UnityEngine::TouchScreenKeyboardType::_set_OneTimeCode(::UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::_set_OneTimeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TouchScreenKeyboardType", "OneTimeCode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::TouchScreenKeyboardType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TouchScreenKeyboardType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties None
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties None
void UnityEngine::DrivenTransformProperties::_set_None(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties All
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties All
void UnityEngine::DrivenTransformProperties::_set_All(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionX
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionY
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPositionZ
void UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Rotation
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Rotation
void UnityEngine::DrivenTransformProperties::_set_Rotation(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Rotation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleX
void UnityEngine::DrivenTransformProperties::_set_ScaleX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleY
void UnityEngine::DrivenTransformProperties::_set_ScaleY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties ScaleZ
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_ScaleZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_ScaleZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "ScaleZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties ScaleZ
void UnityEngine::DrivenTransformProperties::_set_ScaleZ(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_ScaleZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "ScaleZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMinX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinX
void UnityEngine::DrivenTransformProperties::_set_AnchorMinX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMinX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMinY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMinY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMinY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMinY
void UnityEngine::DrivenTransformProperties::_set_AnchorMinY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMinY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMinY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMaxX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxX
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMaxX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMaxY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMaxY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMaxY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMaxY
void UnityEngine::DrivenTransformProperties::_set_AnchorMaxY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMaxY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMaxY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDeltaX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaX
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDeltaX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDeltaY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDeltaY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDeltaY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDeltaY
void UnityEngine::DrivenTransformProperties::_set_SizeDeltaY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDeltaY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDeltaY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotX
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_PivotX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotX
void UnityEngine::DrivenTransformProperties::_set_PivotX(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_PivotX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties PivotY
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_PivotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_PivotY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "PivotY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties PivotY
void UnityEngine::DrivenTransformProperties::_set_PivotY(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_PivotY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "PivotY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchoredPosition3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchoredPosition3D
void UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchoredPosition3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchoredPosition3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Scale
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Scale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Scale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Scale
void UnityEngine::DrivenTransformProperties::_set_Scale(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Scale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Scale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMin
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMin"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMin
void UnityEngine::DrivenTransformProperties::_set_AnchorMin(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMin", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties AnchorMax
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_AnchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_AnchorMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "AnchorMax"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties AnchorMax
void UnityEngine::DrivenTransformProperties::_set_AnchorMax(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_AnchorMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "AnchorMax", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Anchors
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Anchors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Anchors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Anchors
void UnityEngine::DrivenTransformProperties::_set_Anchors(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Anchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Anchors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties SizeDelta
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_SizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_SizeDelta");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "SizeDelta"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties SizeDelta
void UnityEngine::DrivenTransformProperties::_set_SizeDelta(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_SizeDelta");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "SizeDelta", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DrivenTransformProperties Pivot
::UnityEngine::DrivenTransformProperties UnityEngine::DrivenTransformProperties::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DrivenTransformProperties>("UnityEngine", "DrivenTransformProperties", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DrivenTransformProperties Pivot
void UnityEngine::DrivenTransformProperties::_set_Pivot(::UnityEngine::DrivenTransformProperties value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DrivenTransformProperties", "Pivot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::DrivenTransformProperties::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenTransformProperties::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DrivenRectTransformTracker
#include "UnityEngine/DrivenRectTransformTracker.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.DrivenTransformProperties
#include "UnityEngine/DrivenTransformProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Add
void UnityEngine::DrivenRectTransformTracker::Add(::UnityEngine::Object* driver, ::UnityEngine::RectTransform* rectTransform, ::UnityEngine::DrivenTransformProperties drivenProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenRectTransformTracker::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(drivenProperties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, driver, rectTransform, drivenProperties);
}
// Autogenerated method: UnityEngine.DrivenRectTransformTracker.Clear
void UnityEngine::DrivenRectTransformTracker::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DrivenRectTransformTracker::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.RectTransform/UnityEngine.Axis
#include "UnityEngine/RectTransform_Axis.hpp"
// Including type: UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x56B38C
// Autogenerated static field getter
// Get static field: static private UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties reapplyDrivenProperties
::UnityEngine::RectTransform::ReapplyDrivenProperties* UnityEngine::RectTransform::_get_reapplyDrivenProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::_get_reapplyDrivenProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::ReapplyDrivenProperties*>("UnityEngine", "RectTransform", "reapplyDrivenProperties"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties reapplyDrivenProperties
void UnityEngine::RectTransform::_set_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::_set_reapplyDrivenProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform", "reapplyDrivenProperties", value));
}
// Autogenerated method: UnityEngine.RectTransform.get_rect
::UnityEngine::Rect UnityEngine::RectTransform::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin
void UnityEngine::RectTransform::set_anchorMin(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchorMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax
void UnityEngine::RectTransform::set_anchorMax(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition
::UnityEngine::Vector2 UnityEngine::RectTransform::get_anchoredPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition
void UnityEngine::RectTransform::set_anchoredPosition(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta
::UnityEngine::Vector2 UnityEngine::RectTransform::get_sizeDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta
void UnityEngine::RectTransform::set_sizeDelta(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_sizeDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot
::UnityEngine::Vector2 UnityEngine::RectTransform::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot
void UnityEngine::RectTransform::set_pivot(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition3D
::UnityEngine::Vector3 UnityEngine::RectTransform::get_anchoredPosition3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition3D
void UnityEngine::RectTransform::set_anchoredPosition3D(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition3D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition3D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_offsetMin
::UnityEngine::Vector2 UnityEngine::RectTransform::get_offsetMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_offsetMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMin
void UnityEngine::RectTransform::set_offsetMin(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_offsetMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.get_offsetMax
::UnityEngine::Vector2 UnityEngine::RectTransform::get_offsetMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_offsetMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.set_offsetMax
void UnityEngine::RectTransform::set_offsetMax(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_offsetMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.add_reapplyDrivenProperties
void UnityEngine::RectTransform::add_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::add_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "add_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.remove_reapplyDrivenProperties
void UnityEngine::RectTransform::remove_reapplyDrivenProperties(::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::remove_reapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "remove_reapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.RectTransform.GetLocalCorners
void UnityEngine::RectTransform::GetLocalCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetLocalCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.GetWorldCorners
void UnityEngine::RectTransform::GetWorldCorners(::ArrayW<::UnityEngine::Vector3> fourCornersArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetWorldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fourCornersArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fourCornersArray);
}
// Autogenerated method: UnityEngine.RectTransform.SetSizeWithCurrentAnchors
void UnityEngine::RectTransform::SetSizeWithCurrentAnchors(::UnityEngine::RectTransform::Axis axis, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::SetSizeWithCurrentAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSizeWithCurrentAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, size);
}
// Autogenerated method: UnityEngine.RectTransform.SendReapplyDrivenProperties
void UnityEngine::RectTransform::SendReapplyDrivenProperties(::UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::SendReapplyDrivenProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransform", "SendReapplyDrivenProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driven);
}
// Autogenerated method: UnityEngine.RectTransform.GetParentSize
::UnityEngine::Vector2 UnityEngine::RectTransform::GetParentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::GetParentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransform.get_rect_Injected
void UnityEngine::RectTransform::get_rect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMin_Injected
void UnityEngine::RectTransform::get_anchorMin_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMin_Injected
void UnityEngine::RectTransform::set_anchorMin_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMin_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMin_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchorMax_Injected
void UnityEngine::RectTransform::get_anchorMax_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchorMax_Injected
void UnityEngine::RectTransform::set_anchorMax_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchorMax_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorMax_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_anchoredPosition_Injected
void UnityEngine::RectTransform::get_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_anchoredPosition_Injected
void UnityEngine::RectTransform::set_anchoredPosition_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_anchoredPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchoredPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_sizeDelta_Injected
void UnityEngine::RectTransform::get_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_sizeDelta_Injected
void UnityEngine::RectTransform::set_sizeDelta_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_sizeDelta_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeDelta_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.RectTransform.get_pivot_Injected
void UnityEngine::RectTransform::get_pivot_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.RectTransform.set_pivot_Injected
void UnityEngine::RectTransform::set_pivot_Injected(ByRef<::UnityEngine::Vector2> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::set_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RectTransform/UnityEngine.Axis
#include "UnityEngine/RectTransform_Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/UnityEngine.Axis Horizontal
::UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/UnityEngine.Axis Horizontal
void UnityEngine::RectTransform::Axis::_set_Horizontal(::UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RectTransform/UnityEngine.Axis Vertical
::UnityEngine::RectTransform::Axis UnityEngine::RectTransform::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RectTransform::Axis>("UnityEngine", "RectTransform/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RectTransform/UnityEngine.Axis Vertical
void UnityEngine::RectTransform::Axis::_set_Vertical(::UnityEngine::RectTransform::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransform/Axis", "Vertical", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::RectTransform::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties
#include "UnityEngine/RectTransform_ReapplyDrivenProperties.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties.Invoke
void UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke(::UnityEngine::RectTransform* driven) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::ReapplyDrivenProperties::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, driven);
}
// Autogenerated method: UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties.BeginInvoke
::System::IAsyncResult* UnityEngine::RectTransform::ReapplyDrivenProperties::BeginInvoke(::UnityEngine::RectTransform* driven, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::ReapplyDrivenProperties::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driven), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, driven, callback, object);
}
// Autogenerated method: UnityEngine.RectTransform/UnityEngine.ReapplyDrivenProperties.EndInvoke
void UnityEngine::RectTransform::ReapplyDrivenProperties::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RectTransform::ReapplyDrivenProperties::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Transform/UnityEngine.Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Space
#include "UnityEngine/Space.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Transform.get_position
::UnityEngine::Vector3 UnityEngine::Transform::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_position
void UnityEngine::Transform::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localPosition
::UnityEngine::Vector3 UnityEngine::Transform::get_localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localPosition
void UnityEngine::Transform::set_localPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_eulerAngles
::UnityEngine::Vector3 UnityEngine::Transform::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_eulerAngles
void UnityEngine::Transform::set_eulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localEulerAngles
::UnityEngine::Vector3 UnityEngine::Transform::get_localEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localEulerAngles
void UnityEngine::Transform::set_localEulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_right
::UnityEngine::Vector3 UnityEngine::Transform::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_right
void UnityEngine::Transform::set_right(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_up
::UnityEngine::Vector3 UnityEngine::Transform::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_forward
::UnityEngine::Vector3 UnityEngine::Transform::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_forward
void UnityEngine::Transform::set_forward(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_rotation
::UnityEngine::Quaternion UnityEngine::Transform::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_rotation
void UnityEngine::Transform::set_rotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localRotation
::UnityEngine::Quaternion UnityEngine::Transform::get_localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localRotation
void UnityEngine::Transform::set_localRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_localScale
::UnityEngine::Vector3 UnityEngine::Transform::get_localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_localScale
void UnityEngine::Transform::set_localScale(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parent
::UnityEngine::Transform* UnityEngine::Transform::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parent
void UnityEngine::Transform::set_parent(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_parentInternal
::UnityEngine::Transform* UnityEngine::Transform::get_parentInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_parentInternal
void UnityEngine::Transform::set_parentInternal(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_parentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix
::UnityEngine::Matrix4x4 UnityEngine::Transform::get_worldToLocalMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_worldToLocalMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix
::UnityEngine::Matrix4x4 UnityEngine::Transform::get_localToWorldMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localToWorldMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_childCount
int UnityEngine::Transform::get_childCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_childCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale
::UnityEngine::Vector3 UnityEngine::Transform::get_lossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_lossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.get_hasChanged
bool UnityEngine::Transform::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.set_hasChanged
void UnityEngine::Transform::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Transform.GetParent
::UnityEngine::Transform* UnityEngine::Transform::GetParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(::UnityEngine::Transform* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Transform.SetParent
void UnityEngine::Transform::SetParent(::UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(::UnityEngine::Vector3 translation, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(translation), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, translation, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Translate
void UnityEngine::Transform::Translate(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Translate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Translate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 eulers, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eulers, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 eulers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eulers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eulers);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(float xAngle, float yAngle, float zAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xAngle), ::il2cpp_utils::ExtractType(yAngle), ::il2cpp_utils::ExtractType(zAngle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xAngle, yAngle, zAngle);
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal
void UnityEngine::Transform::RotateAroundInternal(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 axis, float angle, ::UnityEngine::Space relativeTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(relativeTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle, relativeTo);
}
// Autogenerated method: UnityEngine.Transform.Rotate
void UnityEngine::Transform::Rotate(::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.RotateAround
void UnityEngine::Transform::RotateAround(::UnityEngine::Vector3 point, ::UnityEngine::Vector3 axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, point, axis, angle);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Transform* target, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Vector3 worldPosition, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.LookAt
void UnityEngine::Transform::LookAt(::UnityEngine::Vector3 worldPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt
void UnityEngine::Transform::Internal_LookAt(::UnityEngine::Vector3 worldPosition, ::UnityEngine::Vector3 worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Internal_LookAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, worldPosition, worldUp);
}
// Autogenerated method: UnityEngine.Transform.TransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::TransformDirection(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformDirection(::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, direction);
}
// Autogenerated method: UnityEngine.Transform.TransformVector
::UnityEngine::Vector3 UnityEngine::Transform::TransformVector(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.TransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::TransformPoint(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint
::UnityEngine::Vector3 UnityEngine::Transform::InverseTransformPoint(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, position);
}
// Autogenerated method: UnityEngine.Transform.SetAsFirstSibling
void UnityEngine::Transform::SetAsFirstSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::SetAsFirstSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsFirstSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.GetSiblingIndex
int UnityEngine::Transform::GetSiblingIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetSiblingIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSiblingIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.FindRelativeTransformWithPath
::UnityEngine::Transform* UnityEngine::Transform::FindRelativeTransformWithPath(::UnityEngine::Transform* transform, ::StringW path, bool isActiveOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::FindRelativeTransformWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Transform", "FindRelativeTransformWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isActiveOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transform, path, isActiveOnly);
}
// Autogenerated method: UnityEngine.Transform.Find
::UnityEngine::Transform* UnityEngine::Transform::Find(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, n);
}
// Autogenerated method: UnityEngine.Transform.IsChildOf
bool UnityEngine::Transform::IsChildOf(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::IsChildOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChildOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, parent);
}
// Autogenerated method: UnityEngine.Transform.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Transform::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform.GetChild
::UnityEngine::Transform* UnityEngine::Transform::GetChild(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::GetChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Transform.get_position_Injected
void UnityEngine::Transform::get_position_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_position_Injected
void UnityEngine::Transform::set_position_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_position_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localPosition_Injected
void UnityEngine::Transform::get_localPosition_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localPosition_Injected
void UnityEngine::Transform::set_localPosition_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localPosition_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_rotation_Injected
void UnityEngine::Transform::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_rotation_Injected
void UnityEngine::Transform::set_rotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localRotation_Injected
void UnityEngine::Transform::get_localRotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localRotation_Injected
void UnityEngine::Transform::set_localRotation_Injected(ByRef<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_localScale_Injected
void UnityEngine::Transform::get_localScale_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.set_localScale_Injected
void UnityEngine::Transform::set_localScale_Injected(ByRef<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::set_localScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated method: UnityEngine.Transform.get_worldToLocalMatrix_Injected
void UnityEngine::Transform::get_worldToLocalMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_worldToLocalMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToLocalMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.get_localToWorldMatrix_Injected
void UnityEngine::Transform::get_localToWorldMatrix_Injected(ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_localToWorldMatrix_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localToWorldMatrix_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Transform.RotateAroundInternal_Injected
void UnityEngine::Transform::RotateAroundInternal_Injected(ByRef<::UnityEngine::Vector3> axis, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::RotateAroundInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotateAroundInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(axis), angle);
}
// Autogenerated method: UnityEngine.Transform.Internal_LookAt_Injected
void UnityEngine::Transform::Internal_LookAt_Injected(ByRef<::UnityEngine::Vector3> worldPosition, ByRef<::UnityEngine::Vector3> worldUp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Internal_LookAt_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_LookAt_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPosition), ::il2cpp_utils::ExtractType(worldUp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(worldPosition), byref(worldUp));
}
// Autogenerated method: UnityEngine.Transform.TransformDirection_Injected
void UnityEngine::Transform::TransformDirection_Injected(ByRef<::UnityEngine::Vector3> direction, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(direction), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.InverseTransformDirection_Injected
void UnityEngine::Transform::InverseTransformDirection_Injected(ByRef<::UnityEngine::Vector3> direction, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformDirection_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformDirection_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(direction), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.TransformVector_Injected
void UnityEngine::Transform::TransformVector_Injected(ByRef<::UnityEngine::Vector3> vector, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformVector_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformVector_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(vector), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.TransformPoint_Injected
void UnityEngine::Transform::TransformPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::TransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.InverseTransformPoint_Injected
void UnityEngine::Transform::InverseTransformPoint_Injected(ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::InverseTransformPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InverseTransformPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(position), byref(ret));
}
// Autogenerated method: UnityEngine.Transform.get_lossyScale_Injected
void UnityEngine::Transform::get_lossyScale_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::get_lossyScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lossyScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Transform/UnityEngine.Enumerator
#include "UnityEngine/Transform_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform outer
::UnityEngine::Transform*& UnityEngine::Transform::Enumerator::dyn_outer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::dyn_outer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outer"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentIndex
int& UnityEngine::Transform::Enumerator::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Transform/UnityEngine.Enumerator.get_Current
::Il2CppObject* UnityEngine::Transform::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/UnityEngine.Enumerator.MoveNext
bool UnityEngine::Transform::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Transform/UnityEngine.Enumerator.Reset
void UnityEngine::Transform::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Transform::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SpriteRenderer.get_color
::UnityEngine::Color UnityEngine::SpriteRenderer::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color
void UnityEngine::SpriteRenderer::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.SpriteRenderer.get_color_Injected
void UnityEngine::SpriteRenderer::get_color_Injected(ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::get_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.SpriteRenderer.set_color_Injected
void UnityEngine::SpriteRenderer::set_color_Injected(ByRef<::UnityEngine::Color> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpriteRenderer::set_color_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Tight
::UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Tight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_get_Tight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Tight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Tight
void UnityEngine::SpritePackingMode::_set_Tight(::UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_set_Tight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Tight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SpritePackingMode Rectangle
::UnityEngine::SpritePackingMode UnityEngine::SpritePackingMode::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SpritePackingMode>("UnityEngine", "SpritePackingMode", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SpritePackingMode Rectangle
void UnityEngine::SpritePackingMode::_set_Rectangle(::UnityEngine::SpritePackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "SpritePackingMode", "Rectangle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::SpritePackingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpritePackingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.SpritePackingMode
#include "UnityEngine/SpritePackingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprite.get_bounds
::UnityEngine::Bounds UnityEngine::Sprite::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_rect
::UnityEngine::Rect UnityEngine::Sprite::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_border
::UnityEngine::Vector4 UnityEngine::Sprite::get_border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_border");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_texture
::UnityEngine::Texture2D* UnityEngine::Sprite::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_pixelsPerUnit
float UnityEngine::Sprite::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_associatedAlphaSplitTexture
::UnityEngine::Texture2D* UnityEngine::Sprite::get_associatedAlphaSplitTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_associatedAlphaSplitTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_associatedAlphaSplitTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_pivot
::UnityEngine::Vector2 UnityEngine::Sprite::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packed
bool UnityEngine::Sprite::get_packed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_packed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_packingMode
::UnityEngine::SpritePackingMode UnityEngine::Sprite::get_packingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_packingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_packingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SpritePackingMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_textureRect
::UnityEngine::Rect UnityEngine::Sprite::get_textureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_textureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_vertices
::ArrayW<::UnityEngine::Vector2> UnityEngine::Sprite::get_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_vertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_triangles
::ArrayW<uint16_t> UnityEngine::Sprite::get_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_triangles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triangles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint16_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.get_uv
::ArrayW<::UnityEngine::Vector2> UnityEngine::Sprite::get_uv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_uv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_uv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Vector2>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPackingMode
int UnityEngine::Sprite::GetPackingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPackingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPacked
int UnityEngine::Sprite::GetPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPacked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPacked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect
::UnityEngine::Rect UnityEngine::Sprite::GetTextureRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs
::UnityEngine::Vector4 UnityEngine::Sprite::GetInnerUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetInnerUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs
::UnityEngine::Vector4 UnityEngine::Sprite::GetOuterUVs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetOuterUVs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetPadding
::UnityEngine::Vector4 UnityEngine::Sprite::GetPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Sprite.GetTextureRect_Injected
void UnityEngine::Sprite::GetTextureRect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetTextureRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextureRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetInnerUVs_Injected
void UnityEngine::Sprite::GetInnerUVs_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetInnerUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInnerUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetOuterUVs_Injected
void UnityEngine::Sprite::GetOuterUVs_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetOuterUVs_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOuterUVs_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.GetPadding_Injected
void UnityEngine::Sprite::GetPadding_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::GetPadding_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPadding_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_bounds_Injected
void UnityEngine::Sprite::get_bounds_Injected(ByRef<::UnityEngine::Bounds> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_bounds_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Bounds&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_rect_Injected
void UnityEngine::Sprite::get_rect_Injected(ByRef<::UnityEngine::Rect> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_rect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_border_Injected
void UnityEngine::Sprite::get_border_Injected(ByRef<::UnityEngine::Vector4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_border_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_border_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Sprite.get_pivot_Injected
void UnityEngine::Sprite::get_pivot_Injected(ByRef<::UnityEngine::Vector2> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprite::get_pivot_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers
#include "UnityEngine/_Scripting/APIUpdating/APIUpdaterRuntimeHelpers.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetMovedFromAttributeDataForType
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType(::System::Type* sourceType, ByRef<::StringW> assembly, ByRef<::StringW> nsp, ByRef<::StringW> klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetMovedFromAttributeDataForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetMovedFromAttributeDataForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceType, byref(assembly), byref(nsp), byref(klass));
}
// Autogenerated method: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers.GetObsoleteTypeRedirection
bool UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection(::System::Type* sourceType, ByRef<::StringW> assemblyName, ByRef<::StringW> nsp, ByRef<::StringW> className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::_Scripting::APIUpdating::APIUpdaterRuntimeHelpers::GetObsoleteTypeRedirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine._Scripting.APIUpdating", "APIUpdaterRuntimeHelpers", "GetObsoleteTypeRedirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceType, byref(assemblyName), byref(nsp), byref(className));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Sprites.DataUtility
#include "UnityEngine/Sprites/DataUtility.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetInnerUV
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetInnerUV(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetInnerUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetInnerUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetOuterUV
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetOuterUV(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetOuterUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetOuterUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetPadding
::UnityEngine::Vector4 UnityEngine::Sprites::DataUtility::GetPadding(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated method: UnityEngine.Sprites.DataUtility.GetMinSize
::UnityEngine::Vector2 UnityEngine::Sprites::DataUtility::GetMinSize(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Sprites::DataUtility::GetMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Sprites", "DataUtility", "GetMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sprite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteAtlasManager
#include "UnityEngine/U2D/SpriteAtlasManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x56B544
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_get_atlasRequested");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.String,System.Action`1<UnityEngine.U2D.SpriteAtlas>> atlasRequested
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested(::System::Action_2<::StringW, ::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_set_atlasRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRequested", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56B580
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_get_atlasRegistered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>*>("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.U2D.SpriteAtlas> atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::_set_atlasRegistered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.U2D", "SpriteAtlasManager", "atlasRegistered", value));
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.add_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::add_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "add_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.remove_atlasRegistered
void UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered(::System::Action_1<::UnityEngine::U2D::SpriteAtlas*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::remove_atlasRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "remove_atlasRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager..cctor
void UnityEngine::U2D::SpriteAtlasManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.RequestAtlas
bool UnityEngine::U2D::SpriteAtlasManager::RequestAtlas(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::RequestAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "RequestAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.PostRegisteredAtlas
void UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas(::UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::PostRegisteredAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "PostRegisteredAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated method: UnityEngine.U2D.SpriteAtlasManager.Register
void UnityEngine::U2D::SpriteAtlasManager::Register(::UnityEngine::U2D::SpriteAtlas* spriteAtlas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlasManager::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.U2D", "SpriteAtlasManager", "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAtlas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, spriteAtlas);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.U2D.SpriteAtlas
#include "UnityEngine/U2D/SpriteAtlas.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.U2D.SpriteAtlas.CanBindTo
bool UnityEngine::U2D::SpriteAtlas::CanBindTo(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::U2D::SpriteAtlas::CanBindTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanBindTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sprite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Experimental.DebugScreenCapture
#include "UnityEngine/Profiling/Experimental/DebugScreenCapture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Unity.Collections.NativeArray`1<System.Byte> <rawImageDataReference>k__BackingField
::Unity::Collections::NativeArray_1<uint8_t>& UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$rawImageDataReference$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$rawImageDataReference$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rawImageDataReference>k__BackingField"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextureFormat <imageFormat>k__BackingField
::UnityEngine::TextureFormat& UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$imageFormat$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$imageFormat$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<imageFormat>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::TextureFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <width>k__BackingField
int& UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$width$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<width>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <height>k__BackingField
int& UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::dyn_$height$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<height>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_rawImageDataReference
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_rawImageDataReference(::Unity::Collections::NativeArray_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::set_rawImageDataReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rawImageDataReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_imageFormat
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_imageFormat(::UnityEngine::TextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::set_imageFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_imageFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_width
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Profiling.Experimental.DebugScreenCapture.set_height
void UnityEngine::Profiling::Experimental::DebugScreenCapture::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Experimental::DebugScreenCapture::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Memory.Experimental.MetaData
#include "UnityEngine/Profiling/Memory/Experimental/MetaData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String content
::StringW& UnityEngine::Profiling::Memory::Experimental::MetaData::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MetaData::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String platform
::StringW& UnityEngine::Profiling::Memory::Experimental::MetaData::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MetaData::dyn_platform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler
#include "UnityEngine/Profiling/Memory/Experimental/MemoryProfiler.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Profiling.Memory.Experimental.MetaData
#include "UnityEngine/Profiling/Memory/Experimental/MetaData.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x56B6AC
// Autogenerated static field getter
// Get static field: static private System.Action`2<System.String,System.Boolean> m_SnapshotFinished
::System::Action_2<::StringW, bool>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SnapshotFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SnapshotFinished");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, bool>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SnapshotFinished")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<System.String,System.Boolean> m_SnapshotFinished
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SnapshotFinished(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SnapshotFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SnapshotFinished", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56B6E8
// Autogenerated static field getter
// Get static field: static private System.Action`3<System.String,System.Boolean,UnityEngine.Profiling.Experimental.DebugScreenCapture> m_SaveScreenshotToDisk
::System::Action_3<::StringW, bool, ::UnityEngine::Profiling::Experimental::DebugScreenCapture>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SaveScreenshotToDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_m_SaveScreenshotToDisk");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::StringW, bool, ::UnityEngine::Profiling::Experimental::DebugScreenCapture>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SaveScreenshotToDisk")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<System.String,System.Boolean,UnityEngine.Profiling.Experimental.DebugScreenCapture> m_SaveScreenshotToDisk
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SaveScreenshotToDisk(::System::Action_3<::StringW, bool, ::UnityEngine::Profiling::Experimental::DebugScreenCapture>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_m_SaveScreenshotToDisk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "m_SaveScreenshotToDisk", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56B724
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Profiling.Memory.Experimental.MetaData> createMetaData
::System::Action_1<::UnityEngine::Profiling::Memory::Experimental::MetaData*>* UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_createMetaData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_get_createMetaData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Profiling::Memory::Experimental::MetaData*>*>("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "createMetaData"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Profiling.Memory.Experimental.MetaData> createMetaData
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_createMetaData(::System::Action_1<::UnityEngine::Profiling::Memory::Experimental::MetaData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::_set_createMetaData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "createMetaData", value));
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.PrepareMetadata
::ArrayW<uint8_t> UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::PrepareMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::PrepareMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "PrepareMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.WriteIntToByteArray
int UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteIntToByteArray(::ArrayW<uint8_t> array, int offset, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteIntToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "WriteIntToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, offset, value);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.WriteStringToByteArray
int UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteStringToByteArray(::ArrayW<uint8_t> array, int offset, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::WriteStringToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "WriteStringToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, offset, value);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.FinalizeSnapshot
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::FinalizeSnapshot(::StringW path, bool result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::FinalizeSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "FinalizeSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, result);
}
// Autogenerated method: UnityEngine.Profiling.Memory.Experimental.MemoryProfiler.SaveScreenshotToDisk
void UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::SaveScreenshotToDisk(::StringW path, bool result, ::System::IntPtr pixelsPtr, int pixelsCount, ::UnityEngine::TextureFormat format, int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Profiling::Memory::Experimental::MemoryProfiler::SaveScreenshotToDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Profiling.Memory.Experimental", "MemoryProfiler", "SaveScreenshotToDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(pixelsPtr), ::il2cpp_utils::ExtractType(pixelsCount), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, result, pixelsPtr, pixelsCount, format, width, height);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_EventDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_EventDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "EventDefined"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode EventDefined
void UnityEngine::Events::PersistentListenerMode::_set_EventDefined(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_EventDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "EventDefined", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Void
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Void() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Void");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Void"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Void
void UnityEngine::Events::PersistentListenerMode::_set_Void(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Void");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Void", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Object
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Object"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Object
void UnityEngine::Events::PersistentListenerMode::_set_Object(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Int
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Int
void UnityEngine::Events::PersistentListenerMode::_set_Int(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Float
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Float
void UnityEngine::Events::PersistentListenerMode::_set_Float(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode String
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "String"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode String
void UnityEngine::Events::PersistentListenerMode::_set_String(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.PersistentListenerMode Bool
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentListenerMode::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::PersistentListenerMode>("UnityEngine.Events", "PersistentListenerMode", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.PersistentListenerMode Bool
void UnityEngine::Events::PersistentListenerMode::_set_Bool(::UnityEngine::Events::PersistentListenerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "PersistentListenerMode", "Bool", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Events::PersistentListenerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentListenerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.UnityEventTools
#include "UnityEngine/Events/UnityEventTools.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityEventTools.TidyAssemblyTypeName
::StringW UnityEngine::Events::UnityEventTools::TidyAssemblyTypeName(::StringW assemblyTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventTools::TidyAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEventTools", "TidyAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assemblyTypeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_ObjectArgument
::UnityEngine::Object*& UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectArgument"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ObjectArgumentAssemblyTypeName
::StringW& UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgumentAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_ObjectArgumentAssemblyTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectArgumentAssemblyTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_IntArgument
int& UnityEngine::Events::ArgumentCache::dyn_m_IntArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_IntArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntArgument"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FloatArgument
float& UnityEngine::Events::ArgumentCache::dyn_m_FloatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_FloatArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FloatArgument"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_StringArgument
::StringW& UnityEngine::Events::ArgumentCache::dyn_m_StringArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_StringArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringArgument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BoolArgument
bool& UnityEngine::Events::ArgumentCache::dyn_m_BoolArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::dyn_m_BoolArgument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BoolArgument"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgument
::UnityEngine::Object* UnityEngine::Events::ArgumentCache::get_unityObjectArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_unityObjectArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_unityObjectArgumentAssemblyTypeName
::StringW UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_unityObjectArgumentAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unityObjectArgumentAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_intArgument
int UnityEngine::Events::ArgumentCache::get_intArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_intArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_floatArgument
float UnityEngine::Events::ArgumentCache::get_floatArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_floatArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_stringArgument
::StringW UnityEngine::Events::ArgumentCache::get_stringArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_stringArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.get_boolArgument
bool UnityEngine::Events::ArgumentCache::get_boolArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::get_boolArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boolArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnBeforeSerialize
void UnityEngine::Events::ArgumentCache::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.ArgumentCache.OnAfterDeserialize
void UnityEngine::Events::ArgumentCache::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::ArgumentCache::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Invoke
void UnityEngine::Events::BaseInvokableCall::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.AllowInvoke
bool UnityEngine::Events::BaseInvokableCall::AllowInvoke(::System::Delegate* delegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::AllowInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "BaseInvokableCall", "AllowInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegate);
}
// Autogenerated method: UnityEngine.Events.BaseInvokableCall.Find
bool UnityEngine::Events::BaseInvokableCall::Find(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::BaseInvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCall
#include "UnityEngine/Events/InvokableCall.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityAction Delegate
::UnityEngine::Events::UnityAction*& UnityEngine::Events::InvokableCall::dyn_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::dyn_Delegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delegate"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.add_Delegate
void UnityEngine::Events::InvokableCall::add_Delegate(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::add_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.remove_Delegate
void UnityEngine::Events::InvokableCall::remove_Delegate(::UnityEngine::Events::UnityAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::remove_Delegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Delegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Invoke
void UnityEngine::Events::InvokableCall::Invoke(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: UnityEngine.Events.InvokableCall.Find
bool UnityEngine::Events::InvokableCall::Find(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCall::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.UnityEventCallState
#include "UnityEngine/Events/UnityEventCallState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState Off
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState Off
void UnityEngine::Events::UnityEventCallState::_set_Off(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_EditorAndRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState EditorAndRuntime
void UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_EditorAndRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "EditorAndRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
::UnityEngine::Events::UnityEventCallState UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_get_RuntimeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityEventCallState>("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Events.UnityEventCallState RuntimeOnly
void UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly(::UnityEngine::Events::UnityEventCallState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::_set_RuntimeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Events", "UnityEventCallState", "RuntimeOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Events::UnityEventCallState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventCallState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Events.ArgumentCache
#include "UnityEngine/Events/ArgumentCache.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_Target
::UnityEngine::Object*& UnityEngine::Events::PersistentCall::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_TargetAssemblyTypeName
::StringW& UnityEngine::Events::PersistentCall::dyn_m_TargetAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_TargetAssemblyTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetAssemblyTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_MethodName
::StringW& UnityEngine::Events::PersistentCall::dyn_m_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_MethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.PersistentListenerMode m_Mode
::UnityEngine::Events::PersistentListenerMode& UnityEngine::Events::PersistentCall::dyn_m_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mode"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::PersistentListenerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.ArgumentCache m_Arguments
::UnityEngine::Events::ArgumentCache*& UnityEngine::Events::PersistentCall::dyn_m_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_Arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Arguments"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::ArgumentCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.UnityEventCallState m_CallState
::UnityEngine::Events::UnityEventCallState& UnityEngine::Events::PersistentCall::dyn_m_CallState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::dyn_m_CallState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CallState"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::UnityEventCallState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_target
::UnityEngine::Object* UnityEngine::Events::PersistentCall::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_targetAssemblyTypeName
::StringW UnityEngine::Events::PersistentCall::get_targetAssemblyTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_targetAssemblyTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetAssemblyTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_methodName
::StringW UnityEngine::Events::PersistentCall::get_methodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_methodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_methodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_mode
::UnityEngine::Events::PersistentListenerMode UnityEngine::Events::PersistentCall::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::PersistentListenerMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.get_arguments
::UnityEngine::Events::ArgumentCache* UnityEngine::Events::PersistentCall::get_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::get_arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::ArgumentCache*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.IsValid
bool UnityEngine::Events::PersistentCall::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetRuntimeCall
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetRuntimeCall(::UnityEngine::Events::UnityEventBase* theEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::GetRuntimeCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRuntimeCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(theEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, theEvent);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.GetObjectCall
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::PersistentCall::GetObjectCall(::UnityEngine::Object* target, ::System::Reflection::MethodInfo* method, ::UnityEngine::Events::ArgumentCache* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::GetObjectCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "PersistentCall", "GetObjectCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, method, arguments);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.OnBeforeSerialize
void UnityEngine::Events::PersistentCall::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.PersistentCall.OnAfterDeserialize
void UnityEngine::Events::PersistentCall::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCall::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Events.PersistentCall> m_Calls
::System::Collections::Generic::List_1<::UnityEngine::Events::PersistentCall*>*& UnityEngine::Events::PersistentCallGroup::dyn_m_Calls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCallGroup::dyn_m_Calls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Calls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::PersistentCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.PersistentCallGroup.Initialize
void UnityEngine::Events::PersistentCallGroup::Initialize(::UnityEngine::Events::InvokableCallList* invokableList, ::UnityEngine::Events::UnityEventBase* unityEventBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::PersistentCallGroup::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokableList), ::il2cpp_utils::ExtractType(unityEventBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, invokableList, unityEventBase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_PersistentCalls
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_PersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_PersistentCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PersistentCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_RuntimeCalls
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_RuntimeCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_RuntimeCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RuntimeCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> m_ExecutingCalls
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*& UnityEngine::Events::InvokableCallList::dyn_m_ExecutingCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_ExecutingCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExecutingCalls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedsUpdate
bool& UnityEngine::Events::InvokableCallList::dyn_m_NeedsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::dyn_m_NeedsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddPersistentInvokableCall
void UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::AddPersistentInvokableCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPersistentInvokableCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.AddListener
void UnityEngine::Events::InvokableCallList::AddListener(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.RemoveListener
void UnityEngine::Events::InvokableCallList::RemoveListener(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.ClearPersistent
void UnityEngine::Events::InvokableCallList::ClearPersistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::ClearPersistent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPersistent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.InvokableCallList.PrepareInvoke
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::InvokableCallList::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::InvokableCallList::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEventBase
#include "UnityEngine/Events/UnityEventBase.hpp"
// Including type: UnityEngine.Events.InvokableCallList
#include "UnityEngine/Events/InvokableCallList.hpp"
// Including type: UnityEngine.Events.PersistentCallGroup
#include "UnityEngine/Events/PersistentCallGroup.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: UnityEngine.Events.PersistentCall
#include "UnityEngine/Events/PersistentCall.hpp"
// Including type: UnityEngine.Events.PersistentListenerMode
#include "UnityEngine/Events/PersistentListenerMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.InvokableCallList m_Calls
::UnityEngine::Events::InvokableCallList*& UnityEngine::Events::UnityEventBase::dyn_m_Calls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_Calls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Calls"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::InvokableCallList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Events.PersistentCallGroup m_PersistentCalls
::UnityEngine::Events::PersistentCallGroup*& UnityEngine::Events::UnityEventBase::dyn_m_PersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_PersistentCalls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PersistentCalls"))->offset;
  return *reinterpret_cast<::UnityEngine::Events::PersistentCallGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CallsDirty
bool& UnityEngine::Events::UnityEventBase::dyn_m_CallsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::dyn_m_CallsDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CallsDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Events::UnityEventBase::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod_Impl
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod_Impl(::StringW name, ::System::Type* targetObjType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod_Impl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(targetObjType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, targetObjType);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetDelegate
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEventBase::GetDelegate(::Il2CppObject* target, ::System::Reflection::MethodInfo* theFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::GetDelegate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(theFunction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, target, theFunction);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(::UnityEngine::Events::PersistentCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.FindMethod
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::FindMethod(::StringW name, ::System::Type* listenerType, ::UnityEngine::Events::PersistentListenerMode mode, ::System::Type* argumentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(listenerType), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(argumentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, listenerType, mode, argumentType);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.DirtyPersistentCalls
void UnityEngine::Events::UnityEventBase::DirtyPersistentCalls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::DirtyPersistentCalls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DirtyPersistentCalls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RebuildPersistentCallsIfNeeded
void UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::RebuildPersistentCallsIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RebuildPersistentCallsIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.AddCall
void UnityEngine::Events::UnityEventBase::AddCall(::UnityEngine::Events::BaseInvokableCall* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::AddCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.RemoveListener
void UnityEngine::Events::UnityEventBase::RemoveListener(::Il2CppObject* targetObj, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetObj), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetObj, method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.PrepareInvoke
::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>* UnityEngine::Events::UnityEventBase::PrepareInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::PrepareInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Events::BaseInvokableCall*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.GetValidMethodInfo
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEventBase::GetValidMethodInfo(::System::Type* objectType, ::StringW functionName, ::ArrayW<::System::Type*> argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::GetValidMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEventBase", "GetValidMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(functionName), ::il2cpp_utils::ExtractType(argumentTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, functionName, argumentTypes);
}
// Autogenerated method: UnityEngine.Events.UnityEventBase.ToString
::StringW UnityEngine::Events::UnityEventBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEventBase::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Events.UnityAction.Invoke
void UnityEngine::Events::UnityAction::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityAction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityAction.BeginInvoke
::System::IAsyncResult* UnityEngine::Events::UnityAction::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityAction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.Events.UnityAction.EndInvoke
void UnityEngine::Events::UnityAction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityAction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: UnityEngine.Events.UnityAction
#include "UnityEngine/Events/UnityAction.hpp"
// Including type: UnityEngine.Events.BaseInvokableCall
#include "UnityEngine/Events/BaseInvokableCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object[] m_InvokeArray
::ArrayW<::Il2CppObject*>& UnityEngine::Events::UnityEvent::dyn_m_InvokeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::dyn_m_InvokeArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InvokeArray"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.AddListener
void UnityEngine::Events::UnityEvent::AddListener(::UnityEngine::Events::UnityAction* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::AddListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.RemoveListener
void UnityEngine::Events::UnityEvent::RemoveListener(::UnityEngine::Events::UnityAction* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::RemoveListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.GetDelegate
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEvent::GetDelegate(::UnityEngine::Events::UnityAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::GetDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Events", "UnityEvent", "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.Invoke
void UnityEngine::Events::UnityEvent::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.FindMethod_Impl
::System::Reflection::MethodInfo* UnityEngine::Events::UnityEvent::FindMethod_Impl(::StringW name, ::System::Type* targetObjType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::FindMethod_Impl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMethod_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(targetObjType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method, name, targetObjType);
}
// Autogenerated method: UnityEngine.Events.UnityEvent.GetDelegate
::UnityEngine::Events::BaseInvokableCall* UnityEngine::Events::UnityEvent::GetDelegate(::Il2CppObject* target, ::System::Reflection::MethodInfo* theFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Events::UnityEvent::GetDelegate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(theFunction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::BaseInvokableCall*, false>(this, ___internal__method, target, theFunction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Serialization.FormerlySerializedAsAttribute
#include "UnityEngine/Serialization/FormerlySerializedAsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_oldName
::StringW& UnityEngine::Serialization::FormerlySerializedAsAttribute::dyn_m_oldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Serialization::FormerlySerializedAsAttribute::dyn_m_oldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_oldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GarbageCollector
#include "UnityEngine/Scripting/GarbageCollector.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x56BC60
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode> GCModeChanged
::System::Action_1<::UnityEngine::Scripting::GarbageCollector::Mode>* UnityEngine::Scripting::GarbageCollector::_get_GCModeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::_get_GCModeChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Scripting::GarbageCollector::Mode>*>("UnityEngine.Scripting", "GarbageCollector", "GCModeChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode> GCModeChanged
void UnityEngine::Scripting::GarbageCollector::_set_GCModeChanged(::System::Action_1<::UnityEngine::Scripting::GarbageCollector::Mode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::_set_GCModeChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector", "GCModeChanged", value));
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.set_GCMode
void UnityEngine::Scripting::GarbageCollector::set_GCMode(::UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::set_GCMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "set_GCMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.SetMode
void UnityEngine::Scripting::GarbageCollector::SetMode(::UnityEngine::Scripting::GarbageCollector::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::SetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "SetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Scripting.GarbageCollector.GetMode
::UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::GetMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::GetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Scripting", "GarbageCollector", "GetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Scripting::GarbageCollector::Mode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode
#include "UnityEngine/Scripting/GarbageCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Disabled
::UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::Mode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Scripting::GarbageCollector::Mode>("UnityEngine.Scripting", "GarbageCollector/Mode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Disabled
void UnityEngine::Scripting::GarbageCollector::Mode::_set_Disabled(::UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector/Mode", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Enabled
::UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::Mode::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Scripting::GarbageCollector::Mode>("UnityEngine.Scripting", "GarbageCollector/Mode", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Enabled
void UnityEngine::Scripting::GarbageCollector::Mode::_set_Enabled(::UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector/Mode", "Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Manual
::UnityEngine::Scripting::GarbageCollector::Mode UnityEngine::Scripting::GarbageCollector::Mode::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Scripting::GarbageCollector::Mode>("UnityEngine.Scripting", "GarbageCollector/Mode", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Scripting.GarbageCollector/UnityEngine.Scripting.Mode Manual
void UnityEngine::Scripting::GarbageCollector::Mode::_set_Manual(::UnityEngine::Scripting::GarbageCollector::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Scripting", "GarbageCollector/Mode", "Manual", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Scripting::GarbageCollector::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::GarbageCollector::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.PreserveAttribute
#include "UnityEngine/Scripting/PreserveAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData
#include "UnityEngine/Scripting/APIUpdating/MovedFromAttributeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String className
::StringW& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_className() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_className");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "className"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String nameSpace
::StringW& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_nameSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_nameSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameSpace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String assembly
::StringW& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_assembly");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assembly"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean classHasChanged
bool& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_classHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_classHasChanged");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "classHasChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean nameSpaceHasChanged
bool& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_nameSpaceHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_nameSpaceHasChanged");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameSpaceHasChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean assemblyHasChanged
bool& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_assemblyHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_assemblyHasChanged");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyHasChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoUdpateAPI
bool& UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_autoUdpateAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::dyn_autoUdpateAPI");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoUdpateAPI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData.Set
void UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::Set(bool autoUpdateAPI, ::StringW sourceNamespace, ::StringW sourceAssembly, ::StringW sourceClassName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoUpdateAPI), ::il2cpp_utils::ExtractType(sourceNamespace), ::il2cpp_utils::ExtractType(sourceAssembly), ::il2cpp_utils::ExtractType(sourceClassName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoUpdateAPI, sourceNamespace, sourceAssembly, sourceClassName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Scripting.APIUpdating.MovedFromAttribute
#include "UnityEngine/Scripting/APIUpdating/MovedFromAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.Scripting.APIUpdating.MovedFromAttributeData data
::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData& UnityEngine::Scripting::APIUpdating::MovedFromAttribute::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Scripting::APIUpdating::MovedFromAttribute::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::UnityEngine::Scripting::APIUpdating::MovedFromAttributeData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Handle
int& UnityEngine::SceneManagement::Scene::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_handle
int UnityEngine::SceneManagement::Scene::get_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::get_handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_name
::StringW UnityEngine::SceneManagement::Scene::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_isLoaded
bool UnityEngine::SceneManagement::Scene::get_isLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::get_isLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.get_rootCount
int UnityEngine::SceneManagement::Scene::get_rootCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::get_rootCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rootCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.IsValidInternal
bool UnityEngine::SceneManagement::Scene::IsValidInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::IsValidInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "IsValidInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetNameInternal
::StringW UnityEngine::SceneManagement::Scene::GetNameInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetNameInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetNameInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetIsLoadedInternal
bool UnityEngine::SceneManagement::Scene::GetIsLoadedInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetIsLoadedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetIsLoadedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootCountInternal
int UnityEngine::SceneManagement::Scene::GetRootCountInternal(int sceneHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetRootCountInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetRootCountInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneHandle);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjectsInternal
void UnityEngine::SceneManagement::Scene::GetRootGameObjectsInternal(int sceneHandle, ::Il2CppObject* resultRootList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetRootGameObjectsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "Scene", "GetRootGameObjectsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneHandle), ::il2cpp_utils::ExtractType(resultRootList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneHandle, resultRootList);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.IsValid
bool UnityEngine::SceneManagement::Scene::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjects
::ArrayW<::UnityEngine::GameObject*> UnityEngine::SceneManagement::Scene::GetRootGameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetRootGameObjects
void UnityEngine::SceneManagement::Scene::GetRootGameObjects(::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* rootGameObjects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetRootGameObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootGameObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootGameObjects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rootGameObjects);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.GetHashCode
int UnityEngine::SceneManagement::Scene::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.Scene.Equals
bool UnityEngine::SceneManagement::Scene::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::Scene::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.SceneManagerAPIInternal
#include "UnityEngine/SceneManagement/SceneManagerAPIInternal.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPIInternal.LoadSceneAsyncNameIndexInternal
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal(::StringW sceneName, int sceneBuildIndex, ::UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPIInternal", "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPIInternal.LoadSceneAsyncNameIndexInternal_Injected
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected(::StringW sceneName, int sceneBuildIndex, ByRef<::UnityEngine::SceneManagement::LoadSceneParameters> parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPIInternal::LoadSceneAsyncNameIndexInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPIInternal", "LoadSceneAsyncNameIndexInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, byref(parameters), mustCompleteNextFrame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.SceneManagerAPI
#include "UnityEngine/SceneManagement/SceneManagerAPI.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.SceneManagement.SceneManagerAPI s_DefaultAPI
::UnityEngine::SceneManagement::SceneManagerAPI* UnityEngine::SceneManagement::SceneManagerAPI::_get_s_DefaultAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::_get_s_DefaultAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::SceneManagerAPI*>("UnityEngine.SceneManagement", "SceneManagerAPI", "s_DefaultAPI"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.SceneManagement.SceneManagerAPI s_DefaultAPI
void UnityEngine::SceneManagement::SceneManagerAPI::_set_s_DefaultAPI(::UnityEngine::SceneManagement::SceneManagerAPI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::_set_s_DefaultAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManagerAPI", "s_DefaultAPI", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56BCD4
// Autogenerated static field getter
// Get static field: static private UnityEngine.SceneManagement.SceneManagerAPI <overrideAPI>k__BackingField
::UnityEngine::SceneManagement::SceneManagerAPI* UnityEngine::SceneManagement::SceneManagerAPI::_get_$overrideAPI$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::_get_$overrideAPI$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::SceneManagerAPI*>("UnityEngine.SceneManagement", "SceneManagerAPI", "<overrideAPI>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.SceneManagement.SceneManagerAPI <overrideAPI>k__BackingField
void UnityEngine::SceneManagement::SceneManagerAPI::_set_$overrideAPI$k__BackingField(::UnityEngine::SceneManagement::SceneManagerAPI* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::_set_$overrideAPI$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManagerAPI", "<overrideAPI>k__BackingField", value));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPI.get_ActiveAPI
::UnityEngine::SceneManagement::SceneManagerAPI* UnityEngine::SceneManagement::SceneManagerAPI::get_ActiveAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::get_ActiveAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPI", "get_ActiveAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::SceneManagerAPI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPI.get_overrideAPI
::UnityEngine::SceneManagement::SceneManagerAPI* UnityEngine::SceneManagement::SceneManagerAPI::get_overrideAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::get_overrideAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPI", "get_overrideAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::SceneManagerAPI*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPI..cctor
void UnityEngine::SceneManagement::SceneManagerAPI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManagerAPI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPI.LoadSceneAsyncByNameOrIndex
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPI::LoadSceneAsyncByNameOrIndex(::StringW sceneName, int sceneBuildIndex, ::UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::LoadSceneAsyncByNameOrIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSceneAsyncByNameOrIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(this, ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManagerAPI.LoadFirstScene
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManagerAPI::LoadFirstScene(bool mustLoadAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManagerAPI::LoadFirstScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFirstScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mustLoadAsync)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(this, ___internal__method, mustLoadAsync);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.SceneManager
#include "UnityEngine/SceneManagement/SceneManager.hpp"
// Including type: UnityEngine.Events.UnityAction`2
#include "UnityEngine/Events/UnityAction_2.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.SceneManagement.UnloadSceneOptions
#include "UnityEngine/SceneManagement/UnloadSceneOptions.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean s_AllowLoadScene
bool UnityEngine::SceneManagement::SceneManager::_get_s_AllowLoadScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_get_s_AllowLoadScene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.SceneManagement", "SceneManager", "s_AllowLoadScene"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_AllowLoadScene
void UnityEngine::SceneManagement::SceneManager::_set_s_AllowLoadScene(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_set_s_AllowLoadScene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "s_AllowLoadScene", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56BD10
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* UnityEngine::SceneManagement::SceneManager::_get_sceneLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_get_sceneLoaded");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>*>("UnityEngine.SceneManagement", "SceneManager", "sceneLoaded")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> sceneLoaded
void UnityEngine::SceneManagement::SceneManager::_set_sceneLoaded(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_set_sceneLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "sceneLoaded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56BD4C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
::UnityEngine::Events::UnityAction_1<::UnityEngine::SceneManagement::Scene>* UnityEngine::SceneManagement::SceneManager::_get_sceneUnloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_get_sceneUnloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_1<::UnityEngine::SceneManagement::Scene>*>("UnityEngine.SceneManagement", "SceneManager", "sceneUnloaded"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`1<UnityEngine.SceneManagement.Scene> sceneUnloaded
void UnityEngine::SceneManagement::SceneManager::_set_sceneUnloaded(::UnityEngine::Events::UnityAction_1<::UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_set_sceneUnloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "sceneUnloaded", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56BD88
// Autogenerated static field getter
// Get static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::Scene>* UnityEngine::SceneManagement::SceneManager::_get_activeSceneChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_get_activeSceneChanged");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::Scene>*>("UnityEngine.SceneManagement", "SceneManager", "activeSceneChanged")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Events.UnityAction`2<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> activeSceneChanged
void UnityEngine::SceneManagement::SceneManager::_set_activeSceneChanged(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::Scene>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::_set_activeSceneChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "SceneManager", "activeSceneChanged", value));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.get_sceneCount
int UnityEngine::SceneManagement::SceneManager::get_sceneCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::get_sceneCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "get_sceneCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.add_sceneLoaded
void UnityEngine::SceneManagement::SceneManager::add_sceneLoaded(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::add_sceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "add_sceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.remove_sceneLoaded
void UnityEngine::SceneManagement::SceneManager::remove_sceneLoaded(::UnityEngine::Events::UnityAction_2<::UnityEngine::SceneManagement::Scene, ::UnityEngine::SceneManagement::LoadSceneMode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::remove_sceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "remove_sceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager..cctor
void UnityEngine::SceneManagement::SceneManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetActiveScene
::UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetActiveScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetActiveScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetActiveScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.SetActiveScene
bool UnityEngine::SceneManagement::SceneManager::SetActiveScene(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::SetActiveScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "SetActiveScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneByName
::UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetSceneByName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetSceneByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneAt
::UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::GetSceneAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetSceneAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsyncInternal
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::UnloadSceneOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, options);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsyncNameIndexInternal
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsyncNameIndexInternal(::StringW sceneName, int sceneBuildIndex, ::UnityEngine::SceneManagement::LoadSceneParameters parameters, bool mustCompleteNextFrame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadSceneAsyncNameIndexInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsyncNameIndexInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(sceneBuildIndex), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(mustCompleteNextFrame)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, sceneBuildIndex, parameters, mustCompleteNextFrame);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadFirstScene_Internal
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadFirstScene_Internal(bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadFirstScene_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadFirstScene_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(async)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, async);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
void UnityEngine::SceneManagement::SceneManager::LoadScene(::StringW sceneName, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadScene
::UnityEngine::SceneManagement::Scene UnityEngine::SceneManagement::SceneManager::LoadScene(::StringW sceneName, ::UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(::StringW sceneName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.LoadSceneAsync
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::LoadSceneAsync(::StringW sceneName, ::UnityEngine::SceneManagement::LoadSceneParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::LoadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "LoadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneName), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sceneName, parameters);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsync
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::UnloadSceneAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_SceneLoaded
void UnityEngine::SceneManagement::SceneManager::Internal_SceneLoaded(::UnityEngine::SceneManagement::Scene scene, ::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::Internal_SceneLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_SceneLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, mode);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_SceneUnloaded
void UnityEngine::SceneManagement::SceneManager::Internal_SceneUnloaded(::UnityEngine::SceneManagement::Scene scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::Internal_SceneUnloaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_SceneUnloaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.Internal_ActiveSceneChanged
void UnityEngine::SceneManagement::SceneManager::Internal_ActiveSceneChanged(::UnityEngine::SceneManagement::Scene previousActiveScene, ::UnityEngine::SceneManagement::Scene newActiveScene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::Internal_ActiveSceneChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "Internal_ActiveSceneChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousActiveScene), ::il2cpp_utils::ExtractType(newActiveScene)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, previousActiveScene, newActiveScene);
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetActiveScene_Injected
void UnityEngine::SceneManagement::SceneManager::GetActiveScene_Injected(ByRef<::UnityEngine::SceneManagement::Scene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetActiveScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetActiveScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.SetActiveScene_Injected
bool UnityEngine::SceneManagement::SceneManager::SetActiveScene_Injected(ByRef<::UnityEngine::SceneManagement::Scene> scene) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::SetActiveScene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "SetActiveScene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(scene));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneByName_Injected
void UnityEngine::SceneManagement::SceneManager::GetSceneByName_Injected(::StringW name, ByRef<::UnityEngine::SceneManagement::Scene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetSceneByName_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneByName_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(ret));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.GetSceneAt_Injected
void UnityEngine::SceneManagement::SceneManager::GetSceneAt_Injected(int index, ByRef<::UnityEngine::SceneManagement::Scene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::GetSceneAt_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "GetSceneAt_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, byref(ret));
}
// Autogenerated method: UnityEngine.SceneManagement.SceneManager.UnloadSceneAsyncInternal_Injected
::UnityEngine::AsyncOperation* UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal_Injected(ByRef<::UnityEngine::SceneManagement::Scene> scene, ::UnityEngine::SceneManagement::UnloadSceneOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::SceneManager::UnloadSceneAsyncInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.SceneManagement", "SceneManager", "UnloadSceneAsyncInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(scene), options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LoadSceneMode Single
::UnityEngine::SceneManagement::LoadSceneMode UnityEngine::SceneManagement::LoadSceneMode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneMode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::LoadSceneMode>("UnityEngine.SceneManagement", "LoadSceneMode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LoadSceneMode Single
void UnityEngine::SceneManagement::LoadSceneMode::_set_Single(::UnityEngine::SceneManagement::LoadSceneMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneMode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LoadSceneMode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LoadSceneMode Additive
::UnityEngine::SceneManagement::LoadSceneMode UnityEngine::SceneManagement::LoadSceneMode::_get_Additive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneMode::_get_Additive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::LoadSceneMode>("UnityEngine.SceneManagement", "LoadSceneMode", "Additive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LoadSceneMode Additive
void UnityEngine::SceneManagement::LoadSceneMode::_set_Additive(::UnityEngine::SceneManagement::LoadSceneMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneMode::_set_Additive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LoadSceneMode", "Additive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::SceneManagement::LoadSceneMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LocalPhysicsMode
#include "UnityEngine/SceneManagement/LocalPhysicsMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode None
::UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode None
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_None(::UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics2D
::UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics2D
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics2D(::UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics3D
::UnityEngine::SceneManagement::LocalPhysicsMode UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_get_Physics3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::LocalPhysicsMode>("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.LocalPhysicsMode Physics3D
void UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics3D(::UnityEngine::SceneManagement::LocalPhysicsMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::_set_Physics3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "LocalPhysicsMode", "Physics3D", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::SceneManagement::LocalPhysicsMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LocalPhysicsMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.LoadSceneParameters
#include "UnityEngine/SceneManagement/LoadSceneParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.LoadSceneMode m_LoadSceneMode
::UnityEngine::SceneManagement::LoadSceneMode& UnityEngine::SceneManagement::LoadSceneParameters::dyn_m_LoadSceneMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneParameters::dyn_m_LoadSceneMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoadSceneMode"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::LoadSceneMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.LocalPhysicsMode m_LocalPhysicsMode
::UnityEngine::SceneManagement::LocalPhysicsMode& UnityEngine::SceneManagement::LoadSceneParameters::dyn_m_LocalPhysicsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneParameters::dyn_m_LocalPhysicsMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocalPhysicsMode"))->offset;
  return *reinterpret_cast<::UnityEngine::SceneManagement::LocalPhysicsMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.SceneManagement.LoadSceneParameters..ctor
UnityEngine::SceneManagement::LoadSceneParameters::LoadSceneParameters(::UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::LoadSceneParameters::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SceneManagement.UnloadSceneOptions
#include "UnityEngine/SceneManagement/UnloadSceneOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.UnloadSceneOptions None
::UnityEngine::SceneManagement::UnloadSceneOptions UnityEngine::SceneManagement::UnloadSceneOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::UnloadSceneOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::UnloadSceneOptions>("UnityEngine.SceneManagement", "UnloadSceneOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.UnloadSceneOptions None
void UnityEngine::SceneManagement::UnloadSceneOptions::_set_None(::UnityEngine::SceneManagement::UnloadSceneOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::UnloadSceneOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "UnloadSceneOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.SceneManagement.UnloadSceneOptions UnloadAllEmbeddedSceneObjects
::UnityEngine::SceneManagement::UnloadSceneOptions UnityEngine::SceneManagement::UnloadSceneOptions::_get_UnloadAllEmbeddedSceneObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::UnloadSceneOptions::_get_UnloadAllEmbeddedSceneObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::SceneManagement::UnloadSceneOptions>("UnityEngine.SceneManagement", "UnloadSceneOptions", "UnloadAllEmbeddedSceneObjects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.SceneManagement.UnloadSceneOptions UnloadAllEmbeddedSceneObjects
void UnityEngine::SceneManagement::UnloadSceneOptions::_set_UnloadAllEmbeddedSceneObjects(::UnityEngine::SceneManagement::UnloadSceneOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::UnloadSceneOptions::_set_UnloadAllEmbeddedSceneObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.SceneManagement", "UnloadSceneOptions", "UnloadAllEmbeddedSceneObjects", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::SceneManagement::UnloadSceneOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SceneManagement::UnloadSceneOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LowLevel.PlayerLoopSystem
#include "UnityEngine/LowLevel/PlayerLoopSystem.hpp"
// Including type: UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction
#include "UnityEngine/LowLevel/PlayerLoopSystem_UpdateFunction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
::System::Type*& UnityEngine::LowLevel::PlayerLoopSystem::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LowLevel.PlayerLoopSystem[] subSystemList
::ArrayW<::UnityEngine::LowLevel::PlayerLoopSystem>& UnityEngine::LowLevel::PlayerLoopSystem::dyn_subSystemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::dyn_subSystemList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subSystemList"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LowLevel::PlayerLoopSystem>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction updateDelegate
::UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction*& UnityEngine::LowLevel::PlayerLoopSystem::dyn_updateDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::dyn_updateDelegate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDelegate"))->offset;
  return *reinterpret_cast<::UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr updateFunction
::System::IntPtr& UnityEngine::LowLevel::PlayerLoopSystem::dyn_updateFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::dyn_updateFunction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateFunction"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr loopConditionFunction
::System::IntPtr& UnityEngine::LowLevel::PlayerLoopSystem::dyn_loopConditionFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::dyn_loopConditionFunction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopConditionFunction"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem.ToString
::StringW UnityEngine::LowLevel::PlayerLoopSystem::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction
#include "UnityEngine/LowLevel/PlayerLoopSystem_UpdateFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction.Invoke
void UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction.BeginInvoke
::System::IAsyncResult* UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.LowLevel.PlayerLoopSystem/UnityEngine.LowLevel.UpdateFunction.EndInvoke
void UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowLevel::PlayerLoopSystem::UpdateFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 playerId
int& UnityEngine::Networking::PlayerConnection::MessageEventArgs::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::MessageEventArgs::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] data
::ArrayW<uint8_t>& UnityEngine::Networking::PlayerConnection::MessageEventArgs::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::MessageEventArgs::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass12_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass12_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass13_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass20_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass20_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.IPlayerEditorConnectionNative
#include "UnityEngine/IPlayerEditorConnectionNative.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.IPlayerEditorConnectionNative connectionNative
::UnityEngine::IPlayerEditorConnectionNative* UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_connectionNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_connectionNative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::IPlayerEditorConnectionNative*>("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "connectionNative"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.IPlayerEditorConnectionNative connectionNative
void UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_connectionNative(::UnityEngine::IPlayerEditorConnectionNative* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_connectionNative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "connectionNative", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Networking.PlayerConnection.PlayerConnection s_Instance
::UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Networking::PlayerConnection::PlayerConnection*>("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Networking.PlayerConnection.PlayerConnection s_Instance
void UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_s_Instance(::UnityEngine::Networking::PlayerConnection::PlayerConnection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents m_PlayerEditorConnectionEvents
::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents*& UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_PlayerEditorConnectionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_PlayerEditorConnectionEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayerEditorConnectionEvents"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_connectedPlayers
::System::Collections::Generic::List_1<int>*& UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_connectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_connectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsInitilized
bool& UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_IsInitilized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::dyn_m_IsInitilized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsInitilized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.get_instance
::UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::PlayerConnection::PlayerConnection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.get_isConnected
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.CreateInstance
::UnityEngine::Networking::PlayerConnection::PlayerConnection* UnityEngine::Networking::PlayerConnection::PlayerConnection::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Networking::PlayerConnection::PlayerConnection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.OnEnable
void UnityEngine::Networking::PlayerConnection::PlayerConnection::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.GetConnectionNativeApi
::UnityEngine::IPlayerEditorConnectionNative* UnityEngine::Networking::PlayerConnection::PlayerConnection::GetConnectionNativeApi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::GetConnectionNativeApi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionNativeApi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IPlayerEditorConnectionNative*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Register
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Register(::System::Guid messageId, ::UnityEngine::Events::UnityAction_1<::UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::Register");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Unregister
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Unregister(::System::Guid messageId, ::UnityEngine::Events::UnityAction_1<::UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::Unregister");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterConnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterConnection(::UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.RegisterDisconnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterDisconnection(::UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::RegisterDisconnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDisconnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.UnregisterConnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterConnection(::UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.UnregisterDisconnection
void UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterDisconnection(::UnityEngine::Events::UnityAction_1<int>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::UnregisterDisconnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDisconnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.Send
void UnityEngine::Networking::PlayerConnection::PlayerConnection::Send(::System::Guid messageId, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.TrySend
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::TrySend(::System::Guid messageId, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::TrySend");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, data);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.BlockUntilRecvMsg
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::BlockUntilRecvMsg(::System::Guid messageId, int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::BlockUntilRecvMsg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockUntilRecvMsg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, timeout);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.DisconnectAll
void UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.MessageCallbackInternal
void UnityEngine::Networking::PlayerConnection::PlayerConnection::MessageCallbackInternal(::System::IntPtr data, uint64_t size, uint64_t guid, ::StringW messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::MessageCallbackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "MessageCallbackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(guid), ::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, size, guid, messageId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.ConnectedCallbackInternal
void UnityEngine::Networking::PlayerConnection::PlayerConnection::ConnectedCallbackInternal(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::ConnectedCallbackInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "ConnectedCallbackInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection.DisconnectedCallback
void UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectedCallback(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::DisconnectedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Networking.PlayerConnection", "PlayerConnection", "DisconnectedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass12_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass12_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid messageId
::System::Guid& UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::dyn_messageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::dyn_messageId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass12_0.<Register>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::$Register$b__0(::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass12_0::<Register>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Register>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass13_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid messageId
::System::Guid& UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::dyn_messageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::dyn_messageId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass13_0.<Unregister>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::$Unregister$b__0(::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass13_0::<Unregister>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Unregister>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass20_0
#include "UnityEngine/Networking/PlayerConnection/PlayerConnection_--c__DisplayClass20_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean msgReceived
bool& UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::dyn_msgReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::dyn_msgReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "msgReceived"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerConnection/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass20_0.<BlockUntilRecvMsg>b__0
void UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::$BlockUntilRecvMsg$b__0(::UnityEngine::Networking::PlayerConnection::MessageEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerConnection::$$c__DisplayClass20_0::<BlockUntilRecvMsg>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BlockUntilRecvMsg>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.ConnectionChangeEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_ConnectionChangeEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass6_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass7_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass8_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass8_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Events.UnityEvent`1
#include "UnityEngine/Events/UnityEvent_1.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers> messageTypeSubscribers
::System::Collections::Generic::List_1<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>*& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_messageTypeSubscribers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_messageTypeSubscribers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageTypeSubscribers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.ConnectionChangeEvent connectionEvent
::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::ConnectionChangeEvent*& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_connectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_connectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::ConnectionChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.ConnectionChangeEvent disconnectionEvent
::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::ConnectionChangeEvent*& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_disconnectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::dyn_disconnectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectionEvent"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::ConnectionChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.InvokeMessageIdSubscribers
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::InvokeMessageIdSubscribers(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::InvokeMessageIdSubscribers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMessageIdSubscribers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.AddAndCreate
::UnityEngine::Events::UnityEvent_1<::UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::AddAndCreate(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::AddAndCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAndCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent_1<::UnityEngine::Networking::PlayerConnection::MessageEventArgs*>*, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents.UnregisterManagedCallback
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::UnregisterManagedCallback(::System::Guid messageId, ::UnityEngine::Events::UnityAction_1<::UnityEngine::Networking::PlayerConnection::MessageEventArgs*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::UnregisterManagedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterManagedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.ConnectionChangeEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_ConnectionChangeEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageEvent
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_messageTypeId
::StringW& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_m_messageTypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_m_messageTypeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_messageTypeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 subscriberCount
int& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_subscriberCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_subscriberCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscriberCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageEvent messageCallback
::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageEvent*& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_messageCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::dyn_messageCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageCallback"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers.get_MessageTypeId
::System::Guid UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::get_MessageTypeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MessageTypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers.set_MessageTypeId
void UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers::set_MessageTypeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MessageTypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass6_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass6_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid messageId
::System::Guid& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::dyn_messageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::dyn_messageId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass6_0.<InvokeMessageIdSubscribers>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::$InvokeMessageIdSubscribers$b__0(::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass6_0::<InvokeMessageIdSubscribers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeMessageIdSubscribers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass7_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass7_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid messageId
::System::Guid& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::dyn_messageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::dyn_messageId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass7_0.<AddAndCreate>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::$AddAndCreate$b__0(::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass7_0::<AddAndCreate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddAndCreate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass8_0
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_--c__DisplayClass8_0.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.MessageTypeSubscribers
#include "UnityEngine/Networking/PlayerConnection/PlayerEditorConnectionEvents_MessageTypeSubscribers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Guid messageId
::System::Guid& UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass8_0::dyn_messageId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass8_0::dyn_messageId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageId"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Networking.PlayerConnection.PlayerEditorConnectionEvents/UnityEngine.Networking.PlayerConnection.<>c__DisplayClass8_0.<UnregisterManagedCallback>b__0
bool UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass8_0::$UnregisterManagedCallback$b__0(::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::MessageTypeSubscribers* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Networking::PlayerConnection::PlayerEditorConnectionEvents::$$c__DisplayClass8_0::<UnregisterManagedCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnregisterManagedCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Internal.DefaultValueAttribute
#include "UnityEngine/Internal/DefaultValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object DefaultValue
::Il2CppObject*& UnityEngine::Internal::DefaultValueAttribute::dyn_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal::DefaultValueAttribute::dyn_DefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Internal.DefaultValueAttribute.get_Value
::Il2CppObject* UnityEngine::Internal::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal::DefaultValueAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Internal.DefaultValueAttribute.Equals
bool UnityEngine::Internal::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal::DefaultValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Internal.DefaultValueAttribute.GetHashCode
int UnityEngine::Internal::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Internal::DefaultValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Internal.ExcludeFromDocsAttribute
#include "UnityEngine/Internal/ExcludeFromDocsAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.IndexFormat
#include "UnityEngine/Rendering/IndexFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.IndexFormat UInt16
::UnityEngine::Rendering::IndexFormat UnityEngine::Rendering::IndexFormat::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::IndexFormat::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::IndexFormat>("UnityEngine.Rendering", "IndexFormat", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.IndexFormat UInt16
void UnityEngine::Rendering::IndexFormat::_set_UInt16(::UnityEngine::Rendering::IndexFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::IndexFormat::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "IndexFormat", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.IndexFormat UInt32
::UnityEngine::Rendering::IndexFormat UnityEngine::Rendering::IndexFormat::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::IndexFormat::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::IndexFormat>("UnityEngine.Rendering", "IndexFormat", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.IndexFormat UInt32
void UnityEngine::Rendering::IndexFormat::_set_UInt32(::UnityEngine::Rendering::IndexFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::IndexFormat::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "IndexFormat", "UInt32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::IndexFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::IndexFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.MeshUpdateFlags
#include "UnityEngine/Rendering/MeshUpdateFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.MeshUpdateFlags Default
::UnityEngine::Rendering::MeshUpdateFlags UnityEngine::Rendering::MeshUpdateFlags::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::MeshUpdateFlags>("UnityEngine.Rendering", "MeshUpdateFlags", "Default"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.MeshUpdateFlags Default
void UnityEngine::Rendering::MeshUpdateFlags::_set_Default(::UnityEngine::Rendering::MeshUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "MeshUpdateFlags", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.MeshUpdateFlags DontValidateIndices
::UnityEngine::Rendering::MeshUpdateFlags UnityEngine::Rendering::MeshUpdateFlags::_get_DontValidateIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_get_DontValidateIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::MeshUpdateFlags>("UnityEngine.Rendering", "MeshUpdateFlags", "DontValidateIndices"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.MeshUpdateFlags DontValidateIndices
void UnityEngine::Rendering::MeshUpdateFlags::_set_DontValidateIndices(::UnityEngine::Rendering::MeshUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_set_DontValidateIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "MeshUpdateFlags", "DontValidateIndices", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.MeshUpdateFlags DontResetBoneBounds
::UnityEngine::Rendering::MeshUpdateFlags UnityEngine::Rendering::MeshUpdateFlags::_get_DontResetBoneBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_get_DontResetBoneBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::MeshUpdateFlags>("UnityEngine.Rendering", "MeshUpdateFlags", "DontResetBoneBounds"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.MeshUpdateFlags DontResetBoneBounds
void UnityEngine::Rendering::MeshUpdateFlags::_set_DontResetBoneBounds(::UnityEngine::Rendering::MeshUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_set_DontResetBoneBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "MeshUpdateFlags", "DontResetBoneBounds", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.MeshUpdateFlags DontNotifyMeshUsers
::UnityEngine::Rendering::MeshUpdateFlags UnityEngine::Rendering::MeshUpdateFlags::_get_DontNotifyMeshUsers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_get_DontNotifyMeshUsers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::MeshUpdateFlags>("UnityEngine.Rendering", "MeshUpdateFlags", "DontNotifyMeshUsers"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.MeshUpdateFlags DontNotifyMeshUsers
void UnityEngine::Rendering::MeshUpdateFlags::_set_DontNotifyMeshUsers(::UnityEngine::Rendering::MeshUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_set_DontNotifyMeshUsers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "MeshUpdateFlags", "DontNotifyMeshUsers", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.MeshUpdateFlags DontRecalculateBounds
::UnityEngine::Rendering::MeshUpdateFlags UnityEngine::Rendering::MeshUpdateFlags::_get_DontRecalculateBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_get_DontRecalculateBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::MeshUpdateFlags>("UnityEngine.Rendering", "MeshUpdateFlags", "DontRecalculateBounds"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.MeshUpdateFlags DontRecalculateBounds
void UnityEngine::Rendering::MeshUpdateFlags::_set_DontRecalculateBounds(::UnityEngine::Rendering::MeshUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::_set_DontRecalculateBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "MeshUpdateFlags", "DontRecalculateBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::MeshUpdateFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::MeshUpdateFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.VertexAttributeFormat
#include "UnityEngine/Rendering/VertexAttributeFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat Float32
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_Float32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_Float32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "Float32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat Float32
void UnityEngine::Rendering::VertexAttributeFormat::_set_Float32(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_Float32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "Float32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat Float16
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_Float16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_Float16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "Float16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat Float16
void UnityEngine::Rendering::VertexAttributeFormat::_set_Float16(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_Float16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "Float16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat UNorm8
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_UNorm8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_UNorm8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "UNorm8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat UNorm8
void UnityEngine::Rendering::VertexAttributeFormat::_set_UNorm8(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_UNorm8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "UNorm8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat SNorm8
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_SNorm8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_SNorm8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "SNorm8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat SNorm8
void UnityEngine::Rendering::VertexAttributeFormat::_set_SNorm8(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_SNorm8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "SNorm8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat UNorm16
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_UNorm16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_UNorm16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "UNorm16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat UNorm16
void UnityEngine::Rendering::VertexAttributeFormat::_set_UNorm16(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_UNorm16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "UNorm16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat SNorm16
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_SNorm16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_SNorm16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "SNorm16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat SNorm16
void UnityEngine::Rendering::VertexAttributeFormat::_set_SNorm16(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_SNorm16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "SNorm16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt8
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt8
void UnityEngine::Rendering::VertexAttributeFormat::_set_UInt8(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt8
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_SInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_SInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "SInt8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt8
void UnityEngine::Rendering::VertexAttributeFormat::_set_SInt8(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_SInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "SInt8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt16
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt16
void UnityEngine::Rendering::VertexAttributeFormat::_set_UInt16(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt16
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_SInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_SInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "SInt16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt16
void UnityEngine::Rendering::VertexAttributeFormat::_set_SInt16(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_SInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "SInt16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt32
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat UInt32
void UnityEngine::Rendering::VertexAttributeFormat::_set_UInt32(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt32
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeFormat::_get_SInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_get_SInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttributeFormat>("UnityEngine.Rendering", "VertexAttributeFormat", "SInt32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttributeFormat SInt32
void UnityEngine::Rendering::VertexAttributeFormat::_set_SInt32(::UnityEngine::Rendering::VertexAttributeFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::_set_SInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttributeFormat", "SInt32", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::VertexAttributeFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.VertexAttribute
#include "UnityEngine/Rendering/VertexAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute Position
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute Position
void UnityEngine::Rendering::VertexAttribute::_set_Position(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute Normal
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute Normal
void UnityEngine::Rendering::VertexAttribute::_set_Normal(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute Tangent
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute Tangent
void UnityEngine::Rendering::VertexAttribute::_set_Tangent(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "Tangent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute Color
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_Color");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "Color"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute Color
void UnityEngine::Rendering::VertexAttribute::_set_Color(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_Color");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "Color", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord0
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord0
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord0(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord1
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord1
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord1(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord2
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord2
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord2(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord3
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord3
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord3(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord4
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord4
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord4(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord5
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord5
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord5(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord6
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord6
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord6(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute TexCoord7
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_TexCoord7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_TexCoord7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "TexCoord7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute TexCoord7
void UnityEngine::Rendering::VertexAttribute::_set_TexCoord7(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_TexCoord7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "TexCoord7", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute BlendWeight
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_BlendWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_BlendWeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "BlendWeight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute BlendWeight
void UnityEngine::Rendering::VertexAttribute::_set_BlendWeight(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_BlendWeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "BlendWeight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.VertexAttribute BlendIndices
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttribute::_get_BlendIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_get_BlendIndices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::VertexAttribute>("UnityEngine.Rendering", "VertexAttribute", "BlendIndices"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.VertexAttribute BlendIndices
void UnityEngine::Rendering::VertexAttribute::_set_BlendIndices(::UnityEngine::Rendering::VertexAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::_set_BlendIndices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "VertexAttribute", "BlendIndices", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::VertexAttribute::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttribute::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.CompareFunction
#include "UnityEngine/Rendering/CompareFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Disabled
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Disabled
void UnityEngine::Rendering::CompareFunction::_set_Disabled(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Never
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Never"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Never
void UnityEngine::Rendering::CompareFunction::_set_Never(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Less
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Less() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Less");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Less"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Less
void UnityEngine::Rendering::CompareFunction::_set_Less(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Less");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Less", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Equal
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Equal
void UnityEngine::Rendering::CompareFunction::_set_Equal(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction LessEqual
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_LessEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_LessEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "LessEqual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction LessEqual
void UnityEngine::Rendering::CompareFunction::_set_LessEqual(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_LessEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "LessEqual", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Greater
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Greater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Greater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Greater"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Greater
void UnityEngine::Rendering::CompareFunction::_set_Greater(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Greater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Greater", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction NotEqual
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_NotEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_NotEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "NotEqual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction NotEqual
void UnityEngine::Rendering::CompareFunction::_set_NotEqual(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_NotEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "NotEqual", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction GreaterEqual
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_GreaterEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_GreaterEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "GreaterEqual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction GreaterEqual
void UnityEngine::Rendering::CompareFunction::_set_GreaterEqual(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_GreaterEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "GreaterEqual", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CompareFunction Always
::UnityEngine::Rendering::CompareFunction UnityEngine::Rendering::CompareFunction::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CompareFunction>("UnityEngine.Rendering", "CompareFunction", "Always"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CompareFunction Always
void UnityEngine::Rendering::CompareFunction::_set_Always(::UnityEngine::Rendering::CompareFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CompareFunction", "Always", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::CompareFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CompareFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ColorWriteMask Alpha
::UnityEngine::Rendering::ColorWriteMask UnityEngine::Rendering::ColorWriteMask::_get_Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_get_Alpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ColorWriteMask>("UnityEngine.Rendering", "ColorWriteMask", "Alpha"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ColorWriteMask Alpha
void UnityEngine::Rendering::ColorWriteMask::_set_Alpha(::UnityEngine::Rendering::ColorWriteMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_set_Alpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ColorWriteMask", "Alpha", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ColorWriteMask Blue
::UnityEngine::Rendering::ColorWriteMask UnityEngine::Rendering::ColorWriteMask::_get_Blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_get_Blue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ColorWriteMask>("UnityEngine.Rendering", "ColorWriteMask", "Blue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ColorWriteMask Blue
void UnityEngine::Rendering::ColorWriteMask::_set_Blue(::UnityEngine::Rendering::ColorWriteMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_set_Blue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ColorWriteMask", "Blue", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ColorWriteMask Green
::UnityEngine::Rendering::ColorWriteMask UnityEngine::Rendering::ColorWriteMask::_get_Green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_get_Green");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ColorWriteMask>("UnityEngine.Rendering", "ColorWriteMask", "Green"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ColorWriteMask Green
void UnityEngine::Rendering::ColorWriteMask::_set_Green(::UnityEngine::Rendering::ColorWriteMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_set_Green");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ColorWriteMask", "Green", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ColorWriteMask Red
::UnityEngine::Rendering::ColorWriteMask UnityEngine::Rendering::ColorWriteMask::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ColorWriteMask>("UnityEngine.Rendering", "ColorWriteMask", "Red"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ColorWriteMask Red
void UnityEngine::Rendering::ColorWriteMask::_set_Red(::UnityEngine::Rendering::ColorWriteMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ColorWriteMask", "Red", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ColorWriteMask All
::UnityEngine::Rendering::ColorWriteMask UnityEngine::Rendering::ColorWriteMask::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ColorWriteMask>("UnityEngine.Rendering", "ColorWriteMask", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ColorWriteMask All
void UnityEngine::Rendering::ColorWriteMask::_set_All(::UnityEngine::Rendering::ColorWriteMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ColorWriteMask", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::ColorWriteMask::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ColorWriteMask::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.StencilOp
#include "UnityEngine/Rendering/StencilOp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp Keep
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_Keep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_Keep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "Keep"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp Keep
void UnityEngine::Rendering::StencilOp::_set_Keep(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_Keep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "Keep", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp Zero
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp Zero
void UnityEngine::Rendering::StencilOp::_set_Zero(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp Replace
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp Replace
void UnityEngine::Rendering::StencilOp::_set_Replace(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp IncrementSaturate
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_IncrementSaturate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_IncrementSaturate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "IncrementSaturate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp IncrementSaturate
void UnityEngine::Rendering::StencilOp::_set_IncrementSaturate(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_IncrementSaturate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "IncrementSaturate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp DecrementSaturate
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_DecrementSaturate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_DecrementSaturate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "DecrementSaturate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp DecrementSaturate
void UnityEngine::Rendering::StencilOp::_set_DecrementSaturate(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_DecrementSaturate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "DecrementSaturate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp Invert
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_Invert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_Invert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "Invert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp Invert
void UnityEngine::Rendering::StencilOp::_set_Invert(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_Invert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "Invert", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp IncrementWrap
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_IncrementWrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_IncrementWrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "IncrementWrap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp IncrementWrap
void UnityEngine::Rendering::StencilOp::_set_IncrementWrap(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_IncrementWrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "IncrementWrap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.StencilOp DecrementWrap
::UnityEngine::Rendering::StencilOp UnityEngine::Rendering::StencilOp::_get_DecrementWrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_get_DecrementWrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::StencilOp>("UnityEngine.Rendering", "StencilOp", "DecrementWrap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.StencilOp DecrementWrap
void UnityEngine::Rendering::StencilOp::_set_DecrementWrap(::UnityEngine::Rendering::StencilOp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::_set_DecrementWrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "StencilOp", "DecrementWrap", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::StencilOp::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::StencilOp::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeDepthTexture
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeDepthTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeDepthTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeDepthTexture
void UnityEngine::Rendering::CameraEvent::_set_BeforeDepthTexture(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeDepthTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeDepthTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterDepthTexture
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterDepthTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterDepthTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterDepthTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterDepthTexture
void UnityEngine::Rendering::CameraEvent::_set_AfterDepthTexture(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterDepthTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterDepthTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeDepthNormalsTexture
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeDepthNormalsTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeDepthNormalsTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeDepthNormalsTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeDepthNormalsTexture
void UnityEngine::Rendering::CameraEvent::_set_BeforeDepthNormalsTexture(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeDepthNormalsTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeDepthNormalsTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterDepthNormalsTexture
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterDepthNormalsTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterDepthNormalsTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterDepthNormalsTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterDepthNormalsTexture
void UnityEngine::Rendering::CameraEvent::_set_AfterDepthNormalsTexture(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterDepthNormalsTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterDepthNormalsTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeGBuffer
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeGBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeGBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeGBuffer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeGBuffer
void UnityEngine::Rendering::CameraEvent::_set_BeforeGBuffer(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeGBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeGBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterGBuffer
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterGBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterGBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterGBuffer"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterGBuffer
void UnityEngine::Rendering::CameraEvent::_set_AfterGBuffer(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterGBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterGBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeLighting
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeLighting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeLighting"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeLighting
void UnityEngine::Rendering::CameraEvent::_set_BeforeLighting(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeLighting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeLighting", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterLighting
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterLighting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterLighting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterLighting"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterLighting
void UnityEngine::Rendering::CameraEvent::_set_AfterLighting(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterLighting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterLighting", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeFinalPass
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeFinalPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeFinalPass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeFinalPass"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeFinalPass
void UnityEngine::Rendering::CameraEvent::_set_BeforeFinalPass(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeFinalPass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeFinalPass", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterFinalPass
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterFinalPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterFinalPass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterFinalPass"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterFinalPass
void UnityEngine::Rendering::CameraEvent::_set_AfterFinalPass(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterFinalPass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterFinalPass", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeForwardOpaque
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeForwardOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeForwardOpaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeForwardOpaque"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeForwardOpaque
void UnityEngine::Rendering::CameraEvent::_set_BeforeForwardOpaque(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeForwardOpaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeForwardOpaque", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterForwardOpaque
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterForwardOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterForwardOpaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterForwardOpaque"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterForwardOpaque
void UnityEngine::Rendering::CameraEvent::_set_AfterForwardOpaque(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterForwardOpaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterForwardOpaque", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeImageEffectsOpaque
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeImageEffectsOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeImageEffectsOpaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeImageEffectsOpaque"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeImageEffectsOpaque
void UnityEngine::Rendering::CameraEvent::_set_BeforeImageEffectsOpaque(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeImageEffectsOpaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeImageEffectsOpaque", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterImageEffectsOpaque
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterImageEffectsOpaque() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterImageEffectsOpaque");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterImageEffectsOpaque"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterImageEffectsOpaque
void UnityEngine::Rendering::CameraEvent::_set_AfterImageEffectsOpaque(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterImageEffectsOpaque");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterImageEffectsOpaque", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeSkybox
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeSkybox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeSkybox"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeSkybox
void UnityEngine::Rendering::CameraEvent::_set_BeforeSkybox(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeSkybox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeSkybox", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterSkybox
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterSkybox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterSkybox"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterSkybox
void UnityEngine::Rendering::CameraEvent::_set_AfterSkybox(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterSkybox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterSkybox", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeForwardAlpha
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeForwardAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeForwardAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeForwardAlpha"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeForwardAlpha
void UnityEngine::Rendering::CameraEvent::_set_BeforeForwardAlpha(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeForwardAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeForwardAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterForwardAlpha
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterForwardAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterForwardAlpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterForwardAlpha"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterForwardAlpha
void UnityEngine::Rendering::CameraEvent::_set_AfterForwardAlpha(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterForwardAlpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterForwardAlpha", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeImageEffects
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeImageEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeImageEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeImageEffects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeImageEffects
void UnityEngine::Rendering::CameraEvent::_set_BeforeImageEffects(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeImageEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeImageEffects", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterImageEffects
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterImageEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterImageEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterImageEffects"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterImageEffects
void UnityEngine::Rendering::CameraEvent::_set_AfterImageEffects(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterImageEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterImageEffects", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterEverything
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterEverything() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterEverything");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterEverything"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterEverything
void UnityEngine::Rendering::CameraEvent::_set_AfterEverything(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterEverything");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterEverything", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeReflections
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeReflections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeReflections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeReflections"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeReflections
void UnityEngine::Rendering::CameraEvent::_set_BeforeReflections(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeReflections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeReflections", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterReflections
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterReflections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterReflections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterReflections"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterReflections
void UnityEngine::Rendering::CameraEvent::_set_AfterReflections(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterReflections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterReflections", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent BeforeHaloAndLensFlares
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_BeforeHaloAndLensFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_BeforeHaloAndLensFlares");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "BeforeHaloAndLensFlares"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent BeforeHaloAndLensFlares
void UnityEngine::Rendering::CameraEvent::_set_BeforeHaloAndLensFlares(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_BeforeHaloAndLensFlares");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "BeforeHaloAndLensFlares", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CameraEvent AfterHaloAndLensFlares
::UnityEngine::Rendering::CameraEvent UnityEngine::Rendering::CameraEvent::_get_AfterHaloAndLensFlares() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_get_AfterHaloAndLensFlares");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CameraEvent>("UnityEngine.Rendering", "CameraEvent", "AfterHaloAndLensFlares"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CameraEvent AfterHaloAndLensFlares
void UnityEngine::Rendering::CameraEvent::_set_AfterHaloAndLensFlares(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::_set_AfterHaloAndLensFlares");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CameraEvent", "AfterHaloAndLensFlares", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::CameraEvent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEvent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.CameraEventUtils
#include "UnityEngine/Rendering/CameraEventUtils.hpp"
// Including type: UnityEngine.Rendering.CameraEvent
#include "UnityEngine/Rendering/CameraEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rendering.CameraEventUtils.IsValid
bool UnityEngine::Rendering::CameraEventUtils::IsValid(::UnityEngine::Rendering::CameraEvent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CameraEventUtils::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "CameraEventUtils", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.BuiltinRenderTextureType
#include "UnityEngine/Rendering/BuiltinRenderTextureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PropertyName
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_PropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "PropertyName"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PropertyName
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_PropertyName(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_PropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "PropertyName", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType BufferPtr
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_BufferPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_BufferPtr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "BufferPtr"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType BufferPtr
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_BufferPtr(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_BufferPtr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "BufferPtr", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType RenderTexture
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_RenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_RenderTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "RenderTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType RenderTexture
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_RenderTexture(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_RenderTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "RenderTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType BindableTexture
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_BindableTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_BindableTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "BindableTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType BindableTexture
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_BindableTexture(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_BindableTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "BindableTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType None
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType None
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_None(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType CurrentActive
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_CurrentActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_CurrentActive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "CurrentActive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType CurrentActive
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_CurrentActive(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_CurrentActive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "CurrentActive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType CameraTarget
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_CameraTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_CameraTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "CameraTarget"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType CameraTarget
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_CameraTarget(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_CameraTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "CameraTarget", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType Depth
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_Depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "Depth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType Depth
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_Depth(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_Depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "Depth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType DepthNormals
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_DepthNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_DepthNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "DepthNormals"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType DepthNormals
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_DepthNormals(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_DepthNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "DepthNormals", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType ResolvedDepth
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_ResolvedDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_ResolvedDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "ResolvedDepth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType ResolvedDepth
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_ResolvedDepth(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_ResolvedDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "ResolvedDepth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassNormalsSpec
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassNormalsSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassNormalsSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassNormalsSpec"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassNormalsSpec
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassNormalsSpec(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassNormalsSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassNormalsSpec", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassLight
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassLight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassLight
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassLight(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassLight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassLightSpec
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassLightSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_PrepassLightSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassLightSpec"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType PrepassLightSpec
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassLightSpec(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_PrepassLightSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "PrepassLightSpec", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer0
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer0"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer0
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer0(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer0", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer1
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer1
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer1(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer2
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer2
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer2(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer3
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer3
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer3(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType Reflections
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_Reflections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_Reflections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "Reflections"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType Reflections
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_Reflections(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_Reflections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "Reflections", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType MotionVectors
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_MotionVectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_MotionVectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "MotionVectors"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType MotionVectors
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_MotionVectors(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_MotionVectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "MotionVectors", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer4
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer4
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer4(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer5
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer5
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer5(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer6
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer6"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer6
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer6(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer6", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer7
::UnityEngine::Rendering::BuiltinRenderTextureType UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_get_GBuffer7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::BuiltinRenderTextureType>("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer7"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.BuiltinRenderTextureType GBuffer7
void UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer7(::UnityEngine::Rendering::BuiltinRenderTextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::_set_GBuffer7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "BuiltinRenderTextureType", "GBuffer7", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::BuiltinRenderTextureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BuiltinRenderTextureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.ShadowCastingMode
#include "UnityEngine/Rendering/ShadowCastingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowCastingMode Off
::UnityEngine::Rendering::ShadowCastingMode UnityEngine::Rendering::ShadowCastingMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowCastingMode>("UnityEngine.Rendering", "ShadowCastingMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowCastingMode Off
void UnityEngine::Rendering::ShadowCastingMode::_set_Off(::UnityEngine::Rendering::ShadowCastingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowCastingMode", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowCastingMode On
::UnityEngine::Rendering::ShadowCastingMode UnityEngine::Rendering::ShadowCastingMode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowCastingMode>("UnityEngine.Rendering", "ShadowCastingMode", "On"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowCastingMode On
void UnityEngine::Rendering::ShadowCastingMode::_set_On(::UnityEngine::Rendering::ShadowCastingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowCastingMode", "On", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowCastingMode TwoSided
::UnityEngine::Rendering::ShadowCastingMode UnityEngine::Rendering::ShadowCastingMode::_get_TwoSided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_get_TwoSided");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowCastingMode>("UnityEngine.Rendering", "ShadowCastingMode", "TwoSided"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowCastingMode TwoSided
void UnityEngine::Rendering::ShadowCastingMode::_set_TwoSided(::UnityEngine::Rendering::ShadowCastingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_set_TwoSided");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowCastingMode", "TwoSided", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowCastingMode ShadowsOnly
::UnityEngine::Rendering::ShadowCastingMode UnityEngine::Rendering::ShadowCastingMode::_get_ShadowsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_get_ShadowsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowCastingMode>("UnityEngine.Rendering", "ShadowCastingMode", "ShadowsOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowCastingMode ShadowsOnly
void UnityEngine::Rendering::ShadowCastingMode::_set_ShadowsOnly(::UnityEngine::Rendering::ShadowCastingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::_set_ShadowsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowCastingMode", "ShadowsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::ShadowCastingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowCastingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.GraphicsDeviceType
#include "UnityEngine/Rendering/GraphicsDeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0x56BE44
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGL2
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGL2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGL2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGL2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGL2
void UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGL2(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGL2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGL2", value));
}
// [ObsoleteAttribute] Offset: 0x56BE7C
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D9
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D9"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D9
void UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D9(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D9", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D11
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D11"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D11
void UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D11(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D11", value));
}
// [ObsoleteAttribute] Offset: 0x56BEB4
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation3
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation3
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation3(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Null
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Null
void UnityEngine::Rendering::GraphicsDeviceType::_set_Null(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Null", value));
}
// [ObsoleteAttribute] Offset: 0x56BEEC
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Xbox360
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Xbox360() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Xbox360");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Xbox360"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Xbox360
void UnityEngine::Rendering::GraphicsDeviceType::_set_Xbox360(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Xbox360");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Xbox360", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLES2
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLES2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLES2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLES2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLES2
void UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLES2(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLES2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLES2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLES3
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLES3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLES3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLES3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLES3
void UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLES3(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLES3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLES3", value));
}
// [ObsoleteAttribute] Offset: 0x56BF24
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStationVita
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStationVita() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStationVita");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStationVita"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStationVita
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStationVita(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStationVita");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStationVita", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation4
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation4"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation4
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation4(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation4", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType XboxOne
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_XboxOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_XboxOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "XboxOne"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType XboxOne
void UnityEngine::Rendering::GraphicsDeviceType::_set_XboxOne(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_XboxOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "XboxOne", value));
}
// [ObsoleteAttribute] Offset: 0x56BF5C
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStationMobile
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStationMobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStationMobile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStationMobile"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStationMobile
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStationMobile(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStationMobile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStationMobile", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Metal
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Metal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Metal
void UnityEngine::Rendering::GraphicsDeviceType::_set_Metal(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Metal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLCore
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_OpenGLCore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLCore"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType OpenGLCore
void UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLCore(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_OpenGLCore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "OpenGLCore", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D12
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Direct3D12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Direct3D12
void UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D12(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Direct3D12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Direct3D12", value));
}
// [ObsoleteAttribute] Offset: 0x56BF94
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType N3DS
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_N3DS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_N3DS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "N3DS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType N3DS
void UnityEngine::Rendering::GraphicsDeviceType::_set_N3DS(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_N3DS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "N3DS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Vulkan
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Vulkan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Vulkan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Vulkan"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Vulkan
void UnityEngine::Rendering::GraphicsDeviceType::_set_Vulkan(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Vulkan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Vulkan", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType Switch
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_Switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_Switch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "Switch"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType Switch
void UnityEngine::Rendering::GraphicsDeviceType::_set_Switch(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_Switch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "Switch", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType XboxOneD3D12
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_XboxOneD3D12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_XboxOneD3D12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "XboxOneD3D12"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType XboxOneD3D12
void UnityEngine::Rendering::GraphicsDeviceType::_set_XboxOneD3D12(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_XboxOneD3D12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "XboxOneD3D12", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreXboxOne
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreXboxOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreXboxOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreXboxOne"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreXboxOne
void UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreXboxOne(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreXboxOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreXboxOne", value));
}
// [ObsoleteAttribute] Offset: 0x56BFCC
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreScarlett
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreScarlett() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreScarlett");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreScarlett"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreScarlett
void UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreScarlett(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreScarlett");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreScarlett", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreXboxSeries
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreXboxSeries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_GameCoreXboxSeries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreXboxSeries"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType GameCoreXboxSeries
void UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreXboxSeries(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_GameCoreXboxSeries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "GameCoreXboxSeries", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation5
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation5"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation5
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation5(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation5", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation5NGGC
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation5NGGC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_get_PlayStation5NGGC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::GraphicsDeviceType>("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation5NGGC"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.GraphicsDeviceType PlayStation5NGGC
void UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation5NGGC(::UnityEngine::Rendering::GraphicsDeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::_set_PlayStation5NGGC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "GraphicsDeviceType", "PlayStation5NGGC", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::GraphicsDeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsDeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.VertexAttributeDescriptor
#include "UnityEngine/Rendering/VertexAttributeDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.VertexAttribute <attribute>k__BackingField
::UnityEngine::Rendering::VertexAttribute& UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$attribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$attribute$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<attribute>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::VertexAttribute*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.VertexAttributeFormat <format>k__BackingField
::UnityEngine::Rendering::VertexAttributeFormat& UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$format$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<format>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::VertexAttributeFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <dimension>k__BackingField
int& UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$dimension$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$dimension$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dimension>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <stream>k__BackingField
int& UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$stream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::dyn_$stream$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stream>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.get_attribute
::UnityEngine::Rendering::VertexAttribute UnityEngine::Rendering::VertexAttributeDescriptor::get_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::get_attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::VertexAttribute, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.get_format
::UnityEngine::Rendering::VertexAttributeFormat UnityEngine::Rendering::VertexAttributeDescriptor::get_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::get_format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::VertexAttributeFormat, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.get_dimension
int UnityEngine::Rendering::VertexAttributeDescriptor::get_dimension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::get_dimension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_dimension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.get_stream
int UnityEngine::Rendering::VertexAttributeDescriptor::get_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::get_stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.Equals
bool UnityEngine::Rendering::VertexAttributeDescriptor::Equals(::UnityEngine::Rendering::VertexAttributeDescriptor other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.ToString
::StringW UnityEngine::Rendering::VertexAttributeDescriptor::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.GetHashCode
int UnityEngine::Rendering::VertexAttributeDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.VertexAttributeDescriptor.Equals
bool UnityEngine::Rendering::VertexAttributeDescriptor::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::VertexAttributeDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.RenderTargetIdentifier
#include "UnityEngine/Rendering/RenderTargetIdentifier.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.BuiltinRenderTextureType m_Type
::UnityEngine::Rendering::BuiltinRenderTextureType& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::BuiltinRenderTextureType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_NameID
int& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_NameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_NameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NameID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_InstanceID
int& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_InstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_InstanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InstanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_BufferPointer
::System::IntPtr& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_BufferPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_BufferPointer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BufferPointer"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MipLevel
int& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_MipLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_MipLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MipLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CubemapFace m_CubeFace
::UnityEngine::CubemapFace& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_CubeFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_CubeFace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CubeFace"))->offset;
  return *reinterpret_cast<::UnityEngine::CubemapFace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_DepthSlice
int& UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_DepthSlice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::dyn_m_DepthSlice");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DepthSlice"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier..ctor
UnityEngine::Rendering::RenderTargetIdentifier::RenderTargetIdentifier(::UnityEngine::Rendering::BuiltinRenderTextureType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier..ctor
UnityEngine::Rendering::RenderTargetIdentifier::RenderTargetIdentifier(::UnityEngine::Texture* tex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tex);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier.Equals
bool UnityEngine::Rendering::RenderTargetIdentifier::Equals(::UnityEngine::Rendering::RenderTargetIdentifier rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rhs);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier.ToString
::StringW UnityEngine::Rendering::RenderTargetIdentifier::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier.GetHashCode
int UnityEngine::Rendering::RenderTargetIdentifier::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderTargetIdentifier.Equals
bool UnityEngine::Rendering::RenderTargetIdentifier::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderTargetIdentifier::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.ReflectionProbeUsage
#include "UnityEngine/Rendering/ReflectionProbeUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ReflectionProbeUsage Off
::UnityEngine::Rendering::ReflectionProbeUsage UnityEngine::Rendering::ReflectionProbeUsage::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ReflectionProbeUsage>("UnityEngine.Rendering", "ReflectionProbeUsage", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ReflectionProbeUsage Off
void UnityEngine::Rendering::ReflectionProbeUsage::_set_Off(::UnityEngine::Rendering::ReflectionProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ReflectionProbeUsage", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ReflectionProbeUsage BlendProbes
::UnityEngine::Rendering::ReflectionProbeUsage UnityEngine::Rendering::ReflectionProbeUsage::_get_BlendProbes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_get_BlendProbes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ReflectionProbeUsage>("UnityEngine.Rendering", "ReflectionProbeUsage", "BlendProbes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ReflectionProbeUsage BlendProbes
void UnityEngine::Rendering::ReflectionProbeUsage::_set_BlendProbes(::UnityEngine::Rendering::ReflectionProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_set_BlendProbes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ReflectionProbeUsage", "BlendProbes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ReflectionProbeUsage BlendProbesAndSkybox
::UnityEngine::Rendering::ReflectionProbeUsage UnityEngine::Rendering::ReflectionProbeUsage::_get_BlendProbesAndSkybox() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_get_BlendProbesAndSkybox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ReflectionProbeUsage>("UnityEngine.Rendering", "ReflectionProbeUsage", "BlendProbesAndSkybox"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ReflectionProbeUsage BlendProbesAndSkybox
void UnityEngine::Rendering::ReflectionProbeUsage::_set_BlendProbesAndSkybox(::UnityEngine::Rendering::ReflectionProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_set_BlendProbesAndSkybox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ReflectionProbeUsage", "BlendProbesAndSkybox", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ReflectionProbeUsage Simple
::UnityEngine::Rendering::ReflectionProbeUsage UnityEngine::Rendering::ReflectionProbeUsage::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ReflectionProbeUsage>("UnityEngine.Rendering", "ReflectionProbeUsage", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ReflectionProbeUsage Simple
void UnityEngine::Rendering::ReflectionProbeUsage::_set_Simple(::UnityEngine::Rendering::ReflectionProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ReflectionProbeUsage", "Simple", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::ReflectionProbeUsage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ReflectionProbeUsage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.ShadowSamplingMode
#include "UnityEngine/Rendering/ShadowSamplingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowSamplingMode CompareDepths
::UnityEngine::Rendering::ShadowSamplingMode UnityEngine::Rendering::ShadowSamplingMode::_get_CompareDepths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_get_CompareDepths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowSamplingMode>("UnityEngine.Rendering", "ShadowSamplingMode", "CompareDepths"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowSamplingMode CompareDepths
void UnityEngine::Rendering::ShadowSamplingMode::_set_CompareDepths(::UnityEngine::Rendering::ShadowSamplingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_set_CompareDepths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowSamplingMode", "CompareDepths", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowSamplingMode RawDepth
::UnityEngine::Rendering::ShadowSamplingMode UnityEngine::Rendering::ShadowSamplingMode::_get_RawDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_get_RawDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowSamplingMode>("UnityEngine.Rendering", "ShadowSamplingMode", "RawDepth"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowSamplingMode RawDepth
void UnityEngine::Rendering::ShadowSamplingMode::_set_RawDepth(::UnityEngine::Rendering::ShadowSamplingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_set_RawDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowSamplingMode", "RawDepth", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShadowSamplingMode None
::UnityEngine::Rendering::ShadowSamplingMode UnityEngine::Rendering::ShadowSamplingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShadowSamplingMode>("UnityEngine.Rendering", "ShadowSamplingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShadowSamplingMode None
void UnityEngine::Rendering::ShadowSamplingMode::_set_None(::UnityEngine::Rendering::ShadowSamplingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShadowSamplingMode", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::ShadowSamplingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShadowSamplingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.LightProbeUsage
#include "UnityEngine/Rendering/LightProbeUsage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.LightProbeUsage Off
::UnityEngine::Rendering::LightProbeUsage UnityEngine::Rendering::LightProbeUsage::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::LightProbeUsage>("UnityEngine.Rendering", "LightProbeUsage", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.LightProbeUsage Off
void UnityEngine::Rendering::LightProbeUsage::_set_Off(::UnityEngine::Rendering::LightProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "LightProbeUsage", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.LightProbeUsage BlendProbes
::UnityEngine::Rendering::LightProbeUsage UnityEngine::Rendering::LightProbeUsage::_get_BlendProbes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_get_BlendProbes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::LightProbeUsage>("UnityEngine.Rendering", "LightProbeUsage", "BlendProbes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.LightProbeUsage BlendProbes
void UnityEngine::Rendering::LightProbeUsage::_set_BlendProbes(::UnityEngine::Rendering::LightProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_set_BlendProbes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "LightProbeUsage", "BlendProbes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.LightProbeUsage UseProxyVolume
::UnityEngine::Rendering::LightProbeUsage UnityEngine::Rendering::LightProbeUsage::_get_UseProxyVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_get_UseProxyVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::LightProbeUsage>("UnityEngine.Rendering", "LightProbeUsage", "UseProxyVolume"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.LightProbeUsage UseProxyVolume
void UnityEngine::Rendering::LightProbeUsage::_set_UseProxyVolume(::UnityEngine::Rendering::LightProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_set_UseProxyVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "LightProbeUsage", "UseProxyVolume", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.LightProbeUsage CustomProvided
::UnityEngine::Rendering::LightProbeUsage UnityEngine::Rendering::LightProbeUsage::_get_CustomProvided() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_get_CustomProvided");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::LightProbeUsage>("UnityEngine.Rendering", "LightProbeUsage", "CustomProvided"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.LightProbeUsage CustomProvided
void UnityEngine::Rendering::LightProbeUsage::_set_CustomProvided(::UnityEngine::Rendering::LightProbeUsage value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::_set_CustomProvided");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "LightProbeUsage", "CustomProvided", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::LightProbeUsage::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LightProbeUsage::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.TextureDimension
#include "UnityEngine/Rendering/TextureDimension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Unknown
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Unknown
void UnityEngine::Rendering::TextureDimension::_set_Unknown(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension None
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension None
void UnityEngine::Rendering::TextureDimension::_set_None(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Any
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Any"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Any
void UnityEngine::Rendering::TextureDimension::_set_Any(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Tex2D
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Tex2D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Tex2D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Tex2D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Tex2D
void UnityEngine::Rendering::TextureDimension::_set_Tex2D(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Tex2D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Tex2D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Tex3D
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Tex3D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Tex3D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Tex3D"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Tex3D
void UnityEngine::Rendering::TextureDimension::_set_Tex3D(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Tex3D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Tex3D", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Cube
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Cube() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Cube");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Cube"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Cube
void UnityEngine::Rendering::TextureDimension::_set_Cube(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Cube");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Cube", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension Tex2DArray
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_Tex2DArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_Tex2DArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "Tex2DArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension Tex2DArray
void UnityEngine::Rendering::TextureDimension::_set_Tex2DArray(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_Tex2DArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "Tex2DArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.TextureDimension CubeArray
::UnityEngine::Rendering::TextureDimension UnityEngine::Rendering::TextureDimension::_get_CubeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_get_CubeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::TextureDimension>("UnityEngine.Rendering", "TextureDimension", "CubeArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.TextureDimension CubeArray
void UnityEngine::Rendering::TextureDimension::_set_CubeArray(::UnityEngine::Rendering::TextureDimension value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::_set_CubeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "TextureDimension", "CubeArray", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::TextureDimension::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::TextureDimension::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.CommandBufferExecutionFlags
#include "UnityEngine/Rendering/CommandBufferExecutionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags None
::UnityEngine::Rendering::CommandBufferExecutionFlags UnityEngine::Rendering::CommandBufferExecutionFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBufferExecutionFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CommandBufferExecutionFlags>("UnityEngine.Rendering", "CommandBufferExecutionFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags None
void UnityEngine::Rendering::CommandBufferExecutionFlags::_set_None(::UnityEngine::Rendering::CommandBufferExecutionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBufferExecutionFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CommandBufferExecutionFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags AsyncCompute
::UnityEngine::Rendering::CommandBufferExecutionFlags UnityEngine::Rendering::CommandBufferExecutionFlags::_get_AsyncCompute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBufferExecutionFlags::_get_AsyncCompute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::CommandBufferExecutionFlags>("UnityEngine.Rendering", "CommandBufferExecutionFlags", "AsyncCompute"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.CommandBufferExecutionFlags AsyncCompute
void UnityEngine::Rendering::CommandBufferExecutionFlags::_set_AsyncCompute(::UnityEngine::Rendering::CommandBufferExecutionFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBufferExecutionFlags::_set_AsyncCompute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "CommandBufferExecutionFlags", "AsyncCompute", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::CommandBufferExecutionFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBufferExecutionFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.GraphicsSettings
#include "UnityEngine/Rendering/GraphicsSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rendering.GraphicsSettings.get_lightsUseLinearIntensity
bool UnityEngine::Rendering::GraphicsSettings::get_lightsUseLinearIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::GraphicsSettings::get_lightsUseLinearIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "GraphicsSettings", "get_lightsUseLinearIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.OnDemandRendering
#include "UnityEngine/Rendering/OnDemandRendering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 m_RenderFrameInterval
int UnityEngine::Rendering::OnDemandRendering::_get_m_RenderFrameInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::OnDemandRendering::_get_m_RenderFrameInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Rendering", "OnDemandRendering", "m_RenderFrameInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 m_RenderFrameInterval
void UnityEngine::Rendering::OnDemandRendering::_set_m_RenderFrameInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::OnDemandRendering::_set_m_RenderFrameInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "OnDemandRendering", "m_RenderFrameInterval", value));
}
// Autogenerated method: UnityEngine.Rendering.OnDemandRendering.get_renderFrameInterval
int UnityEngine::Rendering::OnDemandRendering::get_renderFrameInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::OnDemandRendering::get_renderFrameInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "OnDemandRendering", "get_renderFrameInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.OnDemandRendering..cctor
void UnityEngine::Rendering::OnDemandRendering::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::OnDemandRendering::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "OnDemandRendering", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.OnDemandRendering.GetRenderFrameInterval
void UnityEngine::Rendering::OnDemandRendering::GetRenderFrameInterval(ByRef<int> frameInterval) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::OnDemandRendering::GetRenderFrameInterval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "OnDemandRendering", "GetRenderFrameInterval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(frameInterval));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rendering.RenderTargetIdentifier
#include "UnityEngine/Rendering/RenderTargetIdentifier.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Rendering.CommandBufferExecutionFlags
#include "UnityEngine/Rendering/CommandBufferExecutionFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::Rendering::CommandBuffer::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.InitBuffer
::System::IntPtr UnityEngine::Rendering::CommandBuffer::InitBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "CommandBuffer", "InitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.ReleaseBuffer
void UnityEngine::Rendering::CommandBuffer::ReleaseBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Clear
void UnityEngine::Rendering::CommandBuffer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Internal_DrawMesh
void UnityEngine::Rendering::CommandBuffer::Internal_DrawMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int submeshIndex, int shaderPass, ::UnityEngine::MaterialPropertyBlock* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Internal_DrawMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_DrawMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(shaderPass), ::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, matrix, material, submeshIndex, shaderPass, properties);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit_Texture
void UnityEngine::Rendering::CommandBuffer::Blit_Texture(::UnityEngine::Texture* source, ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> dest, ::UnityEngine::Material* mat, int pass, ::UnityEngine::Vector2 scale, ::UnityEngine::Vector2 offset, int sourceDepthSlice, int destDepthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit_Texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit_Texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sourceDepthSlice), ::il2cpp_utils::ExtractType(destDepthSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(dest), mat, pass, scale, offset, sourceDepthSlice, destDepthSlice);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit_Identifier
void UnityEngine::Rendering::CommandBuffer::Blit_Identifier(ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> source, ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> dest, ::UnityEngine::Material* mat, int pass, ::UnityEngine::Vector2 scale, ::UnityEngine::Vector2 offset, int sourceDepthSlice, int destDepthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sourceDepthSlice), ::il2cpp_utils::ExtractType(destDepthSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source), byref(dest), mat, pass, scale, offset, sourceDepthSlice, destDepthSlice);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.ValidateAgainstExecutionFlags
bool UnityEngine::Rendering::CommandBuffer::ValidateAgainstExecutionFlags(::UnityEngine::Rendering::CommandBufferExecutionFlags requiredFlags, ::UnityEngine::Rendering::CommandBufferExecutionFlags invalidFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::ValidateAgainstExecutionFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAgainstExecutionFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requiredFlags), ::il2cpp_utils::ExtractType(invalidFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, requiredFlags, invalidFlags);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Dispose
void UnityEngine::Rendering::CommandBuffer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Dispose
void UnityEngine::Rendering::CommandBuffer::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.DrawMesh
void UnityEngine::Rendering::CommandBuffer::DrawMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int submeshIndex, int shaderPass, ::UnityEngine::MaterialPropertyBlock* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::DrawMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(shaderPass), ::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, matrix, material, submeshIndex, shaderPass, properties);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.DrawMesh
void UnityEngine::Rendering::CommandBuffer::DrawMesh(::UnityEngine::Mesh* mesh, ::UnityEngine::Matrix4x4 matrix, ::UnityEngine::Material* material, int submeshIndex, int shaderPass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::DrawMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(shaderPass)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, matrix, material, submeshIndex, shaderPass);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit
void UnityEngine::Rendering::CommandBuffer::Blit(::UnityEngine::Texture* source, ::UnityEngine::Rendering::RenderTargetIdentifier dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit
void UnityEngine::Rendering::CommandBuffer::Blit(::UnityEngine::Texture* source, ::UnityEngine::Rendering::RenderTargetIdentifier dest, ::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest, mat);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit
void UnityEngine::Rendering::CommandBuffer::Blit(::UnityEngine::Rendering::RenderTargetIdentifier source, ::UnityEngine::Rendering::RenderTargetIdentifier dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit
void UnityEngine::Rendering::CommandBuffer::Blit(::UnityEngine::Rendering::RenderTargetIdentifier source, ::UnityEngine::Rendering::RenderTargetIdentifier dest, ::UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, dest, mat);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Internal_DrawMesh_Injected
void UnityEngine::Rendering::CommandBuffer::Internal_DrawMesh_Injected(::UnityEngine::Mesh* mesh, ByRef<::UnityEngine::Matrix4x4> matrix, ::UnityEngine::Material* material, int submeshIndex, int shaderPass, ::UnityEngine::MaterialPropertyBlock* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Internal_DrawMesh_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_DrawMesh_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(matrix), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(submeshIndex), ::il2cpp_utils::ExtractType(shaderPass), ::il2cpp_utils::ExtractType(properties)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mesh, byref(matrix), material, submeshIndex, shaderPass, properties);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit_Texture_Injected
void UnityEngine::Rendering::CommandBuffer::Blit_Texture_Injected(::UnityEngine::Texture* source, ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> dest, ::UnityEngine::Material* mat, int pass, ByRef<::UnityEngine::Vector2> scale, ByRef<::UnityEngine::Vector2> offset, int sourceDepthSlice, int destDepthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit_Texture_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit_Texture_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sourceDepthSlice), ::il2cpp_utils::ExtractType(destDepthSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, byref(dest), mat, pass, byref(scale), byref(offset), sourceDepthSlice, destDepthSlice);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Blit_Identifier_Injected
void UnityEngine::Rendering::CommandBuffer::Blit_Identifier_Injected(ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> source, ByRef<::UnityEngine::Rendering::RenderTargetIdentifier> dest, ::UnityEngine::Material* mat, int pass, ByRef<::UnityEngine::Vector2> scale, ByRef<::UnityEngine::Vector2> offset, int sourceDepthSlice, int destDepthSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Blit_Identifier_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blit_Identifier_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(pass), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(sourceDepthSlice), ::il2cpp_utils::ExtractType(destDepthSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(source), byref(dest), mat, pass, byref(scale), byref(offset), sourceDepthSlice, destDepthSlice);
}
// Autogenerated method: UnityEngine.Rendering.CommandBuffer.Finalize
void UnityEngine::Rendering::CommandBuffer::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::CommandBuffer::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.LODParameters
#include "UnityEngine/Rendering/LODParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_IsOrthographic
int& UnityEngine::Rendering::LODParameters::dyn_m_IsOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::dyn_m_IsOrthographic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsOrthographic"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_CameraPosition
::UnityEngine::Vector3& UnityEngine::Rendering::LODParameters::dyn_m_CameraPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::dyn_m_CameraPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_FieldOfView
float& UnityEngine::Rendering::LODParameters::dyn_m_FieldOfView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::dyn_m_FieldOfView");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FieldOfView"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_OrthoSize
float& UnityEngine::Rendering::LODParameters::dyn_m_OrthoSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::dyn_m_OrthoSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OrthoSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CameraPixelHeight
int& UnityEngine::Rendering::LODParameters::dyn_m_CameraPixelHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::dyn_m_CameraPixelHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CameraPixelHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.LODParameters.Equals
bool UnityEngine::Rendering::LODParameters::Equals(::UnityEngine::Rendering::LODParameters other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rendering.LODParameters.Equals
bool UnityEngine::Rendering::LODParameters::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Rendering.LODParameters.GetHashCode
int UnityEngine::Rendering::LODParameters::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::LODParameters::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.RenderPipeline
#include "UnityEngine/Rendering/RenderPipeline.hpp"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disposed>k__BackingField
bool& UnityEngine::Rendering::RenderPipeline::dyn_$disposed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::dyn_$disposed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disposed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.get_disposed
bool UnityEngine::Rendering::RenderPipeline::get_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::get_disposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.set_disposed
void UnityEngine::Rendering::RenderPipeline::set_disposed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::set_disposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.Render
void UnityEngine::Rendering::RenderPipeline::Render(::UnityEngine::Rendering::ScriptableRenderContext context, ::ArrayW<::UnityEngine::Camera*> cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cameras)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, cameras);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.ProcessRenderRequests
void UnityEngine::Rendering::RenderPipeline::ProcessRenderRequests(::UnityEngine::Rendering::ScriptableRenderContext context, ::UnityEngine::Camera* camera, ::System::Collections::Generic::List_1<::UnityEngine::Camera::RenderRequest>* renderRequests) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::ProcessRenderRequests");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRenderRequests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(renderRequests)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, camera, renderRequests);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.InternalRender
void UnityEngine::Rendering::RenderPipeline::InternalRender(::UnityEngine::Rendering::ScriptableRenderContext context, ::ArrayW<::UnityEngine::Camera*> cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::InternalRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cameras)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, cameras);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.InternalRenderWithRequests
void UnityEngine::Rendering::RenderPipeline::InternalRenderWithRequests(::UnityEngine::Rendering::ScriptableRenderContext context, ::ArrayW<::UnityEngine::Camera*> cameras, ::System::Collections::Generic::List_1<::UnityEngine::Camera::RenderRequest>* renderRequests) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::InternalRenderWithRequests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRenderWithRequests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(cameras), ::il2cpp_utils::ExtractType(renderRequests)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, cameras, renderRequests);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.Dispose
void UnityEngine::Rendering::RenderPipeline::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipeline.Dispose
void UnityEngine::Rendering::RenderPipeline::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipeline::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.RenderPipelineAsset
#include "UnityEngine/Rendering/RenderPipelineAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Rendering.RenderPipeline
#include "UnityEngine/Rendering/RenderPipeline.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_renderingLayerMaskNames
::ArrayW<::StringW> UnityEngine::Rendering::RenderPipelineAsset::get_renderingLayerMaskNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_renderingLayerMaskNames");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingLayerMaskNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_autodeskInteractiveShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autodeskInteractiveShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_autodeskInteractiveTransparentShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveTransparentShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveTransparentShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autodeskInteractiveTransparentShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_autodeskInteractiveMaskedShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveMaskedShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_autodeskInteractiveMaskedShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autodeskInteractiveMaskedShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_terrainDetailLitShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailLitShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailLitShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainDetailLitShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_terrainDetailGrassShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailGrassShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailGrassShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainDetailGrassShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_terrainDetailGrassBillboardShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailGrassBillboardShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_terrainDetailGrassBillboardShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_terrainDetailGrassBillboardShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultParticleMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultParticleMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultParticleMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultParticleMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultLineMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultLineMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultLineMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultLineMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultTerrainMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultTerrainMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultTerrainMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultTerrainMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultUIMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultUIMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultUIOverdrawMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIOverdrawMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIOverdrawMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultUIOverdrawMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultUIETC1SupportedMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIETC1SupportedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultUIETC1SupportedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultUIETC1SupportedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_default2DMaterial
::UnityEngine::Material* UnityEngine::Rendering::RenderPipelineAsset::get_default2DMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_default2DMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_default2DMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultShader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_defaultShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultShader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultShader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultSpeedTree7Shader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_defaultSpeedTree7Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultSpeedTree7Shader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSpeedTree7Shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.get_defaultSpeedTree8Shader
::UnityEngine::Shader* UnityEngine::Rendering::RenderPipelineAsset::get_defaultSpeedTree8Shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::get_defaultSpeedTree8Shader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSpeedTree8Shader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Shader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.InternalCreatePipeline
::UnityEngine::Rendering::RenderPipeline* UnityEngine::Rendering::RenderPipelineAsset::InternalCreatePipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::InternalCreatePipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCreatePipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::RenderPipeline*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.CreatePipeline
::UnityEngine::Rendering::RenderPipeline* UnityEngine::Rendering::RenderPipelineAsset::CreatePipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::CreatePipeline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::RenderPipeline*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.OnValidate
void UnityEngine::Rendering::RenderPipelineAsset::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineAsset.OnDisable
void UnityEngine::Rendering::RenderPipelineAsset::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineAsset::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.RenderPipelineManager
#include "UnityEngine/Rendering/RenderPipelineManager.hpp"
// Including type: UnityEngine.Rendering.RenderPipelineAsset
#include "UnityEngine/Rendering/RenderPipelineAsset.hpp"
// Including type: UnityEngine.Rendering.RenderPipeline
#include "UnityEngine/Rendering/RenderPipeline.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static UnityEngine.Rendering.RenderPipelineAsset s_CurrentPipelineAsset
::UnityEngine::Rendering::RenderPipelineAsset* UnityEngine::Rendering::RenderPipelineManager::_get_s_CurrentPipelineAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_get_s_CurrentPipelineAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::RenderPipelineAsset*>("UnityEngine.Rendering", "RenderPipelineManager", "s_CurrentPipelineAsset"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.Rendering.RenderPipelineAsset s_CurrentPipelineAsset
void UnityEngine::Rendering::RenderPipelineManager::_set_s_CurrentPipelineAsset(::UnityEngine::Rendering::RenderPipelineAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_set_s_CurrentPipelineAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "RenderPipelineManager", "s_CurrentPipelineAsset", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Camera[] s_Cameras
::ArrayW<::UnityEngine::Camera*> UnityEngine::Rendering::RenderPipelineManager::_get_s_Cameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_get_s_Cameras");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Camera*>>("UnityEngine.Rendering", "RenderPipelineManager", "s_Cameras"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Camera[] s_Cameras
void UnityEngine::Rendering::RenderPipelineManager::_set_s_Cameras(::ArrayW<::UnityEngine::Camera*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_set_s_Cameras");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "RenderPipelineManager", "s_Cameras", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_CameraCapacity
int UnityEngine::Rendering::RenderPipelineManager::_get_s_CameraCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_get_s_CameraCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Rendering", "RenderPipelineManager", "s_CameraCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_CameraCapacity
void UnityEngine::Rendering::RenderPipelineManager::_set_s_CameraCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_set_s_CameraCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "RenderPipelineManager", "s_CameraCapacity", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56C134
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.RenderPipeline <currentPipeline>k__BackingField
::UnityEngine::Rendering::RenderPipeline* UnityEngine::Rendering::RenderPipelineManager::_get_$currentPipeline$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_get_$currentPipeline$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::RenderPipeline*>("UnityEngine.Rendering", "RenderPipelineManager", "<currentPipeline>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.RenderPipeline <currentPipeline>k__BackingField
void UnityEngine::Rendering::RenderPipelineManager::_set_$currentPipeline$k__BackingField(::UnityEngine::Rendering::RenderPipeline* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_set_$currentPipeline$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "RenderPipelineManager", "<currentPipeline>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x56C170
// Autogenerated static field getter
// Get static field: static private System.Action`2<UnityEngine.Rendering.ScriptableRenderContext,UnityEngine.Camera> beginCameraRendering
::System::Action_2<::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*>* UnityEngine::Rendering::RenderPipelineManager::_get_beginCameraRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_get_beginCameraRendering");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*>*>("UnityEngine.Rendering", "RenderPipelineManager", "beginCameraRendering")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`2<UnityEngine.Rendering.ScriptableRenderContext,UnityEngine.Camera> beginCameraRendering
void UnityEngine::Rendering::RenderPipelineManager::_set_beginCameraRendering(::System::Action_2<::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::_set_beginCameraRendering");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "RenderPipelineManager", "beginCameraRendering", value));
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.get_currentPipeline
::UnityEngine::Rendering::RenderPipeline* UnityEngine::Rendering::RenderPipelineManager::get_currentPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::get_currentPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "get_currentPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::RenderPipeline*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.set_currentPipeline
void UnityEngine::Rendering::RenderPipelineManager::set_currentPipeline(::UnityEngine::Rendering::RenderPipeline* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::set_currentPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "set_currentPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.add_beginCameraRendering
void UnityEngine::Rendering::RenderPipelineManager::add_beginCameraRendering(::System::Action_2<::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::add_beginCameraRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "add_beginCameraRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.remove_beginCameraRendering
void UnityEngine::Rendering::RenderPipelineManager::remove_beginCameraRendering(::System::Action_2<::UnityEngine::Rendering::ScriptableRenderContext, ::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::remove_beginCameraRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "remove_beginCameraRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager..cctor
void UnityEngine::Rendering::RenderPipelineManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.CleanupRenderPipeline
void UnityEngine::Rendering::RenderPipelineManager::CleanupRenderPipeline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::CleanupRenderPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "CleanupRenderPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.GetCameras
void UnityEngine::Rendering::RenderPipelineManager::GetCameras(::UnityEngine::Rendering::ScriptableRenderContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::GetCameras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "GetCameras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.DoRenderLoop_Internal
void UnityEngine::Rendering::RenderPipelineManager::DoRenderLoop_Internal(::UnityEngine::Rendering::RenderPipelineAsset* pipe, ::System::IntPtr loopPtr, ::System::Collections::Generic::List_1<::UnityEngine::Camera::RenderRequest>* renderRequests) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::DoRenderLoop_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "DoRenderLoop_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipe), ::il2cpp_utils::ExtractType(loopPtr), ::il2cpp_utils::ExtractType(renderRequests)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipe, loopPtr, renderRequests);
}
// Autogenerated method: UnityEngine.Rendering.RenderPipelineManager.PrepareRenderPipeline
void UnityEngine::Rendering::RenderPipelineManager::PrepareRenderPipeline(::UnityEngine::Rendering::RenderPipelineAsset* pipelineAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::RenderPipelineManager::PrepareRenderPipeline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "RenderPipelineManager", "PrepareRenderPipeline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineAsset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Rendering.ShaderTagId kRenderTypeTag
::UnityEngine::Rendering::ShaderTagId UnityEngine::Rendering::ScriptableRenderContext::_get_kRenderTypeTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::_get_kRenderTypeTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderTagId>("UnityEngine.Rendering", "ScriptableRenderContext", "kRenderTypeTag"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Rendering.ShaderTagId kRenderTypeTag
void UnityEngine::Rendering::ScriptableRenderContext::_set_kRenderTypeTag(::UnityEngine::Rendering::ShaderTagId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::_set_kRenderTypeTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ScriptableRenderContext", "kRenderTypeTag", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_Ptr
::System::IntPtr& UnityEngine::Rendering::ScriptableRenderContext::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::dyn_m_Ptr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext..ctor
// ABORTED elsewhere.  UnityEngine::Rendering::ScriptableRenderContext::ScriptableRenderContext(::System::IntPtr ptr)
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext..cctor
void UnityEngine::Rendering::ScriptableRenderContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "ScriptableRenderContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetNumberOfCameras_Internal
int UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNumberOfCameras_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetCamera_Internal
::UnityEngine::Camera* UnityEngine::Rendering::ScriptableRenderContext::GetCamera_Internal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetCamera_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetCamera_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetNumberOfCameras
int UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNumberOfCameras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetCamera
::UnityEngine::Camera* UnityEngine::Rendering::ScriptableRenderContext::GetCamera(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.Equals
bool UnityEngine::Rendering::ScriptableRenderContext::Equals(::UnityEngine::Rendering::ScriptableRenderContext other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetNumberOfCameras_Internal_Injected
int UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras_Internal_Injected(ByRef<::UnityEngine::Rendering::ScriptableRenderContext> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetNumberOfCameras_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "ScriptableRenderContext", "GetNumberOfCameras_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetCamera_Internal_Injected
::UnityEngine::Camera* UnityEngine::Rendering::ScriptableRenderContext::GetCamera_Internal_Injected(ByRef<::UnityEngine::Rendering::ScriptableRenderContext> _unity_self, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetCamera_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "ScriptableRenderContext", "GetCamera_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.Equals
bool UnityEngine::Rendering::ScriptableRenderContext::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Rendering.ScriptableRenderContext.GetHashCode
int UnityEngine::Rendering::ScriptableRenderContext::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ScriptableRenderContext::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.ShaderTagId
#include "UnityEngine/Rendering/ShaderTagId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Rendering.ShaderTagId none
::UnityEngine::Rendering::ShaderTagId UnityEngine::Rendering::ShaderTagId::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderTagId>("UnityEngine.Rendering", "ShaderTagId", "none"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Rendering.ShaderTagId none
void UnityEngine::Rendering::ShaderTagId::_set_none(::UnityEngine::Rendering::ShaderTagId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderTagId", "none", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Id
int& UnityEngine::Rendering::ShaderTagId::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::dyn_m_Id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.ShaderTagId..ctor
UnityEngine::Rendering::ShaderTagId::ShaderTagId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Rendering.ShaderTagId..cctor
void UnityEngine::Rendering::ShaderTagId::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "ShaderTagId", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.ShaderTagId.Equals
bool UnityEngine::Rendering::ShaderTagId::Equals(::UnityEngine::Rendering::ShaderTagId other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Rendering.ShaderTagId.Equals
bool UnityEngine::Rendering::ShaderTagId::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Rendering.ShaderTagId.GetHashCode
int UnityEngine::Rendering::ShaderTagId::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderTagId::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.SupportedRenderingFeatures
#include "UnityEngine/Rendering/SupportedRenderingFeatures.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: UnityEngine.MixedLightingMode
#include "UnityEngine/MixedLightingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
::UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::_get_s_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::_get_s_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures*>("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Rendering.SupportedRenderingFeatures s_Active
void UnityEngine::Rendering::SupportedRenderingFeatures::_set_s_Active(::UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::_set_s_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures", "s_Active", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes <reflectionProbeModes>k__BackingField
::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$reflectionProbeModes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$reflectionProbeModes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<reflectionProbeModes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes <defaultMixedLightingModes>k__BackingField
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$defaultMixedLightingModes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$defaultMixedLightingModes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<defaultMixedLightingModes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes <mixedLightingModes>k__BackingField
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$mixedLightingModes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$mixedLightingModes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mixedLightingModes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapBakeType <lightmapBakeTypes>k__BackingField
::UnityEngine::LightmapBakeType& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightmapBakeTypes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightmapBakeTypes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightmapBakeTypes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapBakeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapsMode <lightmapsModes>k__BackingField
::UnityEngine::LightmapsMode& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightmapsModes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightmapsModes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightmapsModes>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapsMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <enlighten>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$enlighten$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$enlighten$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<enlighten>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <lightProbeProxyVolumes>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightProbeProxyVolumes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$lightProbeProxyVolumes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lightProbeProxyVolumes>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <motionVectors>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$motionVectors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$motionVectors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<motionVectors>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <receiveShadows>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$receiveShadows$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$receiveShadows$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<receiveShadows>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <reflectionProbes>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$reflectionProbes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$reflectionProbes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<reflectionProbes>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <rendererPriority>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendererPriority$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendererPriority$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rendererPriority>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <terrainDetailUnsupported>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$terrainDetailUnsupported$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$terrainDetailUnsupported$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<terrainDetailUnsupported>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <rendersUIOverlay>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendersUIOverlay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendersUIOverlay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rendersUIOverlay>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesEnvironmentLighting>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesEnvironmentLighting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesEnvironmentLighting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesEnvironmentLighting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesFog>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesFog$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesFog$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesFog>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesRealtimeReflectionProbes>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesRealtimeReflectionProbes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesRealtimeReflectionProbes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesRealtimeReflectionProbes>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesOtherLightingSettings>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesOtherLightingSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesOtherLightingSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesOtherLightingSettings>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <editableMaterialRenderQueue>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$editableMaterialRenderQueue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$editableMaterialRenderQueue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<editableMaterialRenderQueue>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesLODBias>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesLODBias$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesLODBias$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesLODBias>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesMaximumLODLevel>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesMaximumLODLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesMaximumLODLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesMaximumLODLevel>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <rendererProbes>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendererProbes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$rendererProbes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rendererProbes>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <particleSystemInstancing>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$particleSystemInstancing$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$particleSystemInstancing$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<particleSystemInstancing>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <autoAmbientProbeBaking>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$autoAmbientProbeBaking$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$autoAmbientProbeBaking$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<autoAmbientProbeBaking>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <autoDefaultReflectionProbeBaking>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$autoDefaultReflectionProbeBaking$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$autoDefaultReflectionProbeBaking$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<autoDefaultReflectionProbeBaking>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <overridesShadowmask>k__BackingField
bool& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesShadowmask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overridesShadowmask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overridesShadowmask>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <overrideShadowmaskMessage>k__BackingField
::StringW& UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overrideShadowmaskMessage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::dyn_$overrideShadowmaskMessage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overrideShadowmaskMessage>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_active
::UnityEngine::Rendering::SupportedRenderingFeatures* UnityEngine::Rendering::SupportedRenderingFeatures::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::SupportedRenderingFeatures*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.set_active
void UnityEngine::Rendering::SupportedRenderingFeatures::set_active(::UnityEngine::Rendering::SupportedRenderingFeatures* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_defaultMixedLightingModes
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_defaultMixedLightingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_defaultMixedLightingModes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultMixedLightingModes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_mixedLightingModes
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::get_mixedLightingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_mixedLightingModes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixedLightingModes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapBakeTypes
::UnityEngine::LightmapBakeType UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapBakeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapBakeTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapBakeTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LightmapBakeType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_lightmapsModes
::UnityEngine::LightmapsMode UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapsModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_lightmapsModes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapsModes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LightmapsMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_enlighten
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_enlighten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_enlighten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enlighten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_rendersUIOverlay
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_rendersUIOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_rendersUIOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rendersUIOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_autoAmbientProbeBaking
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_autoAmbientProbeBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_autoAmbientProbeBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoAmbientProbeBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.get_autoDefaultReflectionProbeBaking
bool UnityEngine::Rendering::SupportedRenderingFeatures::get_autoDefaultReflectionProbeBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::get_autoDefaultReflectionProbeBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoDefaultReflectionProbeBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures..cctor
void UnityEngine::Rendering::SupportedRenderingFeatures::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackMixedLightingModeByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackMixedLightingModeByRef(::System::IntPtr fallbackModePtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::FallbackMixedLightingModeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "FallbackMixedLightingModeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fallbackModePtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fallbackModePtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupported(::UnityEngine::MixedLightingMode mixedMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsMixedLightingModeSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixedMode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixedMode);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsMixedLightingModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupportedByRef(::UnityEngine::MixedLightingMode mixedMode, ::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsMixedLightingModeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsMixedLightingModeSupportedByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixedMode), ::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixedMode, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupported
bool UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupported(::UnityEngine::LightmapBakeType bakeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapBakeTypeSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bakeType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bakeType);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapBakeTypeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupportedByRef(::UnityEngine::LightmapBakeType bakeType, ::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapBakeTypeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapBakeTypeSupportedByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bakeType), ::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bakeType, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapsModeSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapsModeSupportedByRef(::UnityEngine::LightmapsMode mode, ::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapsModeSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapsModeSupportedByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsLightmapperSupportedByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapperSupportedByRef(int lightmapper, ::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsLightmapperSupportedByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsLightmapperSupportedByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightmapper), ::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightmapper, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsUIOverlayRenderedBySRP
void UnityEngine::Rendering::SupportedRenderingFeatures::IsUIOverlayRenderedBySRP(::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsUIOverlayRenderedBySRP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsUIOverlayRenderedBySRP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsAutoAmbientProbeBakingSupported
void UnityEngine::Rendering::SupportedRenderingFeatures::IsAutoAmbientProbeBakingSupported(::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsAutoAmbientProbeBakingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsAutoAmbientProbeBakingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.IsAutoDefaultReflectionProbeBakingSupported
void UnityEngine::Rendering::SupportedRenderingFeatures::IsAutoDefaultReflectionProbeBakingSupported(::System::IntPtr isSupportedPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::IsAutoDefaultReflectionProbeBakingSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "IsAutoDefaultReflectionProbeBakingSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSupportedPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, isSupportedPtr);
}
// Autogenerated method: UnityEngine.Rendering.SupportedRenderingFeatures.FallbackLightmapperByRef
void UnityEngine::Rendering::SupportedRenderingFeatures::FallbackLightmapperByRef(::System::IntPtr lightmapperPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::FallbackLightmapperByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "SupportedRenderingFeatures", "FallbackLightmapperByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightmapperPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightmapperPtr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes
#include "UnityEngine/Rendering/SupportedRenderingFeatures.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes None
::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/ReflectionProbeModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes None
void UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_set_None(::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/ReflectionProbeModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes Rotation
::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/ReflectionProbeModes", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.ReflectionProbeModes Rotation
void UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_set_Rotation(::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/ReflectionProbeModes", "Rotation", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::ReflectionProbeModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes
#include "UnityEngine/Rendering/SupportedRenderingFeatures.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes None
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes None
void UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_None(::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes IndirectOnly
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_IndirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_IndirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "IndirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes IndirectOnly
void UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_IndirectOnly(::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_IndirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "IndirectOnly", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes Subtractive
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_Subtractive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_Subtractive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "Subtractive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes Subtractive
void UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_Subtractive(::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_Subtractive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "Subtractive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes Shadowmask
::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_Shadowmask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_get_Shadowmask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes>("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "Shadowmask"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.SupportedRenderingFeatures/UnityEngine.Rendering.LightmapMixedBakeModes Shadowmask
void UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_Shadowmask(::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::_set_Shadowmask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "SupportedRenderingFeatures/LightmapMixedBakeModes", "Shadowmask", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::SupportedRenderingFeatures::LightmapMixedBakeModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.BatchCullingContext
#include "UnityEngine/Rendering/BatchCullingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Unity.Collections.NativeArray`1<UnityEngine.Plane> cullingPlanes
::Unity::Collections::NativeArray_1<::UnityEngine::Plane>& UnityEngine::Rendering::BatchCullingContext::dyn_cullingPlanes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_cullingPlanes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cullingPlanes"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Plane>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Rendering.BatchVisibility> batchVisibility
::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::BatchVisibility>& UnityEngine::Rendering::BatchCullingContext::dyn_batchVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_batchVisibility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "batchVisibility"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::BatchVisibility>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> visibleIndices
::Unity::Collections::NativeArray_1<int>& UnityEngine::Rendering::BatchCullingContext::dyn_visibleIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_visibleIndices");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleIndices"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Int32> visibleIndicesY
::Unity::Collections::NativeArray_1<int>& UnityEngine::Rendering::BatchCullingContext::dyn_visibleIndicesY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_visibleIndicesY");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibleIndicesY"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Rendering.LODParameters lodParameters
::UnityEngine::Rendering::LODParameters& UnityEngine::Rendering::BatchCullingContext::dyn_lodParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_lodParameters");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lodParameters"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::LODParameters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Matrix4x4 cullingMatrix
::UnityEngine::Matrix4x4& UnityEngine::Rendering::BatchCullingContext::dyn_cullingMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_cullingMatrix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cullingMatrix"))->offset;
  return *reinterpret_cast<::UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearPlane
float& UnityEngine::Rendering::BatchCullingContext::dyn_nearPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchCullingContext::dyn_nearPlane");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearPlane"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.BatchCullingContext..ctor
// ABORTED elsewhere.  UnityEngine::Rendering::BatchCullingContext::BatchCullingContext(::Unity::Collections::NativeArray_1<::UnityEngine::Plane> inCullingPlanes, ::Unity::Collections::NativeArray_1<::UnityEngine::Rendering::BatchVisibility> inOutBatchVisibility, ::Unity::Collections::NativeArray_1<int> outVisibleIndices, ::Unity::Collections::NativeArray_1<int> outVisibleIndicesY, ::UnityEngine::Rendering::LODParameters inLodParameters, ::UnityEngine::Matrix4x4 inCullingMatrix, float inNearPlane)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.BatchRendererGroup
#include "UnityEngine/Rendering/BatchRendererGroup.hpp"
// Including type: UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling
#include "UnityEngine/Rendering/BatchRendererGroup_OnPerformCulling.hpp"
// Including type: UnityEngine.Rendering.BatchRendererCullingOutput
#include "UnityEngine/Rendering/BatchRendererCullingOutput.hpp"
// Including type: UnityEngine.Rendering.LODParameters
#include "UnityEngine/Rendering/LODParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_GroupHandle
::System::IntPtr& UnityEngine::Rendering::BatchRendererGroup::dyn_m_GroupHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::dyn_m_GroupHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GroupHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling m_PerformCulling
::UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling*& UnityEngine::Rendering::BatchRendererGroup::dyn_m_PerformCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::dyn_m_PerformCulling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PerformCulling"))->offset;
  return *reinterpret_cast<::UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Rendering.BatchRendererGroup.InvokeOnPerformCulling
void UnityEngine::Rendering::BatchRendererGroup::InvokeOnPerformCulling(::UnityEngine::Rendering::BatchRendererGroup* group, ByRef<::UnityEngine::Rendering::BatchRendererCullingOutput> context, ByRef<::UnityEngine::Rendering::LODParameters> lodParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::InvokeOnPerformCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Rendering", "BatchRendererGroup", "InvokeOnPerformCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(lodParameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group, byref(context), byref(lodParameters));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling
#include "UnityEngine/Rendering/BatchRendererGroup_OnPerformCulling.hpp"
// Including type: Unity.Jobs.JobHandle
#include "Unity/Jobs/JobHandle.hpp"
// Including type: UnityEngine.Rendering.BatchCullingContext
#include "UnityEngine/Rendering/BatchCullingContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling.Invoke
::Unity::Jobs::JobHandle UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::Invoke(::UnityEngine::Rendering::BatchRendererGroup* rendererGroup, ::UnityEngine::Rendering::BatchCullingContext cullingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rendererGroup), ::il2cpp_utils::ExtractType(cullingContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Jobs::JobHandle, false>(this, ___internal__method, rendererGroup, cullingContext);
}
// Autogenerated method: UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling.BeginInvoke
::System::IAsyncResult* UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::BeginInvoke(::UnityEngine::Rendering::BatchRendererGroup* rendererGroup, ::UnityEngine::Rendering::BatchCullingContext cullingContext, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rendererGroup), ::il2cpp_utils::ExtractType(cullingContext), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, rendererGroup, cullingContext, callback, object);
}
// Autogenerated method: UnityEngine.Rendering.BatchRendererGroup/UnityEngine.Rendering.OnPerformCulling.EndInvoke
::Unity::Jobs::JobHandle UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::BatchRendererGroup::OnPerformCulling::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Jobs::JobHandle, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Rendering.ShaderPropertyFlags
#include "UnityEngine/Rendering/ShaderPropertyFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags None
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags None
void UnityEngine::Rendering::ShaderPropertyFlags::_set_None(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags HideInInspector
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_HideInInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_HideInInspector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "HideInInspector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags HideInInspector
void UnityEngine::Rendering::ShaderPropertyFlags::_set_HideInInspector(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_HideInInspector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "HideInInspector", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags PerRendererData
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_PerRendererData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_PerRendererData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "PerRendererData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags PerRendererData
void UnityEngine::Rendering::ShaderPropertyFlags::_set_PerRendererData(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_PerRendererData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "PerRendererData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags NoScaleOffset
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_NoScaleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_NoScaleOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "NoScaleOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags NoScaleOffset
void UnityEngine::Rendering::ShaderPropertyFlags::_set_NoScaleOffset(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_NoScaleOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "NoScaleOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags Normal
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags Normal
void UnityEngine::Rendering::ShaderPropertyFlags::_set_Normal(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags HDR
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_HDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_HDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "HDR"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags HDR
void UnityEngine::Rendering::ShaderPropertyFlags::_set_HDR(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_HDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "HDR", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags Gamma
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_Gamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_Gamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "Gamma"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags Gamma
void UnityEngine::Rendering::ShaderPropertyFlags::_set_Gamma(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_Gamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "Gamma", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags NonModifiableTextureData
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_NonModifiableTextureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_NonModifiableTextureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "NonModifiableTextureData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags NonModifiableTextureData
void UnityEngine::Rendering::ShaderPropertyFlags::_set_NonModifiableTextureData(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_NonModifiableTextureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "NonModifiableTextureData", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags MainTexture
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_MainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_MainTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "MainTexture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags MainTexture
void UnityEngine::Rendering::ShaderPropertyFlags::_set_MainTexture(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_MainTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "MainTexture", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Rendering.ShaderPropertyFlags MainColor
::UnityEngine::Rendering::ShaderPropertyFlags UnityEngine::Rendering::ShaderPropertyFlags::_get_MainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_get_MainColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Rendering::ShaderPropertyFlags>("UnityEngine.Rendering", "ShaderPropertyFlags", "MainColor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Rendering.ShaderPropertyFlags MainColor
void UnityEngine::Rendering::ShaderPropertyFlags::_set_MainColor(::UnityEngine::Rendering::ShaderPropertyFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::_set_MainColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Rendering", "ShaderPropertyFlags", "MainColor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Rendering::ShaderPropertyFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Rendering::ShaderPropertyFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayState
#include "UnityEngine/Playables/PlayState.hpp"
// Including type: UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType
#include "UnityEngine/Playables/FrameData_EvaluationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt64 m_FrameID
uint64_t& UnityEngine::Playables::FrameData::dyn_m_FrameID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_FrameID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FrameID"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double m_DeltaTime
double& UnityEngine::Playables::FrameData::dyn_m_DeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_DeltaTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeltaTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_Weight
float& UnityEngine::Playables::FrameData::dyn_m_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_Weight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_EffectiveWeight
float& UnityEngine::Playables::FrameData::dyn_m_EffectiveWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_EffectiveWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectiveWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Double m_EffectiveParentDelay
double& UnityEngine::Playables::FrameData::dyn_m_EffectiveParentDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_EffectiveParentDelay");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectiveParentDelay"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_EffectiveParentSpeed
float& UnityEngine::Playables::FrameData::dyn_m_EffectiveParentSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_EffectiveParentSpeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectiveParentSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Single m_EffectiveSpeed
float& UnityEngine::Playables::FrameData::dyn_m_EffectiveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_EffectiveSpeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EffectiveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags m_Flags
::UnityEngine::Playables::FrameData::Flags& UnityEngine::Playables::FrameData::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_Flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::FrameData::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.Playables.PlayableOutput m_Output
::UnityEngine::Playables::PlayableOutput& UnityEngine::Playables::FrameData::dyn_m_Output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::dyn_m_Output");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Output"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutput*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_deltaTime
float UnityEngine::Playables::FrameData::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_effectiveSpeed
float UnityEngine::Playables::FrameData::get_effectiveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_effectiveSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_effectiveSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_evaluationType
::UnityEngine::Playables::FrameData::EvaluationType UnityEngine::Playables::FrameData::get_evaluationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_evaluationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_evaluationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::FrameData::EvaluationType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_seekOccurred
bool UnityEngine::Playables::FrameData::get_seekOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_seekOccurred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_seekOccurred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_timeLooped
bool UnityEngine::Playables::FrameData::get_timeLooped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_timeLooped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_timeLooped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_timeHeld
bool UnityEngine::Playables::FrameData::get_timeHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_timeHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_timeHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_output
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::FrameData::get_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.get_effectivePlayState
::UnityEngine::Playables::PlayState UnityEngine::Playables::FrameData::get_effectivePlayState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::get_effectivePlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_effectivePlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.FrameData.HasFlags
bool UnityEngine::Playables::FrameData::HasFlags(::UnityEngine::Playables::FrameData::Flags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::HasFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Evaluate
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_Evaluate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "Evaluate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Evaluate
void UnityEngine::Playables::FrameData::Flags::_set_Evaluate(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_Evaluate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "Evaluate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags SeekOccured
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_SeekOccured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_SeekOccured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "SeekOccured"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags SeekOccured
void UnityEngine::Playables::FrameData::Flags::_set_SeekOccured(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_SeekOccured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "SeekOccured", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Loop
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Loop
void UnityEngine::Playables::FrameData::Flags::_set_Loop(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Hold
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags Hold
void UnityEngine::Playables::FrameData::Flags::_set_Hold(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "Hold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags EffectivePlayStateDelayed
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_EffectivePlayStateDelayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_EffectivePlayStateDelayed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "EffectivePlayStateDelayed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags EffectivePlayStateDelayed
void UnityEngine::Playables::FrameData::Flags::_set_EffectivePlayStateDelayed(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_EffectivePlayStateDelayed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "EffectivePlayStateDelayed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags EffectivePlayStatePlaying
::UnityEngine::Playables::FrameData::Flags UnityEngine::Playables::FrameData::Flags::_get_EffectivePlayStatePlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_get_EffectivePlayStatePlaying");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::Flags>("UnityEngine.Playables", "FrameData/Flags", "EffectivePlayStatePlaying"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.Flags EffectivePlayStatePlaying
void UnityEngine::Playables::FrameData::Flags::_set_EffectivePlayStatePlaying(::UnityEngine::Playables::FrameData::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::_set_EffectivePlayStatePlaying");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/Flags", "EffectivePlayStatePlaying", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Playables::FrameData::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType
#include "UnityEngine/Playables/FrameData_EvaluationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType Evaluate
::UnityEngine::Playables::FrameData::EvaluationType UnityEngine::Playables::FrameData::EvaluationType::_get_Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::EvaluationType::_get_Evaluate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::EvaluationType>("UnityEngine.Playables", "FrameData/EvaluationType", "Evaluate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType Evaluate
void UnityEngine::Playables::FrameData::EvaluationType::_set_Evaluate(::UnityEngine::Playables::FrameData::EvaluationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::EvaluationType::_set_Evaluate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/EvaluationType", "Evaluate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType Playback
::UnityEngine::Playables::FrameData::EvaluationType UnityEngine::Playables::FrameData::EvaluationType::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::EvaluationType::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::FrameData::EvaluationType>("UnityEngine.Playables", "FrameData/EvaluationType", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.FrameData/UnityEngine.Playables.EvaluationType Playback
void UnityEngine::Playables::FrameData::EvaluationType::_set_Playback(::UnityEngine::Playables::FrameData::EvaluationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::EvaluationType::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "FrameData/EvaluationType", "Playback", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Playables::FrameData::EvaluationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::FrameData::EvaluationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.INotification.get_id
::UnityEngine::PropertyName UnityEngine::Playables::INotification::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::INotification::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.INotificationReceiver
#include "UnityEngine/Playables/INotificationReceiver.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.INotificationReceiver.OnNotify
void UnityEngine::Playables::INotificationReceiver::OnNotify(::UnityEngine::Playables::Playable origin, ::UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::INotificationReceiver::OnNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.IPlayable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::IPlayable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.IPlayableBehaviour
#include "UnityEngine/Playables/IPlayableBehaviour.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnGraphStart
void UnityEngine::Playables::IPlayableBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnGraphStop
void UnityEngine::Playables::IPlayableBehaviour::OnGraphStop(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnPlayableCreate
void UnityEngine::Playables::IPlayableBehaviour::OnPlayableCreate(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Playables::IPlayableBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Playables::IPlayableBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.OnBehaviourPause
void UnityEngine::Playables::IPlayableBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.PrepareFrame
void UnityEngine::Playables::IPlayableBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.IPlayableBehaviour.ProcessFrame
void UnityEngine::Playables::IPlayableBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.IPlayableOutput
#include "UnityEngine/Playables/IPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.IPlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Playables::IPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.DirectorWrapMode Hold
::UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::DirectorWrapMode::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::DirectorWrapMode>("UnityEngine.Playables", "DirectorWrapMode", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.DirectorWrapMode Hold
void UnityEngine::Playables::DirectorWrapMode::_set_Hold(::UnityEngine::Playables::DirectorWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "DirectorWrapMode", "Hold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.DirectorWrapMode Loop
::UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::DirectorWrapMode::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::DirectorWrapMode>("UnityEngine.Playables", "DirectorWrapMode", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.DirectorWrapMode Loop
void UnityEngine::Playables::DirectorWrapMode::_set_Loop(::UnityEngine::Playables::DirectorWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "DirectorWrapMode", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.DirectorWrapMode None
::UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::DirectorWrapMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::DirectorWrapMode>("UnityEngine.Playables", "DirectorWrapMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.DirectorWrapMode None
void UnityEngine::Playables::DirectorWrapMode::_set_None(::UnityEngine::Playables::DirectorWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "DirectorWrapMode", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Playables::DirectorWrapMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::DirectorWrapMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Playables.Playable m_NullPlayable
::UnityEngine::Playables::Playable UnityEngine::Playables::Playable::_get_m_NullPlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::_get_m_NullPlayable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::Playable>("UnityEngine.Playables", "Playable", "m_NullPlayable"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Playables.Playable m_NullPlayable
void UnityEngine::Playables::Playable::_set_m_NullPlayable(::UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::_set_m_NullPlayable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "Playable", "m_NullPlayable", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableHandle m_Handle
::UnityEngine::Playables::PlayableHandle& UnityEngine::Playables::Playable::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.Playable.get_Null
::UnityEngine::Playables::Playable UnityEngine::Playables::Playable::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "Playable", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.Playable..ctor
// ABORTED elsewhere.  UnityEngine::Playables::Playable::Playable(::UnityEngine::Playables::PlayableHandle handle)
// Autogenerated method: UnityEngine.Playables.Playable..cctor
void UnityEngine::Playables::Playable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "Playable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.Playable.Create
::UnityEngine::Playables::Playable UnityEngine::Playables::Playable::Create(::UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "Playable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Playables.Playable.GetHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::Playable::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.Playable.GetPlayableType
::System::Type* UnityEngine::Playables::Playable::GetPlayableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::GetPlayableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPlayableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.Playable.Equals
bool UnityEngine::Playables::Playable::Equals(::UnityEngine::Playables::Playable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::Playable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.IPlayableAsset
#include "UnityEngine/Playables/IPlayableAsset.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.IPlayableAsset.get_duration
double UnityEngine::Playables::IPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.IPlayableAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Playables::IPlayableAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::IPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.PlayableAsset.get_duration
double UnityEngine::Playables::PlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableAsset.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Playables::PlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Playables::PlayableAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated method: UnityEngine.Playables.PlayableAsset.Internal_CreatePlayable
void UnityEngine::Playables::PlayableAsset::Internal_CreatePlayable(::UnityEngine::Playables::PlayableAsset* asset, ::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableAsset::Internal_CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableAsset", "Internal_CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset, graph, go, ptr);
}
// Autogenerated method: UnityEngine.Playables.PlayableAsset.Internal_GetPlayableAssetDuration
void UnityEngine::Playables::PlayableAsset::Internal_GetPlayableAssetDuration(::UnityEngine::Playables::PlayableAsset* asset, ::System::IntPtr ptrToDouble) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableAsset::Internal_GetPlayableAssetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableAsset", "Internal_GetPlayableAssetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(ptrToDouble)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset, ptrToDouble);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableBehaviour
#include "UnityEngine/Playables/PlayableBehaviour.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnGraphStart
void UnityEngine::Playables::PlayableBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnGraphStop
void UnityEngine::Playables::PlayableBehaviour::OnGraphStop(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnPlayableCreate
void UnityEngine::Playables::PlayableBehaviour::OnPlayableCreate(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnPlayableDestroy
void UnityEngine::Playables::PlayableBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnBehaviourPlay
void UnityEngine::Playables::PlayableBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.OnBehaviourPause
void UnityEngine::Playables::PlayableBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.PrepareFrame
void UnityEngine::Playables::PlayableBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.ProcessFrame
void UnityEngine::Playables::PlayableBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Playables.PlayableBehaviour.Clone
::Il2CppObject* UnityEngine::Playables::PlayableBehaviour::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBehaviour::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod
#include "UnityEngine/Playables/PlayableBinding_CreateOutputMethod.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Playables.PlayableBinding[] None
::ArrayW<::UnityEngine::Playables::PlayableBinding> UnityEngine::Playables::PlayableBinding::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::Playables::PlayableBinding>>("UnityEngine.Playables", "PlayableBinding", "None"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Playables.PlayableBinding[] None
void UnityEngine::Playables::PlayableBinding::_set_None(::ArrayW<::UnityEngine::Playables::PlayableBinding> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableBinding", "None", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double DefaultDuration
double UnityEngine::Playables::PlayableBinding::_get_DefaultDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::_get_DefaultDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Playables", "PlayableBinding", "DefaultDuration"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double DefaultDuration
void UnityEngine::Playables::PlayableBinding::_set_DefaultDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::_set_DefaultDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableBinding", "DefaultDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_StreamName
::StringW& UnityEngine::Playables::PlayableBinding::dyn_m_StreamName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::dyn_m_StreamName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StreamName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object m_SourceObject
::UnityEngine::Object*& UnityEngine::Playables::PlayableBinding::dyn_m_SourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::dyn_m_SourceObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_SourceBindingType
::System::Type*& UnityEngine::Playables::PlayableBinding::dyn_m_SourceBindingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::dyn_m_SourceBindingType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceBindingType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod m_CreateOutputMethod
::UnityEngine::Playables::PlayableBinding::CreateOutputMethod*& UnityEngine::Playables::PlayableBinding::dyn_m_CreateOutputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::dyn_m_CreateOutputMethod");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CreateOutputMethod"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding::CreateOutputMethod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding.get_sourceObject
::UnityEngine::Object* UnityEngine::Playables::PlayableBinding::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::get_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding.get_outputTargetType
::System::Type* UnityEngine::Playables::PlayableBinding::get_outputTargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::get_outputTargetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_outputTargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding..cctor
void UnityEngine::Playables::PlayableBinding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableBinding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding.CreateOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::PlayableBinding::CreateOutput(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::CreateOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(this, ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding.CreateInternal
::UnityEngine::Playables::PlayableBinding UnityEngine::Playables::PlayableBinding::CreateInternal(::StringW name, ::UnityEngine::Object* sourceObject, ::System::Type* sourceType, ::UnityEngine::Playables::PlayableBinding::CreateOutputMethod* createFunction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::CreateInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableBinding", "CreateInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(sourceObject), ::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(createFunction)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, sourceObject, sourceType, createFunction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod
#include "UnityEngine/Playables/PlayableBinding_CreateOutputMethod.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod.Invoke
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::PlayableBinding::CreateOutputMethod::Invoke(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::CreateOutputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(this, ___internal__method, graph, name);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod.BeginInvoke
::System::IAsyncResult* UnityEngine::Playables::PlayableBinding::CreateOutputMethod::BeginInvoke(::UnityEngine::Playables::PlayableGraph graph, ::StringW name, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::CreateOutputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, graph, name, callback, object);
}
// Autogenerated method: UnityEngine.Playables.PlayableBinding/UnityEngine.Playables.CreateOutputMethod.EndInvoke
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::PlayableBinding::CreateOutputMethod::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableBinding::CreateOutputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableTraversalMode
#include "UnityEngine/Playables/PlayableTraversalMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.PlayableTraversalMode Mix
::UnityEngine::Playables::PlayableTraversalMode UnityEngine::Playables::PlayableTraversalMode::_get_Mix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableTraversalMode::_get_Mix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableTraversalMode>("UnityEngine.Playables", "PlayableTraversalMode", "Mix"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.PlayableTraversalMode Mix
void UnityEngine::Playables::PlayableTraversalMode::_set_Mix(::UnityEngine::Playables::PlayableTraversalMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableTraversalMode::_set_Mix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableTraversalMode", "Mix", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.PlayableTraversalMode Passthrough
::UnityEngine::Playables::PlayableTraversalMode UnityEngine::Playables::PlayableTraversalMode::_get_Passthrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableTraversalMode::_get_Passthrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableTraversalMode>("UnityEngine.Playables", "PlayableTraversalMode", "Passthrough"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.PlayableTraversalMode Passthrough
void UnityEngine::Playables::PlayableTraversalMode::_set_Passthrough(::UnityEngine::Playables::PlayableTraversalMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableTraversalMode::_set_Passthrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableTraversalMode", "Passthrough", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Playables::PlayableTraversalMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableTraversalMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableExtensions
#include "UnityEngine/Playables/PlayableExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.IPlayable
#include "UnityEngine/Playables/IPlayable.hpp"
// Including type: UnityEngine.IExposedPropertyTable
#include "UnityEngine/IExposedPropertyTable.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Handle
::System::IntPtr& UnityEngine::Playables::PlayableGraph::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_Version
uint& UnityEngine::Playables::PlayableGraph::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::dyn_m_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayable
::UnityEngine::Playables::Playable UnityEngine::Playables::PlayableGraph::GetRootPlayable(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetRootPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsValid
bool UnityEngine::Playables::PlayableGraph::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsPlaying
bool UnityEngine::Playables::PlayableGraph::IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetResolver
::UnityEngine::IExposedPropertyTable* UnityEngine::Playables::PlayableGraph::GetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IExposedPropertyTable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetPlayableCount
int UnityEngine::Playables::PlayableGraph::GetPlayableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetPlayableCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPlayableCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableCount
int UnityEngine::Playables::PlayableGraph::GetRootPlayableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetRootPlayableCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootPlayableCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreatePlayableHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableGraph::CreatePlayableHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::CreatePlayableHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreatePlayableHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreateScriptOutputInternal
bool UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal(::StringW name, ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateScriptOutputInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, byref(handle));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableInternal
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRootPlayableInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.ConnectInternal
bool UnityEngine::Playables::PlayableGraph::ConnectInternal(::UnityEngine::Playables::PlayableHandle source, int sourceOutputPort, ::UnityEngine::Playables::PlayableHandle destination, int destinationInputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::ConnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceOutputPort), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationInputPort)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, source, sourceOutputPort, destination, destinationInputPort);
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsValid_Injected
bool UnityEngine::Playables::PlayableGraph::IsValid_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::IsValid_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "IsValid_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.IsPlaying_Injected
bool UnityEngine::Playables::PlayableGraph::IsPlaying_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::IsPlaying_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "IsPlaying_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetResolver_Injected
::UnityEngine::IExposedPropertyTable* UnityEngine::Playables::PlayableGraph::GetResolver_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetResolver_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "GetResolver_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IExposedPropertyTable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetPlayableCount_Injected
int UnityEngine::Playables::PlayableGraph::GetPlayableCount_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetPlayableCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "GetPlayableCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableCount_Injected
int UnityEngine::Playables::PlayableGraph::GetRootPlayableCount_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetRootPlayableCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "GetRootPlayableCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreatePlayableHandle_Injected
void UnityEngine::Playables::PlayableGraph::CreatePlayableHandle_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::CreatePlayableHandle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "CreatePlayableHandle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.CreateScriptOutputInternal_Injected
bool UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self, ::StringW name, ByRef<::UnityEngine::Playables::PlayableOutputHandle> handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::CreateScriptOutputInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "CreateScriptOutputInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableOutputHandle&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), name, byref(handle));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.GetRootPlayableInternal_Injected
void UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self, int index, ByRef<::UnityEngine::Playables::PlayableHandle> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::GetRootPlayableInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "GetRootPlayableInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index, byref(ret));
}
// Autogenerated method: UnityEngine.Playables.PlayableGraph.ConnectInternal_Injected
bool UnityEngine::Playables::PlayableGraph::ConnectInternal_Injected(ByRef<::UnityEngine::Playables::PlayableGraph> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> source, int sourceOutputPort, ByRef<::UnityEngine::Playables::PlayableHandle> destination, int destinationInputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableGraph::ConnectInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableGraph", "ConnectInternal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sourceOutputPort), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(destinationInputPort)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(source), sourceOutputPort, byref(destination), destinationInputPort);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayState
#include "UnityEngine/Playables/PlayState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.PlayState Paused
::UnityEngine::Playables::PlayState UnityEngine::Playables::PlayState::_get_Paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_get_Paused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayState>("UnityEngine.Playables", "PlayState", "Paused"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.PlayState Paused
void UnityEngine::Playables::PlayState::_set_Paused(::UnityEngine::Playables::PlayState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_set_Paused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayState", "Paused", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.PlayState Playing
::UnityEngine::Playables::PlayState UnityEngine::Playables::PlayState::_get_Playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_get_Playing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayState>("UnityEngine.Playables", "PlayState", "Playing"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.PlayState Playing
void UnityEngine::Playables::PlayState::_set_Playing(::UnityEngine::Playables::PlayState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_set_Playing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayState", "Playing", value));
}
// [ObsoleteAttribute] Offset: 0x56C7C4
// Autogenerated static field getter
// Get static field: static public UnityEngine.Playables.PlayState Delayed
::UnityEngine::Playables::PlayState UnityEngine::Playables::PlayState::_get_Delayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_get_Delayed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayState>("UnityEngine.Playables", "PlayState", "Delayed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Playables.PlayState Delayed
void UnityEngine::Playables::PlayState::_set_Delayed(::UnityEngine::Playables::PlayState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::_set_Delayed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayState", "Delayed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::Playables::PlayState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
// Including type: UnityEngine.Playables.IPlayableBehaviour
#include "UnityEngine/Playables/IPlayableBehaviour.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Playables.PlayState
#include "UnityEngine/Playables/PlayState.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableTraversalMode
#include "UnityEngine/Playables/PlayableTraversalMode.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Playables.PlayableHandle m_Null
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::_get_m_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::_get_m_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableHandle>("UnityEngine.Playables", "PlayableHandle", "m_Null"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Playables.PlayableHandle m_Null
void UnityEngine::Playables::PlayableHandle::_set_m_Null(::UnityEngine::Playables::PlayableHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::_set_m_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableHandle", "m_Null", value));
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Handle
::System::IntPtr& UnityEngine::Playables::PlayableHandle::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_Version
uint& UnityEngine::Playables::PlayableHandle::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::dyn_m_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.get_Null
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle..cctor
void UnityEngine::Playables::PlayableHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInput
::UnityEngine::Playables::Playable UnityEngine::Playables::PlayableHandle::GetInput(int inputPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputPort)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, inputPort);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight
bool UnityEngine::Playables::PlayableHandle::SetInputWeight(int inputIndex, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInputWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inputIndex, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeight
float UnityEngine::Playables::PlayableHandle::GetInputWeight(int inputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInputWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, inputIndex);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Equals
bool UnityEngine::Playables::PlayableHandle::Equals(::UnityEngine::Playables::PlayableHandle other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CompareVersion
bool UnityEngine::Playables::PlayableHandle::CompareVersion(::UnityEngine::Playables::PlayableHandle lhs, ::UnityEngine::Playables::PlayableHandle rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::CompareVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "CompareVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CheckInputBounds
bool UnityEngine::Playables::PlayableHandle::CheckInputBounds(int inputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::CheckInputBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckInputBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inputIndex);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.CheckInputBounds
bool UnityEngine::Playables::PlayableHandle::CheckInputBounds(int inputIndex, bool acceptAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::CheckInputBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckInputBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputIndex), ::il2cpp_utils::ExtractType(acceptAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inputIndex, acceptAny);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsValid
bool UnityEngine::Playables::PlayableHandle::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayableType
::System::Type* UnityEngine::Playables::PlayableHandle::GetPlayableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPlayableType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPlayableType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetScriptInstance
void UnityEngine::Playables::PlayableHandle::SetScriptInstance(::Il2CppObject* scriptInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetScriptInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetScriptInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scriptInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scriptInstance);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayState
::UnityEngine::Playables::PlayState UnityEngine::Playables::PlayableHandle::GetPlayState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Play
void UnityEngine::Playables::PlayableHandle::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Pause
void UnityEngine::Playables::PlayableHandle::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetSpeed
void UnityEngine::Playables::PlayableHandle::SetSpeed(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTime
double UnityEngine::Playables::PlayableHandle::GetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTime
void UnityEngine::Playables::PlayableHandle::SetTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsDone
bool UnityEngine::Playables::PlayableHandle::IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetDuration
double UnityEngine::Playables::PlayableHandle::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetDuration
void UnityEngine::Playables::PlayableHandle::SetDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetPropagateSetTime
void UnityEngine::Playables::PlayableHandle::SetPropagateSetTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetPropagateSetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPropagateSetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetGraph
::UnityEngine::Playables::PlayableGraph UnityEngine::Playables::PlayableHandle::GetGraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableGraph, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputCount
int UnityEngine::Playables::PlayableHandle::GetInputCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInputCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputCount
void UnityEngine::Playables::PlayableHandle::SetInputCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInputCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight
void UnityEngine::Playables::PlayableHandle::SetInputWeight(::UnityEngine::Playables::PlayableHandle input, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInputWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPreviousTime
double UnityEngine::Playables::PlayableHandle::GetPreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPreviousTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPreviousTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTraversalMode
void UnityEngine::Playables::PlayableHandle::SetTraversalMode(::UnityEngine::Playables::PlayableTraversalMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTraversalMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTraversalMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTimeWrapMode
::UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::PlayableHandle::GetTimeWrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetTimeWrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTimeWrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::DirectorWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTimeWrapMode
void UnityEngine::Playables::PlayableHandle::SetTimeWrapMode(::UnityEngine::Playables::DirectorWrapMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTimeWrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTimeWrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetScriptInstance
::Il2CppObject* UnityEngine::Playables::PlayableHandle::GetScriptInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetScriptInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetScriptInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputHandle
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableHandle::GetInputHandle(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInputHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeightFromIndex
void UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex(int index, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetInputWeightFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeightFromIndex
float UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetInputWeightFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsValid_Injected
bool UnityEngine::Playables::PlayableHandle::IsValid_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::IsValid_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "IsValid_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayableType_Injected
::System::Type* UnityEngine::Playables::PlayableHandle::GetPlayableType_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPlayableType_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPlayableType_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetScriptInstance_Injected
void UnityEngine::Playables::PlayableHandle::SetScriptInstance_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, ::Il2CppObject* scriptInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetScriptInstance_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetScriptInstance_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(scriptInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), scriptInstance);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPlayState_Injected
::UnityEngine::Playables::PlayState UnityEngine::Playables::PlayableHandle::GetPlayState_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPlayState_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPlayState_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Play_Injected
void UnityEngine::Playables::PlayableHandle::Play_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Play_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "Play_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Pause_Injected
void UnityEngine::Playables::PlayableHandle::Pause_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Pause_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "Pause_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetSpeed_Injected
void UnityEngine::Playables::PlayableHandle::SetSpeed_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetSpeed_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetSpeed_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTime_Injected
double UnityEngine::Playables::PlayableHandle::GetTime_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetTime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTime_Injected
void UnityEngine::Playables::PlayableHandle::SetTime_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.IsDone_Injected
bool UnityEngine::Playables::PlayableHandle::IsDone_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::IsDone_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "IsDone_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetDuration_Injected
double UnityEngine::Playables::PlayableHandle::GetDuration_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetDuration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetDuration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetDuration_Injected
void UnityEngine::Playables::PlayableHandle::SetDuration_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetDuration_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetDuration_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetPropagateSetTime_Injected
void UnityEngine::Playables::PlayableHandle::SetPropagateSetTime_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetPropagateSetTime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetPropagateSetTime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetGraph_Injected
void UnityEngine::Playables::PlayableHandle::GetGraph_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, ByRef<::UnityEngine::Playables::PlayableGraph> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetGraph_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetGraph_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableGraph&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputCount_Injected
int UnityEngine::Playables::PlayableHandle::GetInputCount_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputCount_Injected
void UnityEngine::Playables::PlayableHandle::SetInputCount_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputCount_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputCount_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), value);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeight_Injected
void UnityEngine::Playables::PlayableHandle::SetInputWeight_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> input, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputWeight_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputWeight_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(input), weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetPreviousTime_Injected
double UnityEngine::Playables::PlayableHandle::GetPreviousTime_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetPreviousTime_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetPreviousTime_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTraversalMode_Injected
void UnityEngine::Playables::PlayableHandle::SetTraversalMode_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, ::UnityEngine::Playables::PlayableTraversalMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTraversalMode_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTraversalMode_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetTimeWrapMode_Injected
::UnityEngine::Playables::DirectorWrapMode UnityEngine::Playables::PlayableHandle::GetTimeWrapMode_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetTimeWrapMode_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetTimeWrapMode_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::DirectorWrapMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetTimeWrapMode_Injected
void UnityEngine::Playables::PlayableHandle::SetTimeWrapMode_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, ::UnityEngine::Playables::DirectorWrapMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetTimeWrapMode_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetTimeWrapMode_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), mode);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetScriptInstance_Injected
::Il2CppObject* UnityEngine::Playables::PlayableHandle::GetScriptInstance_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetScriptInstance_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetScriptInstance_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputHandle_Injected
void UnityEngine::Playables::PlayableHandle::GetInputHandle_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, int index, ByRef<::UnityEngine::Playables::PlayableHandle> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputHandle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputHandle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index, byref(ret));
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.SetInputWeightFromIndex_Injected
void UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, int index, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::SetInputWeightFromIndex_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "SetInputWeightFromIndex_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetInputWeightFromIndex_Injected
float UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex_Injected(ByRef<::UnityEngine::Playables::PlayableHandle> _unity_self, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetInputWeightFromIndex_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "GetInputWeightFromIndex_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), index);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.Equals
bool UnityEngine::Playables::PlayableHandle::Equals(::Il2CppObject* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.GetHashCode
int UnityEngine::Playables::PlayableHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableHandle.op_Equality
bool UnityEngine::Playables::operator ==(const ::UnityEngine::Playables::PlayableHandle& x, const ::UnityEngine::Playables::PlayableHandle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableHandle::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableHandle", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Playables.PlayableOutput m_NullPlayableOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::PlayableOutput::_get_m_NullPlayableOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::_get_m_NullPlayableOutput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableOutput>("UnityEngine.Playables", "PlayableOutput", "m_NullPlayableOutput"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Playables.PlayableOutput m_NullPlayableOutput
void UnityEngine::Playables::PlayableOutput::_set_m_NullPlayableOutput(::UnityEngine::Playables::PlayableOutput value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::_set_m_NullPlayableOutput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableOutput", "m_NullPlayableOutput", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableOutputHandle m_Handle
::UnityEngine::Playables::PlayableOutputHandle& UnityEngine::Playables::PlayableOutput::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutputHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutput.get_Null
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::PlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutput..ctor
// ABORTED elsewhere.  UnityEngine::Playables::PlayableOutput::PlayableOutput(::UnityEngine::Playables::PlayableOutputHandle handle)
// Autogenerated method: UnityEngine.Playables.PlayableOutput..cctor
void UnityEngine::Playables::PlayableOutput::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutput", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Playables::PlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutput.Equals
bool UnityEngine::Playables::PlayableOutput::Equals(::UnityEngine::Playables::PlayableOutput other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutput::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableOutputExtensions
#include "UnityEngine/Playables/PlayableOutputExtensions.hpp"
// Including type: UnityEngine.Playables.IPlayableOutput
#include "UnityEngine/Playables/IPlayableOutput.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.INotificationReceiver
#include "UnityEngine/Playables/INotificationReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Playables.PlayableOutputHandle
#include "UnityEngine/Playables/PlayableOutputHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableHandle
#include "UnityEngine/Playables/PlayableHandle.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.INotificationReceiver
#include "UnityEngine/Playables/INotificationReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Playables.PlayableOutputHandle m_Null
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Playables::PlayableOutputHandle::_get_m_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::_get_m_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Playables::PlayableOutputHandle>("UnityEngine.Playables", "PlayableOutputHandle", "m_Null"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Playables.PlayableOutputHandle m_Null
void UnityEngine::Playables::PlayableOutputHandle::_set_m_Null(::UnityEngine::Playables::PlayableOutputHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::_set_m_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Playables", "PlayableOutputHandle", "m_Null", value));
}
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Handle
::System::IntPtr& UnityEngine::Playables::PlayableOutputHandle::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_Version
uint& UnityEngine::Playables::PlayableOutputHandle::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::dyn_m_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.get_Null
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Playables::PlayableOutputHandle::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle..cctor
void UnityEngine::Playables::PlayableOutputHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.Equals
bool UnityEngine::Playables::PlayableOutputHandle::Equals(::UnityEngine::Playables::PlayableOutputHandle other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.CompareVersion
bool UnityEngine::Playables::PlayableOutputHandle::CompareVersion(::UnityEngine::Playables::PlayableOutputHandle lhs, ::UnityEngine::Playables::PlayableOutputHandle rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::CompareVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "CompareVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.IsValid
bool UnityEngine::Playables::PlayableOutputHandle::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetPlayableOutputType
::System::Type* UnityEngine::Playables::PlayableOutputHandle::GetPlayableOutputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetPlayableOutputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPlayableOutputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetReferenceObject
void UnityEngine::Playables::PlayableOutputHandle::SetReferenceObject(::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetReferenceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetReferenceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetUserData
void UnityEngine::Playables::PlayableOutputHandle::SetUserData(::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetSourcePlayable
::UnityEngine::Playables::PlayableHandle UnityEngine::Playables::PlayableOutputHandle::GetSourcePlayable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetSourcePlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSourcePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableHandle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetSourcePlayable
void UnityEngine::Playables::PlayableOutputHandle::SetSourcePlayable(::UnityEngine::Playables::PlayableHandle target, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetSourcePlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetSourcePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, port);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetSourceOutputPort
int UnityEngine::Playables::PlayableOutputHandle::GetSourceOutputPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetSourceOutputPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSourceOutputPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetWeight
void UnityEngine::Playables::PlayableOutputHandle::SetWeight(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.PushNotification
void UnityEngine::Playables::PlayableOutputHandle::PushNotification(::UnityEngine::Playables::PlayableHandle origin, ::UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::PushNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PushNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.AddNotificationReceiver
void UnityEngine::Playables::PlayableOutputHandle::AddNotificationReceiver(::UnityEngine::Playables::INotificationReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::AddNotificationReceiver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddNotificationReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.IsValid_Injected
bool UnityEngine::Playables::PlayableOutputHandle::IsValid_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::IsValid_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "IsValid_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetPlayableOutputType_Injected
::System::Type* UnityEngine::Playables::PlayableOutputHandle::GetPlayableOutputType_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetPlayableOutputType_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "GetPlayableOutputType_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetReferenceObject_Injected
void UnityEngine::Playables::PlayableOutputHandle::SetReferenceObject_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetReferenceObject_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "SetReferenceObject_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), target);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetUserData_Injected
void UnityEngine::Playables::PlayableOutputHandle::SetUserData_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetUserData_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "SetUserData_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), target);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetSourcePlayable_Injected
void UnityEngine::Playables::PlayableOutputHandle::GetSourcePlayable_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetSourcePlayable_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "GetSourcePlayable_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Playables::PlayableHandle&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetSourcePlayable_Injected
void UnityEngine::Playables::PlayableOutputHandle::SetSourcePlayable_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> target, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetSourcePlayable_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "SetSourcePlayable_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(target), port);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetSourceOutputPort_Injected
int UnityEngine::Playables::PlayableOutputHandle::GetSourceOutputPort_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetSourceOutputPort_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "GetSourceOutputPort_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self));
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.SetWeight_Injected
void UnityEngine::Playables::PlayableOutputHandle::SetWeight_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::SetWeight_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "SetWeight_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), weight);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.PushNotification_Injected
void UnityEngine::Playables::PlayableOutputHandle::PushNotification_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ByRef<::UnityEngine::Playables::PlayableHandle> origin, ::UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::PushNotification_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "PushNotification_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(notification), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(origin), notification, context);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.AddNotificationReceiver_Injected
void UnityEngine::Playables::PlayableOutputHandle::AddNotificationReceiver_Injected(ByRef<::UnityEngine::Playables::PlayableOutputHandle> _unity_self, ::UnityEngine::Playables::INotificationReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::AddNotificationReceiver_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "AddNotificationReceiver_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), receiver);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.GetHashCode
int UnityEngine::Playables::PlayableOutputHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.Equals
bool UnityEngine::Playables::PlayableOutputHandle::Equals(::Il2CppObject* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Playables.PlayableOutputHandle.op_Equality
bool UnityEngine::Playables::operator ==(const ::UnityEngine::Playables::PlayableOutputHandle& lhs, const ::UnityEngine::Playables::PlayableOutputHandle& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::PlayableOutputHandle::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "PlayableOutputHandle", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.ScriptPlayableBinding
#include "UnityEngine/Playables/ScriptPlayableBinding.hpp"
// Including type: UnityEngine.Playables.PlayableBinding
#include "UnityEngine/Playables/PlayableBinding.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Playables.ScriptPlayableBinding.Create
::UnityEngine::Playables::PlayableBinding UnityEngine::Playables::ScriptPlayableBinding::Create(::StringW name, ::UnityEngine::Object* key, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableBinding::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "ScriptPlayableBinding", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, key, type);
}
// Autogenerated method: UnityEngine.Playables.ScriptPlayableBinding.CreateScriptOutput
::UnityEngine::Playables::PlayableOutput UnityEngine::Playables::ScriptPlayableBinding::CreateScriptOutput(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableBinding::CreateScriptOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "ScriptPlayableBinding", "CreateScriptOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Playables.ScriptPlayableOutput
#include "UnityEngine/Playables/ScriptPlayableOutput.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableOutputHandle m_Handle
::UnityEngine::Playables::PlayableOutputHandle& UnityEngine::Playables::ScriptPlayableOutput::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableOutput::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableOutputHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Playables.ScriptPlayableOutput.get_Null
::UnityEngine::Playables::ScriptPlayableOutput UnityEngine::Playables::ScriptPlayableOutput::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableOutput::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "ScriptPlayableOutput", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Playables.ScriptPlayableOutput..ctor
// ABORTED elsewhere.  UnityEngine::Playables::ScriptPlayableOutput::ScriptPlayableOutput(::UnityEngine::Playables::PlayableOutputHandle handle)
// Autogenerated method: UnityEngine.Playables.ScriptPlayableOutput.Create
::UnityEngine::Playables::ScriptPlayableOutput UnityEngine::Playables::ScriptPlayableOutput::Create(::UnityEngine::Playables::PlayableGraph graph, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableOutput::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Playables", "ScriptPlayableOutput", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayableOutput, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, name);
}
// Autogenerated method: UnityEngine.Playables.ScriptPlayableOutput.GetHandle
::UnityEngine::Playables::PlayableOutputHandle UnityEngine::Playables::ScriptPlayableOutput::GetHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Playables::ScriptPlayableOutput::GetHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableOutputHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LightType
#include "UnityEngine/Experimental/GlobalIllumination/LightType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Directional
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_Directional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_Directional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "Directional"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Directional
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_Directional(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_Directional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "Directional", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Point
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_Point() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_Point");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "Point"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Point
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_Point(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_Point");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "Point", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Spot
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_Spot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_Spot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "Spot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Spot
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_Spot(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_Spot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "Spot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Rectangle
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Rectangle
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_Rectangle(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Disc
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_Disc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_Disc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "Disc"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType Disc
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_Disc(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_Disc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "Disc", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType SpotPyramidShape
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_SpotPyramidShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_SpotPyramidShape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "SpotPyramidShape"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType SpotPyramidShape
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_SpotPyramidShape(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_SpotPyramidShape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "SpotPyramidShape", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightType SpotBoxShape
::UnityEngine::Experimental::GlobalIllumination::LightType UnityEngine::Experimental::GlobalIllumination::LightType::_get_SpotBoxShape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_get_SpotBoxShape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightType>("UnityEngine.Experimental.GlobalIllumination", "LightType", "SpotBoxShape"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightType SpotBoxShape
void UnityEngine::Experimental::GlobalIllumination::LightType::_set_SpotBoxShape(::UnityEngine::Experimental::GlobalIllumination::LightType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::_set_SpotBoxShape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightType", "SpotBoxShape", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& UnityEngine::Experimental::GlobalIllumination::LightType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LightMode
#include "UnityEngine/Experimental/GlobalIllumination/LightMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Realtime
::UnityEngine::Experimental::GlobalIllumination::LightMode UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Realtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Realtime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightMode>("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Realtime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Realtime
void UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Realtime(::UnityEngine::Experimental::GlobalIllumination::LightMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Realtime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Realtime", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Mixed
::UnityEngine::Experimental::GlobalIllumination::LightMode UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightMode>("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Mixed
void UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Mixed(::UnityEngine::Experimental::GlobalIllumination::LightMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Baked
::UnityEngine::Experimental::GlobalIllumination::LightMode UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Baked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Baked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightMode>("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Baked"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Baked
void UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Baked(::UnityEngine::Experimental::GlobalIllumination::LightMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Baked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Baked", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Unknown
::UnityEngine::Experimental::GlobalIllumination::LightMode UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::LightMode>("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.LightMode Unknown
void UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Unknown(::UnityEngine::Experimental::GlobalIllumination::LightMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "LightMode", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& UnityEngine::Experimental::GlobalIllumination::LightMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.FalloffType
#include "UnityEngine/Experimental/GlobalIllumination/FalloffType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType InverseSquared
::UnityEngine::Experimental::GlobalIllumination::FalloffType UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_InverseSquared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_InverseSquared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::FalloffType>("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "InverseSquared"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType InverseSquared
void UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_InverseSquared(::UnityEngine::Experimental::GlobalIllumination::FalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_InverseSquared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "InverseSquared", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType InverseSquaredNoRangeAttenuation
::UnityEngine::Experimental::GlobalIllumination::FalloffType UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_InverseSquaredNoRangeAttenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_InverseSquaredNoRangeAttenuation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::FalloffType>("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "InverseSquaredNoRangeAttenuation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType InverseSquaredNoRangeAttenuation
void UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_InverseSquaredNoRangeAttenuation(::UnityEngine::Experimental::GlobalIllumination::FalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_InverseSquaredNoRangeAttenuation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "InverseSquaredNoRangeAttenuation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Linear
::UnityEngine::Experimental::GlobalIllumination::FalloffType UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::FalloffType>("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Linear
void UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Linear(::UnityEngine::Experimental::GlobalIllumination::FalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Legacy
::UnityEngine::Experimental::GlobalIllumination::FalloffType UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Legacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::FalloffType>("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Legacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Legacy
void UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Legacy(::UnityEngine::Experimental::GlobalIllumination::FalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Legacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Legacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Undefined
::UnityEngine::Experimental::GlobalIllumination::FalloffType UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::FalloffType>("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.FalloffType Undefined
void UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Undefined(::UnityEngine::Experimental::GlobalIllumination::FalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "FalloffType", "Undefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& UnityEngine::Experimental::GlobalIllumination::FalloffType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::FalloffType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.AngularFalloffType
#include "UnityEngine/Experimental/GlobalIllumination/AngularFalloffType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.AngularFalloffType LUT
::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_get_LUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_get_LUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType>("UnityEngine.Experimental.GlobalIllumination", "AngularFalloffType", "LUT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.AngularFalloffType LUT
void UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_set_LUT(::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_set_LUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "AngularFalloffType", "LUT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Experimental.GlobalIllumination.AngularFalloffType AnalyticAndInnerAngle
::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_get_AnalyticAndInnerAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_get_AnalyticAndInnerAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType>("UnityEngine.Experimental.GlobalIllumination", "AngularFalloffType", "AnalyticAndInnerAngle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Experimental.GlobalIllumination.AngularFalloffType AnalyticAndInnerAngle
void UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_set_AnalyticAndInnerAngle(::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::_set_AnalyticAndInnerAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "AngularFalloffType", "AnalyticAndInnerAngle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::AngularFalloffType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LinearColor
#include "UnityEngine/Experimental/GlobalIllumination/LinearColor.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_red
float& UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_red");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_red"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_green
float& UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_green");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_green"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_blue
float& UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_blue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_blue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_intensity
float& UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::dyn_m_intensity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.get_red
float UnityEngine::Experimental::GlobalIllumination::LinearColor::get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::get_red");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_red", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.set_red
void UnityEngine::Experimental::GlobalIllumination::LinearColor::set_red(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::set_red");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_red", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.get_green
float UnityEngine::Experimental::GlobalIllumination::LinearColor::get_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::get_green");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_green", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.set_green
void UnityEngine::Experimental::GlobalIllumination::LinearColor::set_green(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::set_green");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_green", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.get_blue
float UnityEngine::Experimental::GlobalIllumination::LinearColor::get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::get_blue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_blue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.set_blue
void UnityEngine::Experimental::GlobalIllumination::LinearColor::set_blue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::set_blue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_blue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.Convert
::UnityEngine::Experimental::GlobalIllumination::LinearColor UnityEngine::Experimental::GlobalIllumination::LinearColor::Convert(::UnityEngine::Color color, float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LinearColor", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(intensity)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::GlobalIllumination::LinearColor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, color, intensity);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LinearColor.Black
::UnityEngine::Experimental::GlobalIllumination::LinearColor UnityEngine::Experimental::GlobalIllumination::LinearColor::Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LinearColor::Black");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LinearColor", "Black", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::GlobalIllumination::LinearColor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LightDataGI
#include "UnityEngine/Experimental/GlobalIllumination/LightDataGI.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.DirectionalLight
#include "UnityEngine/Experimental/GlobalIllumination/DirectionalLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.Cookie
#include "UnityEngine/Experimental/GlobalIllumination/Cookie.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.PointLight
#include "UnityEngine/Experimental/GlobalIllumination/PointLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.SpotLight
#include "UnityEngine/Experimental/GlobalIllumination/SpotLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.RectangleLight
#include "UnityEngine/Experimental/GlobalIllumination/RectangleLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.DiscLight
#include "UnityEngine/Experimental/GlobalIllumination/DiscLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 instanceID
int& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_instanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_instanceID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instanceID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cookieID
int& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_cookieID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_cookieID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cookieScale
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_cookieScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_cookieScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cookieScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.GlobalIllumination.LinearColor color
::UnityEngine::Experimental::GlobalIllumination::LinearColor& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::GlobalIllumination::LinearColor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.GlobalIllumination.LinearColor indirectColor
::UnityEngine::Experimental::GlobalIllumination::LinearColor& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_indirectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_indirectColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indirectColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::GlobalIllumination::LinearColor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion orientation
::UnityEngine::Quaternion& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_orientation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_orientation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orientation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
::UnityEngine::Vector3& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single range
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_range() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_range");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "range"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single coneAngle
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_coneAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_coneAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coneAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single innerConeAngle
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_innerConeAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_innerConeAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "innerConeAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shape0
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shape0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shape0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shape0"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shape1
float& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shape1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shape1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shape1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.GlobalIllumination.LightType type
::UnityEngine::Experimental::GlobalIllumination::LightType& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::GlobalIllumination::LightType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.GlobalIllumination.LightMode mode
::UnityEngine::Experimental::GlobalIllumination::LightMode& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::GlobalIllumination::LightMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte shadow
uint8_t& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shadow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_shadow");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shadow"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Experimental.GlobalIllumination.FalloffType falloff
::UnityEngine::Experimental::GlobalIllumination::FalloffType& UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_falloff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::dyn_falloff");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "falloff"))->offset;
  return *reinterpret_cast<::UnityEngine::Experimental::GlobalIllumination::FalloffType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.Init
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init(ByRef<::UnityEngine::Experimental::GlobalIllumination::DirectionalLight> light, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(light), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(light), byref(cookie));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.Init
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init(ByRef<::UnityEngine::Experimental::GlobalIllumination::PointLight> light, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(light), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(light), byref(cookie));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.Init
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init(ByRef<::UnityEngine::Experimental::GlobalIllumination::SpotLight> light, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(light), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(light), byref(cookie));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.Init
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init(ByRef<::UnityEngine::Experimental::GlobalIllumination::RectangleLight> light, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(light), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(light), byref(cookie));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.Init
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init(ByRef<::UnityEngine::Experimental::GlobalIllumination::DiscLight> light, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(light), ::il2cpp_utils::ExtractType(cookie)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(light), byref(cookie));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightDataGI.InitNoBake
void UnityEngine::Experimental::GlobalIllumination::LightDataGI::InitNoBake(int lightInstanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightDataGI::InitNoBake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitNoBake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightInstanceID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lightInstanceID);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils
#include "UnityEngine/Experimental/GlobalIllumination/LightmapperUtils.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.LightMode
#include "UnityEngine/Experimental/GlobalIllumination/LightMode.hpp"
// Including type: UnityEngine.LightmapBakeType
#include "UnityEngine/LightmapBakeType.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.LinearColor
#include "UnityEngine/Experimental/GlobalIllumination/LinearColor.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.DirectionalLight
#include "UnityEngine/Experimental/GlobalIllumination/DirectionalLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.PointLight
#include "UnityEngine/Experimental/GlobalIllumination/PointLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.SpotLight
#include "UnityEngine/Experimental/GlobalIllumination/SpotLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.RectangleLight
#include "UnityEngine/Experimental/GlobalIllumination/RectangleLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.DiscLight
#include "UnityEngine/Experimental/GlobalIllumination/DiscLight.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.Cookie
#include "UnityEngine/Experimental/GlobalIllumination/Cookie.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
::UnityEngine::Experimental::GlobalIllumination::LightMode UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::LightmapBakeType baketype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baketype)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::GlobalIllumination::LightMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baketype);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.ExtractIndirect
::UnityEngine::Experimental::GlobalIllumination::LinearColor UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractIndirect(::UnityEngine::Light* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractIndirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "ExtractIndirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::GlobalIllumination::LinearColor, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.ExtractInnerCone
float UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractInnerCone(::UnityEngine::Light* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractInnerCone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "ExtractInnerCone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.ExtractColorTemperature
::UnityEngine::Color UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractColorTemperature(::UnityEngine::Light* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ExtractColorTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "ExtractColorTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.ApplyColorTemperature
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ApplyColorTemperature(::UnityEngine::Color cct, ByRef<::UnityEngine::Experimental::GlobalIllumination::LinearColor> lightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::ApplyColorTemperature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "ApplyColorTemperature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cct), ::il2cpp_utils::ExtractType(lightColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cct, byref(lightColor));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::DirectionalLight> dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(dir)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(dir));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::PointLight> point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(point)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(point));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::SpotLight> spot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(spot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(spot));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::RectangleLight> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(rect));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::DiscLight> disc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(disc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(disc));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils.Extract
void UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract(::UnityEngine::Light* l, ByRef<::UnityEngine::Experimental::GlobalIllumination::Cookie> cookie) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::LightmapperUtils::Extract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "LightmapperUtils", "Extract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Experimental::GlobalIllumination::Cookie&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, byref(cookie));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Experimental.GlobalIllumination.Lightmapping
#include "UnityEngine/Experimental/GlobalIllumination/Lightmapping.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.RequestLightsDelegate
#include "UnityEngine/Experimental/GlobalIllumination/Lightmapping_RequestLightsDelegate.hpp"
// Including type: UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.<>c
#include "UnityEngine/Experimental/GlobalIllumination/Lightmapping_--c.hpp"
// Including type: UnityEngine.Light
#include "UnityEngine/Light.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [RequiredByNativeCodeAttribute] Offset: 0x56C83C
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.RequestLightsDelegate s_DefaultDelegate
::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* UnityEngine::Experimental::GlobalIllumination::Lightmapping::_get_s_DefaultDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::_get_s_DefaultDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate*>("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "s_DefaultDelegate"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.RequestLightsDelegate s_DefaultDelegate
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::_set_s_DefaultDelegate(::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::_set_s_DefaultDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "s_DefaultDelegate", value));
}
// [RequiredByNativeCodeAttribute] Offset: 0x56C84C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.RequestLightsDelegate s_RequestLightsDelegate
::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* UnityEngine::Experimental::GlobalIllumination::Lightmapping::_get_s_RequestLightsDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::_get_s_RequestLightsDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate*>("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "s_RequestLightsDelegate"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Experimental.GlobalIllumination.Lightmapping/UnityEngine.Experimental.GlobalIllumination.RequestLightsDelegate s_RequestLightsDelegate
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::_set_s_RequestLightsDelegate(::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::_set_s_RequestLightsDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "s_RequestLightsDelegate", value));
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.Lightmapping..cctor
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.Lightmapping.SetDelegate
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::SetDelegate(::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* del) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::SetDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "SetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(del)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, del);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.Lightmapping.GetDelegate
::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate* UnityEngine::Experimental::GlobalIllumination::Lightmapping::GetDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::GetDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "GetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLightsDelegate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.Lightmapping.ResetDelegate
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::ResetDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::ResetDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "ResetDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Experimental.GlobalIllumination.Lightmapping.RequestLights
void UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLights(::ArrayW<::UnityEngine::Light*> lights, ::System::IntPtr outLightsPtr, int outLightsCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Experimental::GlobalIllumination::Lightmapping::RequestLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Experimental.GlobalIllumination", "Lightmapping", "RequestLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lights), ::il2cpp_utils::ExtractType(outLightsPtr), ::il2cpp_utils::ExtractType(outLightsCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lights, outLightsPtr, outLightsCount);
}
