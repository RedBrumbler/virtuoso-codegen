// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Type type
::System::Type*& Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1.<>m__0
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Reflection.ConstructorInfo ctor
::System::Reflection::ConstructorInfo*& Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::dyn_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::dyn_ctor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctor"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2.<>m__0
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedIdAssigner
#include "Firebase/Firestore/Converters/AttributedIdAssigner.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* Firebase::Firestore::Converters::AttributedIdAssigner::_get_s_assigners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::_get_s_assigners");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>*>("Firebase.Firestore.Converters", "AttributedIdAssigner", "s_assigners")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
void Firebase::Firestore::Converters::AttributedIdAssigner::_set_s_assigners(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::_set_s_assigners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "AttributedIdAssigner", "s_assigners", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _idProperties
::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AttributedIdAssigner::dyn__idProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::dyn__idProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _referenceProperties
::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AttributedIdAssigner::dyn__referenceProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::dyn__referenceProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner..cctor
void Firebase::Firestore::Converters::AttributedIdAssigner::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.AssignId
void Firebase::Firestore::Converters::AttributedIdAssigner::AssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::AssignId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(reference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, reference);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.MaybeAssignId
void Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", "MaybeAssignId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(reference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, reference);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.MaybeCreateAssigner
::Firebase::Firestore::Converters::AttributedIdAssigner* Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", "MaybeCreateAssigner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::AttributedIdAssigner*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ArrayConverter
#include "Firebase/Firestore/Converters/ArrayConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
::System::Type*& Firebase::Firestore::Converters::ArrayConverter::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ArrayConverter::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.ArrayConverter.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::ArrayConverter::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ArrayConverter::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(arrayValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AnonymousTypeConverter
#include "Firebase/Firestore/Converters/AnonymousTypeConverter.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IList`1<System.Reflection.PropertyInfo> _properties
::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AnonymousTypeConverter::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AnonymousTypeConverter::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AnonymousTypeConverter.SerializeMap
void Firebase::Firestore::Converters::AnonymousTypeConverter::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AnonymousTypeConverter::SerializeMap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(map)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ConverterRegistry
#include "Firebase/Firestore/ConverterRegistry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> _converters
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*& Firebase::Firestore::ConverterRegistry::dyn__converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ConverterRegistry::dyn__converters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.ConverterRegistry.ToConverterDictionary
::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* Firebase::Firestore::ConverterRegistry::ToConverterDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ConverterRegistry::ToConverterDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToConverterDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.WriteBatch
#include "Firebase/Firestore/WriteBatch.hpp"
// Including type: Firebase.Firestore.WriteBatchProxy
#include "Firebase/Firestore/WriteBatchProxy.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.WriteBatchProxy _proxy
::Firebase::Firestore::WriteBatchProxy*& Firebase::Firestore::WriteBatch::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::WriteBatchProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Delete
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Delete(::Firebase::Firestore::DocumentReference* documentReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Update
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Update(::Firebase::Firestore::DocumentReference* documentReference, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference), ::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference, updates);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.ConvertToFieldValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::WriteBatch::ConvertToFieldValue(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::ConvertToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, updates);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Set
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Set(::Firebase::Firestore::DocumentReference* documentReference, ::Il2CppObject* documentData, ::Firebase::Firestore::SetOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference), ::il2cpp_utils::ExtractType(documentData), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference, documentData, options);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.CommitAsync
::System::Threading::Tasks::Task* Firebase::Firestore::WriteBatch::CommitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::CommitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.UnknownPropertyHandling
#include "Firebase/Firestore/UnknownPropertyHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Ignore
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Ignore
void Firebase::Firestore::UnknownPropertyHandling::_set_Ignore(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Warn
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Warn
void Firebase::Firestore::UnknownPropertyHandling::_set_Warn(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Warn", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Throw
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Throw
void Firebase::Firestore::UnknownPropertyHandling::_set_Throw(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Throw", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::UnknownPropertyHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: Firebase.Firestore.TimestampProxy
#include "Firebase/Firestore/TimestampProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_unixEpoch
::System::DateTime Firebase::Firestore::Timestamp::_get_s_unixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::_get_s_unixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Firebase.Firestore", "Timestamp", "s_unixEpoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_unixEpoch
void Firebase::Firestore::Timestamp::_set_s_unixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::_set_s_unixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Timestamp", "s_unixEpoch", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _seconds
int64_t& Firebase::Firestore::Timestamp::dyn__seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::dyn__seconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seconds"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _nanoseconds
int& Firebase::Firestore::Timestamp::dyn__nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::dyn__nanoseconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nanoseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Timestamp..ctor
// ABORTED elsewhere.  Firebase::Firestore::Timestamp::Timestamp(int64_t seconds, int nanoseconds)
// Autogenerated method: Firebase.Firestore.Timestamp..cctor
void Firebase::Firestore::Timestamp::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToDateTime
::System::DateTime Firebase::Firestore::Timestamp::ToDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToDateTimeOffset
::System::DateTimeOffset Firebase::Firestore::Timestamp::ToDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.FromDateTime
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::FromDateTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::FromDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "FromDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: Firebase.Firestore.Timestamp.FromDateTimeOffset
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::FromDateTimeOffset(::System::DateTimeOffset dateTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::FromDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "FromDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTimeOffset);
}
// Autogenerated method: Firebase.Firestore.Timestamp.Equals
bool Firebase::Firestore::Timestamp::Equals(::Firebase::Firestore::Timestamp other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Timestamp.CompareTo
int Firebase::Firestore::Timestamp::CompareTo(::Firebase::Firestore::Timestamp other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Timestamp.CompareTo
int Firebase::Firestore::Timestamp::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ConvertToProxy
::Firebase::Firestore::TimestampProxy* Firebase::Firestore::Timestamp::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::TimestampProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ConvertFromProxy
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::ConvertFromProxy(::Firebase::Firestore::TimestampProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ConvertFromProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "ConvertFromProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.Equals
bool Firebase::Firestore::Timestamp::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.GetHashCode
int Firebase::Firestore::Timestamp::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToString
::StringW Firebase::Firestore::Timestamp::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
// Including type: Firebase.Firestore.SetOptionsProxy
#include "Firebase/Firestore/SetOptionsProxy.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<Firebase.Firestore.FieldPath,System.String> <>f__am$cache1
::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>* Firebase::Firestore::SetOptions::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>*>("Firebase.Firestore", "SetOptions", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<Firebase.Firestore.FieldPath,System.String> <>f__am$cache1
void Firebase::Firestore::SetOptions::_set_$$f__am$cache1(::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions", "<>f__am$cache1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`3<System.Int32,Firebase.Firestore.FieldPath,System.Int32> <>f__am$cache2
::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>* Firebase::Firestore::SetOptions::_get_$$f__am$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_get_$$f__am$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>*>("Firebase.Firestore", "SetOptions", "<>f__am$cache2")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`3<System.Int32,Firebase.Firestore.FieldPath,System.Int32> <>f__am$cache2
void Firebase::Firestore::SetOptions::_set_$$f__am$cache2(::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_set_$$f__am$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions", "<>f__am$cache2", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.SetOptionsProxy _proxy
::Firebase::Firestore::SetOptionsProxy*& Firebase::Firestore::SetOptions::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::SetOptionsProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.SetOptions/Firebase.Firestore.Type setType
::Firebase::Firestore::SetOptions::Type& Firebase::Firestore::SetOptions::dyn_setType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn_setType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setType"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::SetOptions::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FieldPath[] fields
::ArrayW<::Firebase::Firestore::FieldPath*>& Firebase::Firestore::SetOptions::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::ArrayW<::Firebase::Firestore::FieldPath*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SetOptions.get_Proxy
::Firebase::Firestore::SetOptionsProxy* Firebase::Firestore::SetOptions::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SetOptionsProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.get_Overwrite
::Firebase::Firestore::SetOptions* Firebase::Firestore::SetOptions::get_Overwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::get_Overwrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "get_Overwrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SetOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.Equals
bool Firebase::Firestore::SetOptions::Equals(::Firebase::Firestore::SetOptions* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.SetOptions.<ToString>m__1
::StringW Firebase::Firestore::SetOptions::$ToString$m__1(::Firebase::Firestore::FieldPath* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::<ToString>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "<ToString>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: Firebase.Firestore.SetOptions.<GetHashCode>m__2
int Firebase::Firestore::SetOptions::$GetHashCode$m__2(int current, ::Firebase::Firestore::FieldPath* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::<GetHashCode>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "<GetHashCode>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, f);
}
// Autogenerated method: Firebase.Firestore.SetOptions.ToString
::StringW Firebase::Firestore::SetOptions::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.Equals
bool Firebase::Firestore::SetOptions::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.SetOptions.GetHashCode
int Firebase::Firestore::SetOptions::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SetOptions/Firebase.Firestore.Type
#include "Firebase/Firestore/SetOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Overwrite
::Firebase::Firestore::SetOptions::Type Firebase::Firestore::SetOptions::Type::_get_Overwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_get_Overwrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::SetOptions::Type>("Firebase.Firestore", "SetOptions/Type", "Overwrite"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Overwrite
void Firebase::Firestore::SetOptions::Type::_set_Overwrite(::Firebase::Firestore::SetOptions::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_set_Overwrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions/Type", "Overwrite", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Merge
::Firebase::Firestore::SetOptions::Type Firebase::Firestore::SetOptions::Type::_get_Merge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_get_Merge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::SetOptions::Type>("Firebase.Firestore", "SetOptions/Type", "Merge"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Merge
void Firebase::Firestore::SetOptions::Type::_set_Merge(::Firebase::Firestore::SetOptions::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_set_Merge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions/Type", "Merge", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::SetOptions::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ServerTimestampBehaviorConverter
#include "Firebase/Firestore/ServerTimestampBehaviorConverter.hpp"
// Including type: Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/ServerTimestampBehavior.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/DocumentSnapshotProxy_ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.ServerTimestampBehaviorConverter.ConvertToProxy
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehaviorConverter::ConvertToProxy(::Firebase::Firestore::ServerTimestampBehavior stb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehaviorConverter::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ServerTimestampBehaviorConverter", "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stb)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior None
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior None
void Firebase::Firestore::ServerTimestampBehavior::_set_None(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior Estimate
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_Estimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_Estimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "Estimate"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior Estimate
void Firebase::Firestore::ServerTimestampBehavior::_set_Estimate(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_Estimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "Estimate", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior Previous
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_Previous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "Previous"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior Previous
void Firebase::Firestore::ServerTimestampBehavior::_set_Previous(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_Previous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "Previous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Firestore::ServerTimestampBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.QuerySnapshotProxy _proxy
::Firebase::Firestore::QuerySnapshotProxy*& Firebase::Firestore::QuerySnapshot::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::QuerySnapshotProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::QuerySnapshot::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.DocumentSnapshot[] _documentsCached
::ArrayW<::Firebase::Firestore::DocumentSnapshot*>& Firebase::Firestore::QuerySnapshot::dyn__documentsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__documentsCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentsCached"))->offset;
  return *reinterpret_cast<::ArrayW<::Firebase::Firestore::DocumentSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.get_Documents
::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::QuerySnapshot::get_Documents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::get_Documents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Documents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.get_Count
int Firebase::Firestore::QuerySnapshot::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::QuerySnapshot::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Firebase::Firestore::QuerySnapshot::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.LoadDocumentsCached
void Firebase::Firestore::QuerySnapshot::LoadDocumentsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::LoadDocumentsCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDocumentsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.GetHashCode
int Firebase::Firestore::QuerySnapshot::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.Equals
bool Firebase::Firestore::QuerySnapshot::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Query
#include "Firebase/Firestore/Query.hpp"
// Including type: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/Query_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.QueryProxy
#include "Firebase/Firestore/QueryProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.QuerySnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* Firebase::Firestore::Query::_get_snapshotListenerCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_get_snapshotListenerCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>*>("Firebase.Firestore", "Query", "snapshotListenerCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.QuerySnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
void Firebase::Firestore::Query::_set_snapshotListenerCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_set_snapshotListenerCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Query", "snapshotListenerCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate querySnapshotsHandler
::Firebase::Firestore::Query::ListenerDelegate* Firebase::Firestore::Query::_get_querySnapshotsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_get_querySnapshotsHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Query::ListenerDelegate*>("Firebase.Firestore", "Query", "querySnapshotsHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate querySnapshotsHandler
void Firebase::Firestore::Query::_set_querySnapshotsHandler(::Firebase::Firestore::Query::ListenerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_set_querySnapshotsHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Query", "querySnapshotsHandler", value));
}
// Autogenerated instance field getter
// Get instance field: readonly Firebase.Firestore.QueryProxy _proxy
::Firebase::Firestore::QueryProxy*& Firebase::Firestore::Query::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::QueryProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::Query::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Query.get_Firestore
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::Query::get_Firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::get_Firestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Firestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Query..cctor
void Firebase::Firestore::Query::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Query.ClearCallbacksForOwner
void Firebase::Firestore::Query::ClearCallbacksForOwner(::Firebase::Firestore::FirebaseFirestore* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ClearCallbacksForOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", "ClearCallbacksForOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, owner);
}
// Autogenerated method: Firebase.Firestore.Query.GetSnapshotAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>* Firebase::Firestore::Query::GetSnapshotAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::GetSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.Query.QuerySnapshotsHandler
void Firebase::Firestore::Query::QuerySnapshotsHandler(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::QuerySnapshotsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", "QuerySnapshotsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.Query.Equals
bool Firebase::Firestore::Query::Equals(::Firebase::Firestore::Query* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Query.<GetSnapshotAsync>m__0
::Firebase::Firestore::QuerySnapshot* Firebase::Firestore::Query::$GetSnapshotAsync$m__0(::Firebase::Firestore::QuerySnapshotProxy* taskResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::<GetSnapshotAsync>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSnapshotAsync>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::QuerySnapshot*, false>(this, ___internal__method, taskResult);
}
// Autogenerated method: Firebase.Firestore.Query.GetHashCode
int Firebase::Firestore::Query::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Query.Equals
bool Firebase::Firestore::Query::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/Query_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.Invoke
void Firebase::Firestore::Query::ListenerDelegate::Invoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Query::ListenerDelegate::BeginInvoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage, callback, object);
}
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.EndInvoke
void Firebase::Firestore::Query::ListenerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
// Including type: Firebase.Firestore.GeoPointProxy
#include "Firebase/Firestore/GeoPointProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Double _latitude
double& Firebase::Firestore::GeoPoint::dyn__latitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::dyn__latitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latitude"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Double _longitude
double& Firebase::Firestore::GeoPoint::dyn__longitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::dyn__longitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_longitude"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.get_Latitude
double Firebase::Firestore::GeoPoint::get_Latitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::get_Latitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Latitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.get_Longitude
double Firebase::Firestore::GeoPoint::get_Longitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::get_Longitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Longitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint..ctor
// ABORTED elsewhere.  Firebase::Firestore::GeoPoint::GeoPoint(double latitude, double longitude)
// Autogenerated method: Firebase.Firestore.GeoPoint.Equals
bool Firebase::Firestore::GeoPoint::Equals(::Firebase::Firestore::GeoPoint other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ConvertToProxy
::Firebase::Firestore::GeoPointProxy* Firebase::Firestore::GeoPoint::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::GeoPointProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ConvertFromProxy
::Firebase::Firestore::GeoPoint Firebase::Firestore::GeoPoint::ConvertFromProxy(::Firebase::Firestore::GeoPointProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ConvertFromProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "GeoPoint", "ConvertFromProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::GeoPoint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.Equals
bool Firebase::Firestore::GeoPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.GetHashCode
int Firebase::Firestore::GeoPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ToString
::StringW Firebase::Firestore::GeoPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestorePropertyAttribute
#include "Firebase/Firestore/FirestorePropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
::StringW& Firebase::Firestore::FirestorePropertyAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ConverterType>k__BackingField
::System::Type*& Firebase::Firestore::FirestorePropertyAttribute::dyn_$ConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::dyn_$ConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestorePropertyAttribute.get_Name
::StringW Firebase::Firestore::FirestorePropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestorePropertyAttribute.get_ConverterType
::System::Type* Firebase::Firestore::FirestorePropertyAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreException
#include "Firebase/Firestore/FirestoreException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirestoreError <ErrorCode>k__BackingField
::Firebase::Firestore::FirestoreError& Firebase::Firestore::FirestoreException::dyn_$ErrorCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreException::dyn_$ErrorCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ErrorCode>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreError*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestoreException.set_ErrorCode
void Firebase::Firestore::FirestoreException::set_ErrorCode(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreException::set_ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreDataAttribute
#include "Firebase/Firestore/FirestoreDataAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.UnknownPropertyHandling <UnknownPropertyHandling>k__BackingField
::Firebase::Firestore::UnknownPropertyHandling& Firebase::Firestore::FirestoreDataAttribute::dyn_$UnknownPropertyHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::dyn_$UnknownPropertyHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnknownPropertyHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::UnknownPropertyHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ConverterType>k__BackingField
::System::Type*& Firebase::Firestore::FirestoreDataAttribute::dyn_$ConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::dyn_$ConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestoreDataAttribute.get_UnknownPropertyHandling
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::FirestoreDataAttribute::get_UnknownPropertyHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::get_UnknownPropertyHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnknownPropertyHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::UnknownPropertyHandling, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreDataAttribute.get_ConverterType
::System::Type* Firebase::Firestore::FirestoreDataAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestoreSettings
#include "Firebase/Firestore/FirebaseFirestoreSettings.hpp"
// Including type: Firebase.Firestore.SettingsProxy
#include "Firebase/Firestore/SettingsProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 CacheSizeUnlimited
int64_t Firebase::Firestore::FirebaseFirestoreSettings::_get_CacheSizeUnlimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_get_CacheSizeUnlimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Firebase.Firestore", "FirebaseFirestoreSettings", "CacheSizeUnlimited"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 CacheSizeUnlimited
void Firebase::Firestore::FirebaseFirestoreSettings::_set_CacheSizeUnlimited(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_set_CacheSizeUnlimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestoreSettings", "CacheSizeUnlimited", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 defaultCacheSizeBytes
int64_t Firebase::Firestore::FirebaseFirestoreSettings::_get_defaultCacheSizeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_get_defaultCacheSizeBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Firebase.Firestore", "FirebaseFirestoreSettings", "defaultCacheSizeBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 defaultCacheSizeBytes
void Firebase::Firestore::FirebaseFirestoreSettings::_set_defaultCacheSizeBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_set_defaultCacheSizeBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestoreSettings", "defaultCacheSizeBytes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
::StringW& Firebase::Firestore::FirebaseFirestoreSettings::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SslEnabled>k__BackingField
bool& Firebase::Firestore::FirebaseFirestoreSettings::dyn_$SslEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn_$SslEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SslEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PersistenceEnabled>k__BackingField
bool& Firebase::Firestore::FirebaseFirestoreSettings::dyn_$PersistenceEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn_$PersistenceEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PersistenceEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <CacheSizeBytes>k__BackingField
int64_t& Firebase::Firestore::FirebaseFirestoreSettings::dyn_$CacheSizeBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn_$CacheSizeBytes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CacheSizeBytes>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_Proxy
::Firebase::Firestore::SettingsProxy* Firebase::Firestore::FirebaseFirestoreSettings::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SettingsProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_Host
::StringW Firebase::Firestore::FirebaseFirestoreSettings::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_SslEnabled
bool Firebase::Firestore::FirebaseFirestoreSettings::get_SslEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_SslEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_PersistenceEnabled
bool Firebase::Firestore::FirebaseFirestoreSettings::get_PersistenceEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_PersistenceEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PersistenceEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_CacheSizeBytes
int64_t Firebase::Firestore::FirebaseFirestoreSettings::get_CacheSizeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_CacheSizeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CacheSizeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings..cctor
void Firebase::Firestore::FirebaseFirestoreSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestoreSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.Equals
bool Firebase::Firestore::FirebaseFirestoreSettings::Equals(::Firebase::Firestore::FirebaseFirestoreSettings* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.Equals
bool Firebase::Firestore::FirebaseFirestoreSettings::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.GetHashCode
int Firebase::Firestore::FirebaseFirestoreSettings::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate
#include "Firebase/Firestore/FirebaseFirestore_SnapshotsInSyncDelegate.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey1
#include "Firebase/Firestore/FirebaseFirestore_-SnapshotsInSyncHandler-c__AnonStorey1.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestoreSettings
#include "Firebase/Firestore/FirebaseFirestoreSettings.hpp"
// Including type: Firebase.Firestore.TransactionManager
#include "Firebase/Firestore/TransactionManager.hpp"
// Including type: Firebase.FirebaseApp
#include "Firebase/FirebaseApp.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: Firebase.Firestore.WriteBatch
#include "Firebase/Firestore/WriteBatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<Firebase.FirebaseApp,Firebase.Firestore.FirebaseFirestore> databases
::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>* Firebase::Firestore::FirebaseFirestore::_get_databases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_databases");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>*>("Firebase.Firestore", "FirebaseFirestore", "databases")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<Firebase.FirebaseApp,Firebase.Firestore.FirebaseFirestore> databases
void Firebase::Firestore::FirebaseFirestore::_set_databases(::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_databases");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "databases", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action> snapshotsInSyncCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>* Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>*>("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action> snapshotsInSyncCallbacks
void Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate snapshotsInSyncHandler
::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate* Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate*>("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate snapshotsInSyncHandler
void Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncHandler(::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirestoreProxy _proxy
::Firebase::Firestore::FirestoreProxy*& Firebase::Firestore::FirebaseFirestore::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirebaseFirestoreSettings _settings
::Firebase::Firestore::FirebaseFirestoreSettings*& Firebase::Firestore::FirebaseFirestore::dyn__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settings"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestoreSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _settingsApplied
bool& Firebase::Firestore::FirebaseFirestore::dyn__settingsApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__settingsApplied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsApplied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.TransactionManager _transactionManager
::Firebase::Firestore::TransactionManager*& Firebase::Firestore::FirebaseFirestore::dyn__transactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__transactionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transactionManager"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::TransactionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.FirebaseApp <App>k__BackingField
::Firebase::FirebaseApp*& Firebase::Firestore::FirebaseFirestore::dyn_$App$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn_$App$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<App>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::FirebaseApp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.get_App
::Firebase::FirebaseApp* Firebase::Firestore::FirebaseFirestore::get_App() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::get_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::FirebaseApp*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.set_App
void Firebase::Firestore::FirebaseFirestore::set_App(::Firebase::FirebaseApp* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::set_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.get_DefaultInstance
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::FirebaseFirestore::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.get_Settings
::Firebase::Firestore::FirebaseFirestoreSettings* Firebase::Firestore::FirebaseFirestore::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestoreSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore..cctor
void Firebase::Firestore::FirebaseFirestore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.OnAppDisposed
void Firebase::Firestore::FirebaseFirestore::OnAppDisposed(::Il2CppObject* sender, ::System::EventArgs* eventArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::OnAppDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAppDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, eventArgs);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.GetProxy
::Firebase::Firestore::FirestoreProxy* Firebase::Firestore::FirebaseFirestore::GetProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::GetProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirestoreProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Dispose
void Firebase::Firestore::FirebaseFirestore::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.GetInstance
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::FirebaseFirestore::GetInstance(::Firebase::FirebaseApp* app) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(app)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, app);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Collection
::Firebase::Firestore::CollectionReference* Firebase::Firestore::FirebaseFirestore::Collection(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.StartBatch
::Firebase::Firestore::WriteBatch* Firebase::Firestore::FirebaseFirestore::StartBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::StartBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.SnapshotsInSyncHandler
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncHandler(int callbackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "SnapshotsInSyncHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Finalize
void Firebase::Firestore::FirebaseFirestore::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate
#include "Firebase/Firestore/FirebaseFirestore_SnapshotsInSyncDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.Invoke
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::Invoke(int callbackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::BeginInvoke(int callbackId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.EndInvoke
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey1
#include "Firebase/Firestore/FirebaseFirestore_-SnapshotsInSyncHandler-c__AnonStorey1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Action callback
::System::Action*& Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey1::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey1::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey1.<>m__0
::Il2CppObject* Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey1::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FieldValue
#include "Firebase/Firestore/FieldValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x5C79A4
// Autogenerated static field getter
// Get static field: static private readonly System.Object <ServerTimestamp>k__BackingField
::Il2CppObject* Firebase::Firestore::FieldValue::_get_$ServerTimestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_get_$ServerTimestamp$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "FieldValue", "<ServerTimestamp>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object <ServerTimestamp>k__BackingField
void Firebase::Firestore::FieldValue::_set_$ServerTimestamp$k__BackingField(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_set_$ServerTimestamp$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValue", "<ServerTimestamp>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5C79E0
// Autogenerated static field getter
// Get static field: static private readonly System.Object <Delete>k__BackingField
::Il2CppObject* Firebase::Firestore::FieldValue::_get_$Delete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_get_$Delete$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "FieldValue", "<Delete>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object <Delete>k__BackingField
void Firebase::Firestore::FieldValue::_set_$Delete$k__BackingField(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_set_$Delete$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValue", "<Delete>k__BackingField", value));
}
// Autogenerated method: Firebase.Firestore.FieldValue..cctor
void Firebase::Firestore::FieldValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValue.Increment
::Il2CppObject* Firebase::Firestore::FieldValue::Increment(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValue", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.FieldPathProxy
#include "Firebase/Firestore/FieldPathProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] dotSplit
::ArrayW<::Il2CppChar> Firebase::Firestore::FieldPath::_get_dotSplit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_dotSplit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Firebase.Firestore", "FieldPath", "dotSplit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] dotSplit
void Firebase::Firestore::FieldPath::_set_dotSplit(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_dotSplit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "dotSplit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] prohibitedCharacters
::ArrayW<::Il2CppChar> Firebase::Firestore::FieldPath::_get_prohibitedCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_prohibitedCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Firebase.Firestore", "FieldPath", "prohibitedCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] prohibitedCharacters
void Firebase::Firestore::FieldPath::_set_prohibitedCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_prohibitedCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "prohibitedCharacters", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5C7A1C
// Autogenerated static field getter
// Get static field: static private readonly Firebase.Firestore.FieldPath <DocumentId>k__BackingField
::Firebase::Firestore::FieldPath* Firebase::Firestore::FieldPath::_get_$DocumentId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_$DocumentId$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldPath*>("Firebase.Firestore", "FieldPath", "<DocumentId>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly Firebase.Firestore.FieldPath <DocumentId>k__BackingField
void Firebase::Firestore::FieldPath::_set_$DocumentId$k__BackingField(::Firebase::Firestore::FieldPath* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_$DocumentId$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "<DocumentId>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
::System::Func_2<::StringW, bool>* Firebase::Firestore::FieldPath::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("Firebase.Firestore", "FieldPath", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
void Firebase::Firestore::FieldPath::_set_$$f__am$cache0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _segments
::ArrayW<::StringW>& Firebase::Firestore::FieldPath::dyn__segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::dyn__segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segments"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _encodedPath
::StringW& Firebase::Firestore::FieldPath::dyn__encodedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::dyn__encodedPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encodedPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldPath.get_EncodedPath
::StringW Firebase::Firestore::FieldPath::get_EncodedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::get_EncodedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath..cctor
void Firebase::Firestore::FieldPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.FromDotSeparatedString
::Firebase::Firestore::FieldPath* Firebase::Firestore::FieldPath::FromDotSeparatedString(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::FromDotSeparatedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "FromDotSeparatedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.FieldPath.GetCanonicalPath
::StringW Firebase::Firestore::FieldPath::GetCanonicalPath(::ArrayW<::StringW> fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields);
}
// Autogenerated method: Firebase.Firestore.FieldPath.IsValidIdentifier
bool Firebase::Firestore::FieldPath::IsValidIdentifier(::StringW identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::IsValidIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "IsValidIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identifier);
}
// Autogenerated method: Firebase.Firestore.FieldPath.Equals
bool Firebase::Firestore::FieldPath::Equals(::Firebase::Firestore::FieldPath* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.FieldPath.ConvertToProxy
::Firebase::Firestore::FieldPathProxy* Firebase::Firestore::FieldPath::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldPathProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.<FieldPath>m__0
bool Firebase::Firestore::FieldPath::$FieldPath$m__0(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::<FieldPath>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "<FieldPath>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Firebase.Firestore.FieldPath.ToString
::StringW Firebase::Firestore::FieldPath::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.Equals
bool Firebase::Firestore::FieldPath::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldPath.GetHashCode
int Firebase::Firestore::FieldPath::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.DocumentSnapshotProxy _proxy
::Firebase::Firestore::DocumentSnapshotProxy*& Firebase::Firestore::DocumentSnapshot::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentSnapshotProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::DocumentSnapshot::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Reference
::Firebase::Firestore::DocumentReference* Firebase::Firestore::DocumentSnapshot::get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Id
::StringW Firebase::Firestore::DocumentSnapshot::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Exists
bool Firebase::Firestore::DocumentSnapshot::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.ToDictionary
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* Firebase::Firestore::DocumentSnapshot::ToDictionary(::Firebase::Firestore::ServerTimestampBehavior serverTimestampBehavior) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::ToDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverTimestampBehavior)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method, serverTimestampBehavior);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.GetHashCode
int Firebase::Firestore::DocumentSnapshot::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.Equals
bool Firebase::Firestore::DocumentSnapshot::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/DocumentReference_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* Firebase::Firestore::DocumentReference::_get_snapshotListenerCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_get_snapshotListenerCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>*>("Firebase.Firestore", "DocumentReference", "snapshotListenerCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
void Firebase::Firestore::DocumentReference::_set_snapshotListenerCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_set_snapshotListenerCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentReference", "snapshotListenerCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
::Firebase::Firestore::DocumentReference::ListenerDelegate* Firebase::Firestore::DocumentReference::_get_documentSnapshotsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_get_documentSnapshotsHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentReference::ListenerDelegate*>("Firebase.Firestore", "DocumentReference", "documentSnapshotsHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
void Firebase::Firestore::DocumentReference::_set_documentSnapshotsHandler(::Firebase::Firestore::DocumentReference::ListenerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_set_documentSnapshotsHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentReference", "documentSnapshotsHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.DocumentReferenceProxy _proxy
::Firebase::Firestore::DocumentReferenceProxy*& Firebase::Firestore::DocumentReference::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentReferenceProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::DocumentReference::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Proxy
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::DocumentReference::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Firestore
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::DocumentReference::get_Firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Firestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Firestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Id
::StringW Firebase::Firestore::DocumentReference::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Path
::StringW Firebase::Firestore::DocumentReference::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference..cctor
void Firebase::Firestore::DocumentReference::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.ClearCallbacksForOwner
void Firebase::Firestore::DocumentReference::ClearCallbacksForOwner(::Firebase::Firestore::FirebaseFirestore* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ClearCallbacksForOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", "ClearCallbacksForOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, owner);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Collection
::Firebase::Firestore::CollectionReference* Firebase::Firestore::DocumentReference::Collection(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Equals
bool Firebase::Firestore::DocumentReference::Equals(::Firebase::Firestore::DocumentReference* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.DeleteAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::DeleteAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::DeleteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.UpdateAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::UpdateAsync(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::UpdateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, updates);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.SetAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::SetAsync(::Il2CppObject* documentData, ::Firebase::Firestore::SetOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::SetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentData), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, documentData, options);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.GetSnapshotAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::DocumentReference::GetSnapshotAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::GetSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.DocumentSnapshotsHandler
void Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", "DocumentSnapshotsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.<GetSnapshotAsync>m__0
::Firebase::Firestore::DocumentSnapshot* Firebase::Firestore::DocumentReference::$GetSnapshotAsync$m__0(::Firebase::Firestore::DocumentSnapshotProxy* taskResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::<GetSnapshotAsync>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSnapshotAsync>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshot*, false>(this, ___internal__method, taskResult);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.GetHashCode
int Firebase::Firestore::DocumentReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Equals
bool Firebase::Firestore::DocumentReference::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.ToString
::StringW Firebase::Firestore::DocumentReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/DocumentReference_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.Invoke
void Firebase::Firestore::DocumentReference::ListenerDelegate::Invoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::DocumentReference::ListenerDelegate::BeginInvoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage, callback, object);
}
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.EndInvoke
void Firebase::Firestore::DocumentReference::ListenerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: Firebase.Firestore.CollectionReferenceProxy
#include "Firebase/Firestore/CollectionReferenceProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.CollectionReference.get_Proxy
::Firebase::Firestore::CollectionReferenceProxy* Firebase::Firestore::CollectionReference::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.get_Path
::StringW Firebase::Firestore::CollectionReference::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Document
::Firebase::Firestore::DocumentReference* Firebase::Firestore::CollectionReference::Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Document
::Firebase::Firestore::DocumentReference* Firebase::Firestore::CollectionReference::Document(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.AddAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentReference*>* Firebase::Firestore::CollectionReference::AddAsync(::Il2CppObject* documentData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::AddAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentReference*>*, false>(this, ___internal__method, documentData);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Equals
bool Firebase::Firestore::CollectionReference::Equals(::Firebase::Firestore::CollectionReference* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.GetHashCode
int Firebase::Firestore::CollectionReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Equals
bool Firebase::Firestore::CollectionReference::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.ToString
::StringW Firebase::Firestore::CollectionReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Blob
#include "Firebase/Firestore/Blob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _bytes
::ArrayW<uint8_t>& Firebase::Firestore::Blob::dyn__bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::dyn__bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _hash
int& Firebase::Firestore::Blob::dyn__hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::dyn__hash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Blob.get_Length
int Firebase::Firestore::Blob::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob..ctor
Firebase::Firestore::Blob::Blob(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Firebase.Firestore.Blob.ToBytes
::ArrayW<uint8_t> Firebase::Firestore::Blob::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob.CopyFrom
::Firebase::Firestore::Blob Firebase::Firestore::Blob::CopyFrom(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Blob", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Blob, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Firebase.Firestore.Blob.Equals
bool Firebase::Firestore::Blob::Equals(::Firebase::Firestore::Blob other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Blob.Equals
bool Firebase::Firestore::Blob::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Blob.GetHashCode
int Firebase::Firestore::Blob::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob.ToString
::StringW Firebase::Firestore::Blob::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Platform.FirebaseEditorDispatcher
#include "Firebase/Platform/FirebaseEditorDispatcher.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache0
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache0
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache1
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache1
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache2
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache2")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache2
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache2(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache2", value));
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorApplicationType
::System::Type* Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorApplicationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorIsPlaying
bool Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorIsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorIsPlayingOrWillChangePlaymode
bool Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorIsPlayingOrWillChangePlaymode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.StartEditorUpdate
void Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "StartEditorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.StopEditorUpdate
void Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "StopEditorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.Update
void Firebase::Platform::FirebaseEditorDispatcher::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.ListenToPlayState
void Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState(bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "ListenToPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.PlayModeStateChanged
void Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "PlayModeStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.AddRemoveCallbackToField
void Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField(::System::Reflection::FieldInfo* eventField, ::System::Action* callback, ::Il2CppObject* target, bool add, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "AddRemoveCallbackToField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventField), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(add), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventField, callback, target, add, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler
#include "Firebase/Platform/FirebaseHandler.hpp"
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs
#include "Firebase/Platform/FirebaseHandler_ApplicationFocusChangedEventArgs.hpp"
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0
#include "Firebase/Platform/FirebaseHandler_-CreatePartialOnMainThread-c__AnonStorey0.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Platform.FirebaseMonoBehaviour
#include "Firebase/Platform/FirebaseMonoBehaviour.hpp"
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
// Including type: Firebase.Dispatcher
#include "Firebase/Dispatcher.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.FirebaseMonoBehaviour firebaseMonoBehaviour
::Firebase::Platform::FirebaseMonoBehaviour* Firebase::Platform::FirebaseHandler::_get_firebaseMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_firebaseMonoBehaviour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::FirebaseMonoBehaviour*>("Firebase.Platform", "FirebaseHandler", "firebaseMonoBehaviour"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.FirebaseMonoBehaviour firebaseMonoBehaviour
void Firebase::Platform::FirebaseHandler::_set_firebaseMonoBehaviour(::Firebase::Platform::FirebaseMonoBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_firebaseMonoBehaviour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "firebaseMonoBehaviour", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5DFEBC
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IFirebaseAppUtils <AppUtils>k__BackingField
::Firebase::Platform::IFirebaseAppUtils* Firebase::Platform::FirebaseHandler::_get_$AppUtils$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$AppUtils$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IFirebaseAppUtils*>("Firebase.Platform", "FirebaseHandler", "<AppUtils>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IFirebaseAppUtils <AppUtils>k__BackingField
void Firebase::Platform::FirebaseHandler::_set_$AppUtils$k__BackingField(::Firebase::Platform::IFirebaseAppUtils* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$AppUtils$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<AppUtils>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 tickCount
int Firebase::Platform::FirebaseHandler::_get_tickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_tickCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Platform", "FirebaseHandler", "tickCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 tickCount
void Firebase::Platform::FirebaseHandler::_set_tickCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_tickCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "tickCount", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5DFEF8
// Autogenerated static field getter
// Get static field: static private Firebase.Dispatcher <ThreadDispatcher>k__BackingField
::Firebase::Dispatcher* Firebase::Platform::FirebaseHandler::_get_$ThreadDispatcher$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$ThreadDispatcher$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Dispatcher*>("Firebase.Platform", "FirebaseHandler", "<ThreadDispatcher>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Dispatcher <ThreadDispatcher>k__BackingField
void Firebase::Platform::FirebaseHandler::_set_$ThreadDispatcher$k__BackingField(::Firebase::Dispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$ThreadDispatcher$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<ThreadDispatcher>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.FirebaseHandler firebaseHandler
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseHandler::_get_firebaseHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_firebaseHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::FirebaseHandler*>("Firebase.Platform", "FirebaseHandler", "firebaseHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.FirebaseHandler firebaseHandler
void Firebase::Platform::FirebaseHandler::_set_firebaseHandler(::Firebase::Platform::FirebaseHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_firebaseHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "firebaseHandler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Boolean> <>f__am$cache0
::System::Func_1<bool>* Firebase::Platform::FirebaseHandler::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Firebase.Platform", "FirebaseHandler", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Boolean> <>f__am$cache0
void Firebase::Platform::FirebaseHandler::_set_$$f__am$cache0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlayMode>k__BackingField
bool& Firebase::Platform::FirebaseHandler::dyn_$IsPlayMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_$IsPlayMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlayMode>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.EventArgs> Updated
::System::EventHandler_1<::System::EventArgs*>*& Firebase::Platform::FirebaseHandler::dyn_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_Updated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Updated"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::EventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action UpdatedEventWrapper
::System::Action*& Firebase::Platform::FirebaseHandler::dyn_UpdatedEventWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_UpdatedEventWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedEventWrapper"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs> ApplicationFocusChanged
::System::EventHandler_1<::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs*>*& Firebase::Platform::FirebaseHandler::dyn_ApplicationFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_ApplicationFocusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationFocusChanged"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_AppUtils
::Firebase::Platform::IFirebaseAppUtils* Firebase::Platform::FirebaseHandler::get_AppUtils() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_AppUtils");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_AppUtils", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IFirebaseAppUtils*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_AppUtils
void Firebase::Platform::FirebaseHandler::set_AppUtils(::Firebase::Platform::IFirebaseAppUtils* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_AppUtils");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "set_AppUtils", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_TickCount
int Firebase::Platform::FirebaseHandler::get_TickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_TickCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_TickCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_ThreadDispatcher
::Firebase::Dispatcher* Firebase::Platform::FirebaseHandler::get_ThreadDispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_ThreadDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_ThreadDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Dispatcher*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_ThreadDispatcher
void Firebase::Platform::FirebaseHandler::set_ThreadDispatcher(::Firebase::Dispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_ThreadDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "set_ThreadDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_IsPlayMode
bool Firebase::Platform::FirebaseHandler::get_IsPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_IsPlayMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlayMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_IsPlayMode
void Firebase::Platform::FirebaseHandler::set_IsPlayMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_IsPlayMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlayMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_DefaultInstance
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseHandler::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::FirebaseHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler..cctor
void Firebase::Platform::FirebaseHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.StartMonoBehaviour
void Firebase::Platform::FirebaseHandler::StartMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::StartMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.StopMonoBehaviour
void Firebase::Platform::FirebaseHandler::StopMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::StopMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.CreatePartialOnMainThread
void Firebase::Platform::FirebaseHandler::CreatePartialOnMainThread(::Firebase::Platform::IFirebaseAppUtils* appUtils) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::CreatePartialOnMainThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "CreatePartialOnMainThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appUtils)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appUtils);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.Create
void Firebase::Platform::FirebaseHandler::Create(::Firebase::Platform::IFirebaseAppUtils* appUtils) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appUtils)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appUtils);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.Update
void Firebase::Platform::FirebaseHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.OnApplicationFocus
void Firebase::Platform::FirebaseHandler::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.OnMonoBehaviourDestroyed
void Firebase::Platform::FirebaseHandler::OnMonoBehaviourDestroyed(::Firebase::Platform::FirebaseMonoBehaviour* behaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::OnMonoBehaviourDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "OnMonoBehaviourDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.<StopMonoBehaviour>m__0
bool Firebase::Platform::FirebaseHandler::$StopMonoBehaviour$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::<StopMonoBehaviour>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "<StopMonoBehaviour>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.<Update>m__1
void Firebase::Platform::FirebaseHandler::$Update$m__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::<Update>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs
#include "Firebase/Platform/FirebaseHandler_ApplicationFocusChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasFocus>k__BackingField
bool& Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::dyn_$HasFocus$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::dyn_$HasFocus$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasFocus>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs.set_HasFocus
void Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::set_HasFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::set_HasFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0
#include "Firebase/Platform/FirebaseHandler_-CreatePartialOnMainThread-c__AnonStorey0.hpp"
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Platform.IFirebaseAppUtils appUtils
::Firebase::Platform::IFirebaseAppUtils*& Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::dyn_appUtils() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::dyn_appUtils");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appUtils"))->offset;
  return *reinterpret_cast<::Firebase::Platform::IFirebaseAppUtils**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0.<>m__0
void Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseLogger
#include "Firebase/Platform/FirebaseLogger.hpp"
// Including type: Firebase.Platform.MainThreadProperty`1
#include "Firebase/Platform/MainThreadProperty_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.StackTraceLogType
#include "UnityEngine/StackTraceLogType.hpp"
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.MainThreadProperty`1<System.Boolean> incompatibleStackUnwindingEnabled
::Firebase::Platform::MainThreadProperty_1<bool>* Firebase::Platform::FirebaseLogger::_get_incompatibleStackUnwindingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_get_incompatibleStackUnwindingEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::MainThreadProperty_1<bool>*>("Firebase.Platform", "FirebaseLogger", "incompatibleStackUnwindingEnabled"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.MainThreadProperty`1<System.Boolean> incompatibleStackUnwindingEnabled
void Firebase::Platform::FirebaseLogger::_set_incompatibleStackUnwindingEnabled(::Firebase::Platform::MainThreadProperty_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_set_incompatibleStackUnwindingEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseLogger", "incompatibleStackUnwindingEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Boolean> <>f__mg$cache0
::System::Func_1<bool>* Firebase::Platform::FirebaseLogger::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Firebase.Platform", "FirebaseLogger", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Boolean> <>f__mg$cache0
void Firebase::Platform::FirebaseLogger::_set_$$f__mg$cache0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseLogger", "<>f__mg$cache0", value));
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.get_CanRedirectNativeLogs
bool Firebase::Platform::FirebaseLogger::get_CanRedirectNativeLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::get_CanRedirectNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "get_CanRedirectNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger..cctor
void Firebase::Platform::FirebaseLogger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.IsStackTraceLogTypeIncompatibleWithNativeLogs
bool Firebase::Platform::FirebaseLogger::IsStackTraceLogTypeIncompatibleWithNativeLogs(::UnityEngine::StackTraceLogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::IsStackTraceLogTypeIncompatibleWithNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "IsStackTraceLogTypeIncompatibleWithNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logType);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs
bool Firebase::Platform::FirebaseLogger::CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.LogMessage
void Firebase::Platform::FirebaseLogger::LogMessage(::Firebase::Platform::PlatformLogLevel logLevel, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::LogMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "LogMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logLevel), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logLevel, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseMonoBehaviour
#include "Firebase/Platform/FirebaseMonoBehaviour.hpp"
// Including type: Firebase.Platform.FirebaseHandler
#include "Firebase/Platform/FirebaseHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.GetFirebaseHandlerOrDestroyGameObject
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirebaseHandlerOrDestroyGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::FirebaseHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnEnable
void Firebase::Platform::FirebaseMonoBehaviour::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.Update
void Firebase::Platform::FirebaseMonoBehaviour::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnApplicationFocus
void Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnDestroy
void Firebase::Platform::FirebaseMonoBehaviour::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.PlatformInformation
#include "Firebase/Platform/PlatformInformation.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String runtimeVersion
::StringW Firebase::Platform::PlatformInformation::_get_runtimeVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_runtimeVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Firebase.Platform", "PlatformInformation", "runtimeVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String runtimeVersion
void Firebase::Platform::PlatformInformation::_set_runtimeVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_runtimeVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "runtimeVersion", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5DFFCC
// Autogenerated static field getter
// Get static field: static private System.Single <RealtimeSinceStartupSafe>k__BackingField
float Firebase::Platform::PlatformInformation::_get_$RealtimeSinceStartupSafe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$RealtimeSinceStartupSafe$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("Firebase.Platform", "PlatformInformation", "<RealtimeSinceStartupSafe>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <RealtimeSinceStartupSafe>k__BackingField
void Firebase::Platform::PlatformInformation::_set_$RealtimeSinceStartupSafe$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$RealtimeSinceStartupSafe$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<RealtimeSinceStartupSafe>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.String> <>f__am$cache0
::System::Func_1<::StringW>* Firebase::Platform::PlatformInformation::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::StringW>*>("Firebase.Platform", "PlatformInformation", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.String> <>f__am$cache0
void Firebase::Platform::PlatformInformation::_set_$$f__am$cache0(::System::Func_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<>f__am$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.String> <>f__am$cache1
::System::Func_1<::StringW>* Firebase::Platform::PlatformInformation::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::StringW>*>("Firebase.Platform", "PlatformInformation", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.String> <>f__am$cache1
void Firebase::Platform::PlatformInformation::_set_$$f__am$cache1(::System::Func_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<>f__am$cache1", value));
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_IsAndroid
bool Firebase::Platform::PlatformInformation::get_IsAndroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_IsAndroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_IsAndroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_IsIOS
bool Firebase::Platform::PlatformInformation::get_IsIOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_IsIOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_IsIOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_DefaultConfigLocation
::StringW Firebase::Platform::PlatformInformation::get_DefaultConfigLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_DefaultConfigLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_DefaultConfigLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RealtimeSinceStartup
float Firebase::Platform::PlatformInformation::get_RealtimeSinceStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RealtimeSinceStartup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RealtimeSinceStartup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.set_RealtimeSinceStartupSafe
void Firebase::Platform::PlatformInformation::set_RealtimeSinceStartupSafe(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::set_RealtimeSinceStartupSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "set_RealtimeSinceStartupSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RuntimeName
::StringW Firebase::Platform::PlatformInformation::get_RuntimeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RuntimeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RuntimeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RuntimeVersion
::StringW Firebase::Platform::PlatformInformation::get_RuntimeVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RuntimeVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RuntimeVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.<get_DefaultConfigLocation>m__0
::StringW Firebase::Platform::PlatformInformation::$get_DefaultConfigLocation$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::<get_DefaultConfigLocation>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "<get_DefaultConfigLocation>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.<get_RuntimeVersion>m__1
::StringW Firebase::Platform::PlatformInformation::$get_RuntimeVersion$m__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::<get_RuntimeVersion>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "<get_RuntimeVersion>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Default.UnityConfigExtensions
#include "Firebase/Platform/Default/UnityConfigExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.Default.UnityConfigExtensions _instance
::Firebase::Platform::Default::UnityConfigExtensions* Firebase::Platform::Default::UnityConfigExtensions::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::Default::UnityConfigExtensions*>("Firebase.Platform.Default", "UnityConfigExtensions", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.Default.UnityConfigExtensions _instance
void Firebase::Platform::Default::UnityConfigExtensions::_set__instance(::Firebase::Platform::Default::UnityConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "UnityConfigExtensions", "_instance", value));
}
// Autogenerated method: Firebase.Platform.Default.UnityConfigExtensions.get_DefaultInstance
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Default::UnityConfigExtensions::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "UnityConfigExtensions", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IAppConfigExtensions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.Default.UnityConfigExtensions..cctor
void Firebase::Platform::Default::UnityConfigExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "UnityConfigExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnityLoggingService
#include "Firebase/Unity/UnityLoggingService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Unity.UnityLoggingService _instance
::Firebase::Unity::UnityLoggingService* Firebase::Unity::UnityLoggingService::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Unity::UnityLoggingService*>("Firebase.Unity", "UnityLoggingService", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Unity.UnityLoggingService _instance
void Firebase::Unity::UnityLoggingService::_set__instance(::Firebase::Unity::UnityLoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnityLoggingService", "_instance", value));
}
// Autogenerated method: Firebase.Unity.UnityLoggingService.get_Instance
::Firebase::Unity::UnityLoggingService* Firebase::Unity::UnityLoggingService::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityLoggingService", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Unity::UnityLoggingService*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnityLoggingService..cctor
void Firebase::Unity::UnityLoggingService::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityLoggingService", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnityPlatformServices
#include "Firebase/Unity/UnityPlatformServices.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Unity.UnityPlatformServices.SetupServices
void Firebase::Unity::UnityPlatformServices::SetupServices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityPlatformServices::SetupServices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityPlatformServices", "SetupServices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext
#include "Firebase/Unity/UnitySynchronizationContext.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_-SignaledCoroutine-c__Iterator0.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey1
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey1.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey2
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey2.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey4.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Unity.UnitySynchronizationContext _instance
::Firebase::Unity::UnitySynchronizationContext* Firebase::Unity::UnitySynchronizationContext::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Unity::UnitySynchronizationContext*>("Firebase.Unity", "UnitySynchronizationContext", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Unity.UnitySynchronizationContext _instance
void Firebase::Unity::UnitySynchronizationContext::_set__instance(::Firebase::Unity::UnitySynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnitySynchronizationContext", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.ManualResetEvent> signalDictionary
::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>* Firebase::Unity::UnitySynchronizationContext::_get_signalDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_get_signalDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>*>("Firebase.Unity", "UnitySynchronizationContext", "signalDictionary")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.ManualResetEvent> signalDictionary
void Firebase::Unity::UnitySynchronizationContext::_set_signalDictionary(::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_set_signalDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnitySynchronizationContext", "signalDictionary", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Tuple`2<System.Threading.SendOrPostCallback,System.Object>> queue
::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*& Firebase::Unity::UnitySynchronizationContext::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir behavior
::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir*& Firebase::Unity::UnitySynchronizationContext::dyn_behavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_behavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "behavior"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mainThreadId
int& Firebase::Unity::UnitySynchronizationContext::dyn_mainThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_mainThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext..cctor
void Firebase::Unity::UnitySynchronizationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Create
void Firebase::Unity::UnitySynchronizationContext::Create(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Destroy
void Firebase::Unity::UnitySynchronizationContext::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.GetThreadEvent
::System::Threading::ManualResetEvent* Firebase::Unity::UnitySynchronizationContext::GetThreadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::GetThreadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThreadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ManualResetEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Post
void Firebase::Unity::UnitySynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Send
void Firebase::Unity::UnitySynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir_-Start-c__Iterator0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Tuple`2<System.Threading.SendOrPostCallback,System.Object>> callbackQueue
::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::dyn_callbackQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::dyn_callbackQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir.get_CallbackQueue
::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::get_CallbackQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::get_CallbackQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallbackQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir.Start
::System::Collections::IEnumerator* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir_-Start-c__Iterator0.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Tuple`2<System.Threading.SendOrPostCallback,System.Object> <entry>__0
::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$entry$__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$entry$__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<entry>__0"))->offset;
  return *reinterpret_cast<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $locvar0
::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$locvar0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$locvar0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir $this
::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
bool& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
int& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.MoveNext
bool Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.Dispose
void Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.Reset
void Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_-SignaledCoroutine-c__Iterator0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Func`1<System.Collections.IEnumerator> coroutine
::System::Func_1<::System::Collections::IEnumerator*>*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutine"))->offset;
  return *reinterpret_cast<::System::Func_1<::System::Collections::IEnumerator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.ManualResetEvent newSignal
::System::Threading::ManualResetEvent*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_newSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_newSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newSignal"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
bool& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
int& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.MoveNext
bool Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.Dispose
void Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.Reset
void Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey1
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey2
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SendOrPostCallback d
::System::Threading::SendOrPostCallback*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey4.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.ManualResetEvent newSignal
::System::Threading::ManualResetEvent*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_newSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_newSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newSignal"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3 <>f__ref$3
::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_$$f__ref$3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_$$f__ref$3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__ref$3"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4.<>m__0
void Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::$$m__0(::Il2CppObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Platform.Default.AppConfigExtensions
#include "Firebase/Platform/Default/AppConfigExtensions.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Uri DefaultUpdateUrl
::System::Uri* Firebase::Platform::Default::AppConfigExtensions::_get_DefaultUpdateUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_DefaultUpdateUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri*>("Firebase.Platform.Default", "AppConfigExtensions", "DefaultUpdateUrl"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Uri DefaultUpdateUrl
void Firebase::Platform::Default::AppConfigExtensions::_set_DefaultUpdateUrl(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_DefaultUpdateUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "DefaultUpdateUrl", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Default
::StringW Firebase::Platform::Default::AppConfigExtensions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Firebase.Platform.Default", "AppConfigExtensions", "Default"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Default
void Firebase::Platform::Default::AppConfigExtensions::_set_Default(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "Default", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object Sync
::Il2CppObject* Firebase::Platform::Default::AppConfigExtensions::_get_Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_Sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Platform.Default", "AppConfigExtensions", "Sync"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object Sync
void Firebase::Platform::Default::AppConfigExtensions::_set_Sync(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_Sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "Sync", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
::Firebase::Platform::Default::AppConfigExtensions* Firebase::Platform::Default::AppConfigExtensions::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::Default::AppConfigExtensions*>("Firebase.Platform.Default", "AppConfigExtensions", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
void Firebase::Platform::Default::AppConfigExtensions::_set__instance(::Firebase::Platform::Default::AppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Firebase::Platform::Default::AppConfigExtensions::_get_SStringState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_SStringState");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Firebase.Platform.Default", "AppConfigExtensions", "SStringState")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
void Firebase::Platform::Default::AppConfigExtensions::_set_SStringState(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_SStringState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "SStringState", value));
}
// Autogenerated method: Firebase.Platform.Default.AppConfigExtensions.get_Instance
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Default::AppConfigExtensions::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "AppConfigExtensions", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IAppConfigExtensions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.Default.AppConfigExtensions..cctor
void Firebase::Platform::Default::AppConfigExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "AppConfigExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Default.SystemClock
#include "Firebase/Platform/Default/SystemClock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Firebase.Platform.IClockService Instance
::Firebase::Platform::IClockService* Firebase::Platform::Default::SystemClock::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::IClockService*>("Firebase.Platform.Default", "SystemClock", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Firebase.Platform.IClockService Instance
void Firebase::Platform::Default::SystemClock::_set_Instance(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "SystemClock", "Instance", value));
}
// Autogenerated method: Firebase.Platform.Default.SystemClock..cctor
void Firebase::Platform::Default::SystemClock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "SystemClock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.ExceptionAggregator
#include "Firebase/ExceptionAggregator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Exception> threadLocalExceptions
::System::Collections::Generic::List_1<::System::Exception*>* Firebase::ExceptionAggregator::_get_threadLocalExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::_get_threadLocalExceptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::Exception*>*>("Firebase", "ExceptionAggregator", "threadLocalExceptions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Exception> threadLocalExceptions
void Firebase::ExceptionAggregator::_set_threadLocalExceptions(::System::Collections::Generic::List_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::_set_threadLocalExceptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase", "ExceptionAggregator", "threadLocalExceptions", value));
}
// Autogenerated method: Firebase.ExceptionAggregator.get_Exceptions
::System::Collections::Generic::List_1<::System::Exception*>* Firebase::ExceptionAggregator::get_Exceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::get_Exceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "get_Exceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Exception*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.GetAndClearPendingExceptions
::System::Exception* Firebase::ExceptionAggregator::GetAndClearPendingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::GetAndClearPendingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "GetAndClearPendingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.ThrowAndClearPendingExceptions
void Firebase::ExceptionAggregator::ThrowAndClearPendingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::ThrowAndClearPendingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "ThrowAndClearPendingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.LogException
::System::Exception* Firebase::ExceptionAggregator::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Firebase.ExceptionAggregator.Wrap
void Firebase::ExceptionAggregator::Wrap(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::Wrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "Wrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.DebugLogger
#include "Firebase/Platform/DebugLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.DebugLogger _instance
::Firebase::Platform::DebugLogger* Firebase::Platform::DebugLogger::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::DebugLogger*>("Firebase.Platform", "DebugLogger", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.DebugLogger _instance
void Firebase::Platform::DebugLogger::_set__instance(::Firebase::Platform::DebugLogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "DebugLogger", "_instance", value));
}
// Autogenerated method: Firebase.Platform.DebugLogger.get_Instance
::Firebase::Platform::DebugLogger* Firebase::Platform::DebugLogger::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "DebugLogger", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::DebugLogger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.DebugLogger..cctor
void Firebase::Platform::DebugLogger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "DebugLogger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Services
#include "Firebase/Platform/Services.hpp"
// Including type: Firebase.Platform.IAppConfigExtensions
#include "Firebase/Platform/IAppConfigExtensions.hpp"
// Including type: Firebase.Platform.IClockService
#include "Firebase/Platform/IClockService.hpp"
// Including type: Firebase.Platform.ILoggingService
#include "Firebase/Platform/ILoggingService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x5E0038
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IAppConfigExtensions <AppConfig>k__BackingField
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Services::_get_$AppConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$AppConfig$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IAppConfigExtensions*>("Firebase.Platform", "Services", "<AppConfig>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IAppConfigExtensions <AppConfig>k__BackingField
void Firebase::Platform::Services::_set_$AppConfig$k__BackingField(::Firebase::Platform::IAppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$AppConfig$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<AppConfig>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5E0074
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IClockService <Clock>k__BackingField
::Firebase::Platform::IClockService* Firebase::Platform::Services::_get_$Clock$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$Clock$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IClockService*>("Firebase.Platform", "Services", "<Clock>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IClockService <Clock>k__BackingField
void Firebase::Platform::Services::_set_$Clock$k__BackingField(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$Clock$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<Clock>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x5E00B0
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.ILoggingService <Logging>k__BackingField
::Firebase::Platform::ILoggingService* Firebase::Platform::Services::_get_$Logging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$Logging$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::ILoggingService*>("Firebase.Platform", "Services", "<Logging>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.ILoggingService <Logging>k__BackingField
void Firebase::Platform::Services::_set_$Logging$k__BackingField(::Firebase::Platform::ILoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$Logging$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<Logging>k__BackingField", value));
}
// Autogenerated method: Firebase.Platform.Services.set_AppConfig
void Firebase::Platform::Services::set_AppConfig(::Firebase::Platform::IAppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_AppConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_AppConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services.set_Clock
void Firebase::Platform::Services::set_Clock(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_Clock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_Clock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services.set_Logging
void Firebase::Platform::Services::set_Logging(::Firebase::Platform::ILoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_Logging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_Logging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services..cctor
void Firebase::Platform::Services::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Dispatcher
#include "Firebase/Dispatcher.hpp"
// Including type: Firebase.Dispatcher/Firebase.CallbackStorage`1
#include "Firebase/Dispatcher_CallbackStorage_1.hpp"
// Including type: Firebase.Dispatcher/Firebase.<Run>c__AnonStorey0`1
#include "Firebase/Dispatcher_-Run-c__AnonStorey0_1.hpp"
// Including type: Firebase.Dispatcher/Firebase.<RunAsync>c__AnonStorey1`1
#include "Firebase/Dispatcher_-RunAsync-c__AnonStorey1_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 ownerThreadId
int& Firebase::Dispatcher::dyn_ownerThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::dyn_ownerThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Action> queue
::System::Collections::Generic::Queue_1<::System::Action*>*& Firebase::Dispatcher::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Dispatcher.ManagesThisThread
bool Firebase::Dispatcher::ManagesThisThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::ManagesThisThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManagesThisThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Dispatcher.PollJobs
void Firebase::Dispatcher::PollJobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::PollJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Verbose
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Verbose
void Firebase::Platform::PlatformLogLevel::_set_Verbose(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Verbose", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Debug
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Debug
void Firebase::Platform::PlatformLogLevel::_set_Debug(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Info
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Info
void Firebase::Platform::PlatformLogLevel::_set_Info(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Warning
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Warning
void Firebase::Platform::PlatformLogLevel::_set_Warning(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Error
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Error
void Firebase::Platform::PlatformLogLevel::_set_Error(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Assert
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Assert
void Firebase::Platform::PlatformLogLevel::_set_Assert(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Assert", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Firebase::Platform::PlatformLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.TranslateDllNotFoundException
void Firebase::Platform::IFirebaseAppUtils::TranslateDllNotFoundException(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::TranslateDllNotFoundException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranslateDllNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.PollCallbacks
void Firebase::Platform::IFirebaseAppUtils::PollCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::PollCallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.GetLogLevel
::Firebase::Platform::PlatformLogLevel Firebase::Platform::IFirebaseAppUtils::GetLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::GetLogLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::PlatformLogLevel, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseAppUtilsStub
#include "Firebase/Platform/FirebaseAppUtilsStub.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.FirebaseAppUtilsStub _instance
::Firebase::Platform::FirebaseAppUtilsStub* Firebase::Platform::FirebaseAppUtilsStub::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::FirebaseAppUtilsStub*>("Firebase.Platform", "FirebaseAppUtilsStub", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.FirebaseAppUtilsStub _instance
void Firebase::Platform::FirebaseAppUtilsStub::_set__instance(::Firebase::Platform::FirebaseAppUtilsStub* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseAppUtilsStub", "_instance", value));
}
// Autogenerated method: Firebase.Platform.FirebaseAppUtilsStub.get_Instance
::Firebase::Platform::FirebaseAppUtilsStub* Firebase::Platform::FirebaseAppUtilsStub::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseAppUtilsStub", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::FirebaseAppUtilsStub*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseAppUtilsStub..cctor
void Firebase::Platform::FirebaseAppUtilsStub::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseAppUtilsStub", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseAppUtilsStub.TranslateDllNotFoundException
void Firebase::Platform::FirebaseAppUtilsStub::TranslateDllNotFoundException(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::TranslateDllNotFoundException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TranslateDllNotFoundException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Firebase.Platform.FirebaseAppUtilsStub.PollCallbacks
void Firebase::Platform::FirebaseAppUtilsStub::PollCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::PollCallbacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseAppUtilsStub.GetLogLevel
::Firebase::Platform::PlatformLogLevel Firebase::Platform::FirebaseAppUtilsStub::GetLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseAppUtilsStub::GetLogLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::PlatformLogLevel, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.AddressAttribute
#include "Il2CppInspector/DLL/AddressAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String RVA
::StringW& Il2CppInspector::DLL::AddressAttribute::dyn_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AddressAttribute::dyn_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::StringW& Il2CppInspector::DLL::AddressAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AddressAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VA
::StringW& Il2CppInspector::DLL::AddressAttribute::dyn_VA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AddressAttribute::dyn_VA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Slot
::StringW& Il2CppInspector::DLL::AddressAttribute::dyn_Slot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AddressAttribute::dyn_Slot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Slot"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.FieldOffsetAttribute
#include "Il2CppInspector/DLL/FieldOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::StringW& Il2CppInspector::DLL::FieldOffsetAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::FieldOffsetAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.StaticFieldOffsetAttribute
#include "Il2CppInspector/DLL/StaticFieldOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::StringW& Il2CppInspector::DLL::StaticFieldOffsetAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::StaticFieldOffsetAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.AttributeAttribute
#include "Il2CppInspector/DLL/AttributeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
::StringW& Il2CppInspector::DLL::AttributeAttribute::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AttributeAttribute::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RVA
::StringW& Il2CppInspector::DLL::AttributeAttribute::dyn_RVA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AttributeAttribute::dyn_RVA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RVA"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::StringW& Il2CppInspector::DLL::AttributeAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::AttributeAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.MetadataOffsetAttribute
#include "Il2CppInspector/DLL/MetadataOffsetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Offset
::StringW& Il2CppInspector::DLL::MetadataOffsetAttribute::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::MetadataOffsetAttribute::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.MetadataPreviewAttribute
#include "Il2CppInspector/DLL/MetadataPreviewAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Data
::StringW& Il2CppInspector::DLL::MetadataPreviewAttribute::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::MetadataPreviewAttribute::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Il2CppInspector.DLL.TokenAttribute
#include "Il2CppInspector/DLL/TokenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Token
::StringW& Il2CppInspector::DLL::TokenAttribute::dyn_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Il2CppInspector::DLL::TokenAttribute::dyn_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Locale
#include "GlobalNamespace/Locale.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Locale.GetText
::StringW GlobalNamespace::Locale::GetText(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Locale::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte m_nTag
uint8_t& Mono::Security::ASN1::dyn_m_nTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::dyn_m_nTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nTag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_aValue
::ArrayW<uint8_t>& Mono::Security::ASN1::dyn_m_aValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::dyn_m_aValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList elist
::System::Collections::ArrayList*& Mono::Security::ASN1::dyn_elist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::dyn_elist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elist"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.ASN1.get_Count
int Mono::Security::ASN1::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Tag
uint8_t Mono::Security::ASN1::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Length
int Mono::Security::ASN1::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Value
::ArrayW<uint8_t> Mono::Security::ASN1::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.set_Value
void Mono::Security::ASN1::set_Value(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.get_Item
::Mono::Security::ASN1* Mono::Security::ASN1::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.ASN1.CompareArray
bool Mono::Security::ASN1::CompareArray(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::CompareArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.ASN1.CompareValue
bool Mono::Security::ASN1::CompareValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::CompareValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.Add
::Mono::Security::ASN1* Mono::Security::ASN1::Add(::Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1.GetBytes
::ArrayW<uint8_t> Mono::Security::ASN1::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.Decode
void Mono::Security::ASN1::Decode(::ArrayW<uint8_t> asn1, ByRef<int> anPos, int anLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(anPos), ::il2cpp_utils::ExtractType(anLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(anPos), anLength);
}
// Autogenerated method: Mono.Security.ASN1.DecodeTLV
void Mono::Security::ASN1::DecodeTLV(::ArrayW<uint8_t> asn1, ByRef<int> pos, ByRef<uint8_t> tag, ByRef<int> length, ByRef<::ArrayW<uint8_t>> content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::DecodeTLV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeTLV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<uint8_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(pos), byref(tag), byref(length), byref(content));
}
// Autogenerated method: Mono.Security.ASN1.Element
::Mono::Security::ASN1* Mono::Security::ASN1::Element(int index, uint8_t anTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(anTag)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, index, anTag);
}
// Autogenerated method: Mono.Security.ASN1.ToString
::StringW Mono::Security::ASN1::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.ASN1Convert
#include "Mono/Security/ASN1Convert.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.ASN1Convert.FromInt32
::Mono::Security::ASN1* Mono::Security::ASN1Convert::FromInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::FromInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1Convert.FromOid
::Mono::Security::ASN1* Mono::Security::ASN1Convert::FromOid(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::FromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.ASN1Convert.FromUnsignedBigInteger
::Mono::Security::ASN1* Mono::Security::ASN1Convert::FromUnsignedBigInteger(::ArrayW<uint8_t> big) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::FromUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToInt32
int Mono::Security::ASN1Convert::ToInt32(::Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToOid
::StringW Mono::Security::ASN1Convert::ToOid(::Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::ToOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToDateTime
::System::DateTime Mono::Security::ASN1Convert::ToDateTime(::Mono::Security::ASN1* time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.BitConverterLE
#include "Mono/Security/BitConverterLE.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.BitConverterLE.GetUIntBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE::GetUIntBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::GetUIntBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetUIntBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetULongBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE::GetULongBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::GetULongBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetULongBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE::GetBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.UShortFromBytes
void Mono::Security::BitConverterLE::UShortFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::UShortFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UShortFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.UIntFromBytes
void Mono::Security::BitConverterLE::UIntFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::UIntFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UIntFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToUInt16
uint16_t Mono::Security::BitConverterLE::ToUInt16(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToUInt32
uint Mono::Security::BitConverterLE::ToUInt32(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String contentType
::StringW& Mono::Security::PKCS7::ContentInfo::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 content
::Mono::Security::ASN1*& Mono::Security::PKCS7::ContentInfo::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_ASN1
::Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_Content
::Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.set_Content
void Mono::Security::PKCS7::ContentInfo::set_Content(::Mono::Security::ASN1* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_ContentType
::StringW Mono::Security::PKCS7::ContentInfo::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.set_ContentType
void Mono::Security::PKCS7::ContentInfo::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.GetASN1
::Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::GetASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::ContentInfo::GetASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.PKCS7/Mono.Security.EncryptedData
#include "Mono/Security/PKCS7_EncryptedData.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte _version
uint8_t& Mono::Security::PKCS7::EncryptedData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.PKCS7/Mono.Security.ContentInfo _content
::Mono::Security::PKCS7::ContentInfo*& Mono::Security::PKCS7::EncryptedData::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::Mono::Security::PKCS7::ContentInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.PKCS7/Mono.Security.ContentInfo _encryptionAlgorithm
::Mono::Security::PKCS7::ContentInfo*& Mono::Security::PKCS7::EncryptedData::dyn__encryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::dyn__encryptionAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionAlgorithm"))->offset;
  return *reinterpret_cast<::Mono::Security::PKCS7::ContentInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _encrypted
::ArrayW<uint8_t>& Mono::Security::PKCS7::EncryptedData::dyn__encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::dyn__encrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encrypted"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.EncryptedData.get_EncryptionAlgorithm
::Mono::Security::PKCS7::ContentInfo* Mono::Security::PKCS7::EncryptedData::get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::get_EncryptionAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptionAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::PKCS7::ContentInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.EncryptedData.get_EncryptedContent
::ArrayW<uint8_t> Mono::Security::PKCS7::EncryptedData::get_EncryptedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7::EncryptedData::get_EncryptedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.SafeBag
#include "Mono/Security/X509/SafeBag.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _bagOID
::StringW& Mono::Security::X509::SafeBag::dyn__bagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag::dyn__bagOID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bagOID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 _asn1
::Mono::Security::ASN1*& Mono::Security::X509::SafeBag::dyn__asn1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag::dyn__asn1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asn1"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_BagOID
::StringW Mono::Security::X509::SafeBag::get_BagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag::get_BagOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BagOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_ASN1
::Mono::Security::ASN1* Mono::Security::X509::SafeBag::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.PKCS12
#include "Mono/Security/X509/PKCS12.hpp"
// Including type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.EncryptedData
#include "Mono/Security/PKCS7_EncryptedData.hpp"
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 password_max_length
int Mono::Security::X509::PKCS12::_get_password_max_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::_get_password_max_length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.X509", "PKCS12", "password_max_length"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 password_max_length
void Mono::Security::X509::PKCS12::_set_password_max_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::_set_password_max_length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12", "password_max_length", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _password
::ArrayW<uint8_t>& Mono::Security::X509::PKCS12::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _keyBags
::System::Collections::ArrayList*& Mono::Security::X509::PKCS12::dyn__keyBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__keyBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _secretBags
::System::Collections::ArrayList*& Mono::Security::X509::PKCS12::dyn__secretBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__secretBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secretBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection _certs
::Mono::Security::X509::X509CertificateCollection*& Mono::Security::X509::PKCS12::dyn__certs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__certs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certs"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keyBagsChanged
bool& Mono::Security::X509::PKCS12::dyn__keyBagsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__keyBagsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyBagsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _secretBagsChanged
bool& Mono::Security::X509::PKCS12::dyn__secretBagsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__secretBagsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secretBagsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _certsChanged
bool& Mono::Security::X509::PKCS12::dyn__certsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__certsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
int& Mono::Security::X509::PKCS12::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _safeBags
::System::Collections::ArrayList*& Mono::Security::X509::PKCS12::dyn__safeBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__safeBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_safeBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator _rng
::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::X509::PKCS12::dyn__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::dyn__rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_Password
void Mono::Security::X509::PKCS12::set_Password(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_IterationCount
int Mono::Security::X509::PKCS12::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_IterationCount
void Mono::Security::X509::PKCS12::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Keys
::System::Collections::ArrayList* Mono::Security::X509::PKCS12::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Certificates
::Mono::Security::X509::X509CertificateCollection* Mono::Security::X509::PKCS12::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_RNG
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::X509::PKCS12::get_RNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::get_RNG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RNG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_MaximumPasswordLength
int Mono::Security::X509::PKCS12::get_MaximumPasswordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::get_MaximumPasswordLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", "get_MaximumPasswordLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12..cctor
void Mono::Security::X509::PKCS12::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decode
void Mono::Security::X509::PKCS12::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Compare
bool Mono::Security::X509::PKCS12::Compare(::ArrayW<uint8_t> expected, ::ArrayW<uint8_t> actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, expected, actual);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetSymmetricAlgorithm
::System::Security::Cryptography::SymmetricAlgorithm* Mono::Security::X509::PKCS12::GetSymmetricAlgorithm(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::GetSymmetricAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSymmetricAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SymmetricAlgorithm*, false>(this, ___internal__method, algorithmOid, salt, iterationCount);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::Decrypt(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount, ::ArrayW<uint8_t> encryptedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(encryptedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algorithmOid, salt, iterationCount, encryptedData);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::Decrypt(::Mono::Security::PKCS7::EncryptedData* ed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, ed);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Encrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::Encrypt(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algorithmOid, salt, iterationCount, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetExistingParameters
::System::Security::Cryptography::DSAParameters Mono::Security::X509::PKCS12::GetExistingParameters(ByRef<bool> found) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::GetExistingParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExistingParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, byref(found));
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddPrivateKey
void Mono::Security::X509::PKCS12::AddPrivateKey(::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo* pki) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::AddPrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pki)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pki);
}
// Autogenerated method: Mono.Security.X509.PKCS12.ReadSafeBag
void Mono::Security::X509::PKCS12::ReadSafeBag(::Mono::Security::ASN1* safeBag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::ReadSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, safeBag);
}
// Autogenerated method: Mono.Security.X509.PKCS12.CertificateSafeBag
::Mono::Security::ASN1* Mono::Security::X509::PKCS12::CertificateSafeBag(::Mono::Security::X509::X509Certificate* x509, ::System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::CertificateSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x509), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, x509, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.MAC
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::MAC(::ArrayW<uint8_t> password, ::ArrayW<uint8_t> salt, int iterations, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::MAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterations), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, password, salt, iterations, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetBytes
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.EncryptedContentInfo
::Mono::Security::PKCS7::ContentInfo* Mono::Security::X509::PKCS12::EncryptedContentInfo(::Mono::Security::ASN1* safeBags, ::StringW algorithmOid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::EncryptedContentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptedContentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBags), ::il2cpp_utils::ExtractType(algorithmOid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::PKCS7::ContentInfo*, false>(this, ___internal__method, safeBags, algorithmOid);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(::Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(::Mono::Security::X509::X509Certificate* cert, ::System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(::Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(::Mono::Security::X509::X509Certificate* cert, ::System::Collections::IDictionary* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert, attrs);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Clone
::Il2CppObject* Mono::Security::X509::PKCS12::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Finalize
void Mono::Security::X509::PKCS12::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] keyDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::_get_keyDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_get_keyDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] keyDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_keyDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_set_keyDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] ivDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::_get_ivDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_get_ivDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ivDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_ivDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_set_ivDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] macDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::_get_macDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_get_macDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] macDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_macDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::_set_macDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _hashName
::StringW& Mono::Security::X509::PKCS12::DeriveBytes::dyn__hashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::dyn__hashName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
int& Mono::Security::X509::PKCS12::DeriveBytes::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _password
::ArrayW<uint8_t>& Mono::Security::X509::PKCS12::DeriveBytes::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
::ArrayW<uint8_t>& Mono::Security::X509::PKCS12::DeriveBytes::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_HashName
void Mono::Security::X509::PKCS12::DeriveBytes::set_HashName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_IterationCount
void Mono::Security::X509::PKCS12::DeriveBytes::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_Password
void Mono::Security::X509::PKCS12::DeriveBytes::set_Password(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_Salt
void Mono::Security::X509::PKCS12::DeriveBytes::set_Salt(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::set_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes..cctor
void Mono::Security::X509::PKCS12::DeriveBytes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12/DeriveBytes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.Adjust
void Mono::Security::X509::PKCS12::DeriveBytes::Adjust(::ArrayW<uint8_t> a, int aOff, ::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(aOff), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, aOff, b);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.Derive
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::Derive(::ArrayW<uint8_t> diversifier, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::Derive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Derive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diversifier), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, diversifier, n);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveKey
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::DeriveKey(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveIV
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::DeriveIV(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::DeriveIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveMAC
::ArrayW<uint8_t> Mono::Security::X509::PKCS12::DeriveBytes::DeriveMAC(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12::DeriveBytes::DeriveMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X501
#include "Mono/Security/X509/X501.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] countryName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_countryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_countryName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "countryName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] countryName
void Mono::Security::X509::X501::_set_countryName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_countryName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "countryName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_organizationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_organizationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "organizationName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationName
void Mono::Security::X509::X501::_set_organizationName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_organizationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationalUnitName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_organizationalUnitName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_organizationalUnitName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "organizationalUnitName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationalUnitName
void Mono::Security::X509::X501::_set_organizationalUnitName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_organizationalUnitName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationalUnitName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] commonName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_commonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_commonName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "commonName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] commonName
void Mono::Security::X509::X501::_set_commonName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_commonName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "commonName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] localityName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_localityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_localityName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "localityName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] localityName
void Mono::Security::X509::X501::_set_localityName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_localityName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "localityName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] stateOrProvinceName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_stateOrProvinceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_stateOrProvinceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "stateOrProvinceName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] stateOrProvinceName
void Mono::Security::X509::X501::_set_stateOrProvinceName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_stateOrProvinceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "stateOrProvinceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] streetAddress
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_streetAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_streetAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "streetAddress"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] streetAddress
void Mono::Security::X509::X501::_set_streetAddress(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_streetAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "streetAddress", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] domainComponent
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_domainComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_domainComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "domainComponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] domainComponent
void Mono::Security::X509::X501::_set_domainComponent(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_domainComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "domainComponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] userid
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_userid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_userid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "userid"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] userid
void Mono::Security::X509::X501::_set_userid(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_userid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "userid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] email
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "email"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] email
void Mono::Security::X509::X501::_set_email(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "email", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dnQualifier
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_dnQualifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_dnQualifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "dnQualifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dnQualifier
void Mono::Security::X509::X501::_set_dnQualifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_dnQualifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "dnQualifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] title
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "title"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] title
void Mono::Security::X509::X501::_set_title(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "title", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] surname
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_surname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_surname");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "surname"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] surname
void Mono::Security::X509::X501::_set_surname(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_surname");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "surname", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] givenName
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_givenName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_givenName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "givenName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] givenName
void Mono::Security::X509::X501::_set_givenName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_givenName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "givenName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] initial
::ArrayW<uint8_t> Mono::Security::X509::X501::_get_initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_get_initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "initial"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] initial
void Mono::Security::X509::X501::_set_initial(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::_set_initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "initial", value));
}
// Autogenerated method: Mono.Security.X509.X501..cctor
void Mono::Security::X509::X501::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::StringW Mono::Security::X509::X501::ToString(::Mono::Security::ASN1* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seq);
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::StringW Mono::Security::X509::X501::ToString(::Mono::Security::ASN1* seq, bool reversed, ::StringW separator, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq), ::il2cpp_utils::ExtractType(reversed), ::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(quotes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seq, reversed, separator, quotes);
}
// Autogenerated method: Mono.Security.X509.X501.AppendEntry
void Mono::Security::X509::X501::AppendEntry(::System::Text::StringBuilder* sb, ::Mono::Security::ASN1* entry, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501::AppendEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "AppendEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(quotes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, entry, quotes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String encoding_error
::StringW Mono::Security::X509::X509Certificate::_get_encoding_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::_get_encoding_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Certificate", "encoding_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String encoding_error
void Mono::Security::X509::X509Certificate::_set_encoding_error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::_set_encoding_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Certificate", "encoding_error", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 decoder
::Mono::Security::ASN1*& Mono::Security::X509::X509Certificate::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_encodedcert
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_m_encodedcert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_encodedcert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encodedcert"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_from
::System::DateTime& Mono::Security::X509::X509Certificate::dyn_m_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_from"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_until
::System::DateTime& Mono::Security::X509::X509Certificate::dyn_m_until() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_until");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_until"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 issuer
::Mono::Security::ASN1*& Mono::Security::X509::X509Certificate::dyn_issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_issuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issuer"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_issuername
::StringW& Mono::Security::X509::X509Certificate::dyn_m_issuername() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_issuername");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_issuername"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_keyalgo
::StringW& Mono::Security::X509::X509Certificate::dyn_m_keyalgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_keyalgo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyalgo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_keyalgoparams
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_m_keyalgoparams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_keyalgoparams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyalgoparams"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 subject
::Mono::Security::ASN1*& Mono::Security::X509::X509Certificate::dyn_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subject"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_subject
::StringW& Mono::Security::X509::X509Certificate::dyn_m_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_publickey
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_m_publickey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_publickey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_publickey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] signature
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_signaturealgo
::StringW& Mono::Security::X509::X509Certificate::dyn_m_signaturealgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_signaturealgo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_signaturealgo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_signaturealgoparams
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_m_signaturealgoparams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_m_signaturealgoparams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_signaturealgoparams"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsa
::System::Security::Cryptography::RSA*& Mono::Security::X509::X509Certificate::dyn__rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn__rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DSA _dsa
::System::Security::Cryptography::DSA*& Mono::Security::X509::X509Certificate::dyn__dsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn__dsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
int& Mono::Security::X509::X509Certificate::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serialnumber
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_serialnumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_serialnumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serialnumber"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] issuerUniqueID
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_issuerUniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_issuerUniqueID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issuerUniqueID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] subjectUniqueID
::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate::dyn_subjectUniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_subjectUniqueID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subjectUniqueID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509ExtensionCollection extensions
::Mono::Security::X509::X509ExtensionCollection*& Mono::Security::X509::X509Certificate::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509ExtensionCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_DSA
::System::Security::Cryptography::DSA* Mono::Security::X509::X509Certificate::get_DSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_DSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.set_DSA
void Mono::Security::X509::X509Certificate::set_DSA(::System::Security::Cryptography::DSA* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::set_DSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_IssuerName
::StringW Mono::Security::X509::X509Certificate::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_KeyAlgorithm
::StringW Mono::Security::X509::X509Certificate::get_KeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_KeyAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_KeyAlgorithmParameters
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::get_KeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithmParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_PublicKey
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RSA
::System::Security::Cryptography::RSA* Mono::Security::X509::X509Certificate::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_RSA");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.set_RSA
void Mono::Security::X509::X509Certificate::set_RSA(::System::Security::Cryptography::RSA* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::set_RSA");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RawData
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_RawData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SerialNumber
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SignatureAlgorithm
::StringW Mono::Security::X509::X509Certificate::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SubjectName
::StringW Mono::Security::X509::X509Certificate::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidFrom
::System::DateTime Mono::Security::X509::X509Certificate::get_ValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_ValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidUntil
::System::DateTime Mono::Security::X509::X509Certificate::get_ValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_ValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_Version
int Mono::Security::X509::X509Certificate::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate..cctor
void Mono::Security::X509::X509Certificate::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.Parse
void Mono::Security::X509::X509Certificate::Parse(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetUnsignedBigInteger
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::GetUnsignedBigInteger(::ArrayW<uint8_t> integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::GetUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, integer);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetIssuerName
::Mono::Security::ASN1* Mono::Security::X509::X509Certificate::GetIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::GetIssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetSubjectName
::Mono::Security::ASN1* Mono::Security::X509::X509Certificate::GetSubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::GetSubjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetObjectData
void Mono::Security::X509::X509Certificate::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.PEM
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate::PEM(::StringW type, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate::PEM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", "PEM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.get_Item
::Mono::Security::X509::X509Certificate* Mono::Security::X509::X509CertificateCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.Add
int Mono::Security::X509::X509CertificateCollection::Add(::Mono::Security::X509::X509Certificate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetEnumerator
::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator* Mono::Security::X509::X509CertificateCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Mono::Security::X509::X509CertificateCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetHashCode
int Mono::Security::X509::X509CertificateCollection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
::System::Collections::IEnumerator*& Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.get_Current
::Mono::Security::X509::X509Certificate* Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.Reset
void Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.String extnOid
::StringW& Mono::Security::X509::X509Extension::dyn_extnOid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::dyn_extnOid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnOid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean extnCritical
bool& Mono::Security::X509::X509Extension::dyn_extnCritical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::dyn_extnCritical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnCritical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Mono.Security.ASN1 extnValue
::Mono::Security::ASN1*& Mono::Security::X509::X509Extension::dyn_extnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::dyn_extnValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnValue"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Decode
void Mono::Security::X509::X509Extension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.WriteLine
void Mono::Security::X509::X509Extension::WriteLine(::System::Text::StringBuilder* sb, int n, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, n, pos);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Equals
bool Mono::Security::X509::X509Extension::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.Security.X509.X509Extension.GetHashCode
int Mono::Security::X509::X509Extension::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.ToString
::StringW Mono::Security::X509::X509Extension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
bool& Mono::Security::X509::X509ExtensionCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509ExtensionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Mono::Security::X509::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_magic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_magic(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_nullEncMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_nullEncMagic(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
bool& Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _challenge
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__challenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__challenge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_challenge"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _lmpwd
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__lmpwd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__lmpwd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lmpwd"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _ntpwd
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__ntpwd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::dyn__ntpwd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ntpwd"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Password
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Password(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Challenge
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Challenge(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Challenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Challenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_LM
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::get_LM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::get_LM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_NT
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::get_NT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::get_NT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.GetResponse
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::GetResponse(::ArrayW<uint8_t> pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pwd)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PrepareDESKey
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::PrepareDESKey(::ArrayW<uint8_t> key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareDESKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key56bits), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PasswordToKey
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse::PasswordToKey(::StringW password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PasswordToKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, password, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Finalize
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse2
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse2.hpp"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
// Including type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
#include "Mono/Security/Protocol/Ntlm/NtlmAuthLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_magic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_magic(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_nullEncMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_nullEncMagic(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_LM
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_LM(::StringW password, ::ArrayW<uint8_t> challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_LM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_LM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM_Password
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM_Password(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM(::StringW password, ::ArrayW<uint8_t> challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2_Session
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2_Session(::StringW password, ::ArrayW<uint8_t> challenge, ByRef<::ArrayW<uint8_t>> lm, ByRef<::ArrayW<uint8_t>> ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2_Session");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2_Session", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password, challenge, byref(lm), byref(ntlm));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2(::Mono::Security::Protocol::Ntlm::Type2Message* type2, ::StringW username, ::StringW password, ::StringW domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type2), ::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(domain)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type2, username, password, domain);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute(::Mono::Security::Protocol::Ntlm::Type2Message* type2, ::Mono::Security::Protocol::Ntlm::NtlmAuthLevel level, ::StringW username, ::StringW password, ::StringW domain, ByRef<::ArrayW<uint8_t>> lm, ByRef<::ArrayW<uint8_t>> ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type2), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(domain), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type2, level, username, password, domain, byref(lm), byref(ntlm));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.GetResponse
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::GetResponse(::ArrayW<uint8_t> challenge, ::ArrayW<uint8_t> pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(pwd)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, challenge, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PrepareDESKey
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::PrepareDESKey(::ArrayW<uint8_t> key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PrepareDESKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key56bits), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PasswordToKey
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::ChallengeResponse2::PasswordToKey(::StringW password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::ChallengeResponse2::PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PasswordToKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, password, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] header
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::MessageBase::_get_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::_get_header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Protocol.Ntlm", "MessageBase", "header"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] header
void Mono::Security::Protocol::Ntlm::MessageBase::_set_header(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::_set_header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "MessageBase", "header", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _type
int& Mono::Security::Protocol::Ntlm::MessageBase::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.NtlmFlags _flags
::Mono::Security::Protocol::Ntlm::NtlmFlags& Mono::Security::Protocol::Ntlm::MessageBase::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::NtlmFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.get_Flags
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::MessageBase::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Ntlm::NtlmFlags, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.set_Flags
void Mono::Security::Protocol::Ntlm::MessageBase::set_Flags(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.get_Type
int Mono::Security::Protocol::Ntlm::MessageBase::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase..cctor
void Mono::Security::Protocol::Ntlm::MessageBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "MessageBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.PrepareMessage
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::MessageBase::PrepareMessage(int messageSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::PrepareMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageSize)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, messageSize);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.Decode
void Mono::Security::Protocol::Ntlm::MessageBase::Decode(::ArrayW<uint8_t> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.CheckHeader
bool Mono::Security::Protocol::Ntlm::MessageBase::CheckHeader(::ArrayW<uint8_t> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::CheckHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.GetBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::MessageBase::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::MessageBase::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
#include "Mono/Security/Protocol/Ntlm/NtlmAuthLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM(::Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM_and_try_NTLMv2_Session
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM_and_try_NTLMv2_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM_and_try_NTLMv2_Session");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM_and_try_NTLMv2_Session"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM_and_try_NTLMv2_Session
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM_and_try_NTLMv2_Session(::Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM_and_try_NTLMv2_Session");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM_and_try_NTLMv2_Session", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLM_only
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLM_only() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLM_only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLM_only"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLM_only
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLM_only(::Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLM_only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLM_only", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLMv2_only
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLMv2_only() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLMv2_only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLMv2_only"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLMv2_only
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLMv2_only(::Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLMv2_only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLMv2_only", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Mono::Security::Protocol::Ntlm::NtlmAuthLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmAuthLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmFlags
#include "Mono/Security/Protocol/Ntlm/NtlmFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateUnicode
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateUnicode"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateUnicode
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateUnicode(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateOem
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateOem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateOem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateOem"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateOem
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateOem(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateOem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateOem", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags RequestTarget
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_RequestTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_RequestTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "RequestTarget"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags RequestTarget
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_RequestTarget(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_RequestTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "RequestTarget", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateDomainSupplied
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateDomainSupplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateDomainSupplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateDomainSupplied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateDomainSupplied
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateDomainSupplied(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateDomainSupplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateDomainSupplied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateWorkstationSupplied
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateWorkstationSupplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateWorkstationSupplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateWorkstationSupplied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateWorkstationSupplied
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateWorkstationSupplied(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateWorkstationSupplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateWorkstationSupplied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateAlwaysSign
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateAlwaysSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateAlwaysSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateAlwaysSign"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateAlwaysSign
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateAlwaysSign(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateAlwaysSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateAlwaysSign", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm2Key
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm2Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm2Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm2Key"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm2Key
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm2Key(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm2Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm2Key", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate128
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate128() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate128"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate128
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate128(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate128", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate56
::Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate56() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate56");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate56"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate56
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate56(::Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate56");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate56", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Mono::Security::Protocol::Ntlm::NtlmFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmSettings
#include "Mono/Security/Protocol/Ntlm/NtlmSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Security.Protocol.Ntlm.NtlmAuthLevel defaultAuthLevel
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmSettings::_get_defaultAuthLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmSettings::_get_defaultAuthLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmSettings", "defaultAuthLevel"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Protocol.Ntlm.NtlmAuthLevel defaultAuthLevel
void Mono::Security::Protocol::Ntlm::NtlmSettings::_set_defaultAuthLevel(::Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmSettings::_set_defaultAuthLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmSettings", "defaultAuthLevel", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.NtlmSettings.get_DefaultAuthLevel
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmSettings::get_DefaultAuthLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmSettings::get_DefaultAuthLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "NtlmSettings", "get_DefaultAuthLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.NtlmSettings..cctor
void Mono::Security::Protocol::Ntlm::NtlmSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::NtlmSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "NtlmSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.Type1Message
#include "Mono/Security/Protocol/Ntlm/Type1Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _host
::StringW& Mono::Security::Protocol::Ntlm::Type1Message::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _domain
::StringW& Mono::Security::Protocol::Ntlm::Type1Message::dyn__domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::dyn__domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.set_Domain
void Mono::Security::Protocol::Ntlm::Type1Message::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.set_Host
void Mono::Security::Protocol::Ntlm::Type1Message::set_Host(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.Decode
void Mono::Security::Protocol::Ntlm::Type1Message::Decode(::ArrayW<uint8_t> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.GetBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type1Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type1Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _nonce
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::Type2Message::dyn__nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::dyn__nonce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonce"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _targetName
::StringW& Mono::Security::Protocol::Ntlm::Type2Message::dyn__targetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::dyn__targetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _targetInfo
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::Type2Message::dyn__targetInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::dyn__targetInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetInfo"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_Nonce
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type2Message::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_TargetName
::StringW Mono::Security::Protocol::Ntlm::Type2Message::get_TargetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::get_TargetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_TargetInfo
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type2Message::get_TargetInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::get_TargetInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.Finalize
void Mono::Security::Protocol::Ntlm::Type2Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.Decode
void Mono::Security::Protocol::Ntlm::Type2Message::Decode(::ArrayW<uint8_t> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.GetBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type2Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type2Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.Type3Message
#include "Mono/Security/Protocol/Ntlm/Type3Message.hpp"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.NtlmAuthLevel _level
::Mono::Security::Protocol::Ntlm::NtlmAuthLevel& Mono::Security::Protocol::Ntlm::Type3Message::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::NtlmAuthLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _challenge
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::Type3Message::dyn__challenge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__challenge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_challenge"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
::StringW& Mono::Security::Protocol::Ntlm::Type3Message::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _domain
::StringW& Mono::Security::Protocol::Ntlm::Type3Message::dyn__domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _username
::StringW& Mono::Security::Protocol::Ntlm::Type3Message::dyn__username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _password
::StringW& Mono::Security::Protocol::Ntlm::Type3Message::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.Type2Message _type2
::Mono::Security::Protocol::Ntlm::Type2Message*& Mono::Security::Protocol::Ntlm::Type3Message::dyn__type2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__type2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type2"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::Type2Message**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _lm
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::Type3Message::dyn__lm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__lm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lm"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _nt
::ArrayW<uint8_t>& Mono::Security::Protocol::Ntlm::Type3Message::dyn__nt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::dyn__nt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Domain
void Mono::Security::Protocol::Ntlm::Type3Message::set_Domain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Password
void Mono::Security::Protocol::Ntlm::Type3Message::set_Password(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Username
void Mono::Security::Protocol::Ntlm::Type3Message::set_Username(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::set_Username");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Username", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.DecodeString
::StringW Mono::Security::Protocol::Ntlm::Type3Message::DecodeString(::ArrayW<uint8_t> buffer, int offset, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, buffer, offset, len);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.EncodeString
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type3Message::EncodeString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::EncodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, text);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.Finalize
void Mono::Security::Protocol::Ntlm::Type3Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.Decode
void Mono::Security::Protocol::Ntlm::Type3Message::Decode(::ArrayW<uint8_t> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
::ArrayW<uint8_t> Mono::Security::Protocol::Ntlm::Type3Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Protocol::Ntlm::Type3Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
